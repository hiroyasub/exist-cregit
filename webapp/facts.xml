<?xml version="1.0" encoding="UTF-8"?>

<document xmlns:xi="http://www.w3.org/2001/XInclude">
	
	<xi:include href="context://header.xml"/>
	<xi:include href="sidebar.xml"/>

    <body>
        <section title="Fact Sheet">

            <category name="System Requirements">

                <topic name="Java Version"><p>JDK &gt; 1.4.</p></topic>

                <topic name="Supported Platforms">
                    
                    <p>Platform independent. Tested
                        on Linux (Mandrake/SUSE 9.3), FreeBSD 5.4/6.0, Windows 2000/XP/XP Server Edition</p>
                
                </topic>

                <topic name="Required Software">
                    
                    <p>None. A web server (Jetty) and Cocoon are
                    included in the distribution, but eXist can also run without
                    them.</p>

                </topic>

            </category>

            <category name="Core Database Features">

                <topic name="Data Storage">
                    <p>Native XML data store based on B+-trees and paged
                        files. Document nodes are stored in a persistent DOM.</p>
                </topic>

                <topic name="Collections"> 
                    
                    <p>Documents are managed in hierarchical collections,
                        similar to storing files in a file system. Collections
                        are not bound to a predefined schema or document
                        type.</p>
                
                </topic>

                <topic name="Indexing">
                    <p>Based on a numeric indexing scheme which supports quick
                        identification of structural relationships between
                        nodes, such as parent/child, ancestor/descendant or
                        previous-/next-sibling.</p>
                </topic>

                <topic name="Index Creation">

                    <p>Automatic index creation by default. Uses structural
                        indexes for element and attribute nodes, a fulltext
                        index for text and attribute values and range indexes for typed values.
                        Fulltext indexing can be turned on/off for selected parts of a
                        document. The structural indexes are maintained
                        automatically.</p>

                </topic> 

                <topic name="Query Engine">

                    <p>eXist has its own, optimized XQuery engine, featuring an
                        efficient, index-based query processing.</p>

                    <p>Contrary to conventional implementations, eXist's query
                        engine tries to avoid top-down or bottom-up tree
                        traversals. Instead, it relies on fast path join
                        algorithms to compute node relationships. Path joins can
                        be applied to the entire node sequence in one, single
                        step.</p>

                </topic>

                <topic name="Updates">
                    <p>Document-level and node-level updates.</p>
                </topic>

                <topic name="Authorization Mechanism">
                    <p>Unix-like access permissions for users/groups at
                        collection- and document-level.</p>
                </topic>

                <topic name="Transaction Support">
                    <p>No. Planned for a future release.</p>
                </topic>

                <topic name="Multi-User Access">

                    <p>Concurrent read/write access supported. Database manages
                        concurrency at the level of the basic database
                        operations (store/retrieve a single node, access an index ...) </p>

                </topic>

                <topic name="Deployment">

                    <p>eXist may be deployed as a stand-alone database server,
                        as an embedded Java library or as part of a web
                        application (running in the servlet engine).</p>

                </topic>

                <topic name="Backup/Restore">

                    <p>Backup/restore functionality is provided via Java admin
                        client or Ant scripts. Allows full restore of a database including
                        user/group permissions.</p>
                </topic>

            </category> 

            <category name="XML Standards">

                <topic name="XPath/XQuery">

                    <p>XPath 2.0/XQuery 1.0 (Nov., 2003 working drafts for the core syntax 
                    with some parts already following later versions) with
                    extensions (to support fulltext search). Queries may span
                    any possible combination of collections or documents.</p>

                    <p>According to the Bumblebee XQuery test harness, 92% of all use
                    cases are passed (excluding the "strong" use cases, which are
                    currently beyond eXist's scope).</p>
                    
                    <p>Older code based on XPath should be compatible
                    with the XQuery engine, though some aspects (e.g. the rules for
                    automatic type conversions) have changed.</p>

                </topic>

                <topic name="XQuery Modules">

                    <p>XPath/XQuery standard function library (not yet
                        complete), additional modules for manipulating database
                        contents, dynamic evaluation of XQuery expressions, XSL
                        transformations, HTTP related functions.</p>

                    <p>User-defined modules can be provided in XQuery or Java.</p>

                </topic>

                <topic name="XInclude">
                    <p>Yes. Some features missing.</p>
                </topic>

                <topic name="XPointer">
                    <p>Partially.</p>
                </topic>

                <topic name="XSL/XSLT">
                    <p>Supported through the server interfaces or XQuery extension
                        functions.</p>
                </topic>

                <topic name="XUpdate">
                    <p>Yes and also an update syntax extension for XQuery</p>
                </topic>

            </category>

            <category name="APIs">

                <topic name="XML:DB API">
                    
                    <p>Core Level 1 implementation. Provides drivers for access
                        to a remote database or embedded use. Additional
                        services for user management, collection management,
                        XQuery.</p>

                </topic>

                <topic name="DOM">

                    <p>Through XML:DB API. Direct (read) access to the
                        persistent DOM is provided for embedded databases.</p>
                
                </topic>

                <topic name="SAX">

                    <p>Through XML:DB API.</p>

                </topic>

            </category>

            <category name="Network Protocols">

                <topic name="HTTP/REST">

					<p>eXist offers a REST-style web service API for simple access 
                    via HTTP. This is in general the fastest way to access the
                    database. Running in a servlet context, the REST functionality
                    is provided through the EXistServlet. In stand-alone mode, the
                    database has its own, built-in web server.</p>
                </topic>

                <topic name="XML-RPC">

                    <p>XML-RPC is the preferred protocol and used by the XML:DB
                        API drivers. Provides full access to all database 
                        functions.</p>

                </topic>

                <topic name="SOAP">

                    <p>Supported in servlet mode. Based on Apache Axis.</p>
                </topic>

                <topic name="WebDAV">

                    <p>Limited support in version 1.0b1 through Xincon. Has been
                    completely reimplemented for 1.0b2. The new WebDAV module is now
                    based on the internal database API to get full access to eXist's
                    security management.</p>
                </topic>

            </category> 

            <category name="Limits">

                <topic name="Max. Number of Documents">

                    <p>The maximum number of
                    documents to be stored in the database is
                    2<sup>31</sup>.</p>

                </topic>

                <topic name="Max. Size per Document">
                        <p>Depends on the structure of the document:
                    	eXist uses unique object identifiers of type long for
                        every XML node. A document may thus have 2<sup>63</sup>
                        - x single XML-nodes per document, where x = 0 for an
                        ideally well-balanced document tree. To keep x small,
                        eXist does <b>not</b> balance the tree as a whole, but
                        recomputes the ideal tree structure for every single
                        level of the tree's node hierarchy. Thus, the long
                        identifiers are normally more than sufficient to index
                        large documents, because only a few identifiers are
                        wasted for the balancing.</p>
						
                    <p>However, there are some documents with a very irregular
                    structure, which cannot be mapped into the internal
                    identifer scheme. Such documents have to be split into
                    smaller, logical parts. We are working on an automatic
                    splitting algorithm to simplify this.</p>
                
                </topic>
            </category>

        </section>
    </body>
</document>
                
