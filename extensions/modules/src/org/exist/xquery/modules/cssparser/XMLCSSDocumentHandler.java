begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|modules
operator|.
name|cssparser
package|;
end_package

begin_import
import|import
name|com
operator|.
name|steadystate
operator|.
name|css
operator|.
name|parser
operator|.
name|LexicalUnitImpl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|steadystate
operator|.
name|css
operator|.
name|sac
operator|.
name|DocumentHandlerExt
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|memtree
operator|.
name|MemTreeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|css
operator|.
name|sac
operator|.
name|CSSException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|css
operator|.
name|sac
operator|.
name|ElementSelector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|css
operator|.
name|sac
operator|.
name|InputSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|css
operator|.
name|sac
operator|.
name|LexicalUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|css
operator|.
name|sac
operator|.
name|Locator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|css
operator|.
name|sac
operator|.
name|SACMediaList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|css
operator|.
name|sac
operator|.
name|Selector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|css
operator|.
name|sac
operator|.
name|SelectorList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|helpers
operator|.
name|AttributesImpl
import|;
end_import

begin_comment
comment|/**  * @author Adam Retter<adam@exist-db.org>  */
end_comment

begin_class
specifier|public
class|class
name|XMLCSSDocumentHandler
implements|implements
name|DocumentHandlerExt
block|{
specifier|public
specifier|final
specifier|static
name|String
name|XMLCSS_NS
init|=
literal|"http://exist-db.org/xmlcss/"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|QName
name|QN_SELECTOR
init|=
operator|new
name|QName
argument_list|(
literal|"selector"
argument_list|,
name|XMLCSS_NS
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|QName
name|QN_PROPERTY
init|=
operator|new
name|QName
argument_list|(
literal|"property"
argument_list|,
name|XMLCSS_NS
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|AN_ELEMENT
init|=
literal|"element"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|AN_NAME
init|=
literal|"name"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|AN_LINE_NUMBER
init|=
literal|"lineNum"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|AN_COLUMN_NUMBER
init|=
literal|"colNum"
decl_stmt|;
specifier|private
specifier|final
name|MemTreeBuilder
name|builder
decl_stmt|;
specifier|public
name|XMLCSSDocumentHandler
parameter_list|(
name|MemTreeBuilder
name|builder
parameter_list|)
block|{
name|this
operator|.
name|builder
operator|=
name|builder
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|startDocument
parameter_list|(
name|InputSource
name|source
parameter_list|)
throws|throws
name|CSSException
block|{
name|builder
operator|.
name|startDocument
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|endDocument
parameter_list|(
name|InputSource
name|source
parameter_list|)
throws|throws
name|CSSException
block|{
name|builder
operator|.
name|endDocument
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|comment
parameter_list|(
name|String
name|text
parameter_list|)
throws|throws
name|CSSException
block|{
name|builder
operator|.
name|comment
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|ignorableAtRule
parameter_list|(
name|String
name|atRule
parameter_list|)
throws|throws
name|CSSException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported yet."
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|namespaceDeclaration
parameter_list|(
name|String
name|prefix
parameter_list|,
name|String
name|uri
parameter_list|)
throws|throws
name|CSSException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported yet."
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|importStyle
parameter_list|(
name|String
name|uri
parameter_list|,
name|SACMediaList
name|media
parameter_list|,
name|String
name|defaultNamespaceURI
parameter_list|)
throws|throws
name|CSSException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported yet."
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|startMedia
parameter_list|(
name|SACMediaList
name|media
parameter_list|)
throws|throws
name|CSSException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported yet."
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|endMedia
parameter_list|(
name|SACMediaList
name|media
parameter_list|)
throws|throws
name|CSSException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported yet."
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|startPage
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|pseudo_page
parameter_list|)
throws|throws
name|CSSException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported yet."
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|endPage
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|pseudo_page
parameter_list|)
throws|throws
name|CSSException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported yet."
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|startFontFace
parameter_list|()
throws|throws
name|CSSException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported yet."
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|endFontFace
parameter_list|()
throws|throws
name|CSSException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported yet."
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|startSelector
parameter_list|(
name|SelectorList
name|selectors
parameter_list|)
throws|throws
name|CSSException
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|selectors
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Selector
name|selector
init|=
name|selectors
operator|.
name|item
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|Attributes
name|attrs
init|=
name|getAttributesFromSelector
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|builder
operator|.
name|startElement
argument_list|(
name|QN_SELECTOR
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|endSelector
parameter_list|(
name|SelectorList
name|selectors
parameter_list|)
throws|throws
name|CSSException
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|selectors
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|builder
operator|.
name|endElement
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|property
parameter_list|(
name|String
name|name
parameter_list|,
name|LexicalUnit
name|value
parameter_list|,
name|boolean
name|important
parameter_list|)
throws|throws
name|CSSException
block|{
name|AttributesImpl
name|attrs
init|=
operator|new
name|AttributesImpl
argument_list|()
decl_stmt|;
name|attrs
operator|.
name|addAttribute
argument_list|(
literal|""
argument_list|,
name|AN_NAME
argument_list|,
name|AN_NAME
argument_list|,
literal|"string"
argument_list|,
name|name
argument_list|)
expr_stmt|;
if|if
condition|(
name|value
operator|instanceof
name|LexicalUnitImpl
condition|)
block|{
name|Locator
name|locator
init|=
operator|(
operator|(
name|LexicalUnitImpl
operator|)
name|value
operator|)
operator|.
name|getLocator
argument_list|()
decl_stmt|;
name|attrs
operator|.
name|addAttribute
argument_list|(
literal|""
argument_list|,
name|AN_LINE_NUMBER
argument_list|,
name|AN_LINE_NUMBER
argument_list|,
literal|"int"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|locator
operator|.
name|getLineNumber
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|attrs
operator|.
name|addAttribute
argument_list|(
literal|""
argument_list|,
name|AN_COLUMN_NUMBER
argument_list|,
name|AN_COLUMN_NUMBER
argument_list|,
literal|"int"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|locator
operator|.
name|getColumnNumber
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|startElement
argument_list|(
name|QN_PROPERTY
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
name|propertyValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|builder
operator|.
name|endElement
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|charset
parameter_list|(
name|String
name|characterEncoding
parameter_list|)
throws|throws
name|CSSException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported yet."
argument_list|)
throw|;
block|}
specifier|private
name|Attributes
name|getAttributesFromSelector
parameter_list|(
name|Selector
name|selector
parameter_list|)
block|{
name|NameAndValue
name|selectorNv
init|=
name|getSelectorNameAndValue
argument_list|(
name|selector
argument_list|)
decl_stmt|;
name|AttributesImpl
name|attrs
init|=
operator|new
name|AttributesImpl
argument_list|()
decl_stmt|;
name|attrs
operator|.
name|addAttribute
argument_list|(
literal|""
argument_list|,
name|selectorNv
operator|.
name|getName
argument_list|()
argument_list|,
name|selectorNv
operator|.
name|getName
argument_list|()
argument_list|,
literal|"string"
argument_list|,
name|selectorNv
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|attrs
return|;
block|}
specifier|private
name|NameAndValue
name|getSelectorNameAndValue
parameter_list|(
name|Selector
name|selector
parameter_list|)
block|{
switch|switch
condition|(
name|selector
operator|.
name|getSelectorType
argument_list|()
condition|)
block|{
case|case
name|Selector
operator|.
name|SAC_ELEMENT_NODE_SELECTOR
case|:
return|return
operator|new
name|NameAndValue
argument_list|(
name|AN_ELEMENT
argument_list|,
operator|(
operator|(
name|ElementSelector
operator|)
name|selector
operator|)
operator|.
name|getLocalName
argument_list|()
argument_list|)
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|private
name|void
name|propertyValue
parameter_list|(
name|LexicalUnit
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
operator|.
name|getLexicalUnitType
argument_list|()
condition|)
block|{
case|case
name|LexicalUnit
operator|.
name|SAC_IDENT
case|:
case|case
name|LexicalUnit
operator|.
name|SAC_STRING_VALUE
case|:
name|builder
operator|.
name|characters
argument_list|(
name|value
operator|.
name|getStringValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
default|default:
comment|//do nothing
block|}
block|}
specifier|private
class|class
name|NameAndValue
block|{
specifier|final
name|String
name|name
decl_stmt|;
specifier|final
name|String
name|value
decl_stmt|;
specifier|public
name|NameAndValue
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
specifier|public
name|String
name|getValue
parameter_list|()
block|{
return|return
name|value
return|;
block|}
block|}
block|}
end_class

end_unit

