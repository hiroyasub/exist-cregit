begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|modules
operator|.
name|xslfo
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avalon
operator|.
name|framework
operator|.
name|configuration
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avalon
operator|.
name|framework
operator|.
name|configuration
operator|.
name|SAXConfigurationHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|fop
operator|.
name|apps
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|LogManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|value
operator|.
name|NodeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_comment
comment|/**  * @author Adam Retter<adam@exist-db.org>  */
end_comment

begin_class
specifier|public
class|class
name|ApacheFopProcessorAdapter
implements|implements
name|ProcessorAdapter
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LogManager
operator|.
name|getLogger
argument_list|(
name|ApacheFopProcessorAdapter
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|ContentHandler
name|getContentHandler
parameter_list|(
specifier|final
name|DBBroker
name|broker
parameter_list|,
specifier|final
name|NodeValue
name|configFile
parameter_list|,
specifier|final
name|Properties
name|parameters
parameter_list|,
specifier|final
name|String
name|mimeType
parameter_list|,
specifier|final
name|OutputStream
name|os
parameter_list|)
throws|throws
name|SAXException
block|{
comment|// setup the FopFactory
specifier|final
name|FopFactoryBuilder
name|builder
decl_stmt|;
try|try
block|{
if|if
condition|(
name|configFile
operator|!=
literal|null
condition|)
block|{
specifier|final
name|FopConfigurationBuilder
name|cfgBuilder
init|=
operator|new
name|FopConfigurationBuilder
argument_list|(
name|broker
argument_list|)
decl_stmt|;
specifier|final
name|Configuration
name|cfg
init|=
name|cfgBuilder
operator|.
name|buildFromNode
argument_list|(
name|configFile
argument_list|)
decl_stmt|;
specifier|final
name|URI
name|defaultBaseURI
init|=
operator|new
name|URI
argument_list|(
name|configFile
operator|.
name|getOwnerDocument
argument_list|()
operator|.
name|getBaseURI
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|EnvironmentProfile
name|environment
init|=
name|EnvironmentalProfileFactory
operator|.
name|createDefault
argument_list|(
name|defaultBaseURI
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|builder
operator|=
operator|new
name|FopFactoryBuilder
argument_list|(
name|environment
argument_list|)
operator|.
name|setConfiguration
argument_list|(
name|cfg
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|builder
operator|=
operator|new
name|FopFactoryBuilder
argument_list|(
operator|new
name|URI
argument_list|(
literal|"file:///db"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|final
name|FopFactory
name|fopFactory
init|=
name|builder
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// setup the foUserAgent, using given parameters held in the
comment|// transformer handler
specifier|final
name|FOUserAgent
name|foUserAgent
init|=
name|setupFOUserAgent
argument_list|(
name|fopFactory
operator|.
name|newFOUserAgent
argument_list|()
argument_list|,
name|parameters
argument_list|)
decl_stmt|;
comment|// create new instance of FOP using the mimetype, the created user
comment|// agent, and the output stream
specifier|final
name|Fop
name|fop
init|=
name|fopFactory
operator|.
name|newFop
argument_list|(
name|mimeType
argument_list|,
name|foUserAgent
argument_list|,
name|os
argument_list|)
decl_stmt|;
comment|// Obtain FOP's DefaultHandler
return|return
name|fop
operator|.
name|getDefaultHandler
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
specifier|final
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SAXException
argument_list|(
literal|"Unable to parse baseURI"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|cleanup
parameter_list|()
block|{
block|}
comment|/**      * Setup the UserAgent for FOP, from given parameters *      *      * @param foUserAgent The user agent to set parameters for      * @param parameters      *            any user defined parameters to the XSL-FO process      * @return FOUserAgent The generated FOUserAgent to include any parameters      *         passed in      */
specifier|private
name|FOUserAgent
name|setupFOUserAgent
parameter_list|(
specifier|final
name|FOUserAgent
name|foUserAgent
parameter_list|,
specifier|final
name|Properties
name|parameters
parameter_list|)
block|{
comment|// setup the foUserAgent as per the parameters given
name|foUserAgent
operator|.
name|setProducer
argument_list|(
literal|"eXist-db with Apache FOP"
argument_list|)
expr_stmt|;
if|if
condition|(
name|parameters
operator|!=
literal|null
condition|)
block|{
for|for
control|(
specifier|final
name|Entry
name|paramEntry
range|:
name|parameters
operator|.
name|entrySet
argument_list|()
control|)
block|{
specifier|final
name|String
name|key
init|=
operator|(
name|String
operator|)
name|paramEntry
operator|.
name|getKey
argument_list|()
decl_stmt|;
specifier|final
name|String
name|value
init|=
operator|(
name|String
operator|)
name|paramEntry
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|key
operator|.
name|equals
argument_list|(
literal|"FOPauthor"
argument_list|)
condition|)
block|{
name|foUserAgent
operator|.
name|setAuthor
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|key
operator|.
name|equals
argument_list|(
literal|"FOPtitle"
argument_list|)
condition|)
block|{
name|foUserAgent
operator|.
name|setTitle
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|key
operator|.
name|equals
argument_list|(
literal|"FOPkeywords"
argument_list|)
condition|)
block|{
name|foUserAgent
operator|.
name|setTitle
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|key
operator|.
name|equals
argument_list|(
literal|"FOPdpi"
argument_list|)
condition|)
block|{
try|try
block|{
name|foUserAgent
operator|.
name|setTargetResolution
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|NumberFormatException
name|nfe
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Unable to set DPI to: "
operator|+
name|value
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
return|return
name|foUserAgent
return|;
block|}
comment|/**      * Extension of the Apache Avalon DefaultConfigurationBuilder Allows better      * integration with Nodes passed in from eXist as Configuration files      */
specifier|private
class|class
name|FopConfigurationBuilder
extends|extends
name|org
operator|.
name|apache
operator|.
name|avalon
operator|.
name|framework
operator|.
name|configuration
operator|.
name|DefaultConfigurationBuilder
block|{
specifier|private
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
specifier|public
name|FopConfigurationBuilder
parameter_list|(
specifier|final
name|DBBroker
name|broker
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|broker
operator|=
name|broker
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|public
name|FopConfigurationBuilder
parameter_list|(
specifier|final
name|DBBroker
name|broker
parameter_list|,
specifier|final
name|boolean
name|enableNamespaces
parameter_list|)
block|{
name|super
argument_list|(
name|enableNamespaces
argument_list|)
expr_stmt|;
name|this
operator|.
name|broker
operator|=
name|broker
expr_stmt|;
block|}
specifier|public
name|Configuration
name|buildFromNode
parameter_list|(
specifier|final
name|NodeValue
name|configFile
parameter_list|)
throws|throws
name|SAXException
block|{
specifier|final
name|SAXConfigurationHandler
name|handler
init|=
name|getHandler
argument_list|()
decl_stmt|;
name|handler
operator|.
name|clear
argument_list|()
expr_stmt|;
name|configFile
operator|.
name|toSAX
argument_list|(
name|broker
argument_list|,
name|handler
argument_list|,
operator|new
name|Properties
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|handler
operator|.
name|getConfiguration
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

