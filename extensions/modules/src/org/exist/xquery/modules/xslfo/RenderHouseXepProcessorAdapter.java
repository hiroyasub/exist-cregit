begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|modules
operator|.
name|xslfo
package|;
end_package

begin_import
import|import
name|com
operator|.
name|renderx
operator|.
name|xep
operator|.
name|FOTarget
import|;
end_import

begin_import
import|import
name|com
operator|.
name|renderx
operator|.
name|xep
operator|.
name|FormatterImpl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|renderx
operator|.
name|xep
operator|.
name|lib
operator|.
name|FormatterException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|dom
operator|.
name|DOMSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|XPathException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|value
operator|.
name|NodeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_comment
comment|/**  *  * @author Adam Retter<adam@exist-db.org>  */
end_comment

begin_class
specifier|public
class|class
name|RenderHouseXepProcessorAdapter
implements|implements
name|ProcessorAdapter
block|{
specifier|private
name|FormatterImpl
name|formatter
init|=
literal|null
decl_stmt|;
annotation|@
name|Override
specifier|public
name|ContentHandler
name|getContentHandler
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|NodeValue
name|configFile
parameter_list|,
name|Properties
name|parameters
parameter_list|,
name|String
name|mimeType
parameter_list|,
name|OutputStream
name|os
parameter_list|)
throws|throws
name|XPathException
throws|,
name|SAXException
block|{
if|if
condition|(
name|configFile
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|XPathException
argument_list|(
literal|"XEP requires a configuration file"
argument_list|)
throw|;
block|}
try|try
block|{
if|if
condition|(
name|parameters
operator|==
literal|null
condition|)
block|{
name|formatter
operator|=
operator|new
name|FormatterImpl
argument_list|(
operator|new
name|DOMSource
argument_list|(
operator|(
name|Node
operator|)
name|configFile
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|formatter
operator|=
operator|new
name|FormatterImpl
argument_list|(
operator|new
name|DOMSource
argument_list|(
operator|(
name|Node
operator|)
name|configFile
argument_list|)
argument_list|,
name|parameters
argument_list|)
expr_stmt|;
block|}
name|String
name|backendType
init|=
name|mimeType
operator|.
name|substring
argument_list|(
name|mimeType
operator|.
name|indexOf
argument_list|(
literal|"/"
argument_list|)
operator|+
literal|1
argument_list|)
operator|.
name|toUpperCase
argument_list|()
decl_stmt|;
name|FOTarget
name|foTarget
init|=
operator|new
name|FOTarget
argument_list|(
name|os
argument_list|,
name|backendType
argument_list|)
decl_stmt|;
return|return
name|formatter
operator|.
name|createContentHandler
argument_list|(
literal|null
argument_list|,
name|foTarget
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|FormatterException
name|fe
parameter_list|)
block|{
throw|throw
operator|new
name|SAXException
argument_list|(
name|fe
operator|.
name|getMessage
argument_list|()
argument_list|,
name|fe
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|cleanup
parameter_list|()
block|{
if|if
condition|(
name|formatter
operator|!=
literal|null
condition|)
block|{
name|formatter
operator|.
name|cleanup
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

