begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2011 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|modules
operator|.
name|file
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|XPathException
import|;
end_import

begin_comment
comment|/**  *  Helper class for FileModule  *   * @author Dannes Wessels (dannes@exist-db.org)  */
end_comment

begin_class
specifier|public
class|class
name|FileModuleHelper
block|{
specifier|private
name|FileModuleHelper
parameter_list|()
block|{
comment|// no instance
block|}
comment|/**      *  Convert path (URL, file path) to a File object.      *       * @param path Path written as OS specific path or as URL      * @return File object      * @throws XPathException Thrown when the URL cannot be used.      */
specifier|public
specifier|static
name|File
name|getFile
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|XPathException
block|{
name|File
name|baseDir
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|path
operator|.
name|startsWith
argument_list|(
literal|"file:"
argument_list|)
condition|)
block|{
try|try
block|{
name|baseDir
operator|=
operator|new
name|File
argument_list|(
operator|new
name|URI
argument_list|(
name|path
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// catch all (URISyntaxException)
throw|throw
operator|new
name|XPathException
argument_list|(
name|path
operator|+
literal|" is not a valid URI: '"
operator|+
name|ex
operator|.
name|getMessage
argument_list|()
operator|+
literal|"'"
argument_list|)
throw|;
block|}
block|}
else|else
block|{
name|baseDir
operator|=
operator|new
name|File
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
return|return
name|baseDir
return|;
block|}
block|}
end_class

end_unit

