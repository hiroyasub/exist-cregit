begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2012 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|replication
operator|.
name|shared
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Container class for clustering messages.  *  * @author Dannes Wessels  */
end_comment

begin_class
specifier|public
class|class
name|eXistMessage
block|{
comment|/**      * Header to describe operation on resource, e.g. CREATE_UPDATE      */
specifier|public
specifier|final
specifier|static
name|String
name|EXIST_RESOURCE_OPERATION
init|=
literal|"exist.resource.operation"
decl_stmt|;
comment|/**      * Header to describe resource, DOCUMENT or COLLECTION      */
specifier|public
specifier|final
specifier|static
name|String
name|EXIST_RESOURCE_TYPE
init|=
literal|"exist.resource.type"
decl_stmt|;
comment|/**      * Header to describe path of resource      */
specifier|public
specifier|final
specifier|static
name|String
name|EXIST_SOURCE_PATH
init|=
literal|"exist.source.path"
decl_stmt|;
comment|/**      * Header to describe destination path, for COPY and MOVE operation      */
specifier|public
specifier|final
specifier|static
name|String
name|EXIST_DESTINATION_PATH
init|=
literal|"exist.destination.path"
decl_stmt|;
specifier|private
name|ResourceOperation
name|resourceOperation
decl_stmt|;
specifier|private
name|ResourceType
name|resourceType
decl_stmt|;
specifier|private
name|String
name|path
decl_stmt|;
specifier|private
name|String
name|destination
decl_stmt|;
specifier|private
name|byte
index|[]
name|payload
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|metaData
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|/**      * Atomic operations on resources      */
specifier|public
enum|enum
name|ResourceOperation
block|{
name|CREATE_UPDATE
block|,
name|DELETE
block|,
name|MOVE
block|,
name|COPY
block|}
comment|/**      * Types of exist-db resources      */
specifier|public
enum|enum
name|ResourceType
block|{
name|DOCUMENT
block|,
name|COLLECTION
block|}
specifier|public
name|void
name|setResourceOperation
parameter_list|(
name|ResourceOperation
name|type
parameter_list|)
block|{
name|resourceOperation
operator|=
name|type
expr_stmt|;
block|}
specifier|public
name|ResourceOperation
name|getResourceOperation
parameter_list|()
block|{
return|return
name|resourceOperation
return|;
block|}
specifier|public
name|void
name|setResourceType
parameter_list|(
name|ResourceType
name|type
parameter_list|)
block|{
name|resourceType
operator|=
name|type
expr_stmt|;
block|}
specifier|public
name|ResourceType
name|getResourceType
parameter_list|()
block|{
return|return
name|resourceType
return|;
block|}
specifier|public
name|void
name|setResourcePath
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
block|}
specifier|public
name|String
name|getResourcePath
parameter_list|()
block|{
return|return
name|path
return|;
block|}
specifier|public
name|void
name|setDestinationPath
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|destination
operator|=
name|path
expr_stmt|;
block|}
specifier|public
name|String
name|getDestinationPath
parameter_list|()
block|{
return|return
name|destination
return|;
block|}
specifier|public
name|byte
index|[]
name|getPayload
parameter_list|()
block|{
return|return
name|payload
return|;
block|}
specifier|public
name|void
name|setPayload
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
block|{
name|payload
operator|=
name|data
expr_stmt|;
block|}
specifier|public
name|void
name|setMetadata
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|props
parameter_list|)
block|{
name|metaData
operator|=
name|props
expr_stmt|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getMetadata
parameter_list|()
block|{
return|return
name|metaData
return|;
block|}
block|}
end_class

end_unit

