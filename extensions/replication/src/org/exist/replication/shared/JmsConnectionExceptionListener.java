begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2012 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|replication
operator|.
name|shared
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ExceptionListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|JMSException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_comment
comment|/**  *  Reporter of connection problems.  *   * @author Dannes Wessels  */
end_comment

begin_class
specifier|public
class|class
name|JmsConnectionExceptionListener
implements|implements
name|ExceptionListener
block|{
specifier|private
specifier|final
specifier|static
name|Logger
name|LOG
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|JmsConnectionExceptionListener
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|onException
parameter_list|(
name|JMSException
name|jmse
parameter_list|)
block|{
comment|// Report exception
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|jmse
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|txt
init|=
name|jmse
operator|.
name|getErrorCode
argument_list|()
decl_stmt|;
if|if
condition|(
name|txt
operator|!=
literal|null
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|" ("
argument_list|)
operator|.
name|append
argument_list|(
name|txt
argument_list|)
operator|.
name|append
argument_list|(
literal|") "
argument_list|)
expr_stmt|;
block|}
name|LOG
operator|.
name|error
argument_list|(
name|sb
operator|.
name|toString
argument_list|()
argument_list|,
name|jmse
argument_list|)
expr_stmt|;
comment|// If there is a linked exception, report it too
name|Exception
name|linkedException
init|=
name|jmse
operator|.
name|getLinkedException
argument_list|()
decl_stmt|;
if|if
condition|(
name|linkedException
operator|!=
literal|null
condition|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Linked with: "
operator|+
name|linkedException
operator|.
name|getMessage
argument_list|()
argument_list|,
name|linkedException
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

