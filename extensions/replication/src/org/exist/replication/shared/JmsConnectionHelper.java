begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2013 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|replication
operator|.
name|shared
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|InvocationTargetException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|reflect
operator|.
name|MethodUtils
import|;
end_import

begin_comment
comment|/**  * Helper methods for setting up connections to a broker.  *   * @author Dannes Wessels<dannes@exist-db.org>  */
end_comment

begin_class
specifier|public
class|class
name|JmsConnectionHelper
block|{
comment|/**      * Set properties on the ConnectionFactory.      *      * @param cf The connection factory      * @throws NoSuchMethodException if there is no such accessible method      * @throws IllegalAccessException  wraps an exception thrown by the method invoked      * @throws InvocationTargetException if the requested method is not accessible via reflection      */
specifier|public
specifier|static
name|void
name|configureConnectionFactory
parameter_list|(
name|ConnectionFactory
name|cf
parameter_list|,
name|ClientParameters
name|params
parameter_list|)
throws|throws
name|NoSuchMethodException
throws|,
name|IllegalAccessException
throws|,
name|InvocationTargetException
block|{
name|String
name|group
init|=
literal|"connectionfactory"
decl_stmt|;
name|String
index|[]
name|allMethods
init|=
block|{
literal|"setUserName"
block|,
literal|"setPassword"
block|}
decl_stmt|;
for|for
control|(
name|String
name|method
range|:
name|allMethods
control|)
block|{
name|String
name|value
init|=
name|params
operator|.
name|getParameterValue
argument_list|(
name|group
argument_list|,
name|method
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
name|MethodUtils
operator|.
name|invokeMethod
argument_list|(
name|cf
argument_list|,
name|method
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

