begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2012 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|messaging
operator|.
name|configuration
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|XPathException
import|;
end_import

begin_comment
comment|/**  *  * @author wessels  */
end_comment

begin_class
specifier|public
class|class
name|JmsMessagingConfiguration
extends|extends
name|MessagingConfiguration
block|{
specifier|public
name|String
name|getConnectionFactory
parameter_list|()
block|{
name|String
name|baseName
init|=
name|getRootName
argument_list|()
decl_stmt|;
return|return
name|getRawConfigurationItem
argument_list|(
name|baseName
operator|+
literal|"."
operator|+
literal|"ConnectionFactory"
argument_list|)
return|;
block|}
specifier|public
name|String
name|getDestination
parameter_list|()
block|{
name|String
name|baseName
init|=
name|getRootName
argument_list|()
decl_stmt|;
return|return
name|getRawConfigurationItem
argument_list|(
name|baseName
operator|+
literal|"."
operator|+
literal|"Destination"
argument_list|)
return|;
block|}
specifier|public
name|String
name|getInitalContextProperty
parameter_list|(
name|String
name|key
parameter_list|)
block|{
name|String
name|baseName
init|=
name|getRootName
argument_list|()
decl_stmt|;
return|return
name|getRawConfigurationItem
argument_list|(
name|baseName
operator|+
literal|".InitialContext."
operator|+
name|key
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|validateContent
parameter_list|()
throws|throws
name|XPathException
block|{
name|String
name|initialContextFactory
init|=
name|getInitalContextProperty
argument_list|(
name|Context
operator|.
name|INITIAL_CONTEXT_FACTORY
argument_list|)
decl_stmt|;
if|if
condition|(
name|initialContextFactory
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|XPathException
argument_list|(
literal|"Missing configuration item '"
operator|+
name|Context
operator|.
name|INITIAL_CONTEXT_FACTORY
operator|+
literal|"'"
argument_list|)
throw|;
block|}
name|String
name|providerURL
init|=
name|getInitalContextProperty
argument_list|(
name|Context
operator|.
name|PROVIDER_URL
argument_list|)
decl_stmt|;
if|if
condition|(
name|providerURL
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|XPathException
argument_list|(
literal|"Missing configuration item '"
operator|+
name|Context
operator|.
name|PROVIDER_URL
operator|+
literal|"'"
argument_list|)
throw|;
block|}
name|String
name|connectionFactory
init|=
name|getConnectionFactory
argument_list|()
decl_stmt|;
if|if
condition|(
name|connectionFactory
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|XPathException
argument_list|(
literal|"Missing configuration item 'ConnectionFactory'"
argument_list|)
throw|;
block|}
name|String
name|destination
init|=
name|getDestination
argument_list|()
decl_stmt|;
if|if
condition|(
name|destination
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|XPathException
argument_list|(
literal|"Missing configuration item 'Destination'"
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

