begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2012 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|messaging
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jms
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|naming
operator|.
name|InitialContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|output
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|NodeProxy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|memtree
operator|.
name|DocumentImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|memtree
operator|.
name|MemTreeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|memtree
operator|.
name|NodeImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|messaging
operator|.
name|configuration
operator|.
name|JmsMessagingConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|messaging
operator|.
name|configuration
operator|.
name|MessagingMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|serializers
operator|.
name|Serializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|validation
operator|.
name|internal
operator|.
name|node
operator|.
name|NodeInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|XPathException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|XQueryContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|value
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  *  * @author wessels  */
end_comment

begin_class
specifier|public
class|class
name|JmsMessageSender
implements|implements
name|MessageSender
block|{
specifier|private
specifier|final
specifier|static
name|Logger
name|LOG
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|JmsMessageSender
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|XQueryContext
name|xqcontext
decl_stmt|;
specifier|public
name|JmsMessageSender
parameter_list|(
name|XQueryContext
name|context
parameter_list|)
block|{
name|xqcontext
operator|=
name|context
operator|.
name|copyContext
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|NodeImpl
name|send
parameter_list|(
name|JmsMessagingConfiguration
name|config
parameter_list|,
name|MessagingMetadata
name|metadata
parameter_list|,
name|Item
name|content
parameter_list|)
throws|throws
name|XPathException
block|{
comment|// JMS specific checks
name|config
operator|.
name|validateContent
argument_list|()
expr_stmt|;
comment|// Retrieve relevant values
name|String
name|initialContextFactory
init|=
name|config
operator|.
name|getInitalContextProperty
argument_list|(
name|Context
operator|.
name|INITIAL_CONTEXT_FACTORY
argument_list|)
decl_stmt|;
name|String
name|providerURL
init|=
name|config
operator|.
name|getInitalContextProperty
argument_list|(
name|Context
operator|.
name|PROVIDER_URL
argument_list|)
decl_stmt|;
name|String
name|connectionFactory
init|=
name|config
operator|.
name|getConnectionFactory
argument_list|()
decl_stmt|;
name|String
name|destination
init|=
name|config
operator|.
name|getDestination
argument_list|()
decl_stmt|;
comment|// TODO split up, use more exceptions, add better reporting
try|try
block|{
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|Context
operator|.
name|INITIAL_CONTEXT_FACTORY
argument_list|,
name|initialContextFactory
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|Context
operator|.
name|PROVIDER_URL
argument_list|,
name|providerURL
argument_list|)
expr_stmt|;
name|javax
operator|.
name|naming
operator|.
name|Context
name|context
init|=
operator|new
name|InitialContext
argument_list|(
name|props
argument_list|)
decl_stmt|;
comment|// Setup connection
name|ConnectionFactory
name|cf
init|=
operator|(
name|ConnectionFactory
operator|)
name|context
operator|.
name|lookup
argument_list|(
name|connectionFactory
argument_list|)
decl_stmt|;
name|Connection
name|connection
init|=
name|cf
operator|.
name|createConnection
argument_list|()
decl_stmt|;
comment|// Lookup queue
name|Destination
name|dest
init|=
operator|(
name|Destination
operator|)
name|context
operator|.
name|lookup
argument_list|(
name|destination
argument_list|)
decl_stmt|;
comment|// Create session
name|Session
name|session
init|=
name|connection
operator|.
name|createSession
argument_list|(
literal|false
argument_list|,
name|Session
operator|.
name|AUTO_ACKNOWLEDGE
argument_list|)
decl_stmt|;
comment|// Create message producer
name|MessageProducer
name|producer
init|=
name|session
operator|.
name|createProducer
argument_list|(
name|dest
argument_list|)
decl_stmt|;
comment|// Create message
name|Message
name|message
init|=
name|createMessage
argument_list|(
name|session
argument_list|,
name|content
argument_list|,
name|metadata
argument_list|,
name|xqcontext
argument_list|)
decl_stmt|;
comment|// Write properties
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|kvs
init|=
name|metadata
operator|.
name|getValueMap
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|key
range|:
name|kvs
operator|.
name|keySet
argument_list|()
control|)
block|{
name|message
operator|.
name|setStringProperty
argument_list|(
name|key
argument_list|,
name|kvs
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Send message
name|producer
operator|.
name|send
argument_list|(
name|message
argument_list|)
expr_stmt|;
comment|// Close connection
comment|// TODO keep connection open for re-use, efficiency
name|connection
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|createReport
argument_list|(
name|message
argument_list|,
name|xqcontext
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|ex
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
name|ex
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|XPathException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
specifier|private
name|Message
name|createMessage
parameter_list|(
name|Session
name|session
parameter_list|,
name|Item
name|item
parameter_list|,
name|MessagingMetadata
name|mdd
parameter_list|,
name|XQueryContext
name|xqcontext
parameter_list|)
throws|throws
name|JMSException
throws|,
name|XPathException
block|{
name|Message
name|message
init|=
literal|null
decl_stmt|;
name|mdd
operator|.
name|add
argument_list|(
literal|"exist.datatype"
argument_list|,
name|Type
operator|.
name|getTypeName
argument_list|(
name|item
operator|.
name|getType
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|item
operator|.
name|getType
argument_list|()
operator|==
name|Type
operator|.
name|ELEMENT
operator|||
name|item
operator|.
name|getType
argument_list|()
operator|==
name|Type
operator|.
name|DOCUMENT
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Streaming element or document node"
argument_list|)
expr_stmt|;
if|if
condition|(
name|item
operator|instanceof
name|NodeProxy
condition|)
block|{
name|NodeProxy
name|np
init|=
operator|(
name|NodeProxy
operator|)
name|item
decl_stmt|;
name|String
name|uri
init|=
name|np
operator|.
name|getDocument
argument_list|()
operator|.
name|getBaseURI
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Document detected, adding URL "
operator|+
name|uri
argument_list|)
expr_stmt|;
name|mdd
operator|.
name|add
argument_list|(
literal|"exist.document-uri"
argument_list|,
name|uri
argument_list|)
expr_stmt|;
block|}
comment|// Node provided
name|Serializer
name|serializer
init|=
name|xqcontext
operator|.
name|getBroker
argument_list|()
operator|.
name|newSerializer
argument_list|()
decl_stmt|;
name|NodeValue
name|node
init|=
operator|(
name|NodeValue
operator|)
name|item
decl_stmt|;
name|InputStream
name|is
init|=
operator|new
name|NodeInputStream
argument_list|(
name|serializer
argument_list|,
name|node
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
try|try
block|{
name|IOUtils
operator|.
name|copy
argument_list|(
name|is
argument_list|,
name|baos
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
name|ex
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|XPathException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|is
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|baos
argument_list|)
expr_stmt|;
name|BytesMessage
name|bytesMessage
init|=
name|session
operator|.
name|createBytesMessage
argument_list|()
decl_stmt|;
name|bytesMessage
operator|.
name|writeBytes
argument_list|(
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|message
operator|=
name|bytesMessage
expr_stmt|;
block|}
if|else if
condition|(
name|item
operator|.
name|getType
argument_list|()
operator|==
name|Type
operator|.
name|BASE64_BINARY
operator|||
name|item
operator|.
name|getType
argument_list|()
operator|==
name|Type
operator|.
name|HEX_BINARY
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Streaming base64 binary"
argument_list|)
expr_stmt|;
if|if
condition|(
name|item
operator|instanceof
name|Base64BinaryDocument
condition|)
block|{
name|Base64BinaryDocument
name|b64doc
init|=
operator|(
name|Base64BinaryDocument
operator|)
name|item
decl_stmt|;
name|String
name|uri
init|=
name|b64doc
operator|.
name|getUrl
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Base64BinaryDocument detected, adding URL "
operator|+
name|uri
argument_list|)
expr_stmt|;
name|mdd
operator|.
name|add
argument_list|(
literal|"exist.document-uri"
argument_list|,
name|uri
argument_list|)
expr_stmt|;
block|}
name|BinaryValue
name|binary
init|=
operator|(
name|BinaryValue
operator|)
name|item
decl_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|InputStream
name|is
init|=
name|binary
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
comment|//TODO consider using BinaryValue.getInputStream()
comment|//byte[] data = (byte[]) binary.toJavaObject(byte[].class);
try|try
block|{
name|IOUtils
operator|.
name|copy
argument_list|(
name|is
argument_list|,
name|baos
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
name|ex
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|XPathException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|is
argument_list|)
expr_stmt|;
name|IOUtils
operator|.
name|closeQuietly
argument_list|(
name|baos
argument_list|)
expr_stmt|;
name|BytesMessage
name|bytesMessage
init|=
name|session
operator|.
name|createBytesMessage
argument_list|()
decl_stmt|;
name|bytesMessage
operator|.
name|writeBytes
argument_list|(
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|message
operator|=
name|bytesMessage
expr_stmt|;
block|}
if|else if
condition|(
name|item
operator|.
name|getType
argument_list|()
operator|==
name|Type
operator|.
name|STRING
condition|)
block|{
name|TextMessage
name|textMessage
init|=
name|session
operator|.
name|createTextMessage
argument_list|()
decl_stmt|;
name|textMessage
operator|.
name|setText
argument_list|(
name|item
operator|.
name|getStringValue
argument_list|()
argument_list|)
expr_stmt|;
name|message
operator|=
name|textMessage
expr_stmt|;
block|}
else|else
block|{
name|ObjectMessage
name|objectMessage
init|=
name|session
operator|.
name|createObjectMessage
argument_list|()
decl_stmt|;
comment|//objectMessage.setObject(item.toJavaObject(Object.class)); TODO hmmmm
name|message
operator|=
name|objectMessage
expr_stmt|;
block|}
return|return
name|message
return|;
block|}
comment|/**      * Create messaging results report      *       * TODO shared code      */
specifier|private
name|NodeImpl
name|createReport
parameter_list|(
name|Message
name|message
parameter_list|,
name|XQueryContext
name|xqcontext
parameter_list|)
block|{
name|MemTreeBuilder
name|builder
init|=
name|xqcontext
operator|.
name|getDocumentBuilder
argument_list|()
decl_stmt|;
comment|// start root element
name|int
name|nodeNr
init|=
name|builder
operator|.
name|startElement
argument_list|(
literal|""
argument_list|,
literal|"JMS"
argument_list|,
literal|"JMS"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
try|try
block|{
name|String
name|txt
init|=
name|message
operator|.
name|getJMSMessageID
argument_list|()
decl_stmt|;
if|if
condition|(
name|txt
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|startElement
argument_list|(
literal|""
argument_list|,
literal|"MessageID"
argument_list|,
literal|"MessageID"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|builder
operator|.
name|characters
argument_list|(
name|message
operator|.
name|getJMSMessageID
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|endElement
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|JMSException
name|ex
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
name|ex
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|String
name|txt
init|=
name|message
operator|.
name|getJMSCorrelationID
argument_list|()
decl_stmt|;
if|if
condition|(
name|txt
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|startElement
argument_list|(
literal|""
argument_list|,
literal|"CorrelationID"
argument_list|,
literal|"CorrelationID"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|builder
operator|.
name|characters
argument_list|(
name|message
operator|.
name|getJMSCorrelationID
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|endElement
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|JMSException
name|ex
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
name|ex
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|String
name|txt
init|=
name|message
operator|.
name|getJMSType
argument_list|()
decl_stmt|;
if|if
condition|(
name|txt
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|startElement
argument_list|(
literal|""
argument_list|,
literal|"Type"
argument_list|,
literal|"Type"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|builder
operator|.
name|characters
argument_list|(
name|message
operator|.
name|getJMSType
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|endElement
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|JMSException
name|ex
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
name|ex
argument_list|)
expr_stmt|;
block|}
comment|// finish root element
name|builder
operator|.
name|endElement
argument_list|()
expr_stmt|;
comment|// return result
return|return
operator|(
operator|(
name|DocumentImpl
operator|)
name|builder
operator|.
name|getDocument
argument_list|()
operator|)
operator|.
name|getNode
argument_list|(
name|nodeNr
argument_list|)
return|;
block|}
block|}
end_class

end_unit

