begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist's  Gate extension - REST client for automate document management  *  form any browser in any desktop application on any client platform  *  Copyright (C) 2010,  Evgeny V. Gazdovsky (gazdovsky@gmail.com)  *  *  This library is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Library General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This library is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Library General Public License for more details.  *  *  You should have received a copy of the GNU Library General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|gate
package|;
end_package

begin_import
import|import
name|java
operator|.
name|applet
operator|.
name|Applet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|HttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|ProxyHost
import|;
end_import

begin_class
specifier|public
class|class
name|GateApplet
extends|extends
name|Applet
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|8952536002584984227L
decl_stmt|;
specifier|private
name|HttpClient
name|http
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
specifier|private
name|TaskManager
name|manager
init|=
operator|new
name|TaskManager
argument_list|()
decl_stmt|;
specifier|private
name|String
name|opencmd
decl_stmt|;
specifier|private
name|File
name|home
init|=
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.home"
argument_list|)
argument_list|)
decl_stmt|;
specifier|private
name|File
name|etc
init|=
operator|new
name|File
argument_list|(
name|home
argument_list|,
literal|".eXist"
argument_list|)
decl_stmt|;
specifier|private
name|File
name|gate
init|=
operator|new
name|File
argument_list|(
name|etc
argument_list|,
literal|"gate"
argument_list|)
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|long
name|PERIOD
init|=
literal|1000
decl_stmt|;
specifier|public
name|GateApplet
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
comment|// Setup HTTP proxy
name|String
name|proxyHost
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"http.proxyHost"
argument_list|)
decl_stmt|;
if|if
condition|(
name|proxyHost
operator|!=
literal|null
operator|&&
operator|!
name|proxyHost
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|ProxyHost
name|proxy
init|=
operator|new
name|ProxyHost
argument_list|(
name|proxyHost
argument_list|,
name|Integer
operator|.
name|parseInt
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"http.proxyPort"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|http
operator|.
name|getHostConfiguration
argument_list|()
operator|.
name|setProxyHost
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
block|}
comment|// Create gate folder
if|if
condition|(
operator|!
name|gate
operator|.
name|isDirectory
argument_list|()
condition|)
block|{
name|gate
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
block|}
comment|// Detect OS open file command
name|String
name|os
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"os.name"
argument_list|)
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
if|if
condition|(
name|os
operator|.
name|indexOf
argument_list|(
literal|"windows"
argument_list|)
operator|!=
operator|-
literal|1
operator|||
name|os
operator|.
name|indexOf
argument_list|(
literal|"nt"
argument_list|)
operator|!=
operator|-
literal|1
condition|)
block|{
name|opencmd
operator|=
literal|"cmd /c \"start %s\""
expr_stmt|;
block|}
if|else if
condition|(
name|os
operator|.
name|indexOf
argument_list|(
literal|"mac"
argument_list|)
operator|!=
operator|-
literal|1
condition|)
block|{
name|opencmd
operator|=
literal|"open %s"
expr_stmt|;
block|}
else|else
block|{
name|opencmd
operator|=
literal|"xdg-open %s"
expr_stmt|;
block|}
name|Timer
name|timer
init|=
operator|new
name|Timer
argument_list|()
decl_stmt|;
name|timer
operator|.
name|schedule
argument_list|(
name|manager
argument_list|,
name|PERIOD
argument_list|,
name|PERIOD
argument_list|)
expr_stmt|;
block|}
specifier|public
name|HttpClient
name|getHttp
parameter_list|()
block|{
return|return
name|http
return|;
block|}
specifier|public
name|void
name|manage
parameter_list|(
name|String
name|downloadFrom
parameter_list|,
name|String
name|uploadTo
parameter_list|)
block|{
name|manager
operator|.
name|addTask
argument_list|(
operator|new
name|Task
argument_list|(
name|downloadFrom
argument_list|,
name|uploadTo
argument_list|,
name|this
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|open
parameter_list|(
name|File
name|file
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|cmd
init|=
name|String
operator|.
name|format
argument_list|(
name|opencmd
argument_list|,
name|file
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|)
decl_stmt|;
name|Runtime
operator|.
name|getRuntime
argument_list|()
operator|.
name|exec
argument_list|(
name|cmd
argument_list|)
expr_stmt|;
block|}
specifier|public
name|File
name|createFile
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|File
name|tmp
init|=
operator|new
name|File
argument_list|(
name|gate
argument_list|,
name|name
argument_list|)
decl_stmt|;
name|tmp
operator|.
name|createNewFile
argument_list|()
expr_stmt|;
return|return
name|tmp
return|;
block|}
block|}
end_class

end_unit

