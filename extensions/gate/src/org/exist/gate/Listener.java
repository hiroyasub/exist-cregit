begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist's  Gate extension - REST client for automate document management  *  form any browser in any desktop application on any client platform  *  Copyright (C) 2010,  Evgeny V. Gazdovsky (gazdovsky@gmail.com)  *  *  This library is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Library General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This library is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Library General Public License for more details.  *  *  You should have received a copy of the GNU Library General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|gate
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TimerTask
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|InputStreamRequestEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|PutMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|RequestEntity
import|;
end_import

begin_class
specifier|public
class|class
name|Listener
extends|extends
name|TimerTask
block|{
specifier|private
name|long
name|lastModified
decl_stmt|;
specifier|private
name|String
name|uploadTo
decl_stmt|;
specifier|private
name|File
name|file
decl_stmt|;
specifier|private
name|GateApplet
name|gate
decl_stmt|;
specifier|public
name|Listener
parameter_list|(
name|File
name|file
parameter_list|,
name|String
name|uploadTo
parameter_list|,
name|GateApplet
name|gate
parameter_list|)
block|{
name|this
operator|.
name|gate
operator|=
name|gate
expr_stmt|;
name|this
operator|.
name|file
operator|=
name|file
expr_stmt|;
name|this
operator|.
name|uploadTo
operator|=
name|uploadTo
expr_stmt|;
name|this
operator|.
name|lastModified
operator|=
name|file
operator|.
name|lastModified
argument_list|()
expr_stmt|;
block|}
specifier|private
name|boolean
name|isModified
parameter_list|()
block|{
return|return
name|file
operator|.
name|lastModified
argument_list|()
operator|>
name|this
operator|.
name|lastModified
return|;
block|}
specifier|public
name|void
name|run
parameter_list|()
block|{
if|if
condition|(
name|isModified
argument_list|()
condition|)
block|{
name|this
operator|.
name|lastModified
operator|=
name|file
operator|.
name|lastModified
argument_list|()
expr_stmt|;
name|PutMethod
name|put
init|=
operator|new
name|PutMethod
argument_list|(
name|uploadTo
argument_list|)
decl_stmt|;
try|try
block|{
name|InputStream
name|is
init|=
operator|new
name|FileInputStream
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|RequestEntity
name|entity
init|=
operator|new
name|InputStreamRequestEntity
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|put
operator|.
name|setRequestEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|gate
operator|.
name|getHttp
argument_list|()
operator|.
name|executeMethod
argument_list|(
name|put
argument_list|)
expr_stmt|;
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|put
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

