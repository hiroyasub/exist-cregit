begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist's  Gate extension - REST client for automate document management  *  form any browser in any desktop application on any client platform  *  Copyright (C) 2010,  Evgeny V. Gazdovsky (gazdovsky@gmail.com)  *  *  This library is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Library General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This library is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Library General Public License for more details.  *  *  You should have received a copy of the GNU Library General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|gate
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|HttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|HttpException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|HttpMethodBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|GetMethod
import|;
end_import

begin_class
specifier|public
class|class
name|Task
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|2712574630003981814L
decl_stmt|;
specifier|private
name|GateApplet
name|gate
decl_stmt|;
specifier|private
name|String
name|downloadFrom
decl_stmt|;
specifier|protected
name|String
name|uploadTo
decl_stmt|;
specifier|protected
name|String
name|path
decl_stmt|;
specifier|protected
name|Long
name|modified
decl_stmt|;
specifier|public
name|Task
parameter_list|(
name|String
name|downloadFrom
parameter_list|,
name|String
name|uploadTo
parameter_list|,
name|GateApplet
name|gate
parameter_list|)
block|{
name|this
operator|.
name|downloadFrom
operator|=
name|downloadFrom
expr_stmt|;
name|this
operator|.
name|uploadTo
operator|=
name|uploadTo
expr_stmt|;
name|this
operator|.
name|gate
operator|=
name|gate
expr_stmt|;
block|}
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|GetMethod
name|get
init|=
operator|new
name|GetMethod
argument_list|(
name|downloadFrom
argument_list|)
decl_stmt|;
try|try
block|{
name|HttpClient
name|http
init|=
name|gate
operator|.
name|getHttp
argument_list|()
decl_stmt|;
name|http
operator|.
name|executeMethod
argument_list|(
name|get
argument_list|)
expr_stmt|;
name|long
name|contentLength
init|=
operator|(
operator|(
name|HttpMethodBase
operator|)
name|get
operator|)
operator|.
name|getResponseContentLength
argument_list|()
decl_stmt|;
if|if
condition|(
name|contentLength
operator|<
name|Integer
operator|.
name|MAX_VALUE
condition|)
block|{
name|InputStream
name|is
init|=
name|get
operator|.
name|getResponseBodyAsStream
argument_list|()
decl_stmt|;
name|File
name|tmp
init|=
name|gate
operator|.
name|createFile
argument_list|(
operator|new
name|File
argument_list|(
name|downloadFrom
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|OutputStream
name|os
init|=
operator|new
name|FileOutputStream
argument_list|(
name|tmp
argument_list|)
decl_stmt|;
name|path
operator|=
name|tmp
operator|.
name|getAbsolutePath
argument_list|()
expr_stmt|;
name|modified
operator|=
name|tmp
operator|.
name|lastModified
argument_list|()
expr_stmt|;
name|byte
index|[]
name|data
init|=
operator|new
name|byte
index|[
literal|1024
index|]
decl_stmt|;
name|int
name|read
init|=
literal|0
decl_stmt|;
while|while
condition|(
operator|(
name|read
operator|=
name|is
operator|.
name|read
argument_list|(
name|data
argument_list|)
operator|)
operator|>
operator|-
literal|1
condition|)
block|{
name|os
operator|.
name|write
argument_list|(
name|data
argument_list|,
literal|0
argument_list|,
name|read
argument_list|)
expr_stmt|;
block|}
name|os
operator|.
name|flush
argument_list|()
expr_stmt|;
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
name|Listener
name|listener
init|=
operator|new
name|Listener
argument_list|(
name|tmp
argument_list|,
name|uploadTo
argument_list|,
name|gate
argument_list|)
decl_stmt|;
name|Timer
name|timer
init|=
operator|new
name|Timer
argument_list|()
decl_stmt|;
name|timer
operator|.
name|schedule
argument_list|(
name|listener
argument_list|,
name|GateApplet
operator|.
name|PERIOD
argument_list|,
name|GateApplet
operator|.
name|PERIOD
argument_list|)
expr_stmt|;
name|gate
operator|.
name|open
argument_list|(
name|tmp
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|HttpException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|get
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

