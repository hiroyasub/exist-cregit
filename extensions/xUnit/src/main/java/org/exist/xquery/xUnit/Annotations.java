begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2012 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|xUnit
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Constructor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|AnnotationTrigger
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:shabanovd@gmail.com">Dmitriy Shabanov</a>  *  */
end_comment

begin_class
specifier|public
class|class
name|Annotations
extends|extends
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|Annotations
block|{
specifier|public
specifier|final
specifier|static
name|String
name|NAMESPACE_URI
init|=
literal|"http://exist-db.org/xquery/xUnit"
decl_stmt|;
comment|//public final static String PREFIX = "test";
specifier|private
specifier|final
specifier|static
name|String
name|RELEASED_IN_VERSION
init|=
literal|"eXist-2.0"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|DESCRIPTION
init|=
literal|"xUnit annotations"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|Class
argument_list|<
name|?
extends|extends
name|AnnotationTrigger
argument_list|>
argument_list|>
name|anns
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Class
argument_list|<
name|?
extends|extends
name|AnnotationTrigger
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
static|static
block|{
name|anns
operator|.
name|put
argument_list|(
name|AssertEquals
operator|.
name|name
argument_list|,
name|AssertEquals
operator|.
name|class
argument_list|)
expr_stmt|;
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|Annotations
operator|.
name|register
argument_list|(
name|NAMESPACE_URI
argument_list|,
operator|new
name|Annotations
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|AnnotationTrigger
name|getTrigger
parameter_list|(
name|String
name|name
parameter_list|,
name|Annotation
name|ann
parameter_list|)
block|{
name|Class
argument_list|<
name|?
extends|extends
name|AnnotationTrigger
argument_list|>
name|clazz
init|=
name|anns
operator|.
name|get
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|clazz
operator|==
literal|null
condition|)
return|return
literal|null
return|;
try|try
block|{
name|Constructor
argument_list|<
name|?
extends|extends
name|AnnotationTrigger
argument_list|>
name|cnst
init|=
name|clazz
operator|.
name|getConstructor
argument_list|(
name|Annotation
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
name|cnst
operator|.
name|newInstance
argument_list|(
name|ann
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// TODO log
return|return
literal|null
return|;
block|}
block|}
comment|//@Override
specifier|public
name|String
name|getNamespaceURI
parameter_list|()
block|{
return|return
name|NAMESPACE_URI
return|;
block|}
comment|//@Override
comment|//    public String getDefaultPrefix() {
comment|//        return PREFIX;
comment|//    }
comment|//@Override
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
name|DESCRIPTION
return|;
block|}
comment|//@Override
specifier|public
name|String
name|getReleaseVersion
parameter_list|()
block|{
return|return
name|RELEASED_IN_VERSION
return|;
block|}
block|}
end_class

end_unit

