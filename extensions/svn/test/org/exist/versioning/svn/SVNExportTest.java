begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2009 The eXist Project  *  http://exist-db.org  *    *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *    *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *    *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *    *  $Id:$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|versioning
operator|.
name|svn
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|HttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|HttpStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|PostMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|CollectionImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|DatabaseInstanceManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNLogEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|DatabaseManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|CollectionManagementService
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:shabanovd@gmail.com">Dmitriy Shabanov</a>  *   */
end_comment

begin_class
specifier|public
class|class
name|SVNExportTest
block|{
specifier|static
name|Collection
name|test
init|=
literal|null
decl_stmt|;
comment|// svn url
specifier|private
name|String
name|url
init|=
literal|"https://exist.svn.sourceforge.net/svnroot/exist/trunk/eXist/webapp/admin/"
decl_stmt|;
comment|// revisions array
specifier|private
name|Integer
index|[]
name|currectRevList
init|=
block|{
literal|699
block|,
literal|764
block|,
literal|768
block|,
literal|782
block|,
literal|788
block|,
literal|797
block|,
literal|805
block|,
literal|832
block|,
literal|896
block|,
literal|936
block|,
literal|1008
block|,
literal|1104
block|,
literal|1105
block|,
literal|1211
block|,
literal|1317
block|,
literal|1335
block|,
literal|1338
block|,
literal|1685
block|,
literal|2460
block|,
literal|2489
block|,
literal|2558
block|,
literal|2878
block|,
literal|3123
block|,
literal|3489
block|,
literal|3505
block|,
literal|3524
block|,
literal|3525
block|,
literal|3532
block|,
literal|3535
block|,
literal|3764
block|,
literal|4121
block|,
literal|4255
block|,
literal|4497
block|,
literal|4598
block|,
literal|4671
block|,
literal|4758
block|,
literal|5052
block|,
literal|5054
block|,
literal|5066
block|,
literal|5084
block|,
literal|5085
block|,
literal|5086
block|,
literal|5088
block|,
literal|5093
block|,
literal|6005
block|,
literal|6434
block|,
literal|6533
block|,
literal|6739
block|,
literal|6750
block|,
literal|6751
block|,
literal|6752
block|,
literal|7159
block|,
literal|7209
block|,
literal|7224
block|,
literal|7879
block|,
literal|7893
block|,
literal|8074
block|,
literal|8207
block|,
literal|8236
block|,
literal|8237
block|,
literal|8453
block|,
literal|8471
block|,
literal|8482
block|,
literal|8490
block|,
literal|8512
block|,
literal|8539
block|,
literal|8551
block|,
literal|8553
block|,
literal|8554
block|,
literal|8560
block|,
literal|8639
block|,
literal|8839
block|,
literal|8973
block|,
literal|9019
block|,
literal|9020
block|,
literal|9055
block|,
literal|9127
block|,
literal|9167
block|,
literal|9222
block|,
literal|9234
block|,
literal|9235
block|,
literal|9238
block|,
literal|9242
block|,
literal|9247
block|,
literal|9323
block|,
literal|9358
block|,
literal|9561
block|,
literal|9859
block|,
literal|9929
block|,
literal|9937
block|,
literal|9942
block|,
literal|9943
block|,
literal|9944
block|,
literal|9985
block|,
literal|9992
block|,
literal|10012
block|,
literal|10289
block|,
literal|10297
block|,
literal|10302
block|,
literal|10304
block|,
literal|10341
block|,
literal|10401
block|,
literal|10433
block|,
literal|10532
block|,
literal|10551
block|}
decl_stmt|;
annotation|@
name|Ignore
annotation|@
name|Test
specifier|public
name|void
name|testExport
parameter_list|()
throws|throws
name|SVNException
block|{
name|assertNotNull
argument_list|(
literal|"Database wasn't initilised."
argument_list|,
name|test
argument_list|)
expr_stmt|;
name|XmldbURI
name|collectionURL
init|=
operator|(
operator|(
name|CollectionImpl
operator|)
name|test
operator|)
operator|.
name|getPathURI
argument_list|()
decl_stmt|;
name|VersioningRepositoryImpl
name|repository
init|=
operator|new
name|VersioningRepositoryImpl
argument_list|(
name|collectionURL
argument_list|,
name|url
argument_list|)
decl_stmt|;
for|for
control|(
name|Integer
name|rev
range|:
name|Arrays
operator|.
name|asList
argument_list|(
name|currectRevList
argument_list|)
control|)
block|{
if|if
condition|(
name|rev
operator|<
literal|4758
condition|)
continue|continue;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"update to rev "
operator|+
name|rev
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Updating failed to rev "
operator|+
name|rev
argument_list|,
name|repository
operator|.
name|update
argument_list|(
name|rev
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
name|Collection
name|testXML
init|=
literal|null
decl_stmt|;
comment|// svn url
specifier|private
name|String
name|urlXML
init|=
literal|"https://exist.svn.sourceforge.net/svnroot/exist/trunk/eXist/webapp/xqts/"
decl_stmt|;
comment|// revisions array
specifier|private
name|Integer
index|[]
name|currectRevListXML
init|=
block|{
literal|2763
block|,
literal|2764
block|,
literal|2765
block|,
literal|2771
block|,
literal|2772
block|,
literal|2773
block|,
literal|2774
block|,
literal|2775
block|,
literal|2780
block|,
literal|2784
block|,
literal|2785
block|,
literal|2805
block|,
literal|2810
block|,
literal|2811
block|,
literal|3000
block|,
literal|3033
block|,
literal|3034
block|,
literal|3123
block|,
literal|3143
block|,
literal|3144
block|,
literal|3153
block|,
literal|3164
block|,
literal|3256
block|,
literal|3639
block|,
literal|3651
block|,
literal|3652
block|,
literal|3654
block|,
literal|3699
block|,
literal|3700
block|,
literal|3759
block|,
literal|3778
block|,
literal|3958
block|,
literal|3968
block|,
literal|4034
block|,
literal|4035
block|,
literal|4036
block|,
literal|4037
block|,
literal|4038
block|,
literal|4049
block|,
literal|4094
block|,
literal|4095
block|,
literal|4096
block|,
literal|4097
block|,
literal|4098
block|,
literal|4099
block|,
literal|4101
block|,
literal|4102
block|,
literal|4105
block|,
literal|4108
block|,
literal|4119
block|,
literal|4120
block|,
literal|4211
block|,
literal|4255
block|,
literal|4308
block|,
literal|4309
block|,
literal|4346
block|,
literal|4386
block|,
literal|4412
block|,
literal|4414
block|,
literal|4415
block|,
literal|4438
block|,
literal|4456
block|,
literal|4462
block|,
literal|4464
block|,
literal|4519
block|,
literal|4523
block|,
literal|4533
block|,
literal|4552
block|,
literal|4604
block|,
literal|4615
block|,
literal|4617
block|,
literal|4639
block|,
literal|4671
block|,
literal|4693
block|,
literal|4698
block|,
literal|4748
block|,
literal|4749
block|,
literal|4758
block|,
literal|4779
block|,
literal|4860
block|,
literal|5441
block|,
literal|6348
block|,
literal|6352
block|,
literal|6367
block|,
literal|6380
block|,
literal|6406
block|,
literal|6407
block|,
literal|6411
block|,
literal|6412
block|,
literal|6415
block|,
literal|6434
block|,
literal|6438
block|,
literal|6442
block|,
literal|6453
block|,
literal|6456
block|,
literal|6459
block|,
literal|6460
block|,
literal|6463
block|,
literal|6465
block|,
literal|6468
block|,
literal|6469
block|,
literal|6482
block|,
literal|6494
block|,
literal|6495
block|,
literal|6535
block|,
literal|6539
block|,
literal|6540
block|,
literal|6546
block|,
literal|6551
block|,
literal|6750
block|,
literal|6758
block|,
literal|6779
block|,
literal|6802
block|,
literal|6803
block|,
literal|6804
block|,
literal|6805
block|,
literal|6806
block|,
literal|6835
block|,
literal|6905
block|,
literal|6942
block|,
literal|7160
block|,
literal|7237
block|,
literal|7453
block|,
literal|7575
block|,
literal|7594
block|,
literal|7596
block|,
literal|7620
block|,
literal|7623
block|,
literal|7721
block|,
literal|7943
block|,
literal|8359
block|,
literal|8766
block|,
literal|9907
block|,
literal|10524
block|}
decl_stmt|;
annotation|@
name|Ignore
annotation|@
name|Test
specifier|public
name|void
name|testExportXML
parameter_list|()
throws|throws
name|SVNException
block|{
name|assertNotNull
argument_list|(
literal|"Database wasn't initilised."
argument_list|,
name|testXML
argument_list|)
expr_stmt|;
name|XmldbURI
name|collectionURL
init|=
operator|(
operator|(
name|CollectionImpl
operator|)
name|testXML
operator|)
operator|.
name|getPathURI
argument_list|()
decl_stmt|;
name|VersioningRepositoryImpl
name|repository
init|=
operator|new
name|VersioningRepositoryImpl
argument_list|(
name|collectionURL
argument_list|,
name|urlXML
argument_list|)
decl_stmt|;
for|for
control|(
name|Integer
name|rev
range|:
name|Arrays
operator|.
name|asList
argument_list|(
name|currectRevListXML
argument_list|)
control|)
block|{
if|if
condition|(
name|rev
operator|<
literal|4758
condition|)
continue|continue;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"update to rev "
operator|+
name|rev
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Updating failed to rev "
operator|+
name|rev
argument_list|,
name|repository
operator|.
name|update
argument_list|(
name|rev
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|String
name|createRepository
parameter_list|()
block|{
name|HttpClient
name|client
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
name|PostMethod
name|method
init|=
operator|new
name|PostMethod
argument_list|(
literal|"http://support.syntactica.com/cgi-bin/3A075407-AC4E-3308-9616FD4EB832EDBB.pl"
argument_list|)
decl_stmt|;
try|try
block|{
name|int
name|statusCode
init|=
name|client
operator|.
name|executeMethod
argument_list|(
name|method
argument_list|)
decl_stmt|;
if|if
condition|(
name|statusCode
operator|!=
name|HttpStatus
operator|.
name|SC_OK
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
name|method
operator|.
name|getResponseBodyAsString
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
specifier|private
name|void
name|deleteRepository
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|HttpClient
name|client
init|=
operator|new
name|HttpClient
argument_list|()
decl_stmt|;
name|PostMethod
name|method
init|=
operator|new
name|PostMethod
argument_list|(
literal|"http://support.syntactica.com/cgi-bin/938A1512-5156-11DF-A4C4-D82A2BCCFF1C.pl?d="
operator|+
name|id
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|executeMethod
argument_list|(
name|method
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCommitXML
parameter_list|()
throws|throws
name|SVNException
block|{
name|assertNotNull
argument_list|(
literal|"Database wasn't initilised."
argument_list|,
name|testXML
argument_list|)
expr_stmt|;
name|String
name|repositoryID
init|=
name|createRepository
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|repositoryID
argument_list|)
expr_stmt|;
name|String
name|repositoryURL
init|=
literal|"https://support.syntactica.com/exist_svn/"
operator|+
name|repositoryID
operator|+
literal|"/"
decl_stmt|;
name|XmldbURI
name|collectionURL
init|=
operator|(
operator|(
name|CollectionImpl
operator|)
name|testXML
operator|)
operator|.
name|getPathURI
argument_list|()
decl_stmt|;
name|VersioningRepositoryImpl
name|repository
init|=
operator|new
name|VersioningRepositoryImpl
argument_list|(
name|collectionURL
argument_list|,
name|repositoryURL
argument_list|,
literal|"existtest"
argument_list|,
literal|"existtest"
argument_list|)
decl_stmt|;
name|deleteRepository
argument_list|(
name|repositoryID
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
annotation|@
name|Test
specifier|public
name|void
name|testLog
parameter_list|()
throws|throws
name|SVNException
block|{
name|assertNotNull
argument_list|(
literal|"Database wasn't initilised."
argument_list|,
name|test
argument_list|)
expr_stmt|;
name|XmldbURI
name|collectionURL
init|=
operator|(
operator|(
name|CollectionImpl
operator|)
name|test
operator|)
operator|.
name|getPathURI
argument_list|()
decl_stmt|;
name|VersioningRepositoryImpl
name|repository
init|=
operator|new
name|VersioningRepositoryImpl
argument_list|(
name|collectionURL
argument_list|,
name|url
argument_list|)
decl_stmt|;
name|java
operator|.
name|util
operator|.
name|Collection
argument_list|<
name|SVNLogEntry
argument_list|>
name|logEntries
init|=
name|repository
operator|.
name|log
argument_list|(
operator|new
name|String
index|[]
block|{
literal|""
block|}
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|,
operator|-
literal|1
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Integer
argument_list|>
name|revList
init|=
operator|new
name|LinkedList
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|SVNLogEntry
argument_list|>
name|entries
init|=
name|logEntries
operator|.
name|iterator
argument_list|()
init|;
name|entries
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|SVNLogEntry
name|logEntry
init|=
name|entries
operator|.
name|next
argument_list|()
decl_stmt|;
comment|//			System.out.println("---------------------------------------------");
comment|//			System.out.println("revision: " + logEntry.getRevision());
comment|//			System.out.println("author: " + logEntry.getAuthor());
comment|//			System.out.println("date: " + logEntry.getDate());
comment|//			System.out.println("log message: " + logEntry.getMessage());
name|revList
operator|.
name|add
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|logEntry
operator|.
name|getRevision
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertArrayEquals
argument_list|(
name|currectRevList
argument_list|,
name|revList
operator|.
name|toArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|initDB
parameter_list|()
block|{
comment|// initialize XML:DB driver
try|try
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|cl
init|=
name|Class
operator|.
name|forName
argument_list|(
literal|"org.exist.xmldb.DatabaseImpl"
argument_list|)
decl_stmt|;
name|Database
name|database
init|=
operator|(
name|Database
operator|)
name|cl
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|database
operator|.
name|setProperty
argument_list|(
literal|"create-database"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|DatabaseManager
operator|.
name|registerDatabase
argument_list|(
name|database
argument_list|)
expr_stmt|;
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
name|root
init|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
literal|"xmldb:exist://"
operator|+
name|DBBroker
operator|.
name|ROOT_COLLECTION
argument_list|,
literal|"admin"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|CollectionManagementService
name|mgmt
init|=
operator|(
name|CollectionManagementService
operator|)
name|root
operator|.
name|getService
argument_list|(
literal|"CollectionManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
try|try
block|{
name|mgmt
operator|.
name|removeCollection
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
block|}
name|test
operator|=
name|mgmt
operator|.
name|createCollection
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
try|try
block|{
name|mgmt
operator|.
name|removeCollection
argument_list|(
literal|"testXML"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
block|}
name|testXML
operator|=
name|mgmt
operator|.
name|createCollection
argument_list|(
literal|"testXML"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|closeDB
parameter_list|()
block|{
try|try
block|{
name|Collection
name|root
init|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
literal|"xmldb:exist://"
operator|+
name|DBBroker
operator|.
name|ROOT_COLLECTION
argument_list|,
literal|"admin"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// CollectionManagementService cmgr = (CollectionManagementService)
comment|// root.getService("CollectionManagementService", "1.0");
comment|// cmgr.removeCollection("test");
name|DatabaseInstanceManager
name|mgr
init|=
operator|(
name|DatabaseInstanceManager
operator|)
name|root
operator|.
name|getService
argument_list|(
literal|"DatabaseInstanceManager"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|mgr
operator|.
name|shutdown
argument_list|(
literal|2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

