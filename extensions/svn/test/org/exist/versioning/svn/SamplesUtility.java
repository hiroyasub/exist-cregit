begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * ====================================================================  * Copyright (c) 2004-2010 TMate Software Ltd.  All rights reserved.  *  * This software is licensed as described in the file COPYING, which  * you should have received as part of this distribution.  The terms  * are also available at http://svnkit.com/license.html.  * If newer versions of this license are posted there, you may use a  * newer version instead, at your option.  * ====================================================================  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|versioning
operator|.
name|svn
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNCommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNDepth
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNURL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|internal
operator|.
name|io
operator|.
name|fs
operator|.
name|FSRepositoryFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|io
operator|.
name|ISVNEditor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|io
operator|.
name|SVNRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|io
operator|.
name|SVNRepositoryFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|io
operator|.
name|diff
operator|.
name|SVNDeltaGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|wc
operator|.
name|SVNClientManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|wc
operator|.
name|SVNRevision
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|wc
operator|.
name|SVNUpdateClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|wc
operator|.
name|admin
operator|.
name|SVNAdminClient
import|;
end_import

begin_comment
comment|/**  * @version 1.3  * @author  TMate Software Ltd.  */
end_comment

begin_class
specifier|public
class|class
name|SamplesUtility
block|{
specifier|private
specifier|static
specifier|final
name|String
name|IOTA
init|=
literal|"iota"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|MU
init|=
literal|"mu"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|LAMBDA
init|=
literal|"lambda"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ALPHA
init|=
literal|"alpha"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|BETA
init|=
literal|"beta"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|GAMMA
init|=
literal|"gamma"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PI
init|=
literal|"pi"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|RHO
init|=
literal|"rho"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TAU
init|=
literal|"tau"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CHI
init|=
literal|"chi"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|OMEGA
init|=
literal|"omega"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PSI
init|=
literal|"psi"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Map
name|ourGreekTreeFiles
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
static|static
block|{
name|ourGreekTreeFiles
operator|.
name|put
argument_list|(
name|IOTA
argument_list|,
literal|"This is the file 'iota'.\n"
argument_list|)
expr_stmt|;
name|ourGreekTreeFiles
operator|.
name|put
argument_list|(
name|MU
argument_list|,
literal|"This is the file 'A/mu'.\n"
argument_list|)
expr_stmt|;
name|ourGreekTreeFiles
operator|.
name|put
argument_list|(
name|LAMBDA
argument_list|,
literal|"This is the file 'A/B/lambda'.\n"
argument_list|)
expr_stmt|;
name|ourGreekTreeFiles
operator|.
name|put
argument_list|(
name|ALPHA
argument_list|,
literal|"This is the file 'A/B/E/alpha'.\n"
argument_list|)
expr_stmt|;
name|ourGreekTreeFiles
operator|.
name|put
argument_list|(
name|BETA
argument_list|,
literal|"This is the file 'A/B/E/beta'.\n"
argument_list|)
expr_stmt|;
name|ourGreekTreeFiles
operator|.
name|put
argument_list|(
name|GAMMA
argument_list|,
literal|"This is the file 'A/D/gamma'.\n"
argument_list|)
expr_stmt|;
name|ourGreekTreeFiles
operator|.
name|put
argument_list|(
name|PI
argument_list|,
literal|"This is the file 'A/D/G/pi'.\n"
argument_list|)
expr_stmt|;
name|ourGreekTreeFiles
operator|.
name|put
argument_list|(
name|RHO
argument_list|,
literal|"This is the file 'A/D/G/rho'.\n"
argument_list|)
expr_stmt|;
name|ourGreekTreeFiles
operator|.
name|put
argument_list|(
name|TAU
argument_list|,
literal|"This is the file 'A/D/G/tau'.\n"
argument_list|)
expr_stmt|;
name|ourGreekTreeFiles
operator|.
name|put
argument_list|(
name|CHI
argument_list|,
literal|"This is the file 'A/D/H/chi'.\n"
argument_list|)
expr_stmt|;
name|ourGreekTreeFiles
operator|.
name|put
argument_list|(
name|OMEGA
argument_list|,
literal|"This is the file 'A/D/H/omega'.\n"
argument_list|)
expr_stmt|;
name|ourGreekTreeFiles
operator|.
name|put
argument_list|(
name|PSI
argument_list|,
literal|"This is the file 'A/D/H/psi'.\n"
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|createRepository
parameter_list|(
name|File
name|reposRoot
parameter_list|)
throws|throws
name|SVNException
block|{
name|SVNAdminClient
name|adminClient
init|=
name|SVNClientManager
operator|.
name|newInstance
argument_list|()
operator|.
name|getAdminClient
argument_list|()
decl_stmt|;
name|adminClient
operator|.
name|doCreateRepository
argument_list|(
name|reposRoot
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
comment|/**      * Here we use the SVNKit low-level API to create a tree in a repository entirely from our code,       * without a working copy at all.      *       * The resultant tree committed into the repository will look like this:      *       *                                    Repository Root      *                                       ____|____      *                                      /         \      *                                     /           \      *                                    /             \      *                                   A             iota      *          _______________________//|\      *         /         ______________/ | \_____________      *        mu        /                |               \      *                 /                 |                \      *                B                  C                 D      *          _____/|\_____                _____________/|\      *         /      |      \              /              | \      *        /       |       \            /              /   \      *     lambda     |        F          /              /     \      *                E                gamma            /       \      *               / \                               /         \       *              /   \                     ________/           \________      *          alpha   beta                 /                             \                 *                                      /                               \      *                                     /                                 \      *                                    G                                   H      *                           ________/|\_______                   _______/|\______      *                          /         |        \                 /        |       \                             *                         /          |         \               /         |        \      *                        /           |          \             /          |         \      *                       pi          rho         tau          chi        psi       omega      *       *       * @param reposRoot repository root location; will be converted into a file:/// url to the repository.        */
specifier|public
specifier|static
name|SVNCommitInfo
name|createRepositoryTree
parameter_list|(
name|File
name|reposRoot
parameter_list|)
throws|throws
name|SVNException
block|{
name|SVNURL
name|reposURL
init|=
name|SVNURL
operator|.
name|fromFile
argument_list|(
name|reposRoot
argument_list|)
decl_stmt|;
name|SVNRepository
name|repos
init|=
name|SVNRepositoryFactory
operator|.
name|create
argument_list|(
name|reposURL
argument_list|)
decl_stmt|;
name|ISVNEditor
name|commitEditor
init|=
name|repos
operator|.
name|getCommitEditor
argument_list|(
literal|"initializing the repository with a greek tree"
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|SVNDeltaGenerator
name|deltaGenerator
init|=
operator|new
name|SVNDeltaGenerator
argument_list|()
decl_stmt|;
name|commitEditor
operator|.
name|openRoot
argument_list|(
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
comment|//add /iota file
name|commitEditor
operator|.
name|addFile
argument_list|(
name|IOTA
argument_list|,
literal|null
argument_list|,
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
name|commitEditor
operator|.
name|applyTextDelta
argument_list|(
name|IOTA
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|String
name|fileText
init|=
operator|(
name|String
operator|)
name|ourGreekTreeFiles
operator|.
name|get
argument_list|(
name|IOTA
argument_list|)
decl_stmt|;
name|String
name|checksum
init|=
name|deltaGenerator
operator|.
name|sendDelta
argument_list|(
name|IOTA
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|fileText
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|,
name|commitEditor
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|commitEditor
operator|.
name|closeFile
argument_list|(
name|IOTA
argument_list|,
name|checksum
argument_list|)
expr_stmt|;
comment|//add /A directory
name|commitEditor
operator|.
name|addDir
argument_list|(
literal|"A"
argument_list|,
literal|null
argument_list|,
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
comment|//add /A/mu file
name|String
name|muPath
init|=
literal|"A/"
operator|+
name|MU
decl_stmt|;
name|commitEditor
operator|.
name|addFile
argument_list|(
name|muPath
argument_list|,
literal|null
argument_list|,
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
name|commitEditor
operator|.
name|applyTextDelta
argument_list|(
name|muPath
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fileText
operator|=
operator|(
name|String
operator|)
name|ourGreekTreeFiles
operator|.
name|get
argument_list|(
name|MU
argument_list|)
expr_stmt|;
name|checksum
operator|=
name|deltaGenerator
operator|.
name|sendDelta
argument_list|(
name|muPath
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|fileText
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|,
name|commitEditor
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|commitEditor
operator|.
name|closeFile
argument_list|(
name|muPath
argument_list|,
name|checksum
argument_list|)
expr_stmt|;
name|commitEditor
operator|.
name|addDir
argument_list|(
literal|"A/B"
argument_list|,
literal|null
argument_list|,
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
comment|//add /A/B/lambda file
name|String
name|lambdaPath
init|=
literal|"A/B/"
operator|+
name|LAMBDA
decl_stmt|;
name|commitEditor
operator|.
name|addFile
argument_list|(
name|lambdaPath
argument_list|,
literal|null
argument_list|,
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
name|commitEditor
operator|.
name|applyTextDelta
argument_list|(
name|lambdaPath
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fileText
operator|=
operator|(
name|String
operator|)
name|ourGreekTreeFiles
operator|.
name|get
argument_list|(
name|LAMBDA
argument_list|)
expr_stmt|;
name|checksum
operator|=
name|deltaGenerator
operator|.
name|sendDelta
argument_list|(
name|lambdaPath
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|fileText
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|,
name|commitEditor
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|commitEditor
operator|.
name|closeFile
argument_list|(
name|lambdaPath
argument_list|,
name|checksum
argument_list|)
expr_stmt|;
name|commitEditor
operator|.
name|addDir
argument_list|(
literal|"A/B/E"
argument_list|,
literal|null
argument_list|,
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
comment|//add /A/B/E/alpha file
name|String
name|alphaPath
init|=
literal|"A/B/E/"
operator|+
name|ALPHA
decl_stmt|;
name|commitEditor
operator|.
name|addFile
argument_list|(
name|alphaPath
argument_list|,
literal|null
argument_list|,
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
name|commitEditor
operator|.
name|applyTextDelta
argument_list|(
name|alphaPath
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fileText
operator|=
operator|(
name|String
operator|)
name|ourGreekTreeFiles
operator|.
name|get
argument_list|(
name|ALPHA
argument_list|)
expr_stmt|;
name|checksum
operator|=
name|deltaGenerator
operator|.
name|sendDelta
argument_list|(
name|alphaPath
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|fileText
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|,
name|commitEditor
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|commitEditor
operator|.
name|closeFile
argument_list|(
name|alphaPath
argument_list|,
name|checksum
argument_list|)
expr_stmt|;
comment|//add /A/B/E/beta file
name|String
name|betaPath
init|=
literal|"A/B/E/"
operator|+
name|BETA
decl_stmt|;
name|commitEditor
operator|.
name|addFile
argument_list|(
name|betaPath
argument_list|,
literal|null
argument_list|,
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
name|commitEditor
operator|.
name|applyTextDelta
argument_list|(
name|betaPath
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fileText
operator|=
operator|(
name|String
operator|)
name|ourGreekTreeFiles
operator|.
name|get
argument_list|(
name|BETA
argument_list|)
expr_stmt|;
name|checksum
operator|=
name|deltaGenerator
operator|.
name|sendDelta
argument_list|(
name|betaPath
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|fileText
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|,
name|commitEditor
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|commitEditor
operator|.
name|closeFile
argument_list|(
name|betaPath
argument_list|,
name|checksum
argument_list|)
expr_stmt|;
comment|//close /A/B/E
name|commitEditor
operator|.
name|closeDir
argument_list|()
expr_stmt|;
comment|//add /A/B/F
name|commitEditor
operator|.
name|addDir
argument_list|(
literal|"A/B/F"
argument_list|,
literal|null
argument_list|,
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
comment|//close /A/B/F
name|commitEditor
operator|.
name|closeDir
argument_list|()
expr_stmt|;
comment|//close /A/B
name|commitEditor
operator|.
name|closeDir
argument_list|()
expr_stmt|;
comment|//add /A/C
name|commitEditor
operator|.
name|addDir
argument_list|(
literal|"A/C"
argument_list|,
literal|null
argument_list|,
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
comment|//close /A/C
name|commitEditor
operator|.
name|closeDir
argument_list|()
expr_stmt|;
comment|//add /A/D
name|commitEditor
operator|.
name|addDir
argument_list|(
literal|"A/D"
argument_list|,
literal|null
argument_list|,
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
comment|//add /A/D/gamma file
name|String
name|gammaPath
init|=
literal|"A/D/"
operator|+
name|GAMMA
decl_stmt|;
name|commitEditor
operator|.
name|addFile
argument_list|(
name|gammaPath
argument_list|,
literal|null
argument_list|,
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
name|commitEditor
operator|.
name|applyTextDelta
argument_list|(
name|gammaPath
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fileText
operator|=
operator|(
name|String
operator|)
name|ourGreekTreeFiles
operator|.
name|get
argument_list|(
name|GAMMA
argument_list|)
expr_stmt|;
name|checksum
operator|=
name|deltaGenerator
operator|.
name|sendDelta
argument_list|(
name|gammaPath
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|fileText
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|,
name|commitEditor
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|commitEditor
operator|.
name|closeFile
argument_list|(
name|gammaPath
argument_list|,
name|checksum
argument_list|)
expr_stmt|;
comment|//add /A/D/G
name|commitEditor
operator|.
name|addDir
argument_list|(
literal|"A/D/G"
argument_list|,
literal|null
argument_list|,
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
comment|//add /A/D/G/pi file
name|String
name|piPath
init|=
literal|"A/D/G/"
operator|+
name|PI
decl_stmt|;
name|commitEditor
operator|.
name|addFile
argument_list|(
name|piPath
argument_list|,
literal|null
argument_list|,
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
name|commitEditor
operator|.
name|applyTextDelta
argument_list|(
name|piPath
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fileText
operator|=
operator|(
name|String
operator|)
name|ourGreekTreeFiles
operator|.
name|get
argument_list|(
name|PI
argument_list|)
expr_stmt|;
name|checksum
operator|=
name|deltaGenerator
operator|.
name|sendDelta
argument_list|(
name|piPath
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|fileText
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|,
name|commitEditor
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|//close /A/D/G/pi file
name|commitEditor
operator|.
name|closeFile
argument_list|(
name|piPath
argument_list|,
name|checksum
argument_list|)
expr_stmt|;
comment|//add /A/D/G/rho file
name|String
name|rhoPath
init|=
literal|"A/D/G/"
operator|+
name|RHO
decl_stmt|;
name|commitEditor
operator|.
name|addFile
argument_list|(
name|rhoPath
argument_list|,
literal|null
argument_list|,
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
name|commitEditor
operator|.
name|applyTextDelta
argument_list|(
name|rhoPath
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fileText
operator|=
operator|(
name|String
operator|)
name|ourGreekTreeFiles
operator|.
name|get
argument_list|(
name|RHO
argument_list|)
expr_stmt|;
name|checksum
operator|=
name|deltaGenerator
operator|.
name|sendDelta
argument_list|(
name|rhoPath
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|fileText
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|,
name|commitEditor
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|//close /A/D/G/rho file
name|commitEditor
operator|.
name|closeFile
argument_list|(
name|rhoPath
argument_list|,
name|checksum
argument_list|)
expr_stmt|;
comment|//add /A/D/G/tau file
name|String
name|tauPath
init|=
literal|"A/D/G/"
operator|+
name|TAU
decl_stmt|;
name|commitEditor
operator|.
name|addFile
argument_list|(
name|tauPath
argument_list|,
literal|null
argument_list|,
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
name|commitEditor
operator|.
name|applyTextDelta
argument_list|(
name|tauPath
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fileText
operator|=
operator|(
name|String
operator|)
name|ourGreekTreeFiles
operator|.
name|get
argument_list|(
name|TAU
argument_list|)
expr_stmt|;
name|checksum
operator|=
name|deltaGenerator
operator|.
name|sendDelta
argument_list|(
name|tauPath
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|fileText
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|,
name|commitEditor
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|//close /A/D/G/tau file
name|commitEditor
operator|.
name|closeFile
argument_list|(
name|tauPath
argument_list|,
name|checksum
argument_list|)
expr_stmt|;
comment|//close /A/D/G
name|commitEditor
operator|.
name|closeDir
argument_list|()
expr_stmt|;
comment|//add /A/D/H
name|commitEditor
operator|.
name|addDir
argument_list|(
literal|"A/D/H"
argument_list|,
literal|null
argument_list|,
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
comment|//add /A/D/H/chi file
name|String
name|chiPath
init|=
literal|"A/D/H/"
operator|+
name|CHI
decl_stmt|;
name|commitEditor
operator|.
name|addFile
argument_list|(
name|chiPath
argument_list|,
literal|null
argument_list|,
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
name|commitEditor
operator|.
name|applyTextDelta
argument_list|(
name|chiPath
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fileText
operator|=
operator|(
name|String
operator|)
name|ourGreekTreeFiles
operator|.
name|get
argument_list|(
name|CHI
argument_list|)
expr_stmt|;
name|checksum
operator|=
name|deltaGenerator
operator|.
name|sendDelta
argument_list|(
name|chiPath
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|fileText
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|,
name|commitEditor
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|//close /A/D/H/chi file
name|commitEditor
operator|.
name|closeFile
argument_list|(
name|chiPath
argument_list|,
name|checksum
argument_list|)
expr_stmt|;
comment|//add /A/D/H/omega file
name|String
name|omegaPath
init|=
literal|"A/D/H/"
operator|+
name|OMEGA
decl_stmt|;
name|commitEditor
operator|.
name|addFile
argument_list|(
name|omegaPath
argument_list|,
literal|null
argument_list|,
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
name|commitEditor
operator|.
name|applyTextDelta
argument_list|(
name|omegaPath
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fileText
operator|=
operator|(
name|String
operator|)
name|ourGreekTreeFiles
operator|.
name|get
argument_list|(
name|OMEGA
argument_list|)
expr_stmt|;
name|checksum
operator|=
name|deltaGenerator
operator|.
name|sendDelta
argument_list|(
name|omegaPath
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|fileText
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|,
name|commitEditor
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|//close /A/D/H/omega file
name|commitEditor
operator|.
name|closeFile
argument_list|(
name|omegaPath
argument_list|,
name|checksum
argument_list|)
expr_stmt|;
comment|//add /A/D/H/psi file
name|String
name|psiPath
init|=
literal|"A/D/H/"
operator|+
name|PSI
decl_stmt|;
name|commitEditor
operator|.
name|addFile
argument_list|(
name|psiPath
argument_list|,
literal|null
argument_list|,
name|SVNRepository
operator|.
name|INVALID_REVISION
argument_list|)
expr_stmt|;
name|commitEditor
operator|.
name|applyTextDelta
argument_list|(
name|psiPath
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fileText
operator|=
operator|(
name|String
operator|)
name|ourGreekTreeFiles
operator|.
name|get
argument_list|(
name|PSI
argument_list|)
expr_stmt|;
name|checksum
operator|=
name|deltaGenerator
operator|.
name|sendDelta
argument_list|(
name|psiPath
argument_list|,
operator|new
name|ByteArrayInputStream
argument_list|(
name|fileText
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|,
name|commitEditor
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|//close /A/D/H/psi file
name|commitEditor
operator|.
name|closeFile
argument_list|(
name|psiPath
argument_list|,
name|checksum
argument_list|)
expr_stmt|;
comment|//close /A/D/H
name|commitEditor
operator|.
name|closeDir
argument_list|()
expr_stmt|;
comment|//close /A/D
name|commitEditor
operator|.
name|closeDir
argument_list|()
expr_stmt|;
comment|//close /A
name|commitEditor
operator|.
name|closeDir
argument_list|()
expr_stmt|;
comment|//close the root of the edit - / (repository root) in our case
name|commitEditor
operator|.
name|closeDir
argument_list|()
expr_stmt|;
return|return
name|commitEditor
operator|.
name|closeEdit
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|void
name|checkOutWorkingCopy
parameter_list|(
name|SVNURL
name|url
parameter_list|,
name|File
name|wcRoot
parameter_list|)
throws|throws
name|SVNException
block|{
name|SVNUpdateClient
name|updateClient
init|=
name|SVNClientManager
operator|.
name|newInstance
argument_list|()
operator|.
name|getUpdateClient
argument_list|()
decl_stmt|;
name|updateClient
operator|.
name|doCheckout
argument_list|(
name|url
argument_list|,
name|wcRoot
argument_list|,
name|SVNRevision
operator|.
name|UNDEFINED
argument_list|,
name|SVNRevision
operator|.
name|HEAD
argument_list|,
name|SVNDepth
operator|.
name|INFINITY
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|writeToFile
parameter_list|(
name|File
name|file
parameter_list|,
name|String
name|text
parameter_list|,
name|boolean
name|append
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|file
operator|.
name|getParentFile
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|file
operator|.
name|getParentFile
argument_list|()
operator|.
name|exists
argument_list|()
condition|)
block|{
name|file
operator|.
name|getParentFile
argument_list|()
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
block|}
name|OutputStream
name|outputStream
init|=
literal|null
decl_stmt|;
try|try
block|{
name|outputStream
operator|=
operator|new
name|BufferedOutputStream
argument_list|(
operator|new
name|FileOutputStream
argument_list|(
name|file
argument_list|,
name|append
argument_list|)
argument_list|)
expr_stmt|;
name|outputStream
operator|.
name|write
argument_list|(
name|text
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|outputStream
operator|!=
literal|null
condition|)
block|{
name|outputStream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|public
specifier|static
name|void
name|initializeFSFSprotocol
parameter_list|()
block|{
comment|/*          * Call this setup method only once in you program and prior to using SVNKit.          */
name|FSRepositoryFactory
operator|.
name|setup
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

