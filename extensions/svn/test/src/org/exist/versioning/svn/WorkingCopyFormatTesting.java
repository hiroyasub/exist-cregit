begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * ====================================================================  * Copyright (c) 2004-2010 TMate Software Ltd.  All rights reserved.  *  * This software is licensed as described in the file COPYING, which  * you should have received as part of this distribution.  The terms  * are also available at http://svnkit.com/license.html.  * If newer versions of this license are posted there, you may use a  * newer version instead, at your option.  * ====================================================================  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|versioning
operator|.
name|svn
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNCommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNDepth
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNURL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|wc
operator|.
name|ISVNStatusHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|wc
operator|.
name|SVNClientManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|wc
operator|.
name|SVNRevision
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|wc
operator|.
name|SVNStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|wc
operator|.
name|SVNStatusClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|wc
operator|.
name|SVNWCClient
import|;
end_import

begin_comment
comment|/**  * @version 1.1.2  * @author  TMate Software Ltd.  */
end_comment

begin_class
specifier|public
class|class
name|WorkingCopyFormatTesting
block|{
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
comment|//initialize SVNKit to work through file:/// protocol
name|SamplesUtility
operator|.
name|initializeFSFSprotocol
argument_list|()
expr_stmt|;
name|File
name|baseDirectory
init|=
operator|new
name|File
argument_list|(
name|args
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|File
name|reposRoot
init|=
operator|new
name|File
argument_list|(
name|baseDirectory
argument_list|,
literal|"exampleRepository"
argument_list|)
decl_stmt|;
name|File
name|wcRoot
init|=
operator|new
name|File
argument_list|(
name|baseDirectory
argument_list|,
literal|"exampleWC"
argument_list|)
decl_stmt|;
try|try
block|{
comment|//first create a repository and fill it with data
name|SamplesUtility
operator|.
name|createRepository
argument_list|(
name|reposRoot
argument_list|)
expr_stmt|;
name|SVNCommitInfo
name|info
init|=
name|SamplesUtility
operator|.
name|createRepositoryTree
argument_list|(
name|reposRoot
argument_list|)
decl_stmt|;
comment|//print out new revision info
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|info
argument_list|)
expr_stmt|;
name|SVNURL
name|reposURL
init|=
name|SVNURL
operator|.
name|fromFile
argument_list|(
name|reposRoot
argument_list|)
decl_stmt|;
comment|//checkout the entire repository tree
name|SamplesUtility
operator|.
name|checkOutWorkingCopy
argument_list|(
name|reposURL
argument_list|,
name|wcRoot
argument_list|)
expr_stmt|;
name|SVNClientManager
name|clientManager
init|=
name|SVNClientManager
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|SVNStatusClient
name|statusClient
init|=
name|clientManager
operator|.
name|getStatusClient
argument_list|()
decl_stmt|;
name|ISVNStatusHandler
name|handler
init|=
operator|new
name|StatusHandler
argument_list|()
decl_stmt|;
name|statusClient
operator|.
name|doStatus
argument_list|(
name|wcRoot
argument_list|,
name|SVNRevision
operator|.
name|WORKING
argument_list|,
name|SVNDepth
operator|.
name|INFINITY
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
name|handler
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|SVNWCClient
name|wcClient
init|=
name|clientManager
operator|.
name|getWCClient
argument_list|()
decl_stmt|;
name|wcClient
operator|.
name|doSetWCFormat
argument_list|(
name|wcRoot
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|statusClient
operator|.
name|doStatus
argument_list|(
name|wcRoot
argument_list|,
name|SVNRevision
operator|.
name|WORKING
argument_list|,
name|SVNDepth
operator|.
name|INFINITY
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
name|handler
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SVNException
name|svne
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|svne
operator|.
name|getErrorMessage
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
class|class
name|StatusHandler
implements|implements
name|ISVNStatusHandler
block|{
specifier|public
name|void
name|handleStatus
parameter_list|(
name|SVNStatus
name|status
parameter_list|)
throws|throws
name|SVNException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Path: "
operator|+
name|status
operator|.
name|getFile
argument_list|()
operator|+
literal|", wc format: "
operator|+
name|status
operator|.
name|getWorkingCopyFormat
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

