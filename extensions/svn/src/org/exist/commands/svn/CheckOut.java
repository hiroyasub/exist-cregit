begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2010 The eXist Project  *  http://exist-db.org  *    *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *    *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *    *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *    *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|commands
operator|.
name|svn
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|plugin
operator|.
name|command
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|io
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|versioning
operator|.
name|svn
operator|.
name|WorkingCopy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNURL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|wc
operator|.
name|SVNRevision
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:shabanovd@gmail.com">Dmitriy Shabanov</a>  *  */
end_comment

begin_class
specifier|public
class|class
name|CheckOut
extends|extends
name|AbstractCommand
block|{
specifier|public
name|CheckOut
parameter_list|()
block|{
name|names
operator|=
operator|new
name|String
index|[]
block|{
literal|"checkout"
block|,
literal|"co"
block|}
expr_stmt|;
block|}
specifier|public
name|void
name|process
parameter_list|(
name|XmldbURI
name|collection
parameter_list|,
name|String
index|[]
name|params
parameter_list|)
throws|throws
name|CommandException
block|{
comment|//TODO: check params
name|String
name|uri
init|=
name|params
index|[
literal|0
index|]
decl_stmt|;
name|String
name|destPath
init|=
name|params
index|[
literal|1
index|]
decl_stmt|;
name|WorkingCopy
name|wc
init|=
operator|new
name|WorkingCopy
argument_list|(
literal|""
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|Resource
name|wcDir
init|=
operator|new
name|Resource
argument_list|(
name|collection
operator|.
name|append
argument_list|(
name|destPath
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|wcDir
operator|.
name|exists
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|CommandException
argument_list|(
literal|"the destination directory '"
operator|+
name|wcDir
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|"' already exists!"
argument_list|)
throw|;
block|}
name|wcDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
try|try
block|{
name|out
argument_list|()
operator|.
name|println
argument_list|(
name|wc
operator|.
name|checkout
argument_list|(
name|SVNURL
operator|.
name|parseURIEncoded
argument_list|(
name|uri
argument_list|)
argument_list|,
name|SVNRevision
operator|.
name|HEAD
argument_list|,
name|wcDir
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SVNException
name|svne
parameter_list|)
block|{
throw|throw
operator|new
name|CommandException
argument_list|(
literal|"error while checking out a working copy for the location '"
operator|+
name|uri
operator|+
literal|"'"
argument_list|,
name|svne
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

