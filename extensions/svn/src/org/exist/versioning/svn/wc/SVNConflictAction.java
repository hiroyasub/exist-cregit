begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * ====================================================================  * Copyright (c) 2004-2010 TMate Software Ltd.  All rights reserved.  *  * This software is licensed as described in the file COPYING, which  * you should have received as part of this distribution.  The terms  * are also available at http://svnkit.com/license.html.  * If newer versions of this license are posted there, you may use a  * newer version instead, at your option.  * ====================================================================  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|versioning
operator|.
name|svn
operator|.
name|wc
package|;
end_package

begin_comment
comment|/**  * The<b>SVNConflictAction</b> represents the type of action being attempted on an object which leads to   * a conflict.    *   * @version 1.3  * @author  TMate Software Ltd.  * @since   1.2  */
end_comment

begin_class
specifier|public
class|class
name|SVNConflictAction
block|{
comment|/**      * Constant representing an attempt to change text or props.      */
specifier|public
specifier|static
specifier|final
name|SVNConflictAction
name|EDIT
init|=
operator|new
name|SVNConflictAction
argument_list|(
literal|"edited"
argument_list|)
decl_stmt|;
comment|/**      * Constant representing an attempt to add an object.      */
specifier|public
specifier|static
specifier|final
name|SVNConflictAction
name|ADD
init|=
operator|new
name|SVNConflictAction
argument_list|(
literal|"added"
argument_list|)
decl_stmt|;
comment|/**      * Constant representing an attempt to delete an object.      */
specifier|public
specifier|static
specifier|final
name|SVNConflictAction
name|DELETE
init|=
operator|new
name|SVNConflictAction
argument_list|(
literal|"deleted"
argument_list|)
decl_stmt|;
comment|/**      * Converts string to an<code>SVNConflictAction</code> object when possible.      * @param   action    action name      * @return<code>SVNConflictAction</code> object which {@link #getName()}       *          equals to<code>action</code>;<code>null</code> in case<code>action</code>      *          matches no<code>SVNConflictAction</code> constant       * @since   1.3      */
specifier|public
specifier|static
name|SVNConflictAction
name|fromString
parameter_list|(
name|String
name|action
parameter_list|)
block|{
if|if
condition|(
name|EDIT
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|action
argument_list|)
condition|)
block|{
return|return
name|EDIT
return|;
block|}
if|if
condition|(
name|ADD
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|action
argument_list|)
condition|)
block|{
return|return
name|ADD
return|;
block|}
if|if
condition|(
name|DELETE
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|action
argument_list|)
condition|)
block|{
return|return
name|DELETE
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|private
specifier|final
name|String
name|myName
decl_stmt|;
specifier|private
name|SVNConflictAction
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|myName
operator|=
name|name
expr_stmt|;
block|}
comment|/**      * Returns the string representation of this action.      * @return string representation      * @since  1.3      */
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|myName
return|;
block|}
comment|/**      * Returns the string representation of this action.      * @return string representation      * @since 1.3      */
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getName
argument_list|()
return|;
block|}
block|}
end_class

end_unit

