begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * ====================================================================  * Copyright (c) 2004-2010 TMate Software Ltd.  All rights reserved.  *  * This software is licensed as described in the file COPYING, which  * you should have received as part of this distribution.  The terms  * are also available at http://svnkit.com/license.html.  * If newer versions of this license are posted there, you may use a  * newer version instead, at your option.  * ====================================================================  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|versioning
operator|.
name|svn
operator|.
name|wc
package|;
end_package

begin_comment
comment|/**  * The<b>SVNConflictReason</b> class represents an enumeration of constants describing the reason of a   * conflict state in a working copy produced by a merge operation.   *    * @version 1.3  * @author  TMate Software Ltd.  * @since   1.2  */
end_comment

begin_class
specifier|public
class|class
name|SVNConflictReason
block|{
comment|/**      * Constant saying that local edits are already present.       */
specifier|public
specifier|static
specifier|final
name|SVNConflictReason
name|EDITED
init|=
operator|new
name|SVNConflictReason
argument_list|(
literal|"edited"
argument_list|)
decl_stmt|;
comment|/**      * Constant saying that another object is in the way.      */
specifier|public
specifier|static
specifier|final
name|SVNConflictReason
name|OBSTRUCTED
init|=
operator|new
name|SVNConflictReason
argument_list|(
literal|"obstructed"
argument_list|)
decl_stmt|;
comment|/**      * Constant saying that an object is already schedule-delete.      */
specifier|public
specifier|static
specifier|final
name|SVNConflictReason
name|DELETED
init|=
operator|new
name|SVNConflictReason
argument_list|(
literal|"deleted"
argument_list|)
decl_stmt|;
comment|/**      * Constant saying that an object is unknown or missing. Reserved (never passed currently).      */
specifier|public
specifier|static
specifier|final
name|SVNConflictReason
name|MISSING
init|=
operator|new
name|SVNConflictReason
argument_list|(
literal|"missing"
argument_list|)
decl_stmt|;
comment|/**      * Constant saying that an object is unversioned. Reserved (never passed currently).      */
specifier|public
specifier|static
specifier|final
name|SVNConflictReason
name|UNVERSIONED
init|=
operator|new
name|SVNConflictReason
argument_list|(
literal|"unversioned"
argument_list|)
decl_stmt|;
comment|/**      * Constant saying that an object is already added or schedule-add      */
specifier|public
specifier|static
specifier|final
name|SVNConflictReason
name|ADDED
init|=
operator|new
name|SVNConflictReason
argument_list|(
literal|"added"
argument_list|)
decl_stmt|;
comment|/**      * Converts a string reason name to an<code>SVNConflictReason</code> object.      *        * @param   reason name      * @return  an<code>SVNConflictReason</code> that matches the<code>reason</code> name;      *<code>null</code> if no match is found       * @since   1.3      */
specifier|public
specifier|static
name|SVNConflictReason
name|fromString
parameter_list|(
name|String
name|reason
parameter_list|)
block|{
if|if
condition|(
name|EDITED
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|reason
argument_list|)
condition|)
block|{
return|return
name|EDITED
return|;
block|}
if|if
condition|(
name|OBSTRUCTED
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|reason
argument_list|)
condition|)
block|{
return|return
name|OBSTRUCTED
return|;
block|}
if|if
condition|(
name|DELETED
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|reason
argument_list|)
condition|)
block|{
return|return
name|DELETED
return|;
block|}
if|if
condition|(
name|MISSING
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|reason
argument_list|)
condition|)
block|{
return|return
name|MISSING
return|;
block|}
if|if
condition|(
name|UNVERSIONED
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|reason
argument_list|)
condition|)
block|{
return|return
name|UNVERSIONED
return|;
block|}
if|if
condition|(
name|ADDED
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|reason
argument_list|)
condition|)
block|{
return|return
name|ADDED
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|private
specifier|final
name|String
name|myName
decl_stmt|;
specifier|private
name|SVNConflictReason
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|myName
operator|=
name|name
expr_stmt|;
block|}
comment|/**      * Retunrns a string representation of this object.      *       * @return conflict reason name      * @since  1.3      */
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|myName
return|;
block|}
comment|/**      * Retunrns a string representation of this object.      *       * @return conflict reason name      * @since  1.3      */
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getName
argument_list|()
return|;
block|}
block|}
end_class

end_unit

