begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * ====================================================================  * Copyright (c) 2004-2010 TMate Software Ltd.  All rights reserved.  *  * This software is licensed as described in the file COPYING, which  * you should have received as part of this distribution.  The terms  * are also available at http://svnkit.com/license.html.  * If newer versions of this license are posted there, you may use a  * newer version instead, at your option.  * ====================================================================  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|versioning
operator|.
name|svn
operator|.
name|wc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|versioning
operator|.
name|svn
operator|.
name|internal
operator|.
name|wc
operator|.
name|SVNConflictVersion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNNodeKind
import|;
end_import

begin_comment
comment|/**  *<b>SVNTreeConflictDescription</b> brings information on a tree conflict.  *   * @version 1.3  * @author  TMate Software Ltd.  * @since   1.3  */
end_comment

begin_class
specifier|public
class|class
name|SVNTreeConflictDescription
extends|extends
name|SVNConflictDescription
block|{
specifier|private
name|SVNOperation
name|myOperation
decl_stmt|;
specifier|private
name|SVNConflictVersion
name|mySourceLeftVersion
decl_stmt|;
specifier|private
name|SVNConflictVersion
name|mySourceRightVersion
decl_stmt|;
comment|/**      * Creates a new<code>SVNTreeConflictDescription</code>.      *       * @param path                wc path      * @param nodeKind            kind of the node, on which the tree conflict occurred      * @param conflictAction      action which lead to the conflict      * @param conflictReason      reason why the conflict occurred      * @param operation           user operation which exposed the conflict      * @param sourceLeftVersion   info on the "merge-left source" or "older" version of incoming change      * @param sourceRightVersion  info on the "merge-right source" or "their" version of incoming change       * @since 1.3      */
specifier|public
name|SVNTreeConflictDescription
parameter_list|(
name|File
name|path
parameter_list|,
name|SVNNodeKind
name|nodeKind
parameter_list|,
name|SVNConflictAction
name|conflictAction
parameter_list|,
name|SVNConflictReason
name|conflictReason
parameter_list|,
name|SVNOperation
name|operation
parameter_list|,
name|SVNConflictVersion
name|sourceLeftVersion
parameter_list|,
name|SVNConflictVersion
name|sourceRightVersion
parameter_list|)
block|{
name|super
argument_list|(
operator|new
name|SVNMergeFileSet
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|path
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
name|nodeKind
argument_list|,
name|conflictAction
argument_list|,
name|conflictReason
argument_list|)
expr_stmt|;
name|myOperation
operator|=
name|operation
expr_stmt|;
name|mySourceLeftVersion
operator|=
name|sourceLeftVersion
expr_stmt|;
name|mySourceRightVersion
operator|=
name|sourceRightVersion
expr_stmt|;
block|}
comment|/**      * Returns<code>false</code>.      * @return<code>false</code>      * @since 1.3      */
specifier|public
name|boolean
name|isTextConflict
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
comment|/**      * Returns<code>false</code>.      * @return<code>false</code>      * @since 1.3      */
specifier|public
name|boolean
name|isPropertyConflict
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
comment|/**      * Returns<code>true</code>.      * @return<code>true</code>      * @since 1.3      */
specifier|public
name|boolean
name|isTreeConflict
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
comment|/**      * Returns the wc file.      * @return detranslated wc file      * @since  1.3      */
specifier|public
name|File
name|getPath
parameter_list|()
block|{
return|return
name|getMergeFiles
argument_list|()
operator|.
name|getLocalFile
argument_list|()
return|;
block|}
comment|/**      * Returns the user operation that exposed this tree conflict.       * @return user operation      * @since  1.3      */
specifier|public
name|SVNOperation
name|getOperation
parameter_list|()
block|{
return|return
name|myOperation
return|;
block|}
comment|/**      * Returns info on the "merge-left source" or "older" version of incoming change.      * @return left version info      * @since 1.3      */
specifier|public
name|SVNConflictVersion
name|getSourceLeftVersion
parameter_list|()
block|{
return|return
name|mySourceLeftVersion
return|;
block|}
comment|/**      * Returns info on the "merge-right source" or "their" version of incoming change.      * @return right version info      * @since 1.3      */
specifier|public
name|SVNConflictVersion
name|getSourceRightVersion
parameter_list|()
block|{
return|return
name|mySourceRightVersion
return|;
block|}
comment|/**      * Returns<code>null</code>.      * @return<code>null</code>      * @since  1.3      */
specifier|public
name|String
name|getPropertyName
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

