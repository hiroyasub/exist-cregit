begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2010 The eXist Project  *  http://exist-db.org  *    *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *    *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *    *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *    *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|versioning
operator|.
name|svn
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|EXistException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|BinaryDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|DocumentImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Permission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|PermissionDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|source
operator|.
name|DBSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|BrokerPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|lock
operator|.
name|Lock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|TransactionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|Txn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_comment
comment|/**  * eXist's resource. It extend java.io.File  *   * @author<a href="mailto:shabanovd@gmail.com">Dmitriy Shabanov</a>  *  */
end_comment

begin_class
specifier|public
class|class
name|Resource
extends|extends
name|File
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|3450182389919974961L
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|char
name|separatorChar
init|=
literal|'/'
decl_stmt|;
specifier|protected
name|XmldbURI
name|uri
decl_stmt|;
specifier|private
name|boolean
name|initialized
init|=
literal|false
decl_stmt|;
specifier|private
name|Collection
name|collection
init|=
literal|null
decl_stmt|;
specifier|private
name|DocumentImpl
name|resource
init|=
literal|null
decl_stmt|;
specifier|public
name|Resource
parameter_list|(
name|XmldbURI
name|uri
parameter_list|)
block|{
name|super
argument_list|(
name|uri
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|uri
operator|=
name|uri
expr_stmt|;
block|}
specifier|public
name|Resource
parameter_list|(
name|File
name|file
parameter_list|,
name|String
name|child
parameter_list|)
block|{
name|this
argument_list|(
operator|(
name|Resource
operator|)
name|file
argument_list|,
name|child
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Resource
parameter_list|(
name|Resource
name|resource
parameter_list|,
name|String
name|child
parameter_list|)
block|{
name|super
argument_list|(
name|resource
operator|.
name|uri
operator|.
name|append
argument_list|(
name|child
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|uri
operator|=
name|resource
operator|.
name|uri
operator|.
name|append
argument_list|(
name|child
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Resource
name|getParentFile
parameter_list|()
block|{
name|XmldbURI
name|parentPath
init|=
name|uri
operator|.
name|removeLastSegment
argument_list|()
decl_stmt|;
if|if
condition|(
name|parentPath
operator|==
name|XmldbURI
operator|.
name|EMPTY_URI
condition|)
return|return
literal|null
return|;
return|return
operator|new
name|Resource
argument_list|(
name|parentPath
argument_list|)
return|;
block|}
specifier|public
name|Resource
name|getAbsoluteFile
parameter_list|()
block|{
return|return
name|this
return|;
comment|//UNDERSTAND: is it correct?
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|uri
operator|.
name|lastSegment
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|mkdirs
parameter_list|()
block|{
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
name|BrokerPool
name|db
init|=
literal|null
decl_stmt|;
name|TransactionManager
name|tm
decl_stmt|;
try|try
block|{
name|db
operator|=
name|BrokerPool
operator|.
name|getInstance
argument_list|()
expr_stmt|;
name|broker
operator|=
name|db
operator|.
name|get
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EXistException
name|e
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
name|Collection
name|collection
init|=
name|broker
operator|.
name|getCollection
argument_list|(
name|uri
operator|.
name|toCollectionPathURI
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|collection
operator|!=
literal|null
condition|)
return|return
literal|true
return|;
name|tm
operator|=
name|db
operator|.
name|getTransactionManager
argument_list|()
expr_stmt|;
name|Txn
name|transaction
init|=
name|tm
operator|.
name|beginTransaction
argument_list|()
decl_stmt|;
try|try
block|{
name|Collection
name|child
init|=
name|broker
operator|.
name|getOrCreateCollection
argument_list|(
name|transaction
argument_list|,
name|uri
argument_list|)
decl_stmt|;
name|broker
operator|.
name|saveCollection
argument_list|(
name|transaction
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|tm
operator|.
name|commit
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|tm
operator|.
name|abort
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
finally|finally
block|{
name|db
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|isDirectory
parameter_list|()
block|{
try|try
block|{
name|init
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
return|return
operator|(
name|resource
operator|==
literal|null
operator|)
return|;
block|}
specifier|public
name|boolean
name|isFile
parameter_list|()
block|{
try|try
block|{
name|init
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
return|return
operator|(
name|resource
operator|!=
literal|null
operator|)
return|;
block|}
specifier|public
name|boolean
name|exists
parameter_list|()
block|{
try|try
block|{
name|init
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
return|return
operator|(
operator|(
name|collection
operator|!=
literal|null
operator|)
operator|||
operator|(
name|resource
operator|!=
literal|null
operator|)
operator|)
return|;
block|}
specifier|public
name|boolean
name|canRead
parameter_list|()
block|{
try|try
block|{
return|return
name|getPermission
argument_list|()
operator|.
name|validate
argument_list|(
name|getBrokerUser
argument_list|()
argument_list|,
name|Permission
operator|.
name|READ
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
block|}
specifier|public
name|boolean
name|renameTo
parameter_list|(
name|File
name|dest
parameter_list|)
block|{
comment|//XXX: code !!!
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|setReadOnly
parameter_list|()
block|{
comment|//XXX: code !!!
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|createNewFile
parameter_list|()
throws|throws
name|IOException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"*******************************************"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"               createNewFile               "
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"*******************************************"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
specifier|private
specifier|synchronized
name|void
name|init
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|initialized
condition|)
return|return;
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
name|BrokerPool
name|db
init|=
literal|null
decl_stmt|;
try|try
block|{
name|db
operator|=
name|BrokerPool
operator|.
name|getInstance
argument_list|()
expr_stmt|;
name|broker
operator|=
name|db
operator|.
name|get
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EXistException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
try|try
block|{
comment|//collection
if|if
condition|(
name|uri
operator|.
name|endsWith
argument_list|(
literal|"/"
argument_list|)
condition|)
block|{
name|collection
operator|=
name|broker
operator|.
name|getCollection
argument_list|(
name|uri
argument_list|)
expr_stmt|;
if|if
condition|(
name|collection
operator|==
literal|null
condition|)
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Resource not found: "
operator|+
name|uri
argument_list|)
throw|;
comment|//resource
block|}
else|else
block|{
name|resource
operator|=
name|broker
operator|.
name|getXMLResource
argument_list|(
name|uri
argument_list|,
name|Lock
operator|.
name|READ_LOCK
argument_list|)
expr_stmt|;
if|if
condition|(
name|resource
operator|==
literal|null
condition|)
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Resource not found: "
operator|+
name|uri
argument_list|)
throw|;
name|collection
operator|=
name|resource
operator|.
name|getCollection
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
finally|finally
block|{
name|db
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
name|initialized
operator|=
literal|true
expr_stmt|;
block|}
specifier|private
name|Permission
name|getPermission
parameter_list|()
throws|throws
name|IOException
block|{
name|init
argument_list|()
expr_stmt|;
if|if
condition|(
name|isFile
argument_list|()
condition|)
return|return
name|collection
operator|.
name|getPermissions
argument_list|()
return|;
if|if
condition|(
name|isDirectory
argument_list|()
condition|)
return|return
name|resource
operator|.
name|getPermissions
argument_list|()
return|;
throw|throw
operator|new
name|IOException
argument_list|(
literal|"this never should happen"
argument_list|)
throw|;
block|}
specifier|private
name|User
name|getBrokerUser
parameter_list|()
throws|throws
name|IOException
block|{
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
name|BrokerPool
name|db
init|=
literal|null
decl_stmt|;
try|try
block|{
name|db
operator|=
name|BrokerPool
operator|.
name|getInstance
argument_list|()
expr_stmt|;
name|broker
operator|=
name|db
operator|.
name|get
argument_list|(
literal|null
argument_list|)
expr_stmt|;
return|return
name|broker
operator|.
name|getUser
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|EXistException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
finally|finally
block|{
name|db
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|Reader
name|getReader
parameter_list|()
throws|throws
name|IOException
block|{
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
name|BrokerPool
name|db
init|=
literal|null
decl_stmt|;
try|try
block|{
name|db
operator|=
name|BrokerPool
operator|.
name|getInstance
argument_list|()
expr_stmt|;
name|broker
operator|=
name|db
operator|.
name|get
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EXistException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
try|try
block|{
comment|//UNDERSTAND: read as dba ???
name|BinaryDocument
name|resource
init|=
operator|(
name|BinaryDocument
operator|)
name|broker
operator|.
name|getXMLResource
argument_list|(
name|uri
argument_list|,
name|Lock
operator|.
name|READ_LOCK
argument_list|)
decl_stmt|;
if|if
condition|(
name|resource
operator|==
literal|null
condition|)
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Can't find resource."
argument_list|)
throw|;
name|DBSource
name|source
init|=
operator|new
name|DBSource
argument_list|(
name|broker
argument_list|,
name|resource
argument_list|,
literal|false
argument_list|)
decl_stmt|;
return|return
name|source
operator|.
name|getReader
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|PermissionDeniedException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
finally|finally
block|{
name|db
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|Writer
name|getWriter
parameter_list|()
throws|throws
name|IOException
block|{
return|return
operator|new
name|ResourceWriter
argument_list|(
name|this
argument_list|,
name|File
operator|.
name|createTempFile
argument_list|(
literal|"eXist"
argument_list|,
literal|"resource"
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|DocumentImpl
name|getDocument
parameter_list|()
block|{
return|return
name|resource
return|;
block|}
specifier|public
name|Collection
name|getCollection
parameter_list|()
block|{
if|if
condition|(
name|resource
operator|==
literal|null
condition|)
return|return
name|collection
return|;
else|else
return|return
name|resource
operator|.
name|getCollection
argument_list|()
return|;
block|}
block|}
end_class

end_unit

