begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * ====================================================================  * Copyright (c) 2004-2010 TMate Software Ltd.  All rights reserved.  *  * This software is licensed as described in the file COPYING, which  * you should have received as part of this distribution.  The terms  * are also available at http://svnkit.com/license.html  * If newer versions of this license are posted there, you may use a  * newer version instead, at your option.  * ====================================================================  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|versioning
operator|.
name|svn
operator|.
name|internal
operator|.
name|wc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|de
operator|.
name|regnis
operator|.
name|q
operator|.
name|sequence
operator|.
name|QSequenceDifferenceBlock
import|;
end_import

begin_comment
comment|/**  * @version 1.3  * @author  TMate Software Ltd.  */
end_comment

begin_class
specifier|final
class|class
name|FSMergerBySequenceList
block|{
comment|// Fields =================================================================
specifier|private
specifier|final
name|List
name|myBlocks
decl_stmt|;
specifier|private
name|int
name|myPosition
decl_stmt|;
comment|// Setup ==================================================================
specifier|public
name|FSMergerBySequenceList
parameter_list|(
name|List
name|blocks
parameter_list|)
block|{
name|this
operator|.
name|myBlocks
operator|=
name|blocks
expr_stmt|;
name|this
operator|.
name|myPosition
operator|=
literal|0
expr_stmt|;
block|}
comment|// Accessing ==============================================================
specifier|public
name|boolean
name|hasCurrent
parameter_list|()
block|{
return|return
name|myPosition
operator|<
name|myBlocks
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|QSequenceDifferenceBlock
name|current
parameter_list|()
block|{
return|return
operator|(
name|QSequenceDifferenceBlock
operator|)
name|myBlocks
operator|.
name|get
argument_list|(
name|myPosition
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
return|return
name|myPosition
operator|+
literal|1
operator|<
name|myBlocks
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|QSequenceDifferenceBlock
name|peekNext
parameter_list|()
block|{
return|return
name|myPosition
operator|+
literal|1
operator|<
name|myBlocks
operator|.
name|size
argument_list|()
condition|?
operator|(
name|QSequenceDifferenceBlock
operator|)
name|myBlocks
operator|.
name|get
argument_list|(
name|myPosition
operator|+
literal|1
argument_list|)
else|:
literal|null
return|;
block|}
specifier|public
name|void
name|forward
parameter_list|()
block|{
name|myPosition
operator|++
expr_stmt|;
block|}
block|}
end_class

end_unit

