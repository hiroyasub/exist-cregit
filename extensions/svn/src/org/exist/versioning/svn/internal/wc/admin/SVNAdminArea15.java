begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * ====================================================================  * Copyright (c) 2004-2010 TMate Software Ltd.  All rights reserved.  *  * This software is licensed as described in the file COPYING, which  * you should have received as part of this distribution.  The terms  * are also available at http://svnkit.com/license.html.  * If newer versions of this license are posted there, you may use a  * newer version instead, at your option.  * ====================================================================  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|versioning
operator|.
name|svn
operator|.
name|internal
operator|.
name|wc
operator|.
name|admin
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNDepth
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|internal
operator|.
name|util
operator|.
name|SVNHashSet
import|;
end_import

begin_comment
comment|/**  * @version 1.3  * @author  TMate Software Ltd.  */
end_comment

begin_class
specifier|public
class|class
name|SVNAdminArea15
extends|extends
name|SVNAdminArea14
block|{
specifier|public
specifier|static
specifier|final
name|int
name|WC_FORMAT
init|=
name|SVNAdminArea15Factory
operator|.
name|WC_FORMAT
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|ATTRIBUTE_KEEP_LOCAL
init|=
literal|"keep-local"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Set
name|INAPPLICABLE_PROPERTIES
init|=
operator|new
name|SVNHashSet
argument_list|()
decl_stmt|;
static|static
block|{
name|INAPPLICABLE_PROPERTIES
operator|.
name|add
argument_list|(
name|SVNProperty
operator|.
name|FILE_EXTERNAL_PATH
argument_list|)
expr_stmt|;
name|INAPPLICABLE_PROPERTIES
operator|.
name|add
argument_list|(
name|SVNProperty
operator|.
name|FILE_EXTERNAL_REVISION
argument_list|)
expr_stmt|;
name|INAPPLICABLE_PROPERTIES
operator|.
name|add
argument_list|(
name|SVNProperty
operator|.
name|FILE_EXTERNAL_PEG_REVISION
argument_list|)
expr_stmt|;
name|INAPPLICABLE_PROPERTIES
operator|.
name|add
argument_list|(
name|SVNProperty
operator|.
name|TREE_CONFLICT_DATA
argument_list|)
expr_stmt|;
block|}
specifier|public
name|SVNAdminArea15
parameter_list|(
name|File
name|dir
parameter_list|)
block|{
name|super
argument_list|(
name|dir
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getFormatVersion
parameter_list|()
block|{
return|return
name|WC_FORMAT
return|;
block|}
specifier|protected
name|boolean
name|readExtraOptions
parameter_list|(
name|BufferedReader
name|reader
parameter_list|,
name|Map
name|entryAttrs
parameter_list|)
throws|throws
name|SVNException
throws|,
name|IOException
block|{
name|String
name|line
init|=
name|reader
operator|.
name|readLine
argument_list|()
decl_stmt|;
if|if
condition|(
name|isEntryFinished
argument_list|(
name|line
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
name|String
name|changelist
init|=
name|parseString
argument_list|(
name|line
argument_list|)
decl_stmt|;
if|if
condition|(
name|changelist
operator|!=
literal|null
condition|)
block|{
name|entryAttrs
operator|.
name|put
argument_list|(
name|SVNProperty
operator|.
name|CHANGELIST
argument_list|,
name|changelist
argument_list|)
expr_stmt|;
block|}
name|line
operator|=
name|reader
operator|.
name|readLine
argument_list|()
expr_stmt|;
if|if
condition|(
name|isEntryFinished
argument_list|(
name|line
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
name|boolean
name|keepLocal
init|=
name|parseBoolean
argument_list|(
name|line
argument_list|,
name|ATTRIBUTE_KEEP_LOCAL
argument_list|)
decl_stmt|;
if|if
condition|(
name|keepLocal
condition|)
block|{
name|entryAttrs
operator|.
name|put
argument_list|(
name|SVNProperty
operator|.
name|KEEP_LOCAL
argument_list|,
name|SVNProperty
operator|.
name|toString
argument_list|(
name|keepLocal
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|line
operator|=
name|reader
operator|.
name|readLine
argument_list|()
expr_stmt|;
if|if
condition|(
name|isEntryFinished
argument_list|(
name|line
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
name|String
name|workingSize
init|=
name|parseString
argument_list|(
name|line
argument_list|)
decl_stmt|;
if|if
condition|(
name|workingSize
operator|!=
literal|null
condition|)
block|{
name|entryAttrs
operator|.
name|put
argument_list|(
name|SVNProperty
operator|.
name|WORKING_SIZE
argument_list|,
name|workingSize
argument_list|)
expr_stmt|;
block|}
name|line
operator|=
name|reader
operator|.
name|readLine
argument_list|()
expr_stmt|;
if|if
condition|(
name|isEntryFinished
argument_list|(
name|line
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
name|String
name|depthStr
init|=
name|parseValue
argument_list|(
name|line
argument_list|)
decl_stmt|;
if|if
condition|(
name|depthStr
operator|==
literal|null
condition|)
block|{
name|entryAttrs
operator|.
name|put
argument_list|(
name|SVNProperty
operator|.
name|DEPTH
argument_list|,
name|SVNDepth
operator|.
name|INFINITY
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|entryAttrs
operator|.
name|put
argument_list|(
name|SVNProperty
operator|.
name|DEPTH
argument_list|,
name|depthStr
argument_list|)
expr_stmt|;
block|}
return|return
literal|false
return|;
block|}
specifier|protected
name|int
name|writeExtraOptions
parameter_list|(
name|Writer
name|writer
parameter_list|,
name|String
name|entryName
parameter_list|,
name|Map
name|entryAttrs
parameter_list|,
name|int
name|emptyFields
parameter_list|)
throws|throws
name|SVNException
throws|,
name|IOException
block|{
name|emptyFields
operator|=
name|super
operator|.
name|writeExtraOptions
argument_list|(
name|writer
argument_list|,
name|entryName
argument_list|,
name|entryAttrs
argument_list|,
name|emptyFields
argument_list|)
expr_stmt|;
name|String
name|changelist
init|=
operator|(
name|String
operator|)
name|entryAttrs
operator|.
name|get
argument_list|(
name|SVNProperty
operator|.
name|CHANGELIST
argument_list|)
decl_stmt|;
if|if
condition|(
name|writeString
argument_list|(
name|writer
argument_list|,
name|changelist
argument_list|,
name|emptyFields
argument_list|)
condition|)
block|{
name|emptyFields
operator|=
literal|0
expr_stmt|;
block|}
else|else
block|{
operator|++
name|emptyFields
expr_stmt|;
block|}
name|String
name|keepLocalAttr
init|=
operator|(
name|String
operator|)
name|entryAttrs
operator|.
name|get
argument_list|(
name|SVNProperty
operator|.
name|KEEP_LOCAL
argument_list|)
decl_stmt|;
if|if
condition|(
name|SVNProperty
operator|.
name|booleanValue
argument_list|(
name|keepLocalAttr
argument_list|)
condition|)
block|{
name|writeValue
argument_list|(
name|writer
argument_list|,
name|ATTRIBUTE_KEEP_LOCAL
argument_list|,
name|emptyFields
argument_list|)
expr_stmt|;
name|emptyFields
operator|=
literal|0
expr_stmt|;
block|}
else|else
block|{
operator|++
name|emptyFields
expr_stmt|;
block|}
name|String
name|workingSize
init|=
operator|(
name|String
operator|)
name|entryAttrs
operator|.
name|get
argument_list|(
name|SVNProperty
operator|.
name|WORKING_SIZE
argument_list|)
decl_stmt|;
name|workingSize
operator|=
literal|"-1"
operator|.
name|equals
argument_list|(
name|workingSize
argument_list|)
condition|?
literal|null
else|:
name|workingSize
expr_stmt|;
if|if
condition|(
name|writeString
argument_list|(
name|writer
argument_list|,
name|workingSize
argument_list|,
name|emptyFields
argument_list|)
condition|)
block|{
name|emptyFields
operator|=
literal|0
expr_stmt|;
block|}
else|else
block|{
operator|++
name|emptyFields
expr_stmt|;
block|}
name|boolean
name|isThisDir
init|=
name|getThisDirName
argument_list|()
operator|.
name|equals
argument_list|(
name|entryName
argument_list|)
decl_stmt|;
name|boolean
name|isSubDir
init|=
operator|!
name|isThisDir
operator|&&
name|SVNProperty
operator|.
name|KIND_DIR
operator|.
name|equals
argument_list|(
name|entryAttrs
operator|.
name|get
argument_list|(
name|SVNProperty
operator|.
name|KIND
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|depthStr
init|=
operator|(
name|String
operator|)
name|entryAttrs
operator|.
name|get
argument_list|(
name|SVNProperty
operator|.
name|DEPTH
argument_list|)
decl_stmt|;
name|SVNDepth
name|depth
init|=
name|SVNDepth
operator|.
name|fromString
argument_list|(
name|depthStr
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|isSubDir
operator|&&
name|depth
operator|!=
name|SVNDepth
operator|.
name|EXCLUDE
operator|)
operator|||
name|depth
operator|==
name|SVNDepth
operator|.
name|INFINITY
condition|)
block|{
name|emptyFields
operator|++
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|writeValue
argument_list|(
name|writer
argument_list|,
name|depthStr
argument_list|,
name|emptyFields
argument_list|)
condition|)
block|{
name|emptyFields
operator|=
literal|0
expr_stmt|;
block|}
else|else
block|{
operator|++
name|emptyFields
expr_stmt|;
block|}
block|}
return|return
name|emptyFields
return|;
block|}
specifier|protected
name|SVNAdminArea
name|createAdminAreaForDir
parameter_list|(
name|File
name|dir
parameter_list|)
block|{
return|return
operator|new
name|SVNAdminArea15
argument_list|(
name|dir
argument_list|)
return|;
block|}
specifier|protected
name|boolean
name|isEntryPropertyApplicable
parameter_list|(
name|String
name|propName
parameter_list|)
block|{
return|return
name|propName
operator|!=
literal|null
operator|&&
operator|!
name|INAPPLICABLE_PROPERTIES
operator|.
name|contains
argument_list|(
name|propName
argument_list|)
return|;
block|}
block|}
end_class

end_unit

