begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * ====================================================================  * Copyright (c) 2004-2010 TMate Software Ltd.  All rights reserved.  *  * This software is licensed as described in the file COPYING, which  * you should have received as part of this distribution.  The terms  * are also available at http://svnkit.com/license.html.  * If newer versions of this license are posted there, you may use a  * newer version instead, at your option.  * ====================================================================  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|versioning
operator|.
name|svn
operator|.
name|internal
operator|.
name|wc
operator|.
name|admin
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|MessageDigest
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|NoSuchAlgorithmException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|internal
operator|.
name|wc
operator|.
name|SVNFileUtil
import|;
end_import

begin_comment
comment|/**  * @version 1.3  * @author  TMate Software Ltd.  */
end_comment

begin_class
specifier|public
class|class
name|SVNChecksumOutputStream
extends|extends
name|OutputStream
block|{
specifier|public
specifier|static
specifier|final
name|String
name|MD5_ALGORITHM
init|=
literal|"MD5"
decl_stmt|;
specifier|private
name|OutputStream
name|myTarget
decl_stmt|;
specifier|private
name|MessageDigest
name|myDigest
decl_stmt|;
specifier|private
name|byte
index|[]
name|myDigestResult
decl_stmt|;
specifier|private
name|boolean
name|myCloseTarget
decl_stmt|;
specifier|public
name|SVNChecksumOutputStream
parameter_list|(
name|OutputStream
name|target
parameter_list|,
name|String
name|algorithm
parameter_list|,
name|boolean
name|closeTarget
parameter_list|)
block|{
name|myTarget
operator|=
name|target
expr_stmt|;
name|myCloseTarget
operator|=
name|closeTarget
expr_stmt|;
name|algorithm
operator|=
name|algorithm
operator|==
literal|null
condition|?
name|MD5_ALGORITHM
else|:
name|algorithm
expr_stmt|;
try|try
block|{
name|myDigest
operator|=
name|MessageDigest
operator|.
name|getInstance
argument_list|(
name|algorithm
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchAlgorithmException
name|e
parameter_list|)
block|{
block|}
block|}
specifier|public
name|void
name|write
parameter_list|(
name|int
name|b
parameter_list|)
throws|throws
name|IOException
block|{
name|myDigest
operator|.
name|update
argument_list|(
operator|(
name|byte
operator|)
operator|(
name|b
operator|&
literal|0xFF
operator|)
argument_list|)
expr_stmt|;
name|myTarget
operator|.
name|write
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|byte
index|[]
name|b
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|b
operator|!=
literal|null
condition|)
block|{
name|myDigest
operator|.
name|update
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
name|myTarget
operator|.
name|write
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|byte
index|[]
name|b
parameter_list|,
name|int
name|off
parameter_list|,
name|int
name|len
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|b
operator|!=
literal|null
condition|)
block|{
name|myDigest
operator|.
name|update
argument_list|(
name|b
argument_list|,
name|off
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
name|myTarget
operator|.
name|write
argument_list|(
name|b
argument_list|,
name|off
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|myDigestResult
operator|==
literal|null
condition|)
block|{
name|myDigestResult
operator|=
name|myDigest
operator|.
name|digest
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|myCloseTarget
condition|)
block|{
name|myTarget
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|getDigest
parameter_list|()
block|{
if|if
condition|(
name|myDigestResult
operator|==
literal|null
condition|)
block|{
name|myDigestResult
operator|=
name|myDigest
operator|.
name|digest
argument_list|()
expr_stmt|;
block|}
return|return
name|SVNFileUtil
operator|.
name|toHexDigest
argument_list|(
name|myDigestResult
argument_list|)
return|;
block|}
block|}
end_class

end_unit

