begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * ====================================================================  * Copyright (c) 2004-2010 TMate Software Ltd.  All rights reserved.  *  * This software is licensed as described in the file COPYING, which  * you should have received as part of this distribution.  The terms  * are also available at http://svnkit.com/license.html  * If newer versions of this license are posted there, you may use a  * newer version instead, at your option.  * ====================================================================  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|versioning
operator|.
name|svn
operator|.
name|internal
operator|.
name|wc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNCommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNNodeKind
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNURL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNPropertyValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|internal
operator|.
name|util
operator|.
name|SVNPathUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|io
operator|.
name|ISVNEditor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|io
operator|.
name|SVNRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|io
operator|.
name|diff
operator|.
name|SVNDiffWindow
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|wc
operator|.
name|ISVNDiffStatusHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|wc
operator|.
name|SVNDiffStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|wc
operator|.
name|SVNStatusType
import|;
end_import

begin_comment
comment|/**  * @version 1.3  * @author  TMate Software Ltd.  */
end_comment

begin_class
specifier|public
class|class
name|SVNDiffStatusEditor
implements|implements
name|ISVNEditor
block|{
specifier|private
name|SVNSummarize
name|myCurrentDirSummarize
decl_stmt|;
specifier|private
name|SVNSummarize
name|myCurrentFileSummarize
decl_stmt|;
specifier|private
name|SVNRepository
name|myRepository
decl_stmt|;
specifier|private
name|ISVNDiffStatusHandler
name|myHandler
decl_stmt|;
specifier|private
name|long
name|myRevision
decl_stmt|;
specifier|private
name|SVNURL
name|myRootURL
decl_stmt|;
specifier|private
name|File
name|myAnchor
decl_stmt|;
specifier|private
name|String
name|myTarget
decl_stmt|;
specifier|public
name|SVNDiffStatusEditor
parameter_list|(
name|File
name|anchor
parameter_list|,
name|String
name|target
parameter_list|,
name|SVNRepository
name|repos
parameter_list|,
name|long
name|revision
parameter_list|,
name|ISVNDiffStatusHandler
name|handler
parameter_list|)
block|{
name|myRepository
operator|=
name|repos
expr_stmt|;
name|myHandler
operator|=
name|handler
expr_stmt|;
name|myRevision
operator|=
name|revision
expr_stmt|;
name|myRootURL
operator|=
name|repos
operator|.
name|getLocation
argument_list|()
expr_stmt|;
name|myAnchor
operator|=
name|anchor
expr_stmt|;
name|myTarget
operator|=
name|target
expr_stmt|;
block|}
specifier|public
name|void
name|openRoot
parameter_list|(
name|long
name|revision
parameter_list|)
throws|throws
name|SVNException
block|{
name|myCurrentDirSummarize
operator|=
operator|new
name|SVNSummarize
argument_list|(
literal|null
argument_list|,
literal|""
argument_list|,
name|SVNNodeKind
operator|.
name|DIR
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|targetRevision
parameter_list|(
name|long
name|revision
parameter_list|)
throws|throws
name|SVNException
block|{
block|}
specifier|public
name|void
name|deleteEntry
parameter_list|(
name|String
name|path
parameter_list|,
name|long
name|revision
parameter_list|)
throws|throws
name|SVNException
block|{
name|SVNNodeKind
name|kind
init|=
name|myRepository
operator|.
name|checkPath
argument_list|(
name|path
argument_list|,
name|myRevision
argument_list|)
decl_stmt|;
name|String
name|statusPath
init|=
name|getStatusPath
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|SVNDiffStatus
name|status
init|=
operator|new
name|SVNDiffStatus
argument_list|(
name|myAnchor
operator|!=
literal|null
condition|?
operator|new
name|File
argument_list|(
name|myAnchor
argument_list|,
name|path
argument_list|)
else|:
literal|null
argument_list|,
name|myRootURL
operator|.
name|appendPath
argument_list|(
name|path
argument_list|,
literal|false
argument_list|)
argument_list|,
name|statusPath
argument_list|,
name|SVNStatusType
operator|.
name|STATUS_DELETED
argument_list|,
literal|false
argument_list|,
name|kind
argument_list|)
decl_stmt|;
name|myHandler
operator|.
name|handleDiffStatus
argument_list|(
name|status
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|getStatusPath
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|String
name|statusPath
init|=
name|path
decl_stmt|;
if|if
condition|(
name|myTarget
operator|!=
literal|null
operator|&&
operator|(
name|path
operator|.
name|equals
argument_list|(
name|myTarget
argument_list|)
operator|||
name|path
operator|.
name|startsWith
argument_list|(
name|myTarget
operator|+
literal|"/"
argument_list|)
operator|)
condition|)
block|{
name|statusPath
operator|=
name|SVNPathUtil
operator|.
name|removeHead
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|statusPath
operator|.
name|startsWith
argument_list|(
literal|"/"
argument_list|)
condition|)
block|{
name|statusPath
operator|=
name|statusPath
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
return|return
name|statusPath
return|;
block|}
specifier|public
name|void
name|openDir
parameter_list|(
name|String
name|path
parameter_list|,
name|long
name|revision
parameter_list|)
throws|throws
name|SVNException
block|{
name|myCurrentDirSummarize
operator|=
operator|new
name|SVNSummarize
argument_list|(
name|myCurrentDirSummarize
argument_list|,
name|path
argument_list|,
name|SVNNodeKind
operator|.
name|DIR
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addDir
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|copyFromPath
parameter_list|,
name|long
name|copyFromRevision
parameter_list|)
throws|throws
name|SVNException
block|{
name|myCurrentDirSummarize
operator|=
operator|new
name|SVNSummarize
argument_list|(
name|myCurrentDirSummarize
argument_list|,
name|path
argument_list|,
name|SVNNodeKind
operator|.
name|DIR
argument_list|)
expr_stmt|;
name|myCurrentDirSummarize
operator|.
name|myType
operator|=
name|SVNStatusType
operator|.
name|STATUS_ADDED
expr_stmt|;
block|}
specifier|public
name|void
name|changeDirProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|SVNPropertyValue
name|value
parameter_list|)
throws|throws
name|SVNException
block|{
if|if
condition|(
name|SVNProperty
operator|.
name|isRegularProperty
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|myCurrentDirSummarize
operator|.
name|myPropChanged
operator|=
literal|true
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|closeDir
parameter_list|()
throws|throws
name|SVNException
block|{
name|myHandler
operator|.
name|handleDiffStatus
argument_list|(
name|myCurrentDirSummarize
operator|.
name|toStatus
argument_list|()
argument_list|)
expr_stmt|;
name|myCurrentDirSummarize
operator|=
name|myCurrentDirSummarize
operator|.
name|myParent
expr_stmt|;
block|}
specifier|public
name|void
name|openFile
parameter_list|(
name|String
name|path
parameter_list|,
name|long
name|revision
parameter_list|)
throws|throws
name|SVNException
block|{
name|myCurrentFileSummarize
operator|=
operator|new
name|SVNSummarize
argument_list|(
name|myCurrentDirSummarize
argument_list|,
name|path
argument_list|,
name|SVNNodeKind
operator|.
name|FILE
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addFile
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|copyFromPath
parameter_list|,
name|long
name|copyFromRevision
parameter_list|)
throws|throws
name|SVNException
block|{
name|myCurrentFileSummarize
operator|=
operator|new
name|SVNSummarize
argument_list|(
name|myCurrentDirSummarize
argument_list|,
name|path
argument_list|,
name|SVNNodeKind
operator|.
name|FILE
argument_list|)
expr_stmt|;
name|myCurrentFileSummarize
operator|.
name|myType
operator|=
name|SVNStatusType
operator|.
name|STATUS_ADDED
expr_stmt|;
block|}
specifier|public
name|void
name|changeFileProperty
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|name
parameter_list|,
name|SVNPropertyValue
name|value
parameter_list|)
throws|throws
name|SVNException
block|{
if|if
condition|(
name|SVNProperty
operator|.
name|isRegularProperty
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|myCurrentFileSummarize
operator|.
name|myPropChanged
operator|=
literal|true
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|applyTextDelta
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|baseChecksum
parameter_list|)
throws|throws
name|SVNException
block|{
if|if
condition|(
name|myCurrentFileSummarize
operator|.
name|myType
operator|!=
name|SVNStatusType
operator|.
name|STATUS_ADDED
condition|)
block|{
name|myCurrentFileSummarize
operator|.
name|myType
operator|=
name|SVNStatusType
operator|.
name|STATUS_MODIFIED
expr_stmt|;
block|}
block|}
specifier|public
name|OutputStream
name|textDeltaChunk
parameter_list|(
name|String
name|path
parameter_list|,
name|SVNDiffWindow
name|diffWindow
parameter_list|)
throws|throws
name|SVNException
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|textDeltaEnd
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|SVNException
block|{
block|}
specifier|public
name|void
name|closeFile
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|textChecksum
parameter_list|)
throws|throws
name|SVNException
block|{
name|myHandler
operator|.
name|handleDiffStatus
argument_list|(
name|myCurrentFileSummarize
operator|.
name|toStatus
argument_list|()
argument_list|)
expr_stmt|;
name|myCurrentFileSummarize
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|SVNCommitInfo
name|closeEdit
parameter_list|()
throws|throws
name|SVNException
block|{
if|if
condition|(
name|myCurrentDirSummarize
operator|!=
literal|null
condition|)
block|{
name|myHandler
operator|.
name|handleDiffStatus
argument_list|(
name|myCurrentDirSummarize
operator|.
name|toStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|abortEdit
parameter_list|()
throws|throws
name|SVNException
block|{
block|}
specifier|public
name|void
name|absentDir
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|SVNException
block|{
block|}
specifier|public
name|void
name|absentFile
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|SVNException
block|{
block|}
specifier|private
class|class
name|SVNSummarize
block|{
specifier|public
name|SVNSummarize
parameter_list|(
name|SVNSummarize
name|parent
parameter_list|,
name|String
name|path
parameter_list|,
name|SVNNodeKind
name|kind
parameter_list|)
block|{
name|myKind
operator|=
name|kind
expr_stmt|;
name|myType
operator|=
name|SVNStatusType
operator|.
name|STATUS_NONE
expr_stmt|;
name|myParent
operator|=
name|parent
expr_stmt|;
name|myFile
operator|=
name|myAnchor
operator|!=
literal|null
condition|?
operator|new
name|File
argument_list|(
name|myAnchor
argument_list|,
name|path
argument_list|)
else|:
literal|null
expr_stmt|;
name|myPath
operator|=
name|getStatusPath
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
specifier|public
name|SVNDiffStatus
name|toStatus
parameter_list|()
throws|throws
name|SVNException
block|{
return|return
operator|new
name|SVNDiffStatus
argument_list|(
name|myFile
argument_list|,
name|myRootURL
operator|.
name|appendPath
argument_list|(
name|myPath
argument_list|,
literal|false
argument_list|)
argument_list|,
name|myPath
argument_list|,
name|myType
argument_list|,
name|myPropChanged
argument_list|,
name|myKind
argument_list|)
return|;
block|}
specifier|private
name|File
name|myFile
decl_stmt|;
specifier|private
name|String
name|myPath
decl_stmt|;
specifier|private
name|SVNNodeKind
name|myKind
decl_stmt|;
specifier|private
name|SVNStatusType
name|myType
decl_stmt|;
specifier|private
name|boolean
name|myPropChanged
decl_stmt|;
specifier|private
name|SVNSummarize
name|myParent
decl_stmt|;
block|}
block|}
end_class

end_unit

