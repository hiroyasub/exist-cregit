begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * ====================================================================  * Copyright (c) 2004-2010 TMate Software Ltd.  All rights reserved.  *  * This software is licensed as described in the file COPYING, which  * you should have received as part of this distribution.  The terms  * are also available at http://svnkit.com/license.html  * If newer versions of this license are posted there, you may use a  * newer version instead, at your option.  * ====================================================================  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|versioning
operator|.
name|svn
operator|.
name|internal
operator|.
name|wc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FilterOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|ISVNCanceller
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNCancelException
import|;
end_import

begin_comment
comment|/**  * @version 1.3  * @author  TMate Software Ltd.  */
end_comment

begin_class
specifier|public
class|class
name|SVNCancellableOutputStream
extends|extends
name|FilterOutputStream
block|{
specifier|private
name|ISVNCanceller
name|myEventHandler
decl_stmt|;
specifier|public
name|SVNCancellableOutputStream
parameter_list|(
name|OutputStream
name|out
parameter_list|,
name|ISVNCanceller
name|eventHandler
parameter_list|)
block|{
name|super
argument_list|(
name|out
operator|==
literal|null
condition|?
name|SVNFileUtil
operator|.
name|DUMMY_OUT
else|:
name|out
argument_list|)
expr_stmt|;
name|myEventHandler
operator|=
name|eventHandler
expr_stmt|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|byte
index|[]
name|b
parameter_list|,
name|int
name|off
parameter_list|,
name|int
name|len
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|myEventHandler
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|myEventHandler
operator|.
name|checkCancelled
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|SVNCancelException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOCancelException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
throw|;
block|}
block|}
name|out
operator|.
name|write
argument_list|(
name|b
argument_list|,
name|off
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|byte
index|[]
name|b
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|myEventHandler
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|myEventHandler
operator|.
name|checkCancelled
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|SVNCancelException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOCancelException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
throw|;
block|}
block|}
name|out
operator|.
name|write
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
comment|/**      * @version 1.3      * @author  TMate Software Ltd.      */
specifier|public
specifier|static
class|class
name|IOCancelException
extends|extends
name|IOException
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|4845L
decl_stmt|;
specifier|public
name|IOCancelException
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|super
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

