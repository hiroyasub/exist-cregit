begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2009 The eXist Project  *  http://exist-db.org  *    *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *    *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *    *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *    *  $Id:$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|versioning
operator|.
name|svn
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|EXistException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|DocumentImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|PermissionDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|SecurityManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|BrokerPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|TransactionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|TransactionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|Txn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNCommitInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNErrorCode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNErrorMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|SVNPropertyValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|io
operator|.
name|ISVNEditor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|io
operator|.
name|diff
operator|.
name|SVNDeltaProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|tmatesoft
operator|.
name|svn
operator|.
name|core
operator|.
name|io
operator|.
name|diff
operator|.
name|SVNDiffWindow
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:shabanovd@gmail.com">Dmitriy Shabanov</a>  *  */
end_comment

begin_class
specifier|public
class|class
name|ExportEditor
implements|implements
name|ISVNEditor
block|{
specifier|private
name|XmldbURI
name|rootPath
decl_stmt|;
specifier|private
name|Collection
name|myRootDirectory
decl_stmt|;
specifier|private
name|SVNDeltaProcessor
name|myDeltaProcessor
decl_stmt|;
name|BrokerPool
name|pool
init|=
literal|null
decl_stmt|;
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
name|TransactionManager
name|transact
init|=
literal|null
decl_stmt|;
specifier|public
name|ExportEditor
parameter_list|(
name|XmldbURI
name|path
parameter_list|)
throws|throws
name|EXistException
block|{
name|rootPath
operator|=
name|path
expr_stmt|;
name|myDeltaProcessor
operator|=
operator|new
name|SVNDeltaProcessor
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|targetRevision
parameter_list|(
name|long
name|revision
parameter_list|)
throws|throws
name|SVNException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"targetRevision"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|openRoot
parameter_list|(
name|long
name|revision
parameter_list|)
throws|throws
name|SVNException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"openRoot"
argument_list|)
expr_stmt|;
try|try
block|{
name|pool
operator|=
name|BrokerPool
operator|.
name|getInstance
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|pool
argument_list|)
expr_stmt|;
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
name|SecurityManager
operator|.
name|SYSTEM_USER
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|transact
operator|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|transact
argument_list|)
expr_stmt|;
name|myRootDirectory
operator|=
name|broker
operator|.
name|getCollection
argument_list|(
name|rootPath
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EXistException
name|e
parameter_list|)
block|{
name|SVNErrorMessage
name|err
init|=
name|SVNErrorMessage
operator|.
name|create
argument_list|(
name|SVNErrorCode
operator|.
name|IO_ERROR
argument_list|,
literal|"error: failed to initialize database."
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|SVNException
argument_list|(
name|err
argument_list|)
throw|;
block|}
block|}
specifier|public
name|void
name|addDir
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|copyFromPath
parameter_list|,
name|long
name|copyFromRevision
parameter_list|)
throws|throws
name|SVNException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"addDir"
argument_list|)
expr_stmt|;
name|Txn
name|transaction
init|=
name|transact
operator|.
name|beginTransaction
argument_list|()
decl_stmt|;
name|Collection
name|child
decl_stmt|;
try|try
block|{
name|child
operator|=
name|broker
operator|.
name|getOrCreateCollection
argument_list|(
name|transaction
argument_list|,
name|myRootDirectory
operator|.
name|getURI
argument_list|()
operator|.
name|append
argument_list|(
name|path
argument_list|)
argument_list|)
expr_stmt|;
name|broker
operator|.
name|saveCollection
argument_list|(
name|transaction
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|transact
operator|.
name|commit
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PermissionDeniedException
name|e
parameter_list|)
block|{
name|SVNErrorMessage
name|err
init|=
name|SVNErrorMessage
operator|.
name|create
argument_list|(
name|SVNErrorCode
operator|.
name|IO_ERROR
argument_list|,
literal|"error: failed on permission."
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|SVNException
argument_list|(
name|err
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|SVNErrorMessage
name|err
init|=
name|SVNErrorMessage
operator|.
name|create
argument_list|(
name|SVNErrorCode
operator|.
name|IO_ERROR
argument_list|,
literal|"error: failed on IO."
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|SVNException
argument_list|(
name|err
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|TransactionException
name|e
parameter_list|)
block|{
name|SVNErrorMessage
name|err
init|=
name|SVNErrorMessage
operator|.
name|create
argument_list|(
name|SVNErrorCode
operator|.
name|IO_ERROR
argument_list|,
literal|"error: failed on transaction."
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|SVNException
argument_list|(
name|err
argument_list|)
throw|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"collection added: "
operator|+
name|path
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|openDir
parameter_list|(
name|String
name|path
parameter_list|,
name|long
name|revision
parameter_list|)
throws|throws
name|SVNException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"openDir"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|changeDirProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|SVNPropertyValue
name|property
parameter_list|)
throws|throws
name|SVNException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"changeDirProperty name = "
operator|+
name|name
operator|+
literal|" :: property = "
operator|+
name|property
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addFile
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|copyFromPath
parameter_list|,
name|long
name|copyFromRevision
parameter_list|)
throws|throws
name|SVNException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"addFile path = "
operator|+
name|path
operator|+
literal|" :: copyFromPath = "
operator|+
name|copyFromPath
operator|+
literal|" :: copyFromRevision = "
operator|+
name|copyFromRevision
argument_list|)
expr_stmt|;
name|Txn
name|transaction
init|=
name|transact
operator|.
name|beginTransaction
argument_list|()
decl_stmt|;
comment|//		myRootDirectory.addDocument(transaction, broker, doc);
comment|//		myRootDirectory.store(transaction, broker, info, is, false);
try|try
block|{
name|transact
operator|.
name|commit
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TransactionException
name|e
parameter_list|)
block|{
name|SVNErrorMessage
name|err
init|=
name|SVNErrorMessage
operator|.
name|create
argument_list|(
name|SVNErrorCode
operator|.
name|IO_ERROR
argument_list|,
literal|"error: exported file ''{0}'' already exists!"
argument_list|,
name|path
argument_list|)
decl_stmt|;
throw|throw
operator|new
name|SVNException
argument_list|(
name|err
argument_list|)
throw|;
block|}
block|}
specifier|public
name|void
name|openFile
parameter_list|(
name|String
name|path
parameter_list|,
name|long
name|revision
parameter_list|)
throws|throws
name|SVNException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"openFile"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|changeFileProperty
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|name
parameter_list|,
name|SVNPropertyValue
name|property
parameter_list|)
throws|throws
name|SVNException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"changeFileProperty path = "
operator|+
name|path
operator|+
literal|" :: name = "
operator|+
name|name
operator|+
literal|" :: property = "
operator|+
name|property
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|applyTextDelta
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|baseChecksum
parameter_list|)
throws|throws
name|SVNException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"applyTextDelta path = "
operator|+
name|path
argument_list|)
expr_stmt|;
name|DocumentImpl
name|doc
init|=
name|myRootDirectory
operator|.
name|getDocument
argument_list|(
name|broker
argument_list|,
name|XmldbURI
operator|.
name|create
argument_list|(
name|path
argument_list|)
argument_list|)
decl_stmt|;
comment|//        myDeltaProcessor.applyTextDelta(SVNFileUtil.DUMMY_IN, doc, false);
block|}
specifier|public
name|OutputStream
name|textDeltaChunk
parameter_list|(
name|String
name|path
parameter_list|,
name|SVNDiffWindow
name|diffWindow
parameter_list|)
throws|throws
name|SVNException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"textDeltaChunk path = "
operator|+
name|path
operator|+
literal|" :: diffWindow = "
operator|+
name|diffWindow
argument_list|)
expr_stmt|;
return|return
name|myDeltaProcessor
operator|.
name|textDeltaChunk
argument_list|(
name|diffWindow
argument_list|)
return|;
block|}
specifier|public
name|void
name|textDeltaEnd
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|SVNException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"textDeltaEnd"
argument_list|)
expr_stmt|;
name|myDeltaProcessor
operator|.
name|textDeltaEnd
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|closeFile
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|textChecksum
parameter_list|)
throws|throws
name|SVNException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"closeFile"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"file added: "
operator|+
name|path
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|closeDir
parameter_list|()
throws|throws
name|SVNException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"closeDir"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|deleteEntry
parameter_list|(
name|String
name|path
parameter_list|,
name|long
name|revision
parameter_list|)
throws|throws
name|SVNException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"deleteEntry"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|absentDir
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|SVNException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"absentDir"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|absentFile
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|SVNException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"absentFile"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|SVNCommitInfo
name|closeEdit
parameter_list|()
throws|throws
name|SVNException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"closeEdit"
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|abortEdit
parameter_list|()
throws|throws
name|SVNException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"abortEdit"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

