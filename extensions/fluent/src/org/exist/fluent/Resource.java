begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|fluent
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|value
operator|.
name|Sequence
import|;
end_import

begin_comment
comment|/**  * A database object that can be further queried.  *   * @author<a href="mailto:piotr@ideanest.com">Piotr Kaminski</a>  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|Resource
block|{
specifier|protected
specifier|final
name|Database
name|db
decl_stmt|;
specifier|protected
specifier|final
name|NamespaceMap
name|namespaceBindings
decl_stmt|;
specifier|private
name|QueryService
name|query
decl_stmt|;
specifier|protected
name|Resource
parameter_list|(
name|NamespaceMap
name|namespaceBindings
parameter_list|,
name|Database
name|db
parameter_list|)
block|{
name|this
operator|.
name|db
operator|=
name|db
expr_stmt|;
name|this
operator|.
name|namespaceBindings
operator|=
name|namespaceBindings
expr_stmt|;
block|}
comment|/** 	 * Return a query service for running queries in the context of this resource. 	 * The query service will inherit this object's namespace bindings. 	 * 	 * @return a query service with this object as context 	 */
specifier|public
name|QueryService
name|query
parameter_list|()
block|{
if|if
condition|(
name|query
operator|==
literal|null
condition|)
block|{
name|query
operator|=
name|createQueryService
argument_list|()
expr_stmt|;
if|if
condition|(
name|query
operator|==
literal|null
condition|)
block|{
name|Sequence
name|seq
init|=
name|convertToSequence
argument_list|()
decl_stmt|;
name|query
operator|=
operator|new
name|QueryService
argument_list|(
name|this
argument_list|,
name|seq
operator|.
name|getDocumentSet
argument_list|()
argument_list|,
name|seq
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|query
return|;
block|}
comment|/** 	 * Return the namespace bindings for this resource.  These mappings are applied to 	 * all queries and other objects derived from this one, directly or indirectly.  The 	 * default namespace mapping uses an empty string key.  	 * 	 * @return the namespace mappings for this collection 	 */
specifier|public
specifier|final
name|NamespaceMap
name|namespaceBindings
parameter_list|()
block|{
return|return
name|namespaceBindings
return|;
block|}
comment|/** 	 * Return the database to which this resource belongs.  The returned database will inherit 	 * its namespace bindings from this resource. 	 * 	 * @return the database that contains this object 	 */
specifier|public
specifier|final
name|Database
name|database
parameter_list|()
block|{
return|return
operator|new
name|Database
argument_list|(
name|db
argument_list|,
name|namespaceBindings
argument_list|)
return|;
block|}
comment|/** 	 * Create a query service facet for this resource.  Override this method to create a custom 	 * query service.  If this method returns<code>null</code>, a default query service will 	 * be created based on this object's {@link #convertToSequence()} result. 	 * 	 * @return a new query service or<code>null</code> 	 */
name|QueryService
name|createQueryService
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
comment|/** 	 * Return a representation of this resource that will work with eXist's query engine. 	 * 	 * @return an eXist-compatible representation of this object 	 * @throws UnsupportedOperationException if conversion is not supported 	 */
specifier|abstract
name|Sequence
name|convertToSequence
parameter_list|()
function_decl|;
block|}
end_class

end_unit

