begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|fluent
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jmock
operator|.
name|Expectations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jmock
operator|.
name|Mockery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jmock
operator|.
name|api
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jmock
operator|.
name|api
operator|.
name|Invocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jmock
operator|.
name|integration
operator|.
name|junit4
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|JMock
operator|.
name|class
argument_list|)
specifier|public
class|class
name|ListenerManagerTest
extends|extends
name|DatabaseTestCase
block|{
specifier|private
name|Mockery
name|context
init|=
operator|new
name|JUnit4Mockery
argument_list|()
decl_stmt|;
specifier|private
name|Document
operator|.
name|Listener
name|documentListener
decl_stmt|;
specifier|private
name|Folder
operator|.
name|Listener
name|folderListener
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|prepareMocks
parameter_list|()
block|{
name|documentListener
operator|=
name|context
operator|.
name|mock
argument_list|(
name|Document
operator|.
name|Listener
operator|.
name|class
argument_list|,
literal|"documentListener"
argument_list|)
expr_stmt|;
name|folderListener
operator|=
name|context
operator|.
name|mock
argument_list|(
name|Folder
operator|.
name|Listener
operator|.
name|class
argument_list|,
literal|"folderListener"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|unregisterMocks
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|documentListener
operator|!=
literal|null
condition|)
name|ListenerManager
operator|.
name|INSTANCE
operator|.
name|remove
argument_list|(
name|documentListener
argument_list|)
expr_stmt|;
if|if
condition|(
name|folderListener
operator|!=
literal|null
condition|)
name|ListenerManager
operator|.
name|INSTANCE
operator|.
name|remove
argument_list|(
name|folderListener
argument_list|)
expr_stmt|;
name|documentListener
operator|=
literal|null
expr_stmt|;
name|folderListener
operator|=
literal|null
expr_stmt|;
block|}
specifier|private
name|Matcher
argument_list|<
name|Document
operator|.
name|Event
argument_list|>
name|eqDelayedDoc
parameter_list|(
specifier|final
name|Document
operator|.
name|Event
name|ev
parameter_list|)
block|{
return|return
operator|new
name|BaseMatcher
argument_list|<
name|Document
operator|.
name|Event
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|describeTo
parameter_list|(
name|Description
name|desc
parameter_list|)
block|{
name|desc
operator|.
name|appendText
argument_list|(
literal|"eqDelayedDoc("
argument_list|)
operator|.
name|appendValue
argument_list|(
name|ev
argument_list|)
operator|.
name|appendText
argument_list|(
literal|")"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|matches
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|ev
operator|.
name|trigger
argument_list|,
name|ev
operator|.
name|path
argument_list|,
name|db
operator|.
name|getDocument
argument_list|(
name|ev
operator|.
name|path
argument_list|)
argument_list|)
operator|.
name|equals
argument_list|(
name|o
argument_list|)
return|;
block|}
block|}
return|;
block|}
specifier|private
name|Action
name|checkDocumentExists
parameter_list|(
specifier|final
name|String
name|path
parameter_list|,
specifier|final
name|boolean
name|shouldExist
parameter_list|)
block|{
return|return
operator|new
name|Action
argument_list|()
block|{
specifier|public
name|void
name|describeTo
parameter_list|(
name|Description
name|desc
parameter_list|)
block|{
name|desc
operator|.
name|appendText
argument_list|(
literal|"check that document '"
operator|+
name|path
operator|+
literal|"' "
operator|+
operator|(
name|shouldExist
condition|?
literal|"exists"
else|:
literal|"does not exist"
operator|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Object
name|invoke
parameter_list|(
name|Invocation
name|inv
parameter_list|)
throws|throws
name|Throwable
block|{
try|try
block|{
name|db
operator|.
name|getDocument
argument_list|(
name|path
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|shouldExist
condition|)
name|fail
argument_list|(
literal|"document '"
operator|+
name|path
operator|+
literal|"' exists but shouldn't"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|DatabaseException
name|e
parameter_list|)
block|{
if|if
condition|(
name|shouldExist
condition|)
name|fail
argument_list|(
literal|"document '"
operator|+
name|path
operator|+
literal|"' doesn't exist but should"
argument_list|)
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
block|}
return|;
block|}
specifier|private
name|Action
name|checkFolderExists
parameter_list|(
specifier|final
name|String
name|path
parameter_list|,
specifier|final
name|boolean
name|shouldExist
parameter_list|)
block|{
return|return
operator|new
name|Action
argument_list|()
block|{
specifier|public
name|void
name|describeTo
parameter_list|(
name|Description
name|desc
parameter_list|)
block|{
name|desc
operator|.
name|appendText
argument_list|(
literal|"check that folder '"
operator|+
name|path
operator|+
literal|"' "
operator|+
operator|(
name|shouldExist
condition|?
literal|"exists"
else|:
literal|"does not exist"
operator|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Object
name|invoke
parameter_list|(
name|Invocation
name|inv
parameter_list|)
throws|throws
name|Throwable
block|{
try|try
block|{
name|db
operator|.
name|getFolder
argument_list|(
name|path
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|shouldExist
condition|)
name|fail
argument_list|(
literal|"folder '"
operator|+
name|path
operator|+
literal|"' exists but shouldn't"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|DatabaseException
name|e
parameter_list|)
block|{
if|if
condition|(
name|shouldExist
condition|)
name|fail
argument_list|(
literal|"folder '"
operator|+
name|path
operator|+
literal|"' doesn't exist but should"
argument_list|)
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
block|}
return|;
block|}
specifier|private
name|Action
name|checkDocumentStamp
parameter_list|(
specifier|final
name|String
name|expectedStamp
parameter_list|)
block|{
return|return
operator|new
name|Action
argument_list|()
block|{
specifier|public
name|void
name|describeTo
parameter_list|(
name|Description
name|desc
parameter_list|)
block|{
name|desc
operator|.
name|appendText
argument_list|(
literal|"check that event document is stamped with '"
operator|+
name|expectedStamp
operator|+
literal|"'"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Object
name|invoke
parameter_list|(
name|Invocation
name|inv
parameter_list|)
throws|throws
name|Throwable
block|{
name|XMLDocument
name|doc
init|=
operator|(
operator|(
name|Document
operator|.
name|Event
operator|)
name|inv
operator|.
name|getParameter
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|document
operator|.
name|xml
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"event document is null"
argument_list|,
name|doc
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedStamp
argument_list|,
name|doc
operator|.
name|query
argument_list|()
operator|.
name|single
argument_list|(
literal|"/test/@stamp"
argument_list|)
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
return|;
block|}
specifier|private
name|XMLDocument
name|createDocument
parameter_list|(
name|String
name|path
parameter_list|)
block|{
return|return
name|createDocument
argument_list|(
name|path
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|private
name|XMLDocument
name|createDocument
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|stamp
parameter_list|)
block|{
name|int
name|k
init|=
name|path
operator|.
name|lastIndexOf
argument_list|(
literal|'/'
argument_list|)
decl_stmt|;
assert|assert
name|k
operator|>
literal|0
assert|;
name|Folder
name|folder
init|=
name|db
operator|.
name|createFolder
argument_list|(
name|path
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|k
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|folder
operator|.
name|documents
argument_list|()
operator|.
name|build
argument_list|(
name|Name
operator|.
name|overwrite
argument_list|(
name|path
operator|.
name|substring
argument_list|(
name|k
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
operator|.
name|elem
argument_list|(
literal|"test"
argument_list|)
operator|.
name|attrIf
argument_list|(
name|stamp
operator|!=
literal|null
argument_list|,
literal|"stamp"
argument_list|,
name|stamp
argument_list|)
operator|.
name|end
argument_list|(
literal|"test"
argument_list|)
operator|.
name|commit
argument_list|()
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenDocumentsBeforeCreateDocument1
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test.xml"
decl_stmt|;
specifier|final
name|Document
operator|.
name|Event
name|ev
init|=
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|BEFORE_CREATE
argument_list|,
name|docPath
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|ev
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkDocumentExists
argument_list|(
name|docPath
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|top
operator|.
name|documents
argument_list|()
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|BEFORE_CREATE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
name|docPath
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
literal|"/elsewhere/test.xml"
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
literal|"/top/deeper/test.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenDocumentsBeforeCreateDocument2
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test.xml"
decl_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|never
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|with
argument_list|(
name|any
argument_list|(
name|Document
operator|.
name|Event
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|top
operator|.
name|documents
argument_list|()
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|BEFORE_CREATE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|top
operator|.
name|documents
argument_list|()
operator|.
name|listeners
argument_list|()
operator|.
name|remove
argument_list|(
name|documentListener
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
name|docPath
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenDocumentsAfterCreateDocument1
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test.xml"
decl_stmt|;
name|XMLDocument
name|doc
init|=
name|createDocument
argument_list|(
name|docPath
argument_list|)
decl_stmt|;
specifier|final
name|Document
operator|.
name|Event
name|ev
init|=
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|AFTER_CREATE
argument_list|,
name|docPath
argument_list|,
name|doc
argument_list|)
decl_stmt|;
name|doc
operator|.
name|delete
argument_list|()
expr_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|with
argument_list|(
name|eqDelayedDoc
argument_list|(
name|ev
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkDocumentExists
argument_list|(
name|docPath
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|top
operator|.
name|documents
argument_list|()
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|AFTER_CREATE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
name|docPath
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
literal|"/elsewhere/test.xml"
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
literal|"/top/deeper/test.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenDocumentsAfterCreateDocument2
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test.xml"
decl_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|never
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|with
argument_list|(
name|any
argument_list|(
name|Document
operator|.
name|Event
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|top
operator|.
name|documents
argument_list|()
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|AFTER_CREATE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|top
operator|.
name|documents
argument_list|()
operator|.
name|listeners
argument_list|()
operator|.
name|remove
argument_list|(
name|documentListener
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
name|docPath
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenFolderBeforeCreateDocument1
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test2.xml"
decl_stmt|;
specifier|final
name|Document
operator|.
name|Event
name|ev
init|=
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|BEFORE_CREATE
argument_list|,
name|docPath
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|ev
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkDocumentExists
argument_list|(
name|docPath
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|top
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|BEFORE_CREATE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
name|docPath
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
literal|"/elsewhere/test.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenFolderBeforeCreateDocument2
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test2.xml"
decl_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|never
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|with
argument_list|(
name|any
argument_list|(
name|Document
operator|.
name|Event
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|top
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|BEFORE_CREATE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|top
operator|.
name|listeners
argument_list|()
operator|.
name|remove
argument_list|(
name|documentListener
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
name|docPath
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenFolderAfterCreateDocument1
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test2.xml"
decl_stmt|;
name|XMLDocument
name|doc
init|=
name|createDocument
argument_list|(
name|docPath
argument_list|)
decl_stmt|;
specifier|final
name|Document
operator|.
name|Event
name|ev
init|=
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|AFTER_CREATE
argument_list|,
name|docPath
argument_list|,
name|doc
argument_list|)
decl_stmt|;
name|doc
operator|.
name|delete
argument_list|()
expr_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|with
argument_list|(
name|eqDelayedDoc
argument_list|(
name|ev
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkDocumentExists
argument_list|(
name|docPath
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|top
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|AFTER_CREATE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
name|docPath
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
literal|"/elsewhere/test.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenFolderAfterCreateDocument2
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test2.xml"
decl_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|never
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|with
argument_list|(
name|any
argument_list|(
name|Document
operator|.
name|Event
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|top
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|AFTER_CREATE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|top
operator|.
name|listeners
argument_list|()
operator|.
name|remove
argument_list|(
name|documentListener
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
name|docPath
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenDocumentsBeforeUpdateDocument1
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test.xml"
decl_stmt|;
name|XMLDocument
name|doc
init|=
name|createDocument
argument_list|(
name|docPath
argument_list|,
literal|"before"
argument_list|)
decl_stmt|;
specifier|final
name|Document
operator|.
name|Event
name|ev
init|=
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|BEFORE_UPDATE
argument_list|,
name|docPath
argument_list|,
name|doc
argument_list|)
decl_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|ev
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkDocumentStamp
argument_list|(
literal|"before"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|top
operator|.
name|documents
argument_list|()
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|BEFORE_UPDATE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
name|docPath
argument_list|,
literal|"after"
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
literal|"/elsewhere/test.xml"
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
literal|"/top/deeper/test.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenDocumentsAfterUpdateDocument1
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test.xml"
decl_stmt|;
name|XMLDocument
name|doc
init|=
name|createDocument
argument_list|(
name|docPath
argument_list|,
literal|"before"
argument_list|)
decl_stmt|;
specifier|final
name|Document
operator|.
name|Event
name|ev
init|=
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|AFTER_UPDATE
argument_list|,
name|docPath
argument_list|,
name|doc
argument_list|)
decl_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|ev
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkDocumentStamp
argument_list|(
literal|"after"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|top
operator|.
name|documents
argument_list|()
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|AFTER_UPDATE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
name|docPath
argument_list|,
literal|"after"
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
literal|"/elsewhere/test.xml"
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
literal|"/top/deeper/test.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenFolderBeforeUpdateDocument1
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test.xml"
decl_stmt|;
name|XMLDocument
name|doc
init|=
name|createDocument
argument_list|(
name|docPath
argument_list|,
literal|"before"
argument_list|)
decl_stmt|;
specifier|final
name|Document
operator|.
name|Event
name|ev
init|=
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|BEFORE_UPDATE
argument_list|,
name|docPath
argument_list|,
name|doc
argument_list|)
decl_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|ev
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkDocumentStamp
argument_list|(
literal|"before"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|top
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|BEFORE_UPDATE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
name|docPath
argument_list|,
literal|"after"
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
literal|"/elsewhere/test.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenFolderAfterUpdateDocument1
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test.xml"
decl_stmt|;
name|XMLDocument
name|doc
init|=
name|createDocument
argument_list|(
name|docPath
argument_list|,
literal|"before"
argument_list|)
decl_stmt|;
specifier|final
name|Document
operator|.
name|Event
name|ev
init|=
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|AFTER_UPDATE
argument_list|,
name|docPath
argument_list|,
name|doc
argument_list|)
decl_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|ev
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkDocumentStamp
argument_list|(
literal|"after"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|top
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|AFTER_UPDATE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
name|docPath
argument_list|,
literal|"after"
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
literal|"/elsewhere/test.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenFolderDeepBeforeCreateDocument1
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/middle/test2.xml"
decl_stmt|;
specifier|final
name|Document
operator|.
name|Event
name|ev
init|=
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|BEFORE_CREATE
argument_list|,
name|docPath
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|ev
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkDocumentExists
argument_list|(
name|docPath
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|top
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|BEFORE_CREATE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
name|docPath
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
literal|"/elsewhere/test.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenDocumentBeforeUpdateDocument1
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test.xml"
decl_stmt|;
name|XMLDocument
name|doc
init|=
name|createDocument
argument_list|(
name|docPath
argument_list|,
literal|"before"
argument_list|)
decl_stmt|;
specifier|final
name|Document
operator|.
name|Event
name|ev
init|=
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|BEFORE_UPDATE
argument_list|,
name|docPath
argument_list|,
name|doc
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|ev
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkDocumentStamp
argument_list|(
literal|"before"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|doc
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|BEFORE_UPDATE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
name|docPath
argument_list|,
literal|"after"
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
literal|"/elsewhere/test.xml"
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
literal|"/top/test2.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenDocumentAfterUpdateDocument1
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test.xml"
decl_stmt|;
name|XMLDocument
name|doc
init|=
name|createDocument
argument_list|(
name|docPath
argument_list|,
literal|"before"
argument_list|)
decl_stmt|;
specifier|final
name|Document
operator|.
name|Event
name|ev
init|=
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|AFTER_UPDATE
argument_list|,
name|docPath
argument_list|,
name|doc
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|ev
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkDocumentStamp
argument_list|(
literal|"after"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|doc
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|AFTER_UPDATE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
name|docPath
argument_list|,
literal|"after"
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
literal|"/elsewhere/test.xml"
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
literal|"/top/test2.xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenDocumentsBeforeDeleteDocument1
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test.xml"
decl_stmt|;
name|XMLDocument
name|doc
init|=
name|createDocument
argument_list|(
name|docPath
argument_list|)
decl_stmt|;
specifier|final
name|Document
operator|.
name|Event
name|ev
init|=
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|BEFORE_DELETE
argument_list|,
name|docPath
argument_list|,
name|doc
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|ev
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkDocumentExists
argument_list|(
name|docPath
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|top
operator|.
name|documents
argument_list|()
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|BEFORE_DELETE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|doc
operator|.
name|delete
argument_list|()
expr_stmt|;
name|createDocument
argument_list|(
literal|"/elsewhere/test.xml"
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
name|createDocument
argument_list|(
literal|"/top/deeper/test.xml"
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenDocumentsBeforeDeleteDocument2
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test.xml"
decl_stmt|;
name|XMLDocument
name|doc
init|=
name|createDocument
argument_list|(
name|docPath
argument_list|,
literal|"before"
argument_list|)
decl_stmt|;
name|doc
operator|.
name|delete
argument_list|()
expr_stmt|;
specifier|final
name|Document
operator|.
name|Event
name|ev
init|=
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|BEFORE_DELETE
argument_list|,
name|docPath
argument_list|,
name|doc
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|with
argument_list|(
name|eqDelayedDoc
argument_list|(
name|ev
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkDocumentExists
argument_list|(
name|docPath
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|top
operator|.
name|documents
argument_list|()
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|BEFORE_DELETE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
name|docPath
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
name|createDocument
argument_list|(
literal|"/elsewhere/test.xml"
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
name|createDocument
argument_list|(
literal|"/top/deeper/test.xml"
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenDocumentsAfterDeleteDocument1
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test.xml"
decl_stmt|;
specifier|final
name|Document
operator|.
name|Event
name|ev
init|=
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|AFTER_DELETE
argument_list|,
name|docPath
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|ev
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkDocumentExists
argument_list|(
name|docPath
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|top
operator|.
name|documents
argument_list|()
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|AFTER_DELETE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|createDocument
argument_list|(
name|docPath
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
name|createDocument
argument_list|(
literal|"/elsewhere/test.xml"
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
name|createDocument
argument_list|(
literal|"/top/deeper/test.xml"
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenFolderBeforeDeleteDocument1
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test.xml"
decl_stmt|;
name|XMLDocument
name|doc
init|=
name|createDocument
argument_list|(
name|docPath
argument_list|)
decl_stmt|;
specifier|final
name|Document
operator|.
name|Event
name|ev
init|=
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|BEFORE_DELETE
argument_list|,
name|docPath
argument_list|,
name|doc
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|ev
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkDocumentExists
argument_list|(
name|docPath
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|top
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|BEFORE_DELETE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|doc
operator|.
name|delete
argument_list|()
expr_stmt|;
name|createDocument
argument_list|(
literal|"/elsewhere/test.xml"
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenFolderBeforeDeleteDocument2
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/deeper/test.xml"
decl_stmt|;
name|XMLDocument
name|doc
init|=
name|createDocument
argument_list|(
name|docPath
argument_list|)
decl_stmt|;
specifier|final
name|Document
operator|.
name|Event
name|ev
init|=
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|BEFORE_DELETE
argument_list|,
name|docPath
argument_list|,
name|doc
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|ev
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkDocumentExists
argument_list|(
name|docPath
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|top
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|BEFORE_DELETE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|doc
operator|.
name|delete
argument_list|()
expr_stmt|;
name|createDocument
argument_list|(
literal|"/elsewhere/test.xml"
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenFolderAfterDeleteDocument1
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test.xml"
decl_stmt|;
name|XMLDocument
name|doc
init|=
name|createDocument
argument_list|(
name|docPath
argument_list|)
decl_stmt|;
specifier|final
name|Document
operator|.
name|Event
name|ev
init|=
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|AFTER_DELETE
argument_list|,
name|docPath
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|ev
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkDocumentExists
argument_list|(
name|docPath
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|top
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|AFTER_DELETE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|doc
operator|.
name|delete
argument_list|()
expr_stmt|;
name|createDocument
argument_list|(
literal|"/elsewhere/test.xml"
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenFolderAfterDeleteDocument2
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/deeper/test.xml"
decl_stmt|;
name|XMLDocument
name|doc
init|=
name|createDocument
argument_list|(
name|docPath
argument_list|)
decl_stmt|;
specifier|final
name|Document
operator|.
name|Event
name|ev
init|=
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|AFTER_DELETE
argument_list|,
name|docPath
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|ev
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkDocumentExists
argument_list|(
name|docPath
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|top
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|AFTER_DELETE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|doc
operator|.
name|delete
argument_list|()
expr_stmt|;
name|createDocument
argument_list|(
literal|"/elsewhere/test.xml"
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenDocumentBeforeDeleteDocument1
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test.xml"
decl_stmt|;
name|XMLDocument
name|doc
init|=
name|createDocument
argument_list|(
name|docPath
argument_list|)
decl_stmt|;
specifier|final
name|Document
operator|.
name|Event
name|ev
init|=
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|BEFORE_DELETE
argument_list|,
name|docPath
argument_list|,
name|doc
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|ev
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkDocumentExists
argument_list|(
name|docPath
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|doc
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|BEFORE_DELETE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|doc
operator|.
name|delete
argument_list|()
expr_stmt|;
name|createDocument
argument_list|(
literal|"/elsewhere/test.xml"
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
name|createDocument
argument_list|(
literal|"/top/deeper/test.xml"
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
name|createDocument
argument_list|(
literal|"/top/test2.xml"
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listenDocumentAfterDeleteDocument1
parameter_list|()
block|{
specifier|final
name|String
name|docPath
init|=
literal|"/top/test.xml"
decl_stmt|;
name|XMLDocument
name|doc
init|=
name|createDocument
argument_list|(
name|docPath
argument_list|)
decl_stmt|;
specifier|final
name|Document
operator|.
name|Event
name|ev
init|=
operator|new
name|Document
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|AFTER_DELETE
argument_list|,
name|docPath
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|documentListener
argument_list|)
operator|.
name|handle
argument_list|(
name|ev
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkDocumentExists
argument_list|(
name|docPath
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|doc
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|AFTER_DELETE
argument_list|,
name|documentListener
argument_list|)
expr_stmt|;
name|doc
operator|.
name|delete
argument_list|()
expr_stmt|;
name|createDocument
argument_list|(
literal|"/elsewhere/test.xml"
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
name|createDocument
argument_list|(
literal|"/top/deeper/test.xml"
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
name|createDocument
argument_list|(
literal|"/top/test2.xml"
argument_list|)
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|Ignore
argument_list|(
literal|"not yet implemented"
argument_list|)
specifier|public
name|void
name|listenBeforeCreateFolder1
parameter_list|()
block|{
specifier|final
name|String
name|folderPath
init|=
literal|"/top/child"
decl_stmt|;
specifier|final
name|Folder
operator|.
name|Event
name|ev
init|=
operator|new
name|Folder
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|BEFORE_CREATE
argument_list|,
name|folderPath
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|folderListener
argument_list|)
operator|.
name|handle
argument_list|(
name|ev
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkFolderExists
argument_list|(
name|folderPath
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|top
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|BEFORE_CREATE
argument_list|,
name|folderListener
argument_list|)
expr_stmt|;
name|top
operator|.
name|children
argument_list|()
operator|.
name|create
argument_list|(
literal|"child"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|Ignore
argument_list|(
literal|"not yet implemented"
argument_list|)
specifier|public
name|void
name|listenBeforeCreateFolder2
parameter_list|()
block|{
specifier|final
name|String
name|folderPath
init|=
literal|"/top/middle/child"
decl_stmt|;
specifier|final
name|Folder
operator|.
name|Event
name|ev
init|=
operator|new
name|Folder
operator|.
name|Event
argument_list|(
name|Trigger
operator|.
name|BEFORE_CREATE
argument_list|,
name|folderPath
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|context
operator|.
name|checking
argument_list|(
operator|new
name|Expectations
argument_list|()
block|{
block|{
name|one
argument_list|(
name|folderListener
argument_list|)
operator|.
name|handle
argument_list|(
name|ev
argument_list|)
expr_stmt|;
name|will
argument_list|(
name|checkFolderExists
argument_list|(
name|folderPath
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Folder
name|top
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top"
argument_list|)
decl_stmt|;
name|Folder
name|middle
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/top/middle"
argument_list|)
decl_stmt|;
name|top
operator|.
name|listeners
argument_list|()
operator|.
name|add
argument_list|(
name|Trigger
operator|.
name|BEFORE_CREATE
argument_list|,
name|folderListener
argument_list|)
expr_stmt|;
name|middle
operator|.
name|children
argument_list|()
operator|.
name|create
argument_list|(
literal|"child"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

