begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|fluent
package|;
end_package

begin_comment
comment|/**  * Created by IntelliJ IDEA.  * User: wessels  * Date: Oct 29, 2007                                   {lib.endorsed}  * Time: 8:46:20 PM  * To change this template use File | Settings | File Templates.  */
end_comment

begin_class
specifier|public
class|class
name|DatabaseMiscTest
extends|extends
name|DatabaseHelper
block|{
specifier|public
name|void
name|testQueryDocs1
parameter_list|()
block|{
name|Folder
name|c1
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/c1"
argument_list|)
decl_stmt|;
name|XMLDocument
name|d1
init|=
name|c1
operator|.
name|documents
argument_list|()
operator|.
name|build
argument_list|(
name|Name
operator|.
name|generate
argument_list|()
argument_list|)
operator|.
name|elem
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|end
argument_list|(
literal|"test1"
argument_list|)
operator|.
name|commit
argument_list|()
decl_stmt|;
name|XMLDocument
name|d2
init|=
name|c1
operator|.
name|documents
argument_list|()
operator|.
name|build
argument_list|(
name|Name
operator|.
name|generate
argument_list|()
argument_list|)
operator|.
name|elem
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|end
argument_list|(
literal|"test2"
argument_list|)
operator|.
name|commit
argument_list|()
decl_stmt|;
name|c1
operator|.
name|documents
argument_list|()
operator|.
name|build
argument_list|(
name|Name
operator|.
name|generate
argument_list|()
argument_list|)
operator|.
name|elem
argument_list|(
literal|"test3"
argument_list|)
operator|.
name|end
argument_list|(
literal|"test3"
argument_list|)
operator|.
name|commit
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|db
operator|.
name|query
argument_list|(
name|d1
argument_list|,
name|d2
argument_list|)
operator|.
name|exists
argument_list|(
literal|"/test1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|db
operator|.
name|query
argument_list|(
name|d1
argument_list|,
name|d2
argument_list|)
operator|.
name|exists
argument_list|(
literal|"/test2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|db
operator|.
name|query
argument_list|(
name|d1
argument_list|,
name|d2
argument_list|)
operator|.
name|exists
argument_list|(
literal|"/test3"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testQueryBaseUri
parameter_list|()
block|{
name|Folder
name|c1
init|=
name|db
operator|.
name|createFolder
argument_list|(
literal|"/c1"
argument_list|)
decl_stmt|;
name|c1
operator|.
name|documents
argument_list|()
operator|.
name|build
argument_list|(
name|Name
operator|.
name|create
argument_list|(
literal|"original"
argument_list|)
argument_list|)
operator|.
name|elem
argument_list|(
literal|"test"
argument_list|)
operator|.
name|end
argument_list|(
literal|"test"
argument_list|)
operator|.
name|commit
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
name|db
operator|.
name|query
argument_list|()
operator|.
name|single
argument_list|(
literal|"doc-available('original')"
argument_list|)
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|db
operator|.
name|query
argument_list|()
operator|.
name|single
argument_list|(
literal|"doc-available('c1/original')"
argument_list|)
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

