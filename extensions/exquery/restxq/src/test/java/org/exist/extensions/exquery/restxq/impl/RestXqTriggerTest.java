begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* Copyright (c) 2012, Adam Retter All rights reserved.  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:     * Redistributions of source code must retain the above copyright       notice, this list of conditions and the following disclaimer.     * Redistributions in binary form must reproduce the above copyright       notice, this list of conditions and the following disclaimer in the       documentation and/or other materials provided with the distribution.     * Neither the name of Adam Retter Consulting nor the       names of its contributors may be used to endorse or promote products       derived from this software without specific prior written permission.  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Adam Retter BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  */
end_comment

begin_package
package|package
name|org
operator|.
name|exquery
operator|.
name|restxq
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Tests for ResourceFunctionFactory  *   * @author Adam Retter<adam.retter@googlemail.com>  */
end_comment

begin_class
specifier|public
class|class
name|RestXqTriggerTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|getAbsoluteModuleHint_relative
parameter_list|()
block|{
specifier|final
name|String
name|absoluteModulePath
init|=
operator|new
name|RestXqTrigger
argument_list|()
operator|.
name|getAbsoluteModuleHint
argument_list|(
literal|"b.xqm"
argument_list|,
name|XmldbURI
operator|.
name|create
argument_list|(
literal|"/db/code/a.xqm"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"/db/code/b.xqm"
argument_list|,
name|absoluteModulePath
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getAbsoluteModuleHint_relativeParent
parameter_list|()
block|{
specifier|final
name|String
name|absoluteModulePath
init|=
operator|new
name|RestXqTrigger
argument_list|()
operator|.
name|getAbsoluteModuleHint
argument_list|(
literal|"../b.xqm"
argument_list|,
name|XmldbURI
operator|.
name|create
argument_list|(
literal|"/db/code/a.xqm"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"/db/b.xqm"
argument_list|,
name|absoluteModulePath
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getAbsoluteModuleHint_absoluteEmbedded
parameter_list|()
block|{
specifier|final
name|String
name|absoluteModulePath
init|=
operator|new
name|RestXqTrigger
argument_list|()
operator|.
name|getAbsoluteModuleHint
argument_list|(
literal|"xmldb:exist://embedded-eXist-server/db/code/b.xqm"
argument_list|,
name|XmldbURI
operator|.
name|create
argument_list|(
literal|"/db/code/a.xqm"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"/db/code/b.xqm"
argument_list|,
name|absoluteModulePath
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getAbsoluteModuleHint_absoluteLocal
parameter_list|()
block|{
specifier|final
name|String
name|absoluteModulePath
init|=
operator|new
name|RestXqTrigger
argument_list|()
operator|.
name|getAbsoluteModuleHint
argument_list|(
literal|"xmldb:exist:///db/code/b.xqm"
argument_list|,
name|XmldbURI
operator|.
name|create
argument_list|(
literal|"/db/code/a.xqm"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"/db/code/b.xqm"
argument_list|,
name|absoluteModulePath
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getAbsoluteModuleHint_absoluteSimple
parameter_list|()
block|{
specifier|final
name|String
name|absoluteModulePath
init|=
operator|new
name|RestXqTrigger
argument_list|()
operator|.
name|getAbsoluteModuleHint
argument_list|(
literal|"/db/b.xqm"
argument_list|,
name|XmldbURI
operator|.
name|create
argument_list|(
literal|"/db/code/a.xqm"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"/db/b.xqm"
argument_list|,
name|absoluteModulePath
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

