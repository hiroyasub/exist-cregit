begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2012 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|realm
operator|.
name|oauth
package|;
end_package

begin_import
import|import
name|org
operator|.
name|scribe
operator|.
name|builder
operator|.
name|api
operator|.
name|DefaultApi20
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scribe
operator|.
name|model
operator|.
name|OAuthConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scribe
operator|.
name|model
operator|.
name|Verb
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scribe
operator|.
name|utils
operator|.
name|OAuthEncoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scribe
operator|.
name|utils
operator|.
name|Preconditions
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:shabanovd@gmail.com">Dmitriy Shabanov</a>  *   */
end_comment

begin_class
specifier|public
class|class
name|Google2Api
extends|extends
name|DefaultApi20
block|{
specifier|private
specifier|static
specifier|final
name|String
name|AUTHORIZE_URL
init|=
literal|"https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=%s&redirect_uri=%s"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|SCOPED_AUTHORIZE_URL
init|=
name|AUTHORIZE_URL
operator|+
literal|"&scope=%s"
decl_stmt|;
annotation|@
name|Override
specifier|public
name|String
name|getAccessTokenEndpoint
parameter_list|()
block|{
return|return
literal|"https://accounts.google.com/o/oauth2/token"
return|;
comment|//?grant_type=authorization_code";
block|}
annotation|@
name|Override
specifier|public
name|String
name|getAuthorizationUrl
parameter_list|(
name|OAuthConfig
name|config
parameter_list|)
block|{
name|Preconditions
operator|.
name|checkValidUrl
argument_list|(
name|config
operator|.
name|getCallback
argument_list|()
argument_list|,
literal|"Must provide a valid url as callback. Google does not support OOB"
argument_list|)
expr_stmt|;
name|String
name|scope
init|=
literal|"https://www.googleapis.com/auth/userinfo.profile"
decl_stmt|;
comment|//config.getScope();
return|return
name|String
operator|.
name|format
argument_list|(
name|SCOPED_AUTHORIZE_URL
argument_list|,
name|config
operator|.
name|getApiKey
argument_list|()
argument_list|,
name|OAuthEncoder
operator|.
name|encode
argument_list|(
name|config
operator|.
name|getCallback
argument_list|()
argument_list|)
argument_list|,
name|OAuthEncoder
operator|.
name|encode
argument_list|(
name|scope
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|Verb
name|getAccessTokenVerb
parameter_list|()
block|{
return|return
name|Verb
operator|.
name|POST
return|;
block|}
block|}
end_class

end_unit

