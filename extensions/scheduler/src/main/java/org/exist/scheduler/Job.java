begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2012 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|scheduler
package|;
end_package

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|config
operator|.
name|Configurable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|config
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|config
operator|.
name|ConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|config
operator|.
name|Configurator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|config
operator|.
name|annotation
operator|.
name|ConfigurationClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|config
operator|.
name|annotation
operator|.
name|ConfigurationFieldAsAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|config
operator|.
name|annotation
operator|.
name|ConfigurationFieldAsElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|AbstractAccount
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|SecurityManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|internal
operator|.
name|SubjectAccreditedImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|quartz
operator|.
name|CronTrigger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|quartz
operator|.
name|JobDetail
import|;
end_import

begin_import
import|import
name|org
operator|.
name|quartz
operator|.
name|SchedulerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|quartz
operator|.
name|Trigger
import|;
end_import

begin_comment
comment|//import static org.quartz.JobBuilder.*;
end_comment

begin_comment
comment|/**  * @author<a href="mailto:shabanovd@gmail.com">Dmitriy Shabanov</a>  *  */
end_comment

begin_class
annotation|@
name|ConfigurationClass
argument_list|(
literal|"job"
argument_list|)
specifier|public
class|class
name|Job
implements|implements
name|Configurable
block|{
specifier|protected
specifier|static
specifier|final
name|String
name|DETAILS
init|=
literal|"DETAILs"
decl_stmt|;
annotation|@
name|ConfigurationFieldAsAttribute
argument_list|(
literal|"id"
argument_list|)
specifier|private
name|String
name|id
decl_stmt|;
annotation|@
name|ConfigurationFieldAsElement
argument_list|(
literal|"name"
argument_list|)
specifier|private
name|String
name|name
decl_stmt|;
annotation|@
name|ConfigurationFieldAsElement
argument_list|(
literal|"group"
argument_list|)
specifier|private
name|String
name|group
decl_stmt|;
annotation|@
name|ConfigurationFieldAsElement
argument_list|(
literal|"class"
argument_list|)
specifier|private
name|String
name|clazz
decl_stmt|;
annotation|@
name|ConfigurationFieldAsElement
argument_list|(
literal|"run-as-account"
argument_list|)
specifier|private
name|String
name|account
decl_stmt|;
annotation|@
name|ConfigurationFieldAsElement
argument_list|(
literal|"script-uri"
argument_list|)
specifier|protected
name|String
name|scriptURI
decl_stmt|;
annotation|@
name|ConfigurationFieldAsElement
argument_list|(
literal|"cron-expression"
argument_list|)
specifier|private
name|String
name|cronExpression
decl_stmt|;
specifier|private
name|Configuration
name|configuration
init|=
literal|null
decl_stmt|;
specifier|private
name|SchedulerManager
name|manager
decl_stmt|;
specifier|public
name|Job
parameter_list|(
name|SchedulerManager
name|manager
parameter_list|,
name|Configuration
name|config
parameter_list|)
throws|throws
name|ConfigurationException
block|{
name|this
operator|.
name|manager
operator|=
name|manager
expr_stmt|;
name|configuration
operator|=
name|Configurator
operator|.
name|configure
argument_list|(
name|this
argument_list|,
name|config
argument_list|)
expr_stmt|;
try|try
block|{
name|manager
operator|.
name|scheduler
operator|.
name|scheduleJob
argument_list|(
name|getJobDetail
argument_list|()
argument_list|,
name|getTrigger
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SchedulerException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ConfigurationException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
name|JobDetail
name|getJobDetail
parameter_list|()
throws|throws
name|ConfigurationException
block|{
name|JobDetail
name|details
init|=
operator|new
name|JobDetail
argument_list|(
name|name
argument_list|,
name|group
argument_list|,
name|getJobClass
argument_list|()
argument_list|)
decl_stmt|;
name|details
operator|.
name|getJobDataMap
argument_list|()
operator|.
name|put
argument_list|(
name|DETAILS
argument_list|,
name|this
argument_list|)
expr_stmt|;
return|return
name|details
return|;
block|}
specifier|private
name|Trigger
name|getTrigger
parameter_list|()
throws|throws
name|ConfigurationException
block|{
try|try
block|{
return|return
operator|new
name|CronTrigger
argument_list|(
name|name
operator|+
literal|" Trigger"
argument_list|,
name|group
argument_list|,
name|cronExpression
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ParseException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ConfigurationException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
name|Class
argument_list|<
name|?
argument_list|>
name|getJobClass
parameter_list|()
throws|throws
name|ConfigurationException
block|{
try|try
block|{
if|if
condition|(
name|scriptURI
operator|!=
literal|null
condition|)
return|return
name|Class
operator|.
name|forName
argument_list|(
literal|"org.exist.scheduler.XQueryJob"
argument_list|)
return|;
return|return
name|Class
operator|.
name|forName
argument_list|(
name|clazz
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ConfigurationException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|protected
name|Subject
name|getSubject
parameter_list|()
block|{
name|SecurityManager
name|sm
init|=
name|getDatabase
argument_list|()
operator|.
name|getSecurityManager
argument_list|()
decl_stmt|;
name|AbstractAccount
name|acc
init|=
operator|(
name|AbstractAccount
operator|)
name|sm
operator|.
name|getAccount
argument_list|(
name|account
argument_list|)
decl_stmt|;
if|if
condition|(
name|acc
operator|==
literal|null
condition|)
comment|//UNDERSTAND: error better here?
return|return
name|sm
operator|.
name|getGuestSubject
argument_list|()
return|;
return|return
operator|new
name|SubjectAccreditedImpl
argument_list|(
name|acc
argument_list|,
name|this
argument_list|)
return|;
block|}
specifier|protected
name|Database
name|getDatabase
parameter_list|()
block|{
return|return
name|manager
operator|.
name|db
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isConfigured
parameter_list|()
block|{
return|return
name|configuration
operator|!=
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|Configuration
name|getConfiguration
parameter_list|()
block|{
return|return
name|configuration
return|;
block|}
block|}
end_class

end_unit

