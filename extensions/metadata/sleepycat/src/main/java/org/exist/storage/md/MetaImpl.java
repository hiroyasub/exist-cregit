begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2012 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|md
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|DocumentImpl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|eaio
operator|.
name|uuid
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sleepycat
operator|.
name|persist
operator|.
name|model
operator|.
name|DeleteAction
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sleepycat
operator|.
name|persist
operator|.
name|model
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sleepycat
operator|.
name|persist
operator|.
name|model
operator|.
name|PrimaryKey
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sleepycat
operator|.
name|persist
operator|.
name|model
operator|.
name|SecondaryKey
import|;
end_import

begin_import
import|import static
name|com
operator|.
name|sleepycat
operator|.
name|persist
operator|.
name|model
operator|.
name|Relationship
operator|.
name|MANY_TO_ONE
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:shabanovd@gmail.com">Dmitriy Shabanov</a>  *  */
end_comment

begin_class
annotation|@
name|Entity
comment|//(version=1)
specifier|public
class|class
name|MetaImpl
implements|implements
name|Meta
block|{
annotation|@
name|PrimaryKey
specifier|private
name|String
name|uuid
decl_stmt|;
annotation|@
name|SecondaryKey
argument_list|(
name|relate
operator|=
name|MANY_TO_ONE
argument_list|,
name|onRelatedEntityDelete
operator|=
name|DeleteAction
operator|.
name|CASCADE
argument_list|)
specifier|private
name|String
name|object
decl_stmt|;
annotation|@
name|SecondaryKey
argument_list|(
name|relate
operator|=
name|MANY_TO_ONE
argument_list|,
name|onRelatedEntityDelete
operator|=
name|DeleteAction
operator|.
name|CASCADE
argument_list|)
specifier|private
name|String
name|key
decl_stmt|;
annotation|@
name|SecondaryKey
argument_list|(
name|relate
operator|=
name|MANY_TO_ONE
argument_list|,
name|onRelatedEntityDelete
operator|=
name|DeleteAction
operator|.
name|CASCADE
argument_list|)
specifier|protected
name|String
name|value
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|private
name|MetaImpl
parameter_list|()
block|{
block|}
specifier|protected
name|MetaImpl
parameter_list|(
name|String
name|objectUUID
parameter_list|,
name|String
name|k
parameter_list|,
name|Object
name|v
parameter_list|)
block|{
name|this
argument_list|(
name|objectUUID
argument_list|,
operator|(
operator|new
name|UUID
argument_list|()
operator|)
operator|.
name|toString
argument_list|()
argument_list|,
name|k
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|MetaImpl
parameter_list|(
name|String
name|objectUUID
parameter_list|,
name|String
name|uuid
parameter_list|,
name|String
name|k
parameter_list|,
name|Object
name|v
parameter_list|)
block|{
name|this
operator|.
name|uuid
operator|=
name|uuid
expr_stmt|;
name|object
operator|=
name|objectUUID
expr_stmt|;
name|key
operator|=
name|k
expr_stmt|;
name|setValue
argument_list|(
name|v
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getUUID
parameter_list|()
block|{
return|return
name|uuid
return|;
block|}
specifier|public
name|String
name|getKey
parameter_list|()
block|{
return|return
name|key
return|;
block|}
specifier|public
name|Object
name|getValue
parameter_list|()
block|{
try|try
block|{
name|DocumentImpl
name|doc
init|=
name|MetaData
operator|.
name|_
operator|.
name|getDocument
argument_list|(
name|value
argument_list|)
decl_stmt|;
if|if
condition|(
name|doc
operator|!=
literal|null
condition|)
return|return
name|doc
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|//LOG
block|}
return|return
name|value
return|;
block|}
specifier|public
name|void
name|setValue
parameter_list|(
name|Object
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|instanceof
name|DocumentImpl
condition|)
block|{
name|this
operator|.
name|value
operator|=
name|MetaData
operator|.
name|_
operator|.
name|getMetas
argument_list|(
operator|(
name|DocumentImpl
operator|)
name|value
argument_list|)
operator|.
name|getUUID
argument_list|()
expr_stmt|;
comment|//TODO: set link to master doc?
block|}
else|else
name|this
operator|.
name|value
operator|=
name|value
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
specifier|public
name|String
name|getObject
parameter_list|()
block|{
return|return
name|object
return|;
block|}
block|}
end_class

end_unit

