begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|modules
operator|.
name|ngram
operator|.
name|query
package|;
end_package

begin_class
specifier|public
class|class
name|Wildcard
implements|implements
name|WildcardedExpression
implements|,
name|MergeableExpression
block|{
specifier|final
name|int
name|minimumLength
decl_stmt|;
specifier|final
name|int
name|maximumLength
decl_stmt|;
specifier|public
name|int
name|getMinimumLength
parameter_list|()
block|{
return|return
name|minimumLength
return|;
block|}
empty_stmt|;
specifier|public
name|int
name|getMaximumLength
parameter_list|()
block|{
return|return
name|maximumLength
return|;
block|}
empty_stmt|;
specifier|public
name|Wildcard
parameter_list|(
specifier|final
name|int
name|minimumLength
parameter_list|,
specifier|final
name|int
name|maximumLength
parameter_list|)
block|{
name|this
operator|.
name|minimumLength
operator|=
name|minimumLength
expr_stmt|;
name|this
operator|.
name|maximumLength
operator|=
name|maximumLength
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"Wildcard("
operator|+
name|minimumLength
operator|+
literal|", "
operator|+
name|maximumLength
operator|+
literal|")"
return|;
block|}
annotation|@
name|Override
specifier|public
name|WildcardedExpression
name|mergeWith
parameter_list|(
specifier|final
name|WildcardedExpression
name|otherExpression
parameter_list|)
block|{
name|Wildcard
name|other
init|=
operator|(
name|Wildcard
operator|)
name|otherExpression
decl_stmt|;
name|int
name|newMaximumLength
init|=
operator|(
name|this
operator|.
name|maximumLength
operator|==
name|Integer
operator|.
name|MAX_VALUE
operator|||
name|other
operator|.
name|maximumLength
operator|==
name|Integer
operator|.
name|MAX_VALUE
operator|)
condition|?
name|Integer
operator|.
name|MAX_VALUE
else|:
name|this
operator|.
name|maximumLength
operator|+
name|other
operator|.
name|maximumLength
decl_stmt|;
return|return
operator|new
name|Wildcard
argument_list|(
name|this
operator|.
name|minimumLength
operator|+
name|other
operator|.
name|minimumLength
argument_list|,
name|newMaximumLength
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|mergeableWith
parameter_list|(
specifier|final
name|WildcardedExpression
name|otherExpression
parameter_list|)
block|{
return|return
operator|(
name|otherExpression
operator|instanceof
name|Wildcard
operator|)
return|;
block|}
block|}
end_class

end_unit

