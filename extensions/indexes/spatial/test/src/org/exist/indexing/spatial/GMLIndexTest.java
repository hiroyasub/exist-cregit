begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2007 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA  *   *  $Id$  *    *  @author Pierrick Brihaye<pierrick.brihaye@free.fr>  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|indexing
operator|.
name|spatial
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|PreparedStatement
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|ResultSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|SAXParser
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|SAXParserFactory
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|EXistException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|persistent
operator|.
name|NodeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|indexing
operator|.
name|spatial
operator|.
name|AbstractGMLJDBCIndex
operator|.
name|SpatialOperator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|memtree
operator|.
name|SAXAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|xacml
operator|.
name|AccessContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|BrokerPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|IndexQueryService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|XQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|value
operator|.
name|Sequence
import|;
end_import

begin_import
import|import
name|org
operator|.
name|geotools
operator|.
name|gml
operator|.
name|GMLFilterDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|geotools
operator|.
name|gml
operator|.
name|GMLFilterGeometry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|geotools
operator|.
name|gml
operator|.
name|GMLHandlerJTS
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|XMLReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|helpers
operator|.
name|XMLFilterImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|DatabaseManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|CollectionManagementService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|XMLResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|vividsolutions
operator|.
name|jts
operator|.
name|geom
operator|.
name|Geometry
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|GMLIndexTest
extends|extends
name|TestCase
block|{
specifier|private
specifier|final
specifier|static
name|String
name|FILES
index|[]
init|=
block|{
literal|"15385-SS7886-5i1.gml"
block|}
decl_stmt|;
specifier|static
name|File
name|existDir
decl_stmt|;
static|static
block|{
name|String
name|existHome
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"exist.home"
argument_list|)
decl_stmt|;
name|existDir
operator|=
name|existHome
operator|==
literal|null
condition|?
operator|new
name|File
argument_list|(
literal|"."
argument_list|)
else|:
operator|new
name|File
argument_list|(
name|existHome
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|final
specifier|static
name|File
name|RESOURCE_DIR_DIR
init|=
operator|new
name|File
argument_list|(
name|existDir
argument_list|,
literal|"extensions/indexes/spatial/test/resources"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_COLLECTION_NAME
init|=
literal|"test-spatial-index"
decl_stmt|;
specifier|private
specifier|static
name|String
name|COLLECTION_CONFIG
init|=
literal|"<collection xmlns=\"http://exist-db.org/collection-config/1.0\">"
operator|+
literal|"<index>"
operator|+
literal|"<gml/>"
operator|+
literal|"</index>"
operator|+
literal|"<validation mode=\"no\"/> "
operator|+
literal|"</collection>"
decl_stmt|;
name|String
name|IN_MEMORY_GML
init|=
literal|"<gml:Polygon xmlns:gml = 'http://www.opengis.net/gml' srsName='osgb:BNG'>"
operator|+
literal|"<gml:outerBoundaryIs><gml:LinearRing><gml:coordinates>"
operator|+
literal|"278515.400,187060.450 278515.150,187057.950 278516.350,187057.150 "
operator|+
literal|"278546.700,187054.000 278580.550,187050.900 278609.500,187048.100 "
operator|+
literal|"278609.750,187051.250 278574.750,187054.650 278544.950,187057.450 "
operator|+
literal|"278515.400,187060.450 "
operator|+
literal|"</gml:coordinates></gml:LinearRing></gml:outerBoundaryIs>"
operator|+
literal|"</gml:Polygon>"
decl_stmt|;
name|String
name|WKT_POLYGON
init|=
literal|"POLYGON ((-3.7530493069563913 51.5695210244188, "
operator|+
literal|"-3.7526220716233705 51.569500427086325, -3.752191300029012 51.569481679670055, "
operator|+
literal|"-3.7516853221460167 51.5694586575048, -3.751687839470607 51.569430291017945, "
operator|+
literal|"-3.752106350923544 51.56944922336166, -3.752595638781826 51.5694697950237, "
operator|+
literal|"-3.753034464037513 51.56949156828257, -3.753052048201362 51.56949850020053, "
operator|+
literal|"-3.7530493069563913 51.5695210244188))"
decl_stmt|;
specifier|private
name|Database
name|database
decl_stmt|;
specifier|private
name|Collection
name|testCollection
decl_stmt|;
specifier|private
name|Geometry
name|currentGeometry
decl_stmt|;
specifier|public
name|void
name|testIndexDocument
parameter_list|()
block|{
try|try
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|FILES
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|XMLResource
name|doc
init|=
operator|(
name|XMLResource
operator|)
name|testCollection
operator|.
name|createResource
argument_list|(
name|FILES
index|[
name|i
index|]
argument_list|,
literal|"XMLResource"
argument_list|)
decl_stmt|;
comment|//Doh ! Setting a new content doesn't remove the old one if any !
if|if
condition|(
name|testCollection
operator|.
name|getResource
argument_list|(
name|FILES
index|[
name|i
index|]
argument_list|)
operator|!=
literal|null
condition|)
name|testCollection
operator|.
name|removeResource
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|doc
operator|.
name|setContent
argument_list|(
operator|new
name|File
argument_list|(
name|RESOURCE_DIR_DIR
argument_list|,
name|FILES
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|testCollection
operator|.
name|storeResource
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|testCollection
operator|.
name|getResource
argument_list|(
name|FILES
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
try|try
block|{
specifier|final
name|BrokerPool
name|pool
init|=
name|BrokerPool
operator|.
name|getInstance
argument_list|()
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
argument_list|)
argument_list|)
init|)
block|{
name|GMLHSQLIndexWorker
name|indexWorker
init|=
operator|(
name|GMLHSQLIndexWorker
operator|)
name|broker
operator|.
name|getIndexController
argument_list|()
operator|.
name|getWorkerByIndexId
argument_list|(
name|AbstractGMLJDBCIndex
operator|.
name|ID
argument_list|)
decl_stmt|;
comment|//Unplugged
if|if
condition|(
name|indexWorker
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|Connection
name|conn
init|=
literal|null
decl_stmt|;
try|try
block|{
name|conn
operator|=
name|indexWorker
operator|.
name|acquireConnection
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|FILES
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|XMLResource
name|doc
init|=
operator|(
name|XMLResource
operator|)
name|testCollection
operator|.
name|getResource
argument_list|(
name|FILES
index|[
name|i
index|]
argument_list|)
decl_stmt|;
name|PreparedStatement
name|ps
init|=
name|conn
operator|.
name|prepareStatement
argument_list|(
literal|"SELECT * FROM "
operator|+
name|GMLHSQLIndex
operator|.
name|TABLE_NAME
operator|+
literal|" WHERE DOCUMENT_URI = ?;"
argument_list|)
decl_stmt|;
name|ps
operator|.
name|setString
argument_list|(
literal|1
argument_list|,
name|testCollection
operator|.
name|getName
argument_list|()
operator|+
literal|"/"
operator|+
name|doc
operator|.
name|getDocumentId
argument_list|()
argument_list|)
expr_stmt|;
name|ResultSet
name|rs
init|=
name|ps
operator|.
name|executeQuery
argument_list|()
decl_stmt|;
while|while
condition|(
name|rs
operator|.
name|next
argument_list|()
condition|)
block|{
comment|//Let be sure we have the right count
block|}
name|int
name|count
init|=
name|rs
operator|.
name|getRow
argument_list|()
decl_stmt|;
name|ps
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|count
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|indexWorker
operator|.
name|releaseConnection
argument_list|(
name|conn
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|SQLException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EXistException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testCheckIndex
parameter_list|()
block|{
try|try
block|{
specifier|final
name|BrokerPool
name|pool
init|=
name|BrokerPool
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|pool
argument_list|)
expr_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
argument_list|)
argument_list|)
init|)
block|{
name|AbstractGMLJDBCIndex
name|index
init|=
operator|(
name|AbstractGMLJDBCIndex
operator|)
name|pool
operator|.
name|getIndexManager
argument_list|()
operator|.
name|getIndexById
argument_list|(
name|AbstractGMLJDBCIndex
operator|.
name|ID
argument_list|)
decl_stmt|;
comment|//Unplugged
if|if
condition|(
name|index
operator|!=
literal|null
condition|)
block|{
name|assertTrue
argument_list|(
name|index
operator|.
name|checkIndex
argument_list|(
name|broker
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testScanIndex
parameter_list|()
block|{
try|try
block|{
specifier|final
name|BrokerPool
name|pool
init|=
name|BrokerPool
operator|.
name|getInstance
argument_list|()
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
argument_list|)
argument_list|)
init|)
block|{
name|XQuery
name|xquery
init|=
name|pool
operator|.
name|getXQueryService
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|xquery
argument_list|)
expr_stmt|;
name|Sequence
name|seq
init|=
name|xquery
operator|.
name|execute
argument_list|(
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"declare function local:key-callback($term as xs:string, $data as xs:int+) as element() { "
operator|+
literal|"<entry>"
operator|+
literal|"<term>{$term}</term>"
operator|+
literal|"<frequency>{$data[1]}</frequency>"
operator|+
literal|"<documents>{$data[2]}</documents>"
operator|+
literal|"<position>{$data[3]}</position>"
operator|+
literal|"</entry> "
operator|+
literal|"}; "
operator|+
comment|//"util:index-keys(//gml:*, '', util:function(xs:QName('local:key-callback'), 2), 1000, 'spatial-index')[entry/frequency> 1] ",
literal|"util:index-keys(//gml:*, '', util:function(xs:QName('local:key-callback'), 2), 1000, 'spatial-index') "
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testLowLevelSearch
parameter_list|()
block|{
name|GMLHandlerJTS
name|geometryHandler
init|=
operator|new
name|GeometryHandler
argument_list|()
decl_stmt|;
name|GMLFilterGeometry
name|geometryFilter
init|=
operator|new
name|GMLFilterGeometry
argument_list|(
name|geometryHandler
argument_list|)
decl_stmt|;
name|GMLFilterDocument
name|handler
init|=
operator|new
name|GMLFilterDocument
argument_list|(
name|geometryFilter
argument_list|)
decl_stmt|;
try|try
block|{
specifier|final
name|BrokerPool
name|pool
init|=
name|BrokerPool
operator|.
name|getInstance
argument_list|()
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
argument_list|)
argument_list|)
init|)
block|{
name|AbstractGMLJDBCIndexWorker
name|indexWorker
init|=
operator|(
name|AbstractGMLJDBCIndexWorker
operator|)
name|broker
operator|.
name|getIndexController
argument_list|()
operator|.
name|getWorkerByIndexId
argument_list|(
name|AbstractGMLJDBCIndex
operator|.
name|ID
argument_list|)
decl_stmt|;
comment|//Unplugged
if|if
condition|(
name|indexWorker
operator|!=
literal|null
condition|)
block|{
name|SAXParserFactory
name|factory
init|=
name|SAXParserFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|factory
operator|.
name|setNamespaceAware
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|InputSource
name|src
init|=
operator|new
name|InputSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|IN_MEMORY_GML
argument_list|)
argument_list|)
decl_stmt|;
name|SAXParser
name|parser
init|=
name|factory
operator|.
name|newSAXParser
argument_list|()
decl_stmt|;
name|XMLReader
name|reader
init|=
name|parser
operator|.
name|getXMLReader
argument_list|()
decl_stmt|;
name|SAXAdapter
name|adapter
init|=
operator|new
name|SAXAdapter
argument_list|()
decl_stmt|;
name|reader
operator|.
name|setContentHandler
argument_list|(
name|handler
argument_list|)
expr_stmt|;
name|reader
operator|.
name|setProperty
argument_list|(
literal|"http://xml.org/sax/properties/lexical-handler"
argument_list|,
name|adapter
argument_list|)
expr_stmt|;
name|reader
operator|.
name|parse
argument_list|(
name|src
argument_list|)
expr_stmt|;
name|Geometry
name|EPSG4326_geometry
init|=
name|indexWorker
operator|.
name|transformGeometry
argument_list|(
name|currentGeometry
argument_list|,
literal|"osgb:BNG"
argument_list|,
literal|"EPSG:4326"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|EPSG4326_geometry
argument_list|)
expr_stmt|;
name|NodeSet
name|ns
init|=
name|indexWorker
operator|.
name|search
argument_list|(
name|broker
argument_list|,
literal|null
argument_list|,
name|EPSG4326_geometry
argument_list|,
name|SpatialOperator
operator|.
name|EQUALS
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ns
operator|.
name|getLength
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|ns
operator|=
name|indexWorker
operator|.
name|search
argument_list|(
name|broker
argument_list|,
literal|null
argument_list|,
name|EPSG4326_geometry
argument_list|,
name|SpatialOperator
operator|.
name|DISJOINT
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ns
operator|.
name|getLength
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|ns
operator|=
name|indexWorker
operator|.
name|search
argument_list|(
name|broker
argument_list|,
literal|null
argument_list|,
name|EPSG4326_geometry
argument_list|,
name|SpatialOperator
operator|.
name|INTERSECTS
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ns
operator|.
name|getLength
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|ns
operator|=
name|indexWorker
operator|.
name|search
argument_list|(
name|broker
argument_list|,
literal|null
argument_list|,
name|EPSG4326_geometry
argument_list|,
name|SpatialOperator
operator|.
name|TOUCHES
argument_list|)
expr_stmt|;
comment|//assertTrue(ns.getLength()> 0);
name|ns
operator|=
name|indexWorker
operator|.
name|search
argument_list|(
name|broker
argument_list|,
literal|null
argument_list|,
name|EPSG4326_geometry
argument_list|,
name|SpatialOperator
operator|.
name|CROSSES
argument_list|)
expr_stmt|;
comment|//assertTrue(ns.getLength()> 0);
name|ns
operator|=
name|indexWorker
operator|.
name|search
argument_list|(
name|broker
argument_list|,
literal|null
argument_list|,
name|EPSG4326_geometry
argument_list|,
name|SpatialOperator
operator|.
name|WITHIN
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ns
operator|.
name|getLength
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|ns
operator|=
name|indexWorker
operator|.
name|search
argument_list|(
name|broker
argument_list|,
literal|null
argument_list|,
name|EPSG4326_geometry
argument_list|,
name|SpatialOperator
operator|.
name|CONTAINS
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ns
operator|.
name|getLength
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
comment|//ns = ((GMLIndexWorker)index.getWorker()).search(broker, EPSG4326_geometry, SpatialOperator.OVERLAPS);
comment|//assertTrue(ns.getLength()> 0);
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testHighLevelSearch
parameter_list|()
block|{
try|try
block|{
specifier|final
name|BrokerPool
name|pool
init|=
name|BrokerPool
operator|.
name|getInstance
argument_list|()
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
argument_list|)
argument_list|)
init|)
block|{
name|XQuery
name|xquery
init|=
name|pool
operator|.
name|getXQueryService
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|xquery
argument_list|)
expr_stmt|;
name|String
name|query
init|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:equals(//gml:*, //gml:Point[gml:coordinates[. = '278697.450,187740.900']])"
decl_stmt|;
name|Sequence
name|seq
init|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:disjoint(//gml:*, //gml:Point[gml:coordinates[. = '278697.450,187740.900']])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:intersects(//gml:*, //gml:Point[gml:coordinates[. = '278697.450,187740.900']])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:touches(//gml:*, //gml:Point[gml:coordinates[. = '278697.450,187740.900']])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
comment|//assertTrue(seq.getItemCount()> 0);
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:crosses(//gml:*, //gml:Point[gml:coordinates[. = '278697.450,187740.900']])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
comment|//assertTrue(seq.getItemCount()> 0);
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:within(//gml:*, //gml:Point[gml:coordinates[. = '278697.450,187740.900']])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:contains(//gml:*, //gml:Point[gml:coordinates[. = '278697.450,187740.900']])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:overlaps(//gml:*, //gml:Point[gml:coordinates[. = '278697.450,187740.900']])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
comment|//assertTrue(seq.getItemCount()> 0);
comment|//Tests with empty sequences
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:equals(//gml:*, ())"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:overlaps((), //gml:Point[gml:coordinates[. = '278697.450,187740.900']])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
comment|//In-memory test
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:equals(//gml:*, "
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testGeometricProperties
parameter_list|()
block|{
try|try
block|{
specifier|final
name|BrokerPool
name|pool
init|=
name|BrokerPool
operator|.
name|getInstance
argument_list|()
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
argument_list|)
argument_list|)
init|)
block|{
name|XQuery
name|xquery
init|=
name|pool
operator|.
name|getXQueryService
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|xquery
argument_list|)
expr_stmt|;
name|String
name|query
init|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getWKT((//gml:Polygon)[1])"
decl_stmt|;
name|Sequence
name|seq
init|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getWKB((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getMinX((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getMaxX((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getMinY((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getMaxY((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getCentroidX((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getCentroidY((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getArea((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getEPSG4326WKT((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getEPSG4326WKB((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getEPSG4326MinX((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getEPSG4326MaxX((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getEPSG4326MinY((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getEPSG4326MaxY((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getEPSG4326CentroidX((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getEPSG4326CentroidY((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getEPSG4326Area((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getSRS((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getGeometryType((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:isClosed((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:isSimple((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:isValid((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
comment|//Tests with empty sequences
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getWKT(())"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getArea(())"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
comment|//In-memory tests
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getWKT("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getWKB("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getMinX("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getMaxX("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getMinY("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getMaxY("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getCentroidX("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getCentroidY("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getArea("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getEPSG4326WKT("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getEPSG4326WKB("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getEPSG4326MinX("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getEPSG4326MaxX("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getEPSG4326MinY("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getEPSG4326MaxY("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getEPSG4326CentroidX("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getEPSG4326CentroidY("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getEPSG4326Area("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getSRS("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getGeometryType("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:isClosed("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:isSimple("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:isValid("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testGMLProducers
parameter_list|()
block|{
try|try
block|{
specifier|final
name|BrokerPool
name|pool
init|=
name|BrokerPool
operator|.
name|getInstance
argument_list|()
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
argument_list|)
argument_list|)
init|)
block|{
name|XQuery
name|xquery
init|=
name|pool
operator|.
name|getXQueryService
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|xquery
argument_list|)
expr_stmt|;
name|String
name|query
init|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:transform((//gml:Polygon)[1], 'EPSG:4326')"
decl_stmt|;
name|Sequence
name|seq
init|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getWKT((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:buffer((//gml:Polygon)[1], 100)"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:buffer((//gml:Polygon)[1], 100, 1)"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getBbox((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:convexHull((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:boundary((//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:intersection((//gml:Polygon)[1], (//gml:Polygon)[2])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:union((//gml:Polygon)[1], (//gml:Polygon)[2])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:difference((//gml:Polygon)[1], (//gml:Polygon)[2])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:symetricDifference((//gml:Polygon)[1], (//gml:Polygon)[2])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
comment|//Tests with empty sequences
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:transform((), 'EPSG:4326')"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getWKT(())"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:buffer((), 100)"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:buffer((), 100, 1)"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getBbox(())"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:convexHull(())"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:boundary(())"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:union((), ())"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:union((//gml:Polygon)[1], ())"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:union((), (//gml:Polygon)[1])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
comment|//In-memory tests
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:transform("
operator|+
name|IN_MEMORY_GML
operator|+
literal|", 'EPSG:4326')"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:buffer("
operator|+
name|IN_MEMORY_GML
operator|+
literal|", 100)"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:buffer("
operator|+
name|IN_MEMORY_GML
operator|+
literal|", 100, 1)"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:getBbox("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:convexHull("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:boundary("
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:intersection("
operator|+
name|IN_MEMORY_GML
operator|+
literal|", (//gml:Polygon)[2])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:union("
operator|+
name|IN_MEMORY_GML
operator|+
literal|", (//gml:Polygon)[2])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:difference("
operator|+
name|IN_MEMORY_GML
operator|+
literal|", (//gml:Polygon)[2])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:symetricDifference("
operator|+
name|IN_MEMORY_GML
operator|+
literal|", (//gml:Polygon)[2])"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:intersection((//gml:Polygon)[1],"
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:union((//gml:Polygon)[1],"
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:difference((//gml:Polygon)[1],"
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"spatial:symetricDifference((//gml:Polygon)[1],"
operator|+
name|IN_MEMORY_GML
operator|+
literal|")"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testUpdate
parameter_list|()
block|{
try|try
block|{
specifier|final
name|BrokerPool
name|pool
init|=
name|BrokerPool
operator|.
name|getInstance
argument_list|()
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
argument_list|)
argument_list|)
init|)
block|{
name|XQuery
name|xquery
init|=
name|pool
operator|.
name|getXQueryService
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|xquery
argument_list|)
expr_stmt|;
name|String
name|query
init|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"(# exist:force-index-use #) { "
operator|+
literal|"spatial:getArea((//gml:Polygon)[1]) "
operator|+
literal|"}"
decl_stmt|;
name|Sequence
name|seq
init|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|String
name|area1
init|=
name|seq
operator|.
name|toString
argument_list|()
decl_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"update value (//gml:Polygon)[1]/gml:outerBoundaryIs/gml:LinearRing/gml:coordinates "
operator|+
literal|"(: strip decimals :) "
operator|+
literal|"with fn:replace((//gml:Polygon)[1], '(\\d+).(\\d+)', '$1')"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|query
operator|=
literal|"import module namespace spatial='http://exist-db.org/xquery/spatial' "
operator|+
literal|"at 'java:org.exist.examples.indexing.spatial.module.SpatialModule'; "
operator|+
literal|"declare namespace gml = 'http://www.opengis.net/gml'; "
operator|+
literal|"(# exist:force-index-use #) { "
operator|+
literal|"spatial:getArea((//gml:Polygon)[1])"
operator|+
literal|"}"
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|seq
operator|.
name|getItemCount
argument_list|()
operator|==
literal|1
argument_list|)
expr_stmt|;
name|String
name|area2
init|=
name|seq
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
name|area1
operator|.
name|equals
argument_list|(
name|area2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
block|{
try|try
block|{
comment|// initialize driver
name|Class
argument_list|<
name|?
argument_list|>
name|cl
init|=
name|Class
operator|.
name|forName
argument_list|(
literal|"org.exist.xmldb.DatabaseImpl"
argument_list|)
decl_stmt|;
name|database
operator|=
operator|(
name|Database
operator|)
name|cl
operator|.
name|newInstance
argument_list|()
expr_stmt|;
name|database
operator|.
name|setProperty
argument_list|(
literal|"create-database"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|DatabaseManager
operator|.
name|registerDatabase
argument_list|(
name|database
argument_list|)
expr_stmt|;
name|Collection
name|root
init|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|XmldbURI
operator|.
name|LOCAL_DB
argument_list|,
literal|"admin"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|CollectionManagementService
name|service
init|=
operator|(
name|CollectionManagementService
operator|)
name|root
operator|.
name|getService
argument_list|(
literal|"CollectionManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|testCollection
operator|=
name|root
operator|.
name|getChildCollection
argument_list|(
name|TEST_COLLECTION_NAME
argument_list|)
expr_stmt|;
if|if
condition|(
name|testCollection
operator|==
literal|null
condition|)
block|{
name|testCollection
operator|=
name|service
operator|.
name|createCollection
argument_list|(
name|TEST_COLLECTION_NAME
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|testCollection
argument_list|)
expr_stmt|;
name|IndexQueryService
name|idxConf
init|=
operator|(
name|IndexQueryService
operator|)
name|testCollection
operator|.
name|getService
argument_list|(
literal|"IndexQueryService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|idxConf
operator|.
name|configureCollection
argument_list|(
name|COLLECTION_CONFIG
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InstantiationException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalAccessException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|tearDown
parameter_list|()
block|{
try|try
block|{
name|DatabaseManager
operator|.
name|deregisterDatabase
argument_list|(
name|database
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
class|class
name|GeometryHandler
extends|extends
name|XMLFilterImpl
implements|implements
name|GMLHandlerJTS
block|{
specifier|public
name|void
name|geometry
parameter_list|(
name|Geometry
name|geometry
parameter_list|)
block|{
name|currentGeometry
operator|=
name|geometry
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

