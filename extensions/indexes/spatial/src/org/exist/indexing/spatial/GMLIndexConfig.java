begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|indexing
operator|.
name|spatial
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|DatabaseConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
specifier|public
class|class
name|GMLIndexConfig
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|GMLIndexConfig
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|FLUSH_AFTER
init|=
literal|"flushAfter"
decl_stmt|;
specifier|private
name|int
name|flushAfter
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|GMLIndexConfig
parameter_list|(
name|Map
name|namespaces
parameter_list|,
name|Element
name|node
parameter_list|)
throws|throws
name|DatabaseConfigurationException
block|{
comment|//TODO : something useful here
name|String
name|param
init|=
operator|(
operator|(
name|Element
operator|)
name|node
operator|)
operator|.
name|getAttribute
argument_list|(
name|FLUSH_AFTER
argument_list|)
decl_stmt|;
if|if
condition|(
name|param
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|flushAfter
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|param
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Invalid value for '"
operator|+
name|FLUSH_AFTER
operator|+
literal|"'"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|int
name|getFlushAfter
parameter_list|()
block|{
return|return
name|flushAfter
return|;
block|}
block|}
end_class

end_unit

