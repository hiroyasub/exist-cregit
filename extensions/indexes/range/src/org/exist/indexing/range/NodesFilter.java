begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|indexing
operator|.
name|range
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|DocIdSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|DocIdSetIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|Filter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|Bits
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|FixedBitSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|NodeProxy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|NodeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|NodeSetIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|indexing
operator|.
name|lucene
operator|.
name|LuceneUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|numbering
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|ByteConversion
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
specifier|public
class|class
name|NodesFilter
extends|extends
name|Filter
block|{
specifier|private
specifier|final
name|NodeSet
name|contextSet
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Integer
argument_list|,
name|DocIdSet
argument_list|>
name|cachedSets
init|=
operator|new
name|HashMap
argument_list|<
name|Integer
argument_list|,
name|DocIdSet
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|NodesFilter
parameter_list|(
name|NodeSet
name|contextSet
parameter_list|)
block|{
name|this
operator|.
name|contextSet
operator|=
name|contextSet
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|DocIdSet
name|getDocIdSet
parameter_list|(
name|AtomicReaderContext
name|context
parameter_list|,
name|Bits
name|acceptDocs
parameter_list|)
throws|throws
name|IOException
block|{
name|DocIdSet
name|cached
init|=
name|cachedSets
operator|.
name|get
argument_list|(
name|context
operator|.
name|ord
argument_list|)
decl_stmt|;
return|return
name|cached
return|;
block|}
specifier|public
name|void
name|init
parameter_list|(
name|IndexReader
name|reader
parameter_list|)
throws|throws
name|IOException
block|{
for|for
control|(
name|AtomicReaderContext
name|context
range|:
name|reader
operator|.
name|leaves
argument_list|()
control|)
block|{
name|init
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|init
parameter_list|(
name|AtomicReaderContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|AtomicReader
name|reader
init|=
name|context
operator|.
name|reader
argument_list|()
decl_stmt|;
specifier|final
name|FixedBitSet
name|result
init|=
operator|new
name|FixedBitSet
argument_list|(
name|reader
operator|.
name|maxDoc
argument_list|()
argument_list|)
decl_stmt|;
name|cachedSets
operator|.
name|put
argument_list|(
name|context
operator|.
name|ord
argument_list|,
name|result
argument_list|)
expr_stmt|;
specifier|final
name|Fields
name|fields
init|=
name|reader
operator|.
name|fields
argument_list|()
decl_stmt|;
name|Terms
name|terms
init|=
name|fields
operator|.
name|terms
argument_list|(
name|RangeIndexWorker
operator|.
name|FIELD_ID
argument_list|)
decl_stmt|;
if|if
condition|(
name|terms
operator|!=
literal|null
condition|)
block|{
name|TermsEnum
name|termsEnum
init|=
name|terms
operator|.
name|iterator
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|DocsEnum
name|docs
init|=
literal|null
decl_stmt|;
for|for
control|(
name|NodeSetIterator
name|i
init|=
name|contextSet
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|NodeProxy
name|node
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|BytesRef
name|lowerBound
init|=
operator|new
name|BytesRef
argument_list|(
name|LuceneUtil
operator|.
name|createId
argument_list|(
name|node
operator|.
name|getDoc
argument_list|()
operator|.
name|getDocId
argument_list|()
argument_list|,
name|node
operator|.
name|getNodeId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|BytesRef
name|upperBound
init|=
operator|new
name|BytesRef
argument_list|(
name|LuceneUtil
operator|.
name|createId
argument_list|(
name|node
operator|.
name|getDoc
argument_list|()
operator|.
name|getDocId
argument_list|()
argument_list|,
name|node
operator|.
name|getNodeId
argument_list|()
operator|.
name|nextSibling
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|termsEnum
operator|.
name|seekCeil
argument_list|(
name|lowerBound
argument_list|,
literal|false
argument_list|)
operator|!=
name|TermsEnum
operator|.
name|SeekStatus
operator|.
name|END
condition|)
block|{
do|do
block|{
name|BytesRef
name|nextId
init|=
name|termsEnum
operator|.
name|term
argument_list|()
decl_stmt|;
if|if
condition|(
name|nextId
operator|.
name|compareTo
argument_list|(
name|upperBound
argument_list|)
operator|<
literal|0
condition|)
block|{
name|docs
operator|=
name|termsEnum
operator|.
name|docs
argument_list|(
literal|null
argument_list|,
name|docs
argument_list|,
name|DocsEnum
operator|.
name|FLAG_NONE
argument_list|)
expr_stmt|;
while|while
condition|(
name|docs
operator|.
name|nextDoc
argument_list|()
operator|!=
name|DocIdSetIterator
operator|.
name|NO_MORE_DOCS
condition|)
block|{
name|int
name|id
init|=
name|docs
operator|.
name|docID
argument_list|()
decl_stmt|;
name|result
operator|.
name|set
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
break|break;
block|}
block|}
do|while
condition|(
name|termsEnum
operator|.
name|next
argument_list|()
operator|!=
literal|null
condition|)
do|;
block|}
block|}
block|}
block|}
specifier|private
specifier|static
name|boolean
name|startsWith
parameter_list|(
name|byte
index|[]
name|key
parameter_list|,
name|int
name|offset
parameter_list|,
name|int
name|length
parameter_list|,
name|byte
index|[]
name|prefix
parameter_list|)
block|{
if|if
condition|(
name|length
operator|<
name|prefix
operator|.
name|length
condition|)
block|{
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|prefix
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|key
index|[
name|offset
operator|+
name|i
index|]
operator|!=
name|prefix
index|[
name|i
index|]
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
block|}
end_class

end_unit

