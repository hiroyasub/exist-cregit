begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2010 The eXist Project  *  http://exist-db.org  *    *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *    *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *    *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *    *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|synchro
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|config
operator|.
name|annotation
operator|.
name|ConfigurationClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|config
operator|.
name|annotation
operator|.
name|ConfigurationFieldAsElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|DocumentImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|DatabaseConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:shabanovd@gmail.com">Dmitriy Shabanov</a>  *   */
end_comment

begin_class
annotation|@
name|ConfigurationClass
argument_list|(
literal|"synchro"
argument_list|)
specifier|public
class|class
name|Synchro
block|{
comment|//	public static void plug() {
comment|//		BrokerPool.plug(Synchro.class);
comment|//	}
annotation|@
name|ConfigurationFieldAsElement
argument_list|(
literal|"cluster"
argument_list|)
specifier|private
name|List
argument_list|<
name|Communicator
argument_list|>
name|clusters
init|=
operator|new
name|ArrayList
argument_list|<
name|Communicator
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Database
name|db
decl_stmt|;
specifier|public
name|Synchro
parameter_list|(
name|Database
name|db
parameter_list|)
throws|throws
name|DatabaseConfigurationException
block|{
name|this
operator|.
name|db
operator|=
name|db
expr_stmt|;
name|db
operator|.
name|getIndexManager
argument_list|()
operator|.
name|registerIndex
argument_list|(
operator|new
name|DBWatch
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Database
name|getDatabase
parameter_list|()
block|{
return|return
name|db
return|;
block|}
specifier|public
name|void
name|shutdown
parameter_list|()
block|{
for|for
control|(
name|Communicator
name|cluster
range|:
name|clusters
control|)
block|{
name|cluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Communicator
name|getCluster
parameter_list|(
name|DocumentImpl
name|document
parameter_list|)
block|{
name|XmldbURI
name|uri
init|=
name|document
operator|.
name|getURI
argument_list|()
decl_stmt|;
for|for
control|(
name|Communicator
name|cluster
range|:
name|clusters
control|)
block|{
if|if
condition|(
name|uri
operator|.
name|startsWith
argument_list|(
name|cluster
operator|.
name|collectionURI
argument_list|)
condition|)
return|return
name|cluster
return|;
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

