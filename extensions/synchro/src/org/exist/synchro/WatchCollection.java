begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2010 The eXist Project  *  http://exist-db.org  *    *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *    *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *    *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *    *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|synchro
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|CollectionConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|triggers
operator|.
name|CollectionTrigger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|triggers
operator|.
name|TriggerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|Txn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|blocks
operator|.
name|MethodCall
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:shabanovd@gmail.com">Dmitriy Shabanov</a>  *  */
end_comment

begin_class
specifier|public
class|class
name|WatchCollection
implements|implements
name|CollectionTrigger
block|{
specifier|private
name|Communicator
name|comm
init|=
literal|null
decl_stmt|;
comment|/* (non-Javadoc) 	 * @see org.exist.collections.triggers.Trigger#configure(org.exist.storage.DBBroker, org.exist.collections.Collection, java.util.Map) 	 */
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Collection
name|parent
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|?
argument_list|>
argument_list|>
name|parameters
parameter_list|)
throws|throws
name|CollectionConfigurationException
block|{
name|List
argument_list|<
name|?
argument_list|>
name|objs
init|=
name|parameters
operator|.
name|get
argument_list|(
name|Communicator
operator|.
name|COMMUNICATOR
argument_list|)
decl_stmt|;
if|if
condition|(
name|objs
operator|!=
literal|null
condition|)
name|comm
operator|=
operator|(
name|Communicator
operator|)
name|objs
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
comment|/* (non-Javadoc) 	 * @see org.exist.collections.triggers.Trigger#getLogger() 	 */
annotation|@
name|Override
specifier|public
name|Logger
name|getLogger
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
comment|/* (non-Javadoc) 	 * @see org.exist.collections.triggers.CollectionTrigger#prepare(int, org.exist.storage.DBBroker, org.exist.storage.txn.Txn, org.exist.collections.Collection, java.lang.String) 	 */
annotation|@
name|Override
specifier|public
name|void
name|prepare
parameter_list|(
name|int
name|event
parameter_list|,
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|Collection
name|collection
parameter_list|,
name|Collection
name|newCollection
parameter_list|)
throws|throws
name|TriggerException
block|{
block|}
comment|/* (non-Javadoc) 	 * @see org.exist.collections.triggers.CollectionTrigger#finish(int, org.exist.storage.DBBroker, org.exist.storage.txn.Txn, org.exist.collections.Collection, java.lang.String) 	 */
annotation|@
name|Override
specifier|public
name|void
name|finish
parameter_list|(
name|int
name|event
parameter_list|,
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|Collection
name|collection
parameter_list|,
name|Collection
name|newCollection
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeCreateCollection
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|XmldbURI
name|uri
parameter_list|)
throws|throws
name|TriggerException
block|{
if|if
condition|(
name|comm
operator|==
literal|null
condition|)
return|return;
name|comm
operator|.
name|callRemoteMethods
argument_list|(
operator|new
name|MethodCall
argument_list|(
name|Communicator
operator|.
name|BEFORE_CREATE_COLLECTION
argument_list|,
name|comm
operator|.
name|getChannel
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|uri
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterCreateCollection
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|Collection
name|collection
parameter_list|)
throws|throws
name|TriggerException
block|{
if|if
condition|(
name|comm
operator|==
literal|null
condition|)
return|return;
name|comm
operator|.
name|callRemoteMethods
argument_list|(
operator|new
name|MethodCall
argument_list|(
name|Communicator
operator|.
name|AFTER_CREATE_COLLECTION
argument_list|,
name|comm
operator|.
name|getChannel
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|collection
operator|.
name|getURI
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeCopyCollection
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|Collection
name|collection
parameter_list|,
name|XmldbURI
name|newUri
parameter_list|)
throws|throws
name|TriggerException
block|{
if|if
condition|(
name|comm
operator|==
literal|null
condition|)
return|return;
name|comm
operator|.
name|callRemoteMethods
argument_list|(
operator|new
name|MethodCall
argument_list|(
name|Communicator
operator|.
name|BEFORE_COPY_COLLECTION
argument_list|,
name|comm
operator|.
name|getChannel
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|collection
operator|.
name|getURI
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterCopyCollection
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|Collection
name|collection
parameter_list|,
name|XmldbURI
name|newUri
parameter_list|)
throws|throws
name|TriggerException
block|{
if|if
condition|(
name|comm
operator|==
literal|null
condition|)
return|return;
name|comm
operator|.
name|callRemoteMethods
argument_list|(
operator|new
name|MethodCall
argument_list|(
name|Communicator
operator|.
name|AFTER_COPY_COLLECTION
argument_list|,
name|comm
operator|.
name|getChannel
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|collection
operator|.
name|getURI
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeMoveCollection
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|Collection
name|collection
parameter_list|,
name|XmldbURI
name|newUri
parameter_list|)
throws|throws
name|TriggerException
block|{
if|if
condition|(
name|comm
operator|==
literal|null
condition|)
return|return;
name|comm
operator|.
name|callRemoteMethods
argument_list|(
operator|new
name|MethodCall
argument_list|(
name|Communicator
operator|.
name|BEFORE_MOVE_COLLECTION
argument_list|,
name|comm
operator|.
name|getChannel
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|collection
operator|.
name|getURI
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterMoveCollection
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|Collection
name|collection
parameter_list|,
name|XmldbURI
name|newUri
parameter_list|)
throws|throws
name|TriggerException
block|{
if|if
condition|(
name|comm
operator|==
literal|null
condition|)
return|return;
name|comm
operator|.
name|callRemoteMethods
argument_list|(
operator|new
name|MethodCall
argument_list|(
name|Communicator
operator|.
name|AFTER_MOVE_COLLECTION
argument_list|,
name|comm
operator|.
name|getChannel
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|collection
operator|.
name|getURI
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeDeleteCollection
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|Collection
name|collection
parameter_list|)
throws|throws
name|TriggerException
block|{
if|if
condition|(
name|comm
operator|==
literal|null
condition|)
return|return;
name|comm
operator|.
name|callRemoteMethods
argument_list|(
operator|new
name|MethodCall
argument_list|(
name|Communicator
operator|.
name|BEFORE_DELETE_COLLECTION
argument_list|,
name|comm
operator|.
name|getChannel
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|collection
operator|.
name|getURI
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterDeleteCollection
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|XmldbURI
name|uri
parameter_list|)
throws|throws
name|TriggerException
block|{
if|if
condition|(
name|comm
operator|==
literal|null
condition|)
return|return;
name|comm
operator|.
name|callRemoteMethods
argument_list|(
operator|new
name|MethodCall
argument_list|(
name|Communicator
operator|.
name|AFTER_DELETE_COLLECTION
argument_list|,
name|comm
operator|.
name|getChannel
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|uri
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

