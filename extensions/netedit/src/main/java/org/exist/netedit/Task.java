begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2010 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|netedit
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|attribute
operator|.
name|FileTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|HttpException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|FileUtils
import|;
end_import

begin_comment
comment|/**  * @author Evgeny Gazdovsky (gazdovsky@gmail.com)  */
end_comment

begin_class
specifier|public
class|class
name|Task
block|{
specifier|private
name|NetEditApplet
name|netEdit
decl_stmt|;
specifier|private
name|String
name|downloadFrom
decl_stmt|;
comment|// URL of file download from
specifier|private
name|String
name|uploadTo
decl_stmt|;
comment|// URL for upload file
specifier|private
name|Path
name|tmp
decl_stmt|;
comment|// Downladed file
comment|/** 	 * Create a new task 	 * @param downloadFrom URL of file download from 	 * @param uploadTo URL for upload file after changes 	 * @param netEdit NetEditApplet 	 */
specifier|public
name|Task
parameter_list|(
name|String
name|downloadFrom
parameter_list|,
name|String
name|uploadTo
parameter_list|,
name|NetEditApplet
name|netEdit
parameter_list|)
block|{
name|this
operator|.
name|downloadFrom
operator|=
name|downloadFrom
expr_stmt|;
name|this
operator|.
name|uploadTo
operator|=
name|uploadTo
expr_stmt|;
name|this
operator|.
name|netEdit
operator|=
name|netEdit
expr_stmt|;
block|}
comment|/** 	 * Create a task, used for stored task 	 * @param downloadFrom URL of file download from 	 * @param uploadTo URL for upload file after changes 	 * @param tmp path of file stored in local cache 	 * @param netEdit NetEditApplet 	 */
specifier|public
name|Task
parameter_list|(
name|String
name|downloadFrom
parameter_list|,
name|String
name|uploadTo
parameter_list|,
name|Path
name|tmp
parameter_list|,
name|NetEditApplet
name|netEdit
parameter_list|)
block|{
name|this
operator|.
name|downloadFrom
operator|=
name|downloadFrom
expr_stmt|;
name|this
operator|.
name|uploadTo
operator|=
name|uploadTo
expr_stmt|;
name|this
operator|.
name|netEdit
operator|=
name|netEdit
expr_stmt|;
name|this
operator|.
name|tmp
operator|=
name|tmp
expr_stmt|;
block|}
comment|/** 	 * Execute task: dowload file, store desrioption, 	 * then file changes listener and open one  	 * in desktop application.  	 */
specifier|public
name|void
name|execute
parameter_list|()
block|{
try|try
block|{
name|tmp
operator|=
name|netEdit
operator|.
name|download
argument_list|(
name|downloadFrom
argument_list|)
expr_stmt|;
name|store
argument_list|()
expr_stmt|;
name|Listener
name|listener
init|=
operator|new
name|Listener
argument_list|(
name|this
argument_list|,
name|netEdit
argument_list|)
decl_stmt|;
name|Timer
name|timer
init|=
operator|new
name|Timer
argument_list|()
decl_stmt|;
name|timer
operator|.
name|schedule
argument_list|(
name|listener
argument_list|,
name|NetEditApplet
operator|.
name|PERIOD
argument_list|,
name|NetEditApplet
operator|.
name|PERIOD
argument_list|)
expr_stmt|;
name|netEdit
operator|.
name|open
argument_list|(
name|tmp
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|HttpException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|getDownloadFrom
parameter_list|()
block|{
return|return
name|downloadFrom
return|;
block|}
specifier|public
name|String
name|getUploadTo
parameter_list|()
block|{
return|return
name|uploadTo
return|;
block|}
specifier|public
name|Path
name|getFile
parameter_list|()
block|{
return|return
name|tmp
return|;
block|}
comment|/** 	 * Store task description into FS as XML doc 	 * @throws IOException 	 */
specifier|public
name|void
name|store
parameter_list|()
throws|throws
name|IOException
block|{
name|Properties
name|prop
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|prop
operator|.
name|put
argument_list|(
literal|"download-from"
argument_list|,
name|downloadFrom
argument_list|)
expr_stmt|;
name|prop
operator|.
name|put
argument_list|(
literal|"upload-to"
argument_list|,
name|uploadTo
argument_list|)
expr_stmt|;
name|prop
operator|.
name|put
argument_list|(
literal|"file"
argument_list|,
name|tmp
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|prop
operator|.
name|put
argument_list|(
literal|"modified"
argument_list|,
name|Long
operator|.
name|toString
argument_list|(
name|FileUtils
operator|.
name|lastModifiedQuietly
argument_list|(
name|tmp
argument_list|)
operator|.
name|map
argument_list|(
name|FileTime
operator|::
name|toMillis
argument_list|)
operator|.
name|getOrElse
argument_list|(
operator|-
literal|1l
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Path
name|fld
init|=
name|netEdit
operator|.
name|getMeta
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|Files
operator|.
name|isDirectory
argument_list|(
name|fld
argument_list|)
condition|)
block|{
name|Files
operator|.
name|createDirectories
argument_list|(
name|fld
argument_list|)
expr_stmt|;
block|}
name|String
name|name
init|=
name|Integer
operator|.
name|toHexString
argument_list|(
name|downloadFrom
operator|.
name|hashCode
argument_list|()
argument_list|)
operator|+
literal|".xml"
decl_stmt|;
name|Path
name|meta
init|=
name|fld
operator|.
name|resolve
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|Files
operator|.
name|exists
argument_list|(
name|meta
argument_list|)
condition|)
block|{
name|Files
operator|.
name|createFile
argument_list|(
name|meta
argument_list|)
expr_stmt|;
block|}
try|try
init|(
specifier|final
name|OutputStream
name|os
init|=
name|Files
operator|.
name|newOutputStream
argument_list|(
name|meta
argument_list|)
init|)
block|{
name|prop
operator|.
name|storeToXML
argument_list|(
name|os
argument_list|,
literal|"net-edit task description"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

