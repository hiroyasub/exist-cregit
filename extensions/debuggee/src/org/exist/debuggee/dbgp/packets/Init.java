begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2009 The eXist Project  *  http://exist-db.org  *    *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *    *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *    *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *    *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|debuggee
operator|.
name|dbgp
operator|.
name|packets
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|mina
operator|.
name|core
operator|.
name|session
operator|.
name|IoSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|xacml
operator|.
name|XACMLSource
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:shabanovd@gmail.com">Dmitriy Shabanov</a>  *  */
end_comment

begin_class
specifier|public
class|class
name|Init
extends|extends
name|AbstractCommandContinuation
block|{
specifier|private
name|XACMLSource
name|fileuri
decl_stmt|;
specifier|private
name|String
name|idekey
init|=
literal|"1"
decl_stmt|;
specifier|private
name|String
name|idesession
init|=
literal|"1"
decl_stmt|;
specifier|public
name|Init
parameter_list|(
name|IoSession
name|session
parameter_list|)
block|{
name|super
argument_list|(
name|session
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Init
parameter_list|(
name|IoSession
name|session
parameter_list|,
name|String
name|idesession
parameter_list|,
name|String
name|idekey
parameter_list|)
block|{
name|super
argument_list|(
name|session
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|this
operator|.
name|idekey
operator|=
name|idekey
expr_stmt|;
name|this
operator|.
name|idesession
operator|=
name|idesession
expr_stmt|;
block|}
specifier|public
name|void
name|setFileURI
parameter_list|(
name|XACMLSource
name|source
parameter_list|)
block|{
name|fileuri
operator|=
name|source
expr_stmt|;
if|if
condition|(
operator|!
name|session
operator|.
name|isClosing
argument_list|()
condition|)
name|session
operator|.
name|write
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
specifier|public
name|byte
index|[]
name|responseBytes
parameter_list|()
block|{
name|String
name|init_message
init|=
literal|"<init "
operator|+
literal|"xmlns=\"urn:debugger_protocol_v1\" "
operator|+
literal|"xmlns:xdebug=\"http://xdebug.org/dbgp/xdebug\" "
operator|+
literal|"appid=\"eXist050705\" "
operator|+
comment|//keep this as memory of creation
literal|"idekey=\""
operator|+
name|idekey
operator|+
literal|"\" "
operator|+
literal|"session=\""
operator|+
name|idesession
operator|+
literal|"\" "
operator|+
comment|//"thread=\"1\" " +
comment|//"parent=\"1\" " +
literal|"language=\"XQuery\" "
operator|+
literal|"protocol_version=\"1.0\" "
operator|+
literal|"fileuri=\""
operator|+
name|Command
operator|.
name|getFileuri
argument_list|(
name|fileuri
argument_list|)
operator|+
literal|"\"></init>"
decl_stmt|;
return|return
name|init_message
operator|.
name|getBytes
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|exec
parameter_list|()
block|{
block|}
specifier|public
name|void
name|setStatus
parameter_list|(
name|String
name|status
parameter_list|)
block|{
name|this
operator|.
name|status
operator|=
name|status
expr_stmt|;
block|}
specifier|public
name|int
name|getType
parameter_list|()
block|{
return|return
name|INIT
return|;
block|}
specifier|public
name|boolean
name|is
parameter_list|(
name|int
name|type
parameter_list|)
block|{
return|return
operator|(
name|type
operator|==
name|INIT
operator|)
return|;
block|}
specifier|public
name|byte
index|[]
name|commandBytes
parameter_list|()
block|{
return|return
operator|new
name|byte
index|[
literal|0
index|]
return|;
block|}
block|}
end_class

end_unit

