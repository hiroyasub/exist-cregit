begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2009 The eXist Project  *  http://exist-db.org  *    *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *    *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *    *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *    *  $Id:$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|debugger
operator|.
name|dgbp
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|mina
operator|.
name|core
operator|.
name|service
operator|.
name|IoHandlerAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|mina
operator|.
name|core
operator|.
name|session
operator|.
name|IdleStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|mina
operator|.
name|core
operator|.
name|session
operator|.
name|IoSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|debugger
operator|.
name|Debugger
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:shabanovd@gmail.com">Dmitriy Shabanov</a>  *  */
end_comment

begin_class
specifier|public
class|class
name|DGBPProtocolHandler
extends|extends
name|IoHandlerAdapter
block|{
specifier|private
name|Debugger
name|debugger
decl_stmt|;
specifier|public
name|DGBPProtocolHandler
parameter_list|(
name|Debugger
name|debugger
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|debugger
operator|=
name|debugger
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|sessionOpened
parameter_list|(
name|IoSession
name|session
parameter_list|)
block|{
name|session
operator|.
name|setAttribute
argument_list|(
literal|"debugger"
argument_list|,
name|debugger
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|sessionClosed
parameter_list|(
name|IoSession
name|session
parameter_list|)
block|{
name|Debugger
name|debugger
init|=
operator|(
name|Debugger
operator|)
name|session
operator|.
name|getAttribute
argument_list|(
literal|"debugger"
argument_list|)
decl_stmt|;
name|debugger
operator|.
name|sessionClosed
argument_list|()
expr_stmt|;
comment|// Print out total number of bytes read from the remote peer.
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Total "
operator|+
name|session
operator|.
name|getReadBytes
argument_list|()
operator|+
literal|" byte(s)"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|sessionIdle
parameter_list|(
name|IoSession
name|session
parameter_list|,
name|IdleStatus
name|status
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|messageReceived
parameter_list|(
name|IoSession
name|session
parameter_list|,
name|Object
name|message
parameter_list|)
block|{
comment|//		session.write(message);
block|}
specifier|public
name|void
name|exceptionCaught
parameter_list|(
name|IoSession
name|session
parameter_list|,
name|Throwable
name|cause
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|cause
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

