begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-07 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  * $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|versioning
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|triggers
operator|.
name|FilteringTrigger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|triggers
operator|.
name|TriggerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|IndexInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|BrokerPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|lock
operator|.
name|Lock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|Txn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|DocumentImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|LockException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|EXistException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|value
operator|.
name|DateTimeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|XPathException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLStreamException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_class
specifier|public
class|class
name|VersioningTrigger
extends|extends
name|FilteringTrigger
block|{
specifier|public
specifier|final
specifier|static
name|Logger
name|LOG
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|VersioningTrigger
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|XmldbURI
name|VERSIONS_COLLECTION
init|=
name|XmldbURI
operator|.
name|SYSTEM_COLLECTION_URI
operator|.
name|append
argument_list|(
literal|"versions"
argument_list|)
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|BASE_SUFFIX
init|=
literal|".base"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|TEMP_SUFFIX
init|=
literal|".tmp"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|Object
name|latch
init|=
operator|new
name|Object
argument_list|()
decl_stmt|;
specifier|private
name|DocumentImpl
name|lastRev
init|=
literal|null
decl_stmt|;
specifier|private
name|boolean
name|removeLast
init|=
literal|false
decl_stmt|;
specifier|private
name|Collection
name|vCollection
decl_stmt|;
specifier|public
name|void
name|prepare
parameter_list|(
name|int
name|event
parameter_list|,
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|XmldbURI
name|documentPath
parameter_list|,
name|DocumentImpl
name|existingDocument
parameter_list|)
throws|throws
name|TriggerException
block|{
name|User
name|activeUser
init|=
name|broker
operator|.
name|getUser
argument_list|()
decl_stmt|;
try|try
block|{
name|broker
operator|.
name|setUser
argument_list|(
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|SecurityManager
operator|.
name|SYSTEM_USER
argument_list|)
expr_stmt|;
if|if
condition|(
name|event
operator|==
name|UPDATE_DOCUMENT_EVENT
operator|||
name|event
operator|==
name|REMOVE_DOCUMENT_EVENT
condition|)
block|{
name|existingDocument
operator|.
name|getMetadata
argument_list|()
operator|.
name|setReferenced
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Collection
name|collection
init|=
name|existingDocument
operator|.
name|getCollection
argument_list|()
decl_stmt|;
if|if
condition|(
name|collection
operator|.
name|getURI
argument_list|()
operator|.
name|startsWith
argument_list|(
name|VERSIONS_COLLECTION
argument_list|)
condition|)
return|return;
name|vCollection
operator|=
name|getCollection
argument_list|(
name|broker
argument_list|,
name|transaction
argument_list|,
name|documentPath
operator|.
name|removeLastSegment
argument_list|()
argument_list|)
expr_stmt|;
name|XmldbURI
name|baseURI
init|=
name|XmldbURI
operator|.
name|create
argument_list|(
name|existingDocument
operator|.
name|getFileURI
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
name|BASE_SUFFIX
argument_list|)
decl_stmt|;
name|DocumentImpl
name|baseRev
init|=
name|vCollection
operator|.
name|getDocument
argument_list|(
name|broker
argument_list|,
name|baseURI
argument_list|)
decl_stmt|;
name|String
name|vFileName
decl_stmt|;
if|if
condition|(
name|baseRev
operator|==
literal|null
condition|)
block|{
name|vFileName
operator|=
name|baseURI
operator|.
name|toString
argument_list|()
expr_stmt|;
name|removeLast
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|vFileName
operator|=
name|existingDocument
operator|.
name|getFileURI
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
name|TEMP_SUFFIX
expr_stmt|;
name|removeLast
operator|=
literal|true
expr_stmt|;
block|}
name|DocumentImpl
name|vDoc
init|=
operator|new
name|DocumentImpl
argument_list|(
name|broker
operator|.
name|getBrokerPool
argument_list|()
argument_list|,
name|vCollection
argument_list|,
name|XmldbURI
operator|.
name|createInternal
argument_list|(
name|vFileName
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|vDoc
operator|.
name|getUpdateLock
argument_list|()
operator|.
name|acquire
argument_list|(
name|Lock
operator|.
name|WRITE_LOCK
argument_list|)
expr_stmt|;
name|vDoc
operator|.
name|copyOf
argument_list|(
name|existingDocument
argument_list|)
expr_stmt|;
name|vDoc
operator|.
name|copyChildren
argument_list|(
name|existingDocument
argument_list|)
expr_stmt|;
name|vCollection
operator|.
name|addDocument
argument_list|(
name|transaction
argument_list|,
name|broker
argument_list|,
name|vDoc
argument_list|)
expr_stmt|;
name|broker
operator|.
name|storeXMLResource
argument_list|(
name|transaction
argument_list|,
name|vDoc
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|vDoc
operator|.
name|getUpdateLock
argument_list|()
operator|.
name|release
argument_list|(
name|Lock
operator|.
name|WRITE_LOCK
argument_list|)
expr_stmt|;
block|}
name|lastRev
operator|=
name|vDoc
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|PermissionDeniedException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|TriggerException
argument_list|(
literal|"Permission denied in VersioningTrigger: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Caught exception in VersioningTrigger: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|broker
operator|.
name|setUser
argument_list|(
name|activeUser
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|finish
parameter_list|(
name|int
name|event
parameter_list|,
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|XmldbURI
name|documentPath
parameter_list|,
name|DocumentImpl
name|document
parameter_list|)
block|{
if|if
condition|(
name|lastRev
operator|!=
literal|null
condition|)
block|{
name|XMLDiff
name|diff
init|=
operator|new
name|XMLDiff
argument_list|(
name|broker
argument_list|)
decl_stmt|;
name|DocumentImpl
name|base
init|=
literal|null
decl_stmt|;
try|try
block|{
name|vCollection
operator|.
name|setTriggersEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|long
name|rev
init|=
name|newRevision
argument_list|(
name|broker
operator|.
name|getBrokerPool
argument_list|()
argument_list|)
decl_stmt|;
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"document"
argument_list|,
name|document
operator|.
name|getFileURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"revision"
argument_list|,
name|Long
operator|.
name|toString
argument_list|(
name|rev
argument_list|)
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"date"
argument_list|,
operator|new
name|DateTimeValue
argument_list|(
operator|new
name|Date
argument_list|()
argument_list|)
operator|.
name|getStringValue
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|editscript
init|=
name|diff
operator|.
name|diff
argument_list|(
name|lastRev
argument_list|,
name|document
argument_list|,
name|properties
argument_list|)
decl_stmt|;
name|XmldbURI
name|diffUri
init|=
name|XmldbURI
operator|.
name|createInternal
argument_list|(
name|document
operator|.
name|getFileURI
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|'.'
operator|+
name|rev
argument_list|)
decl_stmt|;
name|IndexInfo
name|info
init|=
name|vCollection
operator|.
name|validateXMLResource
argument_list|(
name|transaction
argument_list|,
name|broker
argument_list|,
name|diffUri
argument_list|,
name|editscript
argument_list|)
decl_stmt|;
name|vCollection
operator|.
name|store
argument_list|(
name|transaction
argument_list|,
name|broker
argument_list|,
name|info
argument_list|,
name|editscript
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|editscript
argument_list|)
expr_stmt|;
if|if
condition|(
name|removeLast
condition|)
name|vCollection
operator|.
name|removeXMLResource
argument_list|(
name|transaction
argument_list|,
name|broker
argument_list|,
name|lastRev
operator|.
name|getFileURI
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Caught exception in VersioningTrigger: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|base
operator|!=
literal|null
condition|)
name|base
operator|.
name|getUpdateLock
argument_list|()
operator|.
name|release
argument_list|(
name|Lock
operator|.
name|READ_LOCK
argument_list|)
expr_stmt|;
name|vCollection
operator|.
name|setTriggersEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|Collection
name|getCollection
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|XmldbURI
name|collectionPath
parameter_list|)
throws|throws
name|IOException
throws|,
name|PermissionDeniedException
block|{
name|XmldbURI
name|path
init|=
name|VERSIONS_COLLECTION
operator|.
name|append
argument_list|(
name|collectionPath
argument_list|)
decl_stmt|;
name|Collection
name|collection
init|=
name|broker
operator|.
name|openCollection
argument_list|(
name|path
argument_list|,
name|Lock
operator|.
name|WRITE_LOCK
argument_list|)
decl_stmt|;
if|if
condition|(
name|collection
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
name|LOG
operator|.
name|debug
argument_list|(
literal|"Creating versioning collection: "
operator|+
name|path
argument_list|)
expr_stmt|;
name|collection
operator|=
name|broker
operator|.
name|getOrCreateCollection
argument_list|(
name|transaction
argument_list|,
name|path
argument_list|)
expr_stmt|;
name|broker
operator|.
name|saveCollection
argument_list|(
name|transaction
argument_list|,
name|collection
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|transaction
operator|.
name|registerLock
argument_list|(
name|collection
operator|.
name|getLock
argument_list|()
argument_list|,
name|Lock
operator|.
name|WRITE_LOCK
argument_list|)
expr_stmt|;
block|}
return|return
name|collection
return|;
block|}
specifier|private
name|DocumentImpl
name|getLastRevision
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Collection
name|vCollection
parameter_list|,
name|XmldbURI
name|documentPath
parameter_list|)
block|{
name|String
name|docName
init|=
name|documentPath
operator|.
name|lastSegment
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|long
name|lastRev
init|=
operator|-
literal|1
decl_stmt|;
name|DocumentImpl
name|lastDoc
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|vCollection
operator|.
name|iterator
argument_list|(
name|broker
argument_list|)
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|DocumentImpl
name|doc
init|=
operator|(
name|DocumentImpl
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|fname
init|=
name|doc
operator|.
name|getFileURI
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
if|if
condition|(
name|fname
operator|.
name|startsWith
argument_list|(
name|docName
argument_list|)
condition|)
block|{
name|int
name|p
init|=
name|fname
operator|.
name|lastIndexOf
argument_list|(
literal|'.'
argument_list|)
decl_stmt|;
if|if
condition|(
name|p
operator|>
operator|-
literal|1
condition|)
block|{
name|String
name|revStr
init|=
name|fname
operator|.
name|substring
argument_list|(
name|p
operator|+
literal|1
argument_list|)
decl_stmt|;
try|try
block|{
name|long
name|rev
init|=
name|Long
operator|.
name|parseLong
argument_list|(
name|revStr
argument_list|)
decl_stmt|;
if|if
condition|(
name|rev
operator|>
name|lastRev
condition|)
block|{
name|lastRev
operator|=
name|rev
expr_stmt|;
name|lastDoc
operator|=
name|doc
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{
block|}
block|}
block|}
block|}
return|return
name|lastDoc
return|;
block|}
specifier|private
name|long
name|newRevision
parameter_list|(
name|BrokerPool
name|pool
parameter_list|)
block|{
name|String
name|dataDir
init|=
operator|(
name|String
operator|)
name|pool
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getProperty
argument_list|(
name|BrokerPool
operator|.
name|PROPERTY_DATA_DIR
argument_list|)
decl_stmt|;
synchronized|synchronized
init|(
name|latch
init|)
block|{
name|File
name|f
init|=
operator|new
name|File
argument_list|(
name|dataDir
argument_list|,
literal|"versions.dbx"
argument_list|)
decl_stmt|;
name|long
name|rev
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|f
operator|.
name|canRead
argument_list|()
condition|)
block|{
try|try
block|{
name|DataInputStream
name|is
init|=
operator|new
name|DataInputStream
argument_list|(
operator|new
name|FileInputStream
argument_list|(
name|f
argument_list|)
argument_list|)
decl_stmt|;
name|rev
operator|=
name|is
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Failed to read versions.dbx: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Failed to read versions.dbx: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
operator|++
name|rev
expr_stmt|;
try|try
block|{
name|DataOutputStream
name|os
init|=
operator|new
name|DataOutputStream
argument_list|(
operator|new
name|FileOutputStream
argument_list|(
name|f
argument_list|)
argument_list|)
decl_stmt|;
name|os
operator|.
name|writeLong
argument_list|(
name|rev
argument_list|)
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Failed to write versions.dbx: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Failed to write versions.dbx: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
return|return
name|rev
return|;
block|}
block|}
block|}
end_class

end_unit

