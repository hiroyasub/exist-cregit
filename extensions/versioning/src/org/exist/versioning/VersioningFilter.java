begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|versioning
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|persistent
operator|.
name|DocumentImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|persistent
operator|.
name|NodeHandle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|serializer
operator|.
name|AttrList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|PermissionDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|serializers
operator|.
name|CustomMatchListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|XPathException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
specifier|public
class|class
name|VersioningFilter
extends|extends
name|CustomMatchListener
block|{
specifier|private
specifier|final
specifier|static
name|Logger
name|LOG
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|VersioningFilter
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|QName
name|ATTR_REVISION
init|=
operator|new
name|QName
argument_list|(
literal|"revision"
argument_list|,
name|StandardDiff
operator|.
name|NAMESPACE
argument_list|,
name|StandardDiff
operator|.
name|PREFIX
argument_list|)
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|QName
name|ATTR_KEY
init|=
operator|new
name|QName
argument_list|(
literal|"key"
argument_list|,
name|StandardDiff
operator|.
name|NAMESPACE
argument_list|,
name|StandardDiff
operator|.
name|PREFIX
argument_list|)
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|QName
name|ATTR_PATH
init|=
operator|new
name|QName
argument_list|(
literal|"path"
argument_list|,
name|StandardDiff
operator|.
name|NAMESPACE
argument_list|,
name|StandardDiff
operator|.
name|PREFIX
argument_list|)
decl_stmt|;
specifier|private
name|int
name|elementStack
init|=
literal|0
decl_stmt|;
specifier|public
name|VersioningFilter
parameter_list|()
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|startElement
parameter_list|(
name|QName
name|qname
parameter_list|,
name|AttrList
name|attribs
parameter_list|)
throws|throws
name|SAXException
block|{
if|if
condition|(
name|elementStack
operator|==
literal|0
condition|)
block|{
name|NodeHandle
name|node
init|=
name|getCurrentNode
argument_list|()
decl_stmt|;
if|if
condition|(
name|node
operator|!=
literal|null
condition|)
block|{
name|DocumentImpl
name|doc
init|=
name|node
operator|.
name|getOwnerDocument
argument_list|()
decl_stmt|;
name|XmldbURI
name|uri
init|=
name|doc
operator|.
name|getURI
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|uri
operator|.
name|startsWith
argument_list|(
name|XmldbURI
operator|.
name|SYSTEM_COLLECTION_URI
argument_list|)
condition|)
block|{
if|if
condition|(
name|doc
operator|.
name|getCollection
argument_list|()
operator|.
name|getConfiguration
argument_list|(
name|getBroker
argument_list|()
argument_list|)
operator|.
name|triggerRegistered
argument_list|(
name|VersioningTrigger
operator|.
name|class
argument_list|)
condition|)
block|{
try|try
block|{
name|long
name|rev
init|=
name|VersioningHelper
operator|.
name|getCurrentRevision
argument_list|(
name|getBroker
argument_list|()
argument_list|,
name|doc
operator|.
name|getURI
argument_list|()
argument_list|)
decl_stmt|;
name|long
name|time
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|String
name|key
init|=
name|Long
operator|.
name|toHexString
argument_list|(
name|time
argument_list|)
operator|+
name|Long
operator|.
name|toHexString
argument_list|(
name|rev
argument_list|)
decl_stmt|;
name|attribs
operator|.
name|addAttribute
argument_list|(
name|ATTR_REVISION
argument_list|,
name|rev
operator|==
literal|0
condition|?
literal|"0"
else|:
name|Long
operator|.
name|toString
argument_list|(
name|rev
argument_list|)
argument_list|)
expr_stmt|;
name|attribs
operator|.
name|addAttribute
argument_list|(
name|ATTR_KEY
argument_list|,
name|key
argument_list|)
expr_stmt|;
name|attribs
operator|.
name|addAttribute
argument_list|(
name|ATTR_PATH
argument_list|,
name|doc
operator|.
name|getURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XPathException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Exception while retrieving versioning info: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Exception while retrieving versioning info: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PermissionDeniedException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Exception while retrieving versioning info: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
operator|++
name|elementStack
expr_stmt|;
name|nextListener
operator|.
name|startElement
argument_list|(
name|qname
argument_list|,
name|attribs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|endElement
parameter_list|(
name|QName
name|qname
parameter_list|)
throws|throws
name|SAXException
block|{
operator|--
name|elementStack
expr_stmt|;
name|nextListener
operator|.
name|endElement
argument_list|(
name|qname
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

