begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|versioning
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|numbering
operator|.
name|NodeId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|QName
import|;
end_import

begin_class
specifier|public
class|class
name|DiffNode
block|{
specifier|public
specifier|final
specifier|static
name|int
name|UNCHANGED
init|=
literal|0
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|INSERTED
init|=
literal|1
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|APPENDED
init|=
literal|2
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|DELETED
init|=
literal|3
decl_stmt|;
specifier|protected
name|int
name|status
init|=
name|UNCHANGED
decl_stmt|;
specifier|protected
name|NodeId
name|nodeId
decl_stmt|;
specifier|protected
name|int
name|nodeType
decl_stmt|;
specifier|protected
name|String
name|value
init|=
literal|null
decl_stmt|;
specifier|protected
name|QName
name|qname
init|=
literal|null
decl_stmt|;
specifier|public
name|DiffNode
parameter_list|(
name|NodeId
name|nodeId
parameter_list|,
name|int
name|nodeType
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|nodeId
operator|=
name|nodeId
expr_stmt|;
name|this
operator|.
name|nodeType
operator|=
name|nodeType
expr_stmt|;
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
specifier|public
name|DiffNode
parameter_list|(
name|NodeId
name|nodeId
parameter_list|,
name|int
name|nodeType
parameter_list|,
name|QName
name|qname
parameter_list|)
block|{
name|this
operator|.
name|nodeId
operator|=
name|nodeId
expr_stmt|;
name|this
operator|.
name|nodeType
operator|=
name|nodeType
expr_stmt|;
name|this
operator|.
name|qname
operator|=
name|qname
expr_stmt|;
block|}
specifier|public
name|void
name|setStatus
parameter_list|(
name|int
name|status
parameter_list|)
block|{
name|this
operator|.
name|status
operator|=
name|status
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
name|DiffNode
name|other
init|=
operator|(
name|DiffNode
operator|)
name|obj
decl_stmt|;
if|if
condition|(
name|nodeType
operator|!=
name|other
operator|.
name|nodeType
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|qname
operator|!=
literal|null
condition|)
return|return
name|qname
operator|.
name|equalsSimple
argument_list|(
name|other
operator|.
name|qname
argument_list|)
return|;
else|else
return|return
name|value
operator|.
name|equals
argument_list|(
name|other
operator|.
name|value
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|qname
operator|==
literal|null
condition|)
return|return
operator|(
name|value
operator|.
name|hashCode
argument_list|()
operator|<<
literal|1
operator|)
operator|+
name|nodeType
return|;
else|else
return|return
operator|(
name|qname
operator|.
name|hashCode
argument_list|()
operator|<<
literal|1
operator|)
operator|+
name|nodeType
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
if|if
condition|(
name|qname
operator|==
literal|null
condition|)
return|return
name|nodeType
operator|+
literal|" "
operator|+
name|nodeId
operator|.
name|toString
argument_list|()
operator|+
literal|" "
operator|+
name|value
return|;
else|else
return|return
name|nodeType
operator|+
literal|" "
operator|+
name|nodeId
operator|.
name|toString
argument_list|()
operator|+
literal|" "
operator|+
name|qname
return|;
block|}
block|}
end_class

end_unit

