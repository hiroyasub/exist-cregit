begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*=============================================================================      Copyright 2009 Nikolay Ognyanov      Licensed under the Apache License, Version 2.0 (the "License");     you may not use this file except in compliance with the License.     You may obtain a copy of the License at          http://www.apache.org/licenses/LICENSE-2.0      Unless required by applicable law or agreed to in writing, software     distributed under the License is distributed on an "AS IS" BASIS,     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     See the License for the specific language governing permissions and     limitations under the License.  =============================================================================*/
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xpath
operator|.
name|parser
package|;
end_package

begin_import
import|import
name|org
operator|.
name|antlr
operator|.
name|runtime
operator|.
name|CharStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|antlr
operator|.
name|runtime
operator|.
name|CommonToken
import|;
end_import

begin_comment
comment|/**  * In XQuery there is need to sometimes check that a token is  * or is not preceded by white space. This is cumbersome to  * do entirelly automatically in the generated parser and lexers,   * so it is done in part by "add-on" procedures but we need to   * keep around appropriate information. This custom token class   * stores it. It could as well store complete content of preceding   * white spaces (including comments) if the need be (to recover   * full text of query).  */
end_comment

begin_class
specifier|public
class|class
name|XQToken
extends|extends
name|CommonToken
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|2315498543309487252L
decl_stmt|;
specifier|protected
name|boolean
name|spaceBefore
decl_stmt|;
specifier|public
name|XQToken
parameter_list|(
name|CharStream
name|input
parameter_list|,
name|int
name|type
parameter_list|,
name|int
name|channel
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|stop
parameter_list|)
block|{
name|super
argument_list|(
name|input
argument_list|,
name|type
argument_list|,
name|channel
argument_list|,
name|start
argument_list|,
name|stop
argument_list|)
expr_stmt|;
block|}
specifier|public
name|XQToken
parameter_list|(
name|int
name|type
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|String
name|text
parameter_list|)
block|{
name|super
argument_list|(
name|type
argument_list|,
name|text
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

