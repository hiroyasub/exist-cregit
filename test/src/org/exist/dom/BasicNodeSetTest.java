begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2000-06 The eXist Project  *  *  This library is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Library General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This library is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Library General Public License for more details.  *  *  You should have received a copy of the GNU General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.  *   *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|dom
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|BasicConfigurator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|IndexInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|CollectionConfigurationManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|xacml
operator|.
name|AccessContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|BrokerPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|ElementValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|serializers
operator|.
name|Serializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|TransactionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|Txn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|XMLFilenameFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|AncestorSelector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|ChildSelector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|DescendantOrSelfSelector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|DescendantSelector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|NameTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|NodeSelector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|XPathException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|XQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|value
operator|.
name|Item
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|value
operator|.
name|NodeValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|value
operator|.
name|Sequence
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|value
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_comment
comment|/**  * Test basic {@link org.exist.dom.NodeSet} operations to ensure that  * the used algorithms are correct.  *    * @author wolf  *  */
end_comment

begin_class
specifier|public
class|class
name|BasicNodeSetTest
extends|extends
name|TestCase
block|{
specifier|private
specifier|final
specifier|static
name|String
name|NESTED_XML
init|=
literal|"<section n='1'>"
operator|+
literal|"<section n='1.1'>"
operator|+
literal|"<section n='1.1.1'>"
operator|+
literal|"<para n='1.1.1.1'/>"
operator|+
literal|"<para n='1.1.1.2'/>"
operator|+
literal|"<para n='1.1.1.3'/>"
operator|+
literal|"</section>"
operator|+
literal|"<section n='1.1.2'>"
operator|+
literal|"<para n='1.1.2.1'/>"
operator|+
literal|"</section>"
operator|+
literal|"</section>"
operator|+
literal|"<section n='1.2'>"
operator|+
literal|"<para n='1.2.1'/>"
operator|+
literal|"</section>"
operator|+
literal|"</section>"
decl_stmt|;
specifier|private
specifier|static
name|String
name|COLLECTION_CONFIG1
init|=
literal|"<collection xmlns=\"http://exist-db.org/collection-config/1.0\">"
operator|+
literal|"<index>"
operator|+
literal|"<fulltext default=\"none\">"
operator|+
literal|"<create qname=\"LINE\"/>"
operator|+
literal|"<create qname=\"SPEAKER\"/>"
operator|+
literal|"<create qname=\"TITLE\"/>"
operator|+
literal|"</fulltext>"
operator|+
literal|"</index>"
operator|+
literal|"</collection>"
decl_stmt|;
specifier|private
specifier|static
name|String
name|directory
init|=
literal|"samples/shakespeare"
decl_stmt|;
comment|//    private static File dir = new File(directory);
specifier|private
specifier|static
name|File
name|dir
init|=
literal|null
decl_stmt|;
static|static
block|{
name|String
name|existHome
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"exist.home"
argument_list|)
decl_stmt|;
name|File
name|existDir
init|=
name|existHome
operator|==
literal|null
condition|?
operator|new
name|File
argument_list|(
literal|"."
argument_list|)
else|:
operator|new
name|File
argument_list|(
name|existHome
argument_list|)
decl_stmt|;
name|dir
operator|=
operator|new
name|File
argument_list|(
name|existDir
argument_list|,
name|directory
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|BasicConfigurator
operator|.
name|configure
argument_list|()
expr_stmt|;
name|junit
operator|.
name|textui
operator|.
name|TestRunner
operator|.
name|run
argument_list|(
name|BasicNodeSetTest
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
specifier|private
name|BrokerPool
name|pool
init|=
literal|null
decl_stmt|;
specifier|private
name|Collection
name|root
init|=
literal|null
decl_stmt|;
specifier|public
name|void
name|testSelectors
parameter_list|()
block|{
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
try|try
block|{
name|assertNotNull
argument_list|(
name|pool
argument_list|)
expr_stmt|;
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemAccount
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|broker
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
name|DocumentSet
name|docs
init|=
name|root
operator|.
name|allDocs
argument_list|(
name|broker
argument_list|,
operator|new
name|DefaultDocumentSet
argument_list|()
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|Sequence
name|seq
init|=
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//SPEECH"
argument_list|,
literal|2628
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Testing ChildSelector ..."
argument_list|)
expr_stmt|;
name|NameTest
name|test
init|=
operator|new
name|NameTest
argument_list|(
name|Type
operator|.
name|ELEMENT
argument_list|,
operator|new
name|QName
argument_list|(
literal|"LINE"
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|NodeSelector
name|selector
init|=
operator|new
name|ChildSelector
argument_list|(
name|seq
operator|.
name|toNodeSet
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|NodeSet
name|set
init|=
name|broker
operator|.
name|getStructuralIndex
argument_list|()
operator|.
name|findElementsByTagName
argument_list|(
name|ElementValue
operator|.
name|ELEMENT
argument_list|,
name|seq
operator|.
name|getDocumentSet
argument_list|()
argument_list|,
name|test
operator|.
name|getName
argument_list|()
argument_list|,
name|selector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|9492
argument_list|,
name|set
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"ChildSelector: PASS"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Testing DescendantOrSelfSelector ..."
argument_list|)
expr_stmt|;
name|selector
operator|=
operator|new
name|DescendantOrSelfSelector
argument_list|(
name|seq
operator|.
name|toNodeSet
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|test
operator|=
operator|new
name|NameTest
argument_list|(
name|Type
operator|.
name|ELEMENT
argument_list|,
operator|new
name|QName
argument_list|(
literal|"SPEECH"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|set
operator|=
name|broker
operator|.
name|getStructuralIndex
argument_list|()
operator|.
name|findElementsByTagName
argument_list|(
name|ElementValue
operator|.
name|ELEMENT
argument_list|,
name|seq
operator|.
name|getDocumentSet
argument_list|()
argument_list|,
name|test
operator|.
name|getName
argument_list|()
argument_list|,
name|selector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2628
argument_list|,
name|set
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"DescendantOrSelfSelector: PASS"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Testing AncestorSelector ..."
argument_list|)
expr_stmt|;
name|test
operator|=
operator|new
name|NameTest
argument_list|(
name|Type
operator|.
name|ELEMENT
argument_list|,
operator|new
name|QName
argument_list|(
literal|"ACT"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|selector
operator|=
operator|new
name|AncestorSelector
argument_list|(
name|seq
operator|.
name|toNodeSet
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|set
operator|=
name|broker
operator|.
name|getStructuralIndex
argument_list|()
operator|.
name|findElementsByTagName
argument_list|(
name|ElementValue
operator|.
name|ELEMENT
argument_list|,
name|seq
operator|.
name|getDocumentSet
argument_list|()
argument_list|,
name|test
operator|.
name|getName
argument_list|()
argument_list|,
name|selector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|15
argument_list|,
name|set
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"AncestorSelector: PASS"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Testing AncestorSelector: self"
argument_list|)
expr_stmt|;
name|test
operator|=
operator|new
name|NameTest
argument_list|(
name|Type
operator|.
name|ELEMENT
argument_list|,
operator|new
name|QName
argument_list|(
literal|"SPEECH"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|NodeSet
name|ns
init|=
name|seq
operator|.
name|toNodeSet
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"ns = "
operator|+
name|ns
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|selector
operator|=
operator|new
name|AncestorSelector
argument_list|(
name|ns
argument_list|,
operator|-
literal|1
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|set
operator|=
name|broker
operator|.
name|getStructuralIndex
argument_list|()
operator|.
name|findElementsByTagName
argument_list|(
name|ElementValue
operator|.
name|ELEMENT
argument_list|,
name|seq
operator|.
name|getDocumentSet
argument_list|()
argument_list|,
name|test
operator|.
name|getName
argument_list|()
argument_list|,
name|selector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2628
argument_list|,
name|set
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"AncestorSelector: PASS"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Testing DescendantSelector ..."
argument_list|)
expr_stmt|;
name|seq
operator|=
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//SCENE"
argument_list|,
literal|72
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|test
operator|=
operator|new
name|NameTest
argument_list|(
name|Type
operator|.
name|ELEMENT
argument_list|,
operator|new
name|QName
argument_list|(
literal|"SPEAKER"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|selector
operator|=
operator|new
name|DescendantSelector
argument_list|(
name|seq
operator|.
name|toNodeSet
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|set
operator|=
name|broker
operator|.
name|getStructuralIndex
argument_list|()
operator|.
name|findElementsByTagName
argument_list|(
name|ElementValue
operator|.
name|ELEMENT
argument_list|,
name|seq
operator|.
name|getDocumentSet
argument_list|()
argument_list|,
name|test
operator|.
name|getName
argument_list|()
argument_list|,
name|selector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2639
argument_list|,
name|set
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"DescendantSelector: PASS"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|pool
operator|!=
literal|null
condition|)
name|pool
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testAxes
parameter_list|()
block|{
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
try|try
block|{
name|assertNotNull
argument_list|(
name|pool
argument_list|)
expr_stmt|;
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemAccount
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|Serializer
name|serializer
init|=
name|broker
operator|.
name|getSerializer
argument_list|()
decl_stmt|;
name|serializer
operator|.
name|reset
argument_list|()
expr_stmt|;
name|DocumentSet
name|docs
init|=
name|root
operator|.
name|allDocs
argument_list|(
name|broker
argument_list|,
operator|new
name|DefaultDocumentSet
argument_list|()
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|Sequence
name|smallSet
init|=
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//SPEECH[LINE&= 'perturbed spirit']"
argument_list|,
literal|1
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Sequence
name|largeSet
init|=
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//SPEECH[LINE&= 'love']"
argument_list|,
literal|160
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Sequence
name|outerSet
init|=
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//SCENE[TITLE&= 'closet']"
argument_list|,
literal|1
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|NameTest
name|test
init|=
operator|new
name|NameTest
argument_list|(
name|Type
operator|.
name|ELEMENT
argument_list|,
operator|new
name|QName
argument_list|(
literal|"SPEAKER"
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|NodeSet
name|speakers
init|=
name|broker
operator|.
name|getStructuralIndex
argument_list|()
operator|.
name|findElementsByTagName
argument_list|(
name|ElementValue
operator|.
name|ELEMENT
argument_list|,
name|docs
argument_list|,
name|test
operator|.
name|getName
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Testing NodeSetHelper.selectParentChild ..."
argument_list|)
expr_stmt|;
name|NodeSet
name|result
init|=
name|NodeSetHelper
operator|.
name|selectParentChild
argument_list|(
name|speakers
argument_list|,
name|smallSet
operator|.
name|toNodeSet
argument_list|()
argument_list|,
name|NodeSet
operator|.
name|DESCENDANT
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|result
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|value
init|=
name|serialize
argument_list|(
name|broker
argument_list|,
name|result
operator|.
name|itemAt
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"NodeSetHelper.selectParentChild: "
operator|+
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|value
argument_list|,
literal|"<SPEAKER>HAMLET</SPEAKER>"
argument_list|)
expr_stmt|;
name|result
operator|=
name|NodeSetHelper
operator|.
name|selectParentChild
argument_list|(
name|speakers
argument_list|,
name|largeSet
operator|.
name|toNodeSet
argument_list|()
argument_list|,
name|NodeSet
operator|.
name|DESCENDANT
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|160
argument_list|,
name|result
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"NodeSetHelper.selectParentChild: PASS"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Testing AbstractNodeSet.selectAncestorDescendant ..."
argument_list|)
expr_stmt|;
name|result
operator|=
name|speakers
operator|.
name|selectAncestorDescendant
argument_list|(
name|outerSet
operator|.
name|toNodeSet
argument_list|()
argument_list|,
name|NodeSet
operator|.
name|DESCENDANT
argument_list|,
literal|false
argument_list|,
operator|-
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|56
argument_list|,
name|result
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"AbstractNodeSet.selectAncestorDescendant: PASS"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Testing AbstractNodeSet.selectAncestorDescendant2 ..."
argument_list|)
expr_stmt|;
name|result
operator|=
operator|(
operator|(
name|AbstractNodeSet
operator|)
name|outerSet
operator|)
operator|.
name|selectAncestorDescendant
argument_list|(
name|outerSet
operator|.
name|toNodeSet
argument_list|()
argument_list|,
name|NodeSet
operator|.
name|DESCENDANT
argument_list|,
literal|true
argument_list|,
operator|-
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|result
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"AbstractNodeSet.selectAncestorDescendant2: PASS"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Testing AbstractNodeSet.getParents ..."
argument_list|)
expr_stmt|;
name|result
operator|=
operator|(
operator|(
name|AbstractNodeSet
operator|)
name|largeSet
operator|)
operator|.
name|getParents
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|49
argument_list|,
name|result
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"AbstractNodeSet.getParents: PASS"
argument_list|)
expr_stmt|;
name|test
operator|=
operator|new
name|NameTest
argument_list|(
name|Type
operator|.
name|ELEMENT
argument_list|,
operator|new
name|QName
argument_list|(
literal|"SCENE"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|NodeSet
name|scenes
init|=
name|broker
operator|.
name|getStructuralIndex
argument_list|()
operator|.
name|findElementsByTagName
argument_list|(
name|ElementValue
operator|.
name|ELEMENT
argument_list|,
name|docs
argument_list|,
name|test
operator|.
name|getName
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|scenes
operator|.
name|getLength
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Testing AbstractNodeSet.selectAncestors ..."
argument_list|)
expr_stmt|;
name|result
operator|=
operator|(
operator|(
name|AbstractNodeSet
operator|)
name|scenes
operator|)
operator|.
name|selectAncestors
argument_list|(
name|largeSet
operator|.
name|toNodeSet
argument_list|()
argument_list|,
literal|false
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|47
argument_list|,
name|result
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"AbstractNodeSet.selectAncestors: PASS"
argument_list|)
expr_stmt|;
name|NodeProxy
name|proxy
init|=
operator|(
name|NodeProxy
operator|)
name|smallSet
operator|.
name|itemAt
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Testing NodeProxy.getParents ..."
argument_list|)
expr_stmt|;
name|result
operator|=
name|proxy
operator|.
name|getParents
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|result
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"NodeProxy.getParents: PASS"
argument_list|)
expr_stmt|;
name|result
operator|=
name|speakers
operator|.
name|selectParentChild
argument_list|(
name|proxy
argument_list|,
name|NodeSet
operator|.
name|DESCENDANT
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|result
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|largeSet
operator|=
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//SPEECH[LINE&= 'love']/SPEAKER"
argument_list|,
literal|160
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|test
operator|=
operator|new
name|NameTest
argument_list|(
name|Type
operator|.
name|ELEMENT
argument_list|,
operator|new
name|QName
argument_list|(
literal|"LINE"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|NodeSet
name|lines
init|=
name|broker
operator|.
name|getStructuralIndex
argument_list|()
operator|.
name|findElementsByTagName
argument_list|(
name|ElementValue
operator|.
name|ELEMENT
argument_list|,
name|docs
argument_list|,
name|test
operator|.
name|getName
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"LINE: "
operator|+
name|lines
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"SPEAKER: "
operator|+
name|largeSet
operator|.
name|getItemCount
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
operator|(
operator|(
name|AbstractNodeSet
operator|)
name|lines
operator|)
operator|.
name|selectFollowingSiblings
argument_list|(
name|largeSet
operator|.
name|toNodeSet
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1451
argument_list|,
name|result
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|largeSet
operator|=
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//SPEECH[LINE&= 'love']/LINE[1]"
argument_list|,
literal|160
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|result
operator|=
operator|(
operator|(
name|AbstractNodeSet
operator|)
name|speakers
operator|)
operator|.
name|selectPrecedingSiblings
argument_list|(
name|largeSet
operator|.
name|toNodeSet
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|160
argument_list|,
name|result
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Testing ExtArrayNodeSet.selectParentChild ..."
argument_list|)
expr_stmt|;
name|Sequence
name|nestedSet
init|=
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//section[@n = ('1.1', '1.1.1')]"
argument_list|,
literal|2
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|test
operator|=
operator|new
name|NameTest
argument_list|(
name|Type
operator|.
name|ELEMENT
argument_list|,
operator|new
name|QName
argument_list|(
literal|"para"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|NodeSet
name|children
init|=
name|broker
operator|.
name|getStructuralIndex
argument_list|()
operator|.
name|findElementsByTagName
argument_list|(
name|ElementValue
operator|.
name|ELEMENT
argument_list|,
name|docs
argument_list|,
name|test
operator|.
name|getName
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|result
operator|=
name|children
operator|.
name|selectParentChild
argument_list|(
name|nestedSet
operator|.
name|toNodeSet
argument_list|()
argument_list|,
name|NodeSet
operator|.
name|DESCENDANT
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|result
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|nestedSet
operator|=
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//section[@n = ('1.1', '1.1.2', '1.2')]"
argument_list|,
literal|3
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|result
operator|=
name|children
operator|.
name|selectParentChild
argument_list|(
name|nestedSet
operator|.
name|toNodeSet
argument_list|()
argument_list|,
name|NodeSet
operator|.
name|DESCENDANT
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|result
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|nestedSet
operator|=
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//section[@n = ('1.1', '1.1.1', '1.2')]"
argument_list|,
literal|3
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|result
operator|=
name|children
operator|.
name|selectParentChild
argument_list|(
name|nestedSet
operator|.
name|toNodeSet
argument_list|()
argument_list|,
name|NodeSet
operator|.
name|DESCENDANT
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|result
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|nestedSet
operator|=
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//para[@n = ('1.1.2.1')]"
argument_list|,
literal|1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|test
operator|=
operator|new
name|NameTest
argument_list|(
name|Type
operator|.
name|ELEMENT
argument_list|,
operator|new
name|QName
argument_list|(
literal|"section"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|NodeSet
name|sections
init|=
name|broker
operator|.
name|getStructuralIndex
argument_list|()
operator|.
name|findElementsByTagName
argument_list|(
name|ElementValue
operator|.
name|ELEMENT
argument_list|,
name|docs
argument_list|,
name|test
operator|.
name|getName
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|result
operator|=
operator|(
operator|(
name|NodeSet
operator|)
name|nestedSet
operator|)
operator|.
name|selectParentChild
argument_list|(
name|sections
operator|.
name|toNodeSet
argument_list|()
argument_list|,
name|NodeSet
operator|.
name|DESCENDANT
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|result
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|pool
operator|!=
literal|null
condition|)
name|pool
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testOptimizations
parameter_list|()
block|{
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
try|try
block|{
name|assertNotNull
argument_list|(
name|pool
argument_list|)
expr_stmt|;
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemAccount
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|Serializer
name|serializer
init|=
name|broker
operator|.
name|getSerializer
argument_list|()
decl_stmt|;
name|serializer
operator|.
name|reset
argument_list|()
expr_stmt|;
name|DocumentSet
name|docs
init|=
name|root
operator|.
name|allDocs
argument_list|(
name|broker
argument_list|,
operator|new
name|DefaultDocumentSet
argument_list|()
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"------------ Testing NativeElementIndex.findChildNodesByTagName ---------"
argument_list|)
expr_stmt|;
comment|// parent set: 1.1.1; child set: 1.1.1.1, 1.1.1.2, 1.1.1.3, 1.1.2.1, 1.2.1
name|ExtNodeSet
name|nestedSet
init|=
operator|(
name|ExtNodeSet
operator|)
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//section[@n = '1.1.1']"
argument_list|,
literal|1
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|NodeSet
name|children
init|=
name|broker
operator|.
name|getStructuralIndex
argument_list|()
operator|.
name|findDescendantsByTagName
argument_list|(
name|ElementValue
operator|.
name|ELEMENT
argument_list|,
operator|new
name|QName
argument_list|(
literal|"para"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|Constants
operator|.
name|CHILD_AXIS
argument_list|,
name|docs
argument_list|,
name|nestedSet
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|children
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
comment|// parent set: 1.1; child set: 1.1.1, 1.1.2
name|nestedSet
operator|=
operator|(
name|ExtNodeSet
operator|)
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//section[@n = '1.1']"
argument_list|,
literal|1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|children
operator|=
name|broker
operator|.
name|getStructuralIndex
argument_list|()
operator|.
name|findDescendantsByTagName
argument_list|(
name|ElementValue
operator|.
name|ELEMENT
argument_list|,
operator|new
name|QName
argument_list|(
literal|"section"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|Constants
operator|.
name|CHILD_AXIS
argument_list|,
name|docs
argument_list|,
name|nestedSet
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|children
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
comment|// parent set: 1, 1.1, 1.1.1, 1.1.2 ; child set: 1.1.1.1, 1.1.1.2, 1.1.1.3, 1.1.2.1, 1.2.1
comment|// problem: ancestor set contains nested nodes
name|nestedSet
operator|=
operator|(
name|ExtNodeSet
operator|)
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//section[@n = ('1.1', '1.1.1', '1.1.2')]"
argument_list|,
literal|3
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|children
operator|=
name|broker
operator|.
name|getStructuralIndex
argument_list|()
operator|.
name|findDescendantsByTagName
argument_list|(
name|ElementValue
operator|.
name|ELEMENT
argument_list|,
operator|new
name|QName
argument_list|(
literal|"para"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|Constants
operator|.
name|CHILD_AXIS
argument_list|,
name|docs
argument_list|,
name|nestedSet
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|children
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
comment|// parent set: 1.1, 1.1.2, 1.2 ; child set: 1.1.1.1, 1.1.1.2, 1.1.1.3, 1.1.2.1, 1.2.1
comment|// problem: ancestor set contains nested nodes
name|nestedSet
operator|=
operator|(
name|ExtNodeSet
operator|)
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//section[@n = ('1.1', '1.1.2', '1.2')]"
argument_list|,
literal|3
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|children
operator|=
name|broker
operator|.
name|getStructuralIndex
argument_list|()
operator|.
name|findDescendantsByTagName
argument_list|(
name|ElementValue
operator|.
name|ELEMENT
argument_list|,
operator|new
name|QName
argument_list|(
literal|"para"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|Constants
operator|.
name|CHILD_AXIS
argument_list|,
name|docs
argument_list|,
name|nestedSet
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|children
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|nestedSet
operator|=
operator|(
name|ExtNodeSet
operator|)
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//section[@n = '1.1']"
argument_list|,
literal|1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|children
operator|=
name|broker
operator|.
name|getStructuralIndex
argument_list|()
operator|.
name|findDescendantsByTagName
argument_list|(
name|ElementValue
operator|.
name|ELEMENT
argument_list|,
operator|new
name|QName
argument_list|(
literal|"para"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|Constants
operator|.
name|DESCENDANT_AXIS
argument_list|,
name|docs
argument_list|,
name|nestedSet
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|children
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|nestedSet
operator|=
operator|(
name|ExtNodeSet
operator|)
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//section[@n = '1']"
argument_list|,
literal|1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|children
operator|=
name|broker
operator|.
name|getStructuralIndex
argument_list|()
operator|.
name|findDescendantsByTagName
argument_list|(
name|ElementValue
operator|.
name|ELEMENT
argument_list|,
operator|new
name|QName
argument_list|(
literal|"para"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|Constants
operator|.
name|DESCENDANT_AXIS
argument_list|,
name|docs
argument_list|,
name|nestedSet
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|children
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|nestedSet
operator|=
operator|(
name|ExtNodeSet
operator|)
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//section[@n = '1.1.2']"
argument_list|,
literal|1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|children
operator|=
name|broker
operator|.
name|getStructuralIndex
argument_list|()
operator|.
name|findDescendantsByTagName
argument_list|(
name|ElementValue
operator|.
name|ELEMENT
argument_list|,
operator|new
name|QName
argument_list|(
literal|"section"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|Constants
operator|.
name|DESCENDANT_SELF_AXIS
argument_list|,
name|docs
argument_list|,
name|nestedSet
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|children
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|nestedSet
operator|=
operator|(
name|ExtNodeSet
operator|)
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//section[@n = '1.1.2']"
argument_list|,
literal|1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|children
operator|=
name|broker
operator|.
name|getStructuralIndex
argument_list|()
operator|.
name|findDescendantsByTagName
argument_list|(
name|ElementValue
operator|.
name|ATTRIBUTE
argument_list|,
operator|new
name|QName
argument_list|(
literal|"n"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|Constants
operator|.
name|ATTRIBUTE_AXIS
argument_list|,
name|docs
argument_list|,
name|nestedSet
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|children
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|nestedSet
operator|=
operator|(
name|ExtNodeSet
operator|)
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//section[@n = '1.1']"
argument_list|,
literal|1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|children
operator|=
name|broker
operator|.
name|getStructuralIndex
argument_list|()
operator|.
name|findDescendantsByTagName
argument_list|(
name|ElementValue
operator|.
name|ATTRIBUTE
argument_list|,
operator|new
name|QName
argument_list|(
literal|"n"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|Constants
operator|.
name|DESCENDANT_ATTRIBUTE_AXIS
argument_list|,
name|docs
argument_list|,
name|nestedSet
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|children
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"------------ PASSED: NativeElementIndex.findChildNodesByTagName ---------"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|pool
operator|!=
literal|null
condition|)
name|pool
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testVirtualNodeSet
parameter_list|()
block|{
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
try|try
block|{
name|assertNotNull
argument_list|(
name|pool
argument_list|)
expr_stmt|;
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemAccount
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|Serializer
name|serializer
init|=
name|broker
operator|.
name|getSerializer
argument_list|()
decl_stmt|;
name|serializer
operator|.
name|reset
argument_list|()
expr_stmt|;
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//*/LINE"
argument_list|,
literal|9492
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//*/LINE/*"
argument_list|,
literal|61
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//*/LINE/text()"
argument_list|,
literal|9485
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//SCENE/*/LINE"
argument_list|,
literal|9464
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//SCENE/*[LINE&= 'spirit']"
argument_list|,
literal|21
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//SCENE/*[LINE&= 'the']"
argument_list|,
literal|1005
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//SCENE/*/LINE[.&= 'the']"
argument_list|,
literal|2167
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//SPEECH[LINE&= 'spirit']/ancestor::*"
argument_list|,
literal|30
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"for $s in //SCENE/*[LINE&= 'the'] return node-name($s)"
argument_list|,
literal|1005
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//SPEECH[LINE&= 'perturbed spirit']/preceding-sibling::*"
argument_list|,
literal|65
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|executeQuery
argument_list|(
name|broker
argument_list|,
literal|"//SPEECH[LINE&= 'perturbed spirit']/following-sibling::*"
argument_list|,
literal|1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|pool
operator|!=
literal|null
condition|)
name|pool
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|Sequence
name|executeQuery
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|String
name|query
parameter_list|,
name|int
name|expected
parameter_list|,
name|String
name|expectedResult
parameter_list|)
throws|throws
name|XPathException
throws|,
name|SAXException
block|{
name|XQuery
name|xquery
init|=
name|broker
operator|.
name|getXQueryService
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|xquery
argument_list|)
expr_stmt|;
name|Sequence
name|seq
init|=
name|xquery
operator|.
name|execute
argument_list|(
name|query
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|seq
operator|.
name|getItemCount
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Found: "
operator|+
name|seq
operator|.
name|getItemCount
argument_list|()
operator|+
literal|" for query:\n"
operator|+
name|query
argument_list|)
expr_stmt|;
if|if
condition|(
name|expectedResult
operator|!=
literal|null
condition|)
block|{
name|Item
name|item
init|=
name|seq
operator|.
name|itemAt
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|String
name|value
init|=
name|serialize
argument_list|(
name|broker
argument_list|,
name|item
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedResult
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|seq
return|;
block|}
specifier|private
name|String
name|serialize
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Item
name|item
parameter_list|)
throws|throws
name|SAXException
throws|,
name|XPathException
block|{
name|Serializer
name|serializer
init|=
name|broker
operator|.
name|getSerializer
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|serializer
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|reset
argument_list|()
expr_stmt|;
name|String
name|value
decl_stmt|;
if|if
condition|(
name|Type
operator|.
name|subTypeOf
argument_list|(
name|item
operator|.
name|getType
argument_list|()
argument_list|,
name|Type
operator|.
name|NODE
argument_list|)
condition|)
name|value
operator|=
name|serializer
operator|.
name|serialize
argument_list|(
operator|(
name|NodeValue
operator|)
name|item
argument_list|)
expr_stmt|;
else|else
name|value
operator|=
name|item
operator|.
name|getStringValue
argument_list|()
expr_stmt|;
return|return
name|value
return|;
block|}
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
name|TransactionManager
name|transact
init|=
literal|null
decl_stmt|;
name|Txn
name|transaction
init|=
literal|null
decl_stmt|;
try|try
block|{
name|pool
operator|=
name|startDB
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|pool
argument_list|)
expr_stmt|;
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemAccount
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|transact
operator|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|transact
argument_list|)
expr_stmt|;
name|transaction
operator|=
name|transact
operator|.
name|beginTransaction
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"BasicNodeSetTest#setUp ..."
argument_list|)
expr_stmt|;
name|root
operator|=
name|broker
operator|.
name|getOrCreateCollection
argument_list|(
name|transaction
argument_list|,
name|XmldbURI
operator|.
name|create
argument_list|(
name|DBBroker
operator|.
name|ROOT_COLLECTION
operator|+
literal|"/test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|root
argument_list|)
expr_stmt|;
name|broker
operator|.
name|saveCollection
argument_list|(
name|transaction
argument_list|,
name|root
argument_list|)
expr_stmt|;
name|CollectionConfigurationManager
name|mgr
init|=
name|pool
operator|.
name|getConfigurationManager
argument_list|()
decl_stmt|;
name|mgr
operator|.
name|addConfiguration
argument_list|(
name|transaction
argument_list|,
name|broker
argument_list|,
name|root
argument_list|,
name|COLLECTION_CONFIG1
argument_list|)
expr_stmt|;
name|File
name|files
index|[]
init|=
name|dir
operator|.
name|listFiles
argument_list|(
operator|new
name|XMLFilenameFilter
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|files
argument_list|)
expr_stmt|;
name|File
name|f
decl_stmt|;
name|IndexInfo
name|info
decl_stmt|;
comment|// store some documents.
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|files
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|f
operator|=
name|files
index|[
name|i
index|]
expr_stmt|;
try|try
block|{
name|info
operator|=
name|root
operator|.
name|validateXMLResource
argument_list|(
name|transaction
argument_list|,
name|broker
argument_list|,
name|XmldbURI
operator|.
name|create
argument_list|(
name|f
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|,
operator|new
name|InputSource
argument_list|(
name|f
operator|.
name|toURI
argument_list|()
operator|.
name|toASCIIString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|info
argument_list|)
expr_stmt|;
name|root
operator|.
name|store
argument_list|(
name|transaction
argument_list|,
name|broker
argument_list|,
name|info
argument_list|,
operator|new
name|InputSource
argument_list|(
name|f
operator|.
name|toURI
argument_list|()
operator|.
name|toASCIIString
argument_list|()
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SAXException
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Error found while parsing document: "
operator|+
name|f
operator|.
name|getName
argument_list|()
operator|+
literal|": "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|info
operator|=
name|root
operator|.
name|validateXMLResource
argument_list|(
name|transaction
argument_list|,
name|broker
argument_list|,
name|XmldbURI
operator|.
name|create
argument_list|(
literal|"nested.xml"
argument_list|)
argument_list|,
name|NESTED_XML
argument_list|)
expr_stmt|;
comment|//TODO : unlock the collection here ?
name|assertNotNull
argument_list|(
name|info
argument_list|)
expr_stmt|;
name|root
operator|.
name|store
argument_list|(
name|transaction
argument_list|,
name|broker
argument_list|,
name|info
argument_list|,
name|NESTED_XML
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|transact
operator|.
name|commit
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"BasicNodeSetTest#setUp finished."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|transact
operator|.
name|abort
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|pool
operator|!=
literal|null
condition|)
name|pool
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|BrokerPool
name|startDB
parameter_list|()
block|{
name|String
name|home
decl_stmt|,
name|file
init|=
literal|"conf.xml"
decl_stmt|;
name|home
operator|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"exist.home"
argument_list|)
expr_stmt|;
if|if
condition|(
name|home
operator|==
literal|null
condition|)
name|home
operator|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.dir"
argument_list|)
expr_stmt|;
try|try
block|{
name|Configuration
name|config
init|=
operator|new
name|Configuration
argument_list|(
name|file
argument_list|,
name|home
argument_list|)
decl_stmt|;
name|BrokerPool
operator|.
name|configure
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|,
name|config
argument_list|)
expr_stmt|;
return|return
name|BrokerPool
operator|.
name|getInstance
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
specifier|protected
name|void
name|tearDown
parameter_list|()
block|{
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
name|TransactionManager
name|transact
init|=
literal|null
decl_stmt|;
name|Txn
name|transaction
init|=
literal|null
decl_stmt|;
try|try
block|{
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemAccount
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|transact
operator|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|transact
argument_list|)
expr_stmt|;
name|transaction
operator|=
name|transact
operator|.
name|beginTransaction
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"BasicNodeSetTest#tearDown>>>"
argument_list|)
expr_stmt|;
name|root
operator|=
name|broker
operator|.
name|getOrCreateCollection
argument_list|(
name|transaction
argument_list|,
name|XmldbURI
operator|.
name|create
argument_list|(
name|DBBroker
operator|.
name|ROOT_COLLECTION
operator|+
literal|"/test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|root
argument_list|)
expr_stmt|;
name|broker
operator|.
name|removeCollection
argument_list|(
name|transaction
argument_list|,
name|root
argument_list|)
expr_stmt|;
name|transact
operator|.
name|commit
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|transact
operator|.
name|abort
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|pool
operator|!=
literal|null
condition|)
name|pool
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
name|BrokerPool
operator|.
name|stopAll
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|pool
operator|=
literal|null
expr_stmt|;
name|root
operator|=
literal|null
expr_stmt|;
block|}
block|}
end_class

end_unit

