begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2016 The eXist-db Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public License  * along with this program; if not, write to the Free Software Foundation  * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|OutputKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|EXistException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|Indexer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|IndexInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|AuthenticationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|PermissionDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|BrokerPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|TransactionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|Txn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|test
operator|.
name|ExistEmbeddedServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|test
operator|.
name|TestConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|DatabaseConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|LockException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|serializer
operator|.
name|SAXSerializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|XPathException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|XQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|value
operator|.
name|Item
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|value
operator|.
name|Sequence
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|value
operator|.
name|SequenceIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_comment
comment|/**  * Tests the indexer.  *  * @author ljo  */
end_comment

begin_class
specifier|public
class|class
name|IndexerTest3
block|{
annotation|@
name|ClassRule
specifier|public
specifier|static
specifier|final
name|ExistEmbeddedServer
name|existEmbeddedServer
init|=
operator|new
name|ExistEmbeddedServer
argument_list|(
literal|true
argument_list|,
literal|false
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|XML1
init|=
literal|"<?xml version=\"1.0\"?>\n"
operator|+
literal|"<k>\n"
operator|+
literal|"<l>a<b>b</b> c<d> d</d><e></e> f</l>\n"
operator|+
literal|"<m> a<b>b</b> c<d> d</d><e></e> f</m>\n"
operator|+
literal|"<n> a<b>b</b> c<d> d</d><e></e>f</n>\n"
operator|+
literal|"<o><b>b</b> c<d> d</d><e></e></o>\n"
operator|+
literal|"</k>\n"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|XML2
init|=
literal|"<?xml version=\"1.0\"?>\n"
operator|+
literal|"<k>\n"
operator|+
literal|"<l>a<b>b</b> c<d> d</d><e></e> f</l>\n"
operator|+
literal|"</k>\n"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|XML3
init|=
literal|"<?xml version=\"1.0\"?>\n"
operator|+
literal|"<k>\n"
operator|+
literal|"<m> a<b>b</b> c<d> d</d><e></e> f</m>\n"
operator|+
literal|"</k>\n"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|XML4
init|=
literal|"<?xml version=\"1.0\"?>\n"
operator|+
literal|"<k>\n"
operator|+
literal|"<n> a<b>b</b> c<d> d</d><e></e>f</n>\n"
operator|+
literal|"</k>\n"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|XML5
init|=
literal|"<?xml version=\"1.0\"?>\n"
operator|+
literal|"<k>\n"
operator|+
literal|"<o><b>b</b> c<d> d</d><e></e></o>\n"
operator|+
literal|"</k>\n"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|XML6
init|=
literal|"<?xml version=\"1.0\"?>\n"
operator|+
literal|"<k>\n"
operator|+
literal|"<!--    a comment with whitespace    leading, intermediate\n"
operator|+
literal|" and trailing   -->\n"
operator|+
literal|"</k>\n"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|XML7
init|=
literal|"<?xml version=\"1.0\"?>\n"
operator|+
literal|"<k>\n"
operator|+
literal|"<o>    leading and trailing</o>\n"
operator|+
literal|"</k>\n"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_NONE_XML1
init|=
literal|"<result>"
operator|+
literal|"<k>\n"
operator|+
literal|"<l>a<b>b</b> c<d> d</d><e></e> f</l>\n"
operator|+
literal|"<m> a<b>b</b> c<d> d</d><e></e> f</m>\n"
operator|+
literal|"<n> a<b>b</b> c<d> d</d><e></e>f</n>\n"
operator|+
literal|"<o><b>b</b> c<d> d</d><e></e></o>\n"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_NONE_XML2
init|=
literal|"<result>"
operator|+
literal|"<k>\n"
operator|+
literal|"<l>a<b>b</b> c<d> d</d><e></e> f</l>\n"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_NONE_XML3
init|=
literal|"<result>"
operator|+
literal|"<k>\n"
operator|+
literal|"<m> a<b>b</b> c<d> d</d><e></e> f</m>\n"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_NONE_XML4
init|=
literal|"<result>"
operator|+
literal|"<k>\n"
operator|+
literal|"<n> a<b>b</b> c<d> d</d><e></e>f</n>\n"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_NONE_XML5
init|=
literal|"<result>"
operator|+
literal|"<k>\n"
operator|+
literal|"<o><b>b</b> c<d> d</d><e></e></o>\n"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_NONE_XML6
init|=
literal|"<result>"
operator|+
literal|"<k>\n"
operator|+
literal|"<!--    a comment with whitespace    leading, intermediate\n"
operator|+
literal|" and trailing   -->\n"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_NONE_XML7
init|=
literal|"<result>"
operator|+
literal|"<k>\n"
operator|+
literal|"<o>    leading and trailing</o>\n"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_LEADING_XML1
init|=
literal|"<result>"
operator|+
literal|"<k>"
operator|+
literal|"<l>a<b>b</b> c<d>d</d><e></e> f</l>"
operator|+
literal|"<m>a<b>b</b> c<d>d</d><e></e> f</m>"
operator|+
literal|"<n>a<b>b</b> c<d>d</d><e></e>f</n>"
operator|+
literal|"<o><b>b</b> c<d>d</d><e></e></o>"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_LEADING_XML2
init|=
literal|"<result>"
operator|+
literal|"<k>"
operator|+
literal|"<l>a<b>b</b> c<d>d</d><e></e> f</l>"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_LEADING_XML3
init|=
literal|"<result>"
operator|+
literal|"<k>"
operator|+
literal|"<m>a<b>b</b> c<d>d</d><e></e> f</m>"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_LEADING_XML4
init|=
literal|"<result>"
operator|+
literal|"<k>"
operator|+
literal|"<n>a<b>b</b> c<d>d</d><e></e>f</n>"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_LEADING_XML5
init|=
literal|"<result>"
operator|+
literal|"<k>"
operator|+
literal|"<o><b>b</b> c<d>d</d><e></e></o>"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_LEADING_XML6
init|=
literal|"<result>"
operator|+
literal|"<k>\n"
operator|+
literal|"<!--    a comment with whitespace    leading, intermediate\n"
operator|+
literal|" and trailing   -->\n"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_LEADING_XML7
init|=
literal|"<result>"
operator|+
literal|"<k>\n"
operator|+
literal|"<o>leading and trailing</o>\n"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_TRAILING_XML1
init|=
literal|"<result>"
operator|+
literal|"<k>"
operator|+
literal|"<l>a<b>b</b> c<d> d</d><e></e> f</l>"
operator|+
literal|"<m> a<b>b</b> c<d> d</d><e></e> f</m>"
operator|+
literal|"<n> a<b>b</b> c<d> d</d><e></e>f</n>"
operator|+
comment|// kolla " a" och "f "
literal|"<o><b>b</b> c<d> d</d><e></e></o>"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_TRAILING_XML2
init|=
literal|"<result>"
operator|+
literal|"<k>"
operator|+
literal|"<l>a<b>b</b> c<d> d</d><e></e> f</l>"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_TRAILING_XML3
init|=
literal|"<result>"
operator|+
literal|"<k>"
operator|+
literal|"<m> a<b>b</b> c<d> d</d><e></e> f</m>"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_TRAILING_XML4
init|=
literal|"<result>"
operator|+
literal|"<k>"
operator|+
literal|"<n> a<b>b</b> c<d> d</d><e></e>f</n>"
operator|+
comment|// kolla " a" och "f "
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_TRAILING_XML5
init|=
literal|"<result>"
operator|+
literal|"<k>"
operator|+
literal|"<o><b>b</b> c<d> d</d><e></e></o>"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_TRAILING_XML6
init|=
literal|"<result>"
operator|+
literal|"<k>\n"
operator|+
literal|"<!--    a comment with whitespace    leading, intermediate\n"
operator|+
literal|" and trailing   -->\n"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_TRAILING_XML7
init|=
literal|"<result>"
operator|+
literal|"<k>\n"
operator|+
literal|"<o>    leading and trailing</o>\n"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_BOTH_XML1
init|=
literal|"<result>"
operator|+
literal|"<k>\n"
operator|+
literal|"<l>a<b>b</b> c<d>d</d><e></e> f</l>\n"
operator|+
comment|// kolla "a"
literal|"<m>a<b>b</b> c<d>d</d><e></e> f</m>\n"
operator|+
comment|// kolla "f "
literal|"<n>a<b>b</b> c<d>d</d><e></e>f</n>\n"
operator|+
literal|"<o><b>b</b> c<d>d</d><e></e></o>\n"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_BOTH_XML2
init|=
literal|"<result>"
operator|+
literal|"<k>\n"
operator|+
literal|"<l>a<b>b</b> c<d>d</d><e></e> f</l>\n"
operator|+
comment|// kolla "a"
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_BOTH_XML3
init|=
literal|"<result>"
operator|+
literal|"<k>\n"
operator|+
literal|"<m>a<b>b</b> c<d>d</d><e></e> f</m>\n"
operator|+
comment|// kolla "f "
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_BOTH_XML4
init|=
literal|"<result>"
operator|+
literal|"<k>\n"
operator|+
literal|"<n>a<b>b</b> c<d>d</d><e></e>f</n>\n"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_BOTH_XML5
init|=
literal|"<result>"
operator|+
literal|"<k>\n"
operator|+
literal|"<o><b>b</b>c<d>d</d><e></e></o>\n"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_BOTH_XML6
init|=
literal|"<result>"
operator|+
literal|"<k>\n"
operator|+
literal|"<!--    a comment with whitespace    leading, intermediate\n"
operator|+
literal|" and trailing   -->\n"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESULT_SUPPRESS_WS_BOTH_XML7
init|=
literal|"<result>"
operator|+
literal|"<k>\n"
operator|+
literal|"<o>leading and trailing</o>\n"
operator|+
literal|"</k>"
operator|+
literal|"</result>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|XQUERY
init|=
literal|"let $test := doc('"
operator|+
name|TestConstants
operator|.
name|TEST_COLLECTION_URI
operator|.
name|toString
argument_list|()
operator|+
literal|"/"
operator|+
name|TestConstants
operator|.
name|TEST_XML_URI
operator|.
name|toString
argument_list|()
operator|+
literal|"') "
operator|+
literal|"return "
operator|+
literal|"<result>{$test/k}</result>"
decl_stmt|;
specifier|private
name|void
name|store_suppress_type
parameter_list|(
specifier|final
name|String
name|propValue
parameter_list|,
specifier|final
name|String
name|xml
parameter_list|)
throws|throws
name|PermissionDeniedException
throws|,
name|IOException
throws|,
name|EXistException
throws|,
name|SAXException
throws|,
name|LockException
throws|,
name|AuthenticationException
block|{
specifier|final
name|BrokerPool
name|pool
init|=
name|existEmbeddedServer
operator|.
name|getBrokerPool
argument_list|()
decl_stmt|;
name|pool
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setProperty
argument_list|(
name|Indexer
operator|.
name|PROPERTY_SUPPRESS_WHITESPACE
argument_list|,
name|propValue
argument_list|)
expr_stmt|;
comment|// Make sure to keep preserve whitespace mixed content stable even if default changes. fixme! - should test both. /ljo
name|boolean
name|propWSMValue
init|=
literal|false
decl_stmt|;
name|pool
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setProperty
argument_list|(
name|Indexer
operator|.
name|PROPERTY_PRESERVE_WS_MIXED_CONTENT
argument_list|,
name|propWSMValue
argument_list|)
expr_stmt|;
specifier|final
name|TransactionManager
name|txnMgr
init|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|authenticate
argument_list|(
literal|"admin"
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
init|;
specifier|final
name|Txn
name|txn
init|=
name|txnMgr
operator|.
name|beginTransaction
argument_list|()
init|)
block|{
specifier|final
name|Collection
name|collection
init|=
name|broker
operator|.
name|getOrCreateCollection
argument_list|(
name|txn
argument_list|,
name|TestConstants
operator|.
name|TEST_COLLECTION_URI
argument_list|)
decl_stmt|;
specifier|final
name|IndexInfo
name|info
init|=
name|collection
operator|.
name|validateXMLResource
argument_list|(
name|txn
argument_list|,
name|broker
argument_list|,
name|TestConstants
operator|.
name|TEST_XML_URI
argument_list|,
name|xml
argument_list|)
decl_stmt|;
comment|//TODO : unlock the collection here ?
name|collection
operator|.
name|store
argument_list|(
name|txn
argument_list|,
name|broker
argument_list|,
name|info
argument_list|,
name|xml
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|final
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|persistent
operator|.
name|DocumentImpl
name|doc
init|=
name|info
operator|.
name|getDocument
argument_list|()
decl_stmt|;
name|broker
operator|.
name|flush
argument_list|()
expr_stmt|;
name|broker
operator|.
name|saveCollection
argument_list|(
name|txn
argument_list|,
name|collection
argument_list|)
expr_stmt|;
name|txnMgr
operator|.
name|commit
argument_list|(
name|txn
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|String
name|store_and_retrieve_suppress_type
parameter_list|(
specifier|final
name|String
name|type
parameter_list|,
specifier|final
name|String
name|typeXml
parameter_list|,
specifier|final
name|String
name|typeXquery
parameter_list|)
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|store_suppress_type
argument_list|(
name|type
argument_list|,
name|typeXml
argument_list|)
expr_stmt|;
specifier|final
name|BrokerPool
name|pool
init|=
name|existEmbeddedServer
operator|.
name|getBrokerPool
argument_list|()
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
argument_list|)
argument_list|)
init|;
specifier|final
name|StringWriter
name|out
init|=
operator|new
name|StringWriter
argument_list|()
init|)
block|{
specifier|final
name|XQuery
name|xquery
init|=
name|pool
operator|.
name|getXQueryService
argument_list|()
decl_stmt|;
specifier|final
name|Sequence
name|result
init|=
name|xquery
operator|.
name|execute
argument_list|(
name|broker
argument_list|,
name|typeXquery
argument_list|,
literal|null
argument_list|)
decl_stmt|;
specifier|final
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|OutputKeys
operator|.
name|INDENT
argument_list|,
literal|"no"
argument_list|)
expr_stmt|;
specifier|final
name|SAXSerializer
name|serializer
init|=
operator|new
name|SAXSerializer
argument_list|(
name|out
argument_list|,
name|props
argument_list|)
decl_stmt|;
name|serializer
operator|.
name|startDocument
argument_list|()
expr_stmt|;
for|for
control|(
specifier|final
name|SequenceIterator
name|i
init|=
name|result
operator|.
name|iterate
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
specifier|final
name|Item
name|next
init|=
name|i
operator|.
name|nextItem
argument_list|()
decl_stmt|;
name|next
operator|.
name|toSAX
argument_list|(
name|broker
argument_list|,
name|serializer
argument_list|,
name|props
argument_list|)
expr_stmt|;
block|}
name|serializer
operator|.
name|endDocument
argument_list|()
expr_stmt|;
return|return
name|out
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_none1
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_NONE_XML1
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"none"
argument_list|,
name|XML1
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_none2
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_NONE_XML2
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"none"
argument_list|,
name|XML2
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_none3
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_NONE_XML3
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"none"
argument_list|,
name|XML3
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_none4
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_NONE_XML4
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"none"
argument_list|,
name|XML4
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_none5
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_NONE_XML5
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"none"
argument_list|,
name|XML5
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_none6
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_NONE_XML6
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"none"
argument_list|,
name|XML6
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_none7
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_NONE_XML7
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"none"
argument_list|,
name|XML7
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_leading1
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_LEADING_XML1
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"leading"
argument_list|,
name|XML1
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_leading2
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_LEADING_XML2
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"leading"
argument_list|,
name|XML2
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_leading3
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_LEADING_XML3
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"leading"
argument_list|,
name|XML3
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_leading4
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_LEADING_XML4
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"leading"
argument_list|,
name|XML4
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_leading5
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_LEADING_XML5
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"leading"
argument_list|,
name|XML5
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_leading6
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_LEADING_XML6
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"leading"
argument_list|,
name|XML6
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_leading7
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_LEADING_XML7
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"leading"
argument_list|,
name|XML7
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_trailing1
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_TRAILING_XML1
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"trailing"
argument_list|,
name|XML1
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_trailing2
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_TRAILING_XML2
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"trailing"
argument_list|,
name|XML2
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_trailing3
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_TRAILING_XML3
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"trailing"
argument_list|,
name|XML3
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_trailing4
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_TRAILING_XML4
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"trailing"
argument_list|,
name|XML4
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_trailing5
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_TRAILING_XML5
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"trailing"
argument_list|,
name|XML5
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_trailing6
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_TRAILING_XML6
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"trailing"
argument_list|,
name|XML6
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_trailing7
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_TRAILING_XML7
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"trailing"
argument_list|,
name|XML7
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_both1
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_BOTH_XML1
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"both"
argument_list|,
name|XML1
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_both2
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_BOTH_XML2
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"both"
argument_list|,
name|XML2
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_both3
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_BOTH_XML3
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"both"
argument_list|,
name|XML3
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_both4
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_BOTH_XML4
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"both"
argument_list|,
name|XML4
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_both5
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_BOTH_XML5
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"both"
argument_list|,
name|XML5
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_both6
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_BOTH_XML6
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"both"
argument_list|,
name|XML6
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|retrieve_suppress_ws_both7
parameter_list|()
throws|throws
name|EXistException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|AuthenticationException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|XPathException
block|{
name|assertEquals
argument_list|(
name|RESULT_SUPPRESS_WS_BOTH_XML7
argument_list|,
name|store_and_retrieve_suppress_type
argument_list|(
literal|"both"
argument_list|,
name|XML7
argument_list|,
name|XQUERY
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

