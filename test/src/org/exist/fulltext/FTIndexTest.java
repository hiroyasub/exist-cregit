begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|fulltext
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|TestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|CollectionConfigurationManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|IndexInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|DefaultDocumentSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|DocumentSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|MutableDocumentSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|PermissionDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|SecurityManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|xacml
operator|.
name|AccessContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|BrokerPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|ElementValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|TransactionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|Txn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|test
operator|.
name|TestConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|ConfigurationHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|Occurrences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|XQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|value
operator|.
name|Sequence
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xupdate
operator|.
name|Modification
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xupdate
operator|.
name|XUpdateProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_comment
comment|/**  * Low-level tests for fulltext index configuration and index updates.  */
end_comment

begin_class
specifier|public
class|class
name|FTIndexTest
block|{
specifier|public
specifier|final
specifier|static
name|String
name|XML
init|=
literal|"<content>"
operator|+
literal|"<figure>"
operator|+
literal|"<title>Location of equiment items on aircraft</title>"
operator|+
literal|"<img src='foo.jpg'/>"
operator|+
literal|"<img src='baz.jpg'/>"
operator|+
literal|"</figure>"
operator|+
literal|"<figure>"
operator|+
literal|"<title>Hydraulic Power<b>System</b></title>"
operator|+
literal|"<p>paragraphs with<span>mix</span><span>ed</span> content are<span>danger</span>ous.</p>"
operator|+
literal|"</figure>"
operator|+
literal|"</content>"
decl_stmt|;
specifier|private
specifier|static
name|String
name|XML1
init|=
literal|"<test>"
operator|+
literal|"<item id='1' attr='attribute'><description>Chair</description></item>"
operator|+
literal|"<item id='2'><description>Table</description><price>892.25</price></item>"
operator|+
literal|"<item id='3'><description>Cabinet</description><price>1525.00</price></item>"
operator|+
literal|"</test>"
decl_stmt|;
specifier|private
specifier|static
name|String
name|COLLECTION_CONFIG1
init|=
literal|"<collection xmlns=\"http://exist-db.org/collection-config/1.0\">"
operator|+
literal|"<index>"
operator|+
literal|"<fulltext default=\"none\">"
operator|+
literal|"<include path=\"/content/figure/title\"/>"
operator|+
literal|"<create qname=\"p\" content=\"mixed\"/>"
operator|+
literal|"<create qname=\"content\"/>"
operator|+
literal|"</fulltext>"
operator|+
literal|"</index>"
operator|+
literal|"</collection>"
decl_stmt|;
specifier|private
specifier|static
name|String
name|COLLECTION_CONFIG2
init|=
literal|"<collection xmlns=\"http://exist-db.org/collection-config/1.0\">"
operator|+
literal|"<index>"
operator|+
literal|"<fulltext default=\"none\">"
operator|+
literal|"<create qname=\"item\"/>"
operator|+
literal|"<create qname=\"description\"/>"
operator|+
literal|"<create qname=\"price\"/>"
operator|+
literal|"<create qname=\"@attr\"/>"
operator|+
literal|"</fulltext>"
operator|+
literal|"</index>"
operator|+
literal|"</collection>"
decl_stmt|;
specifier|private
specifier|static
name|String
name|COLLECTION_CONFIG3
init|=
literal|"<collection xmlns=\"http://exist-db.org/collection-config/1.0\">"
operator|+
literal|"<index>"
operator|+
literal|"<fulltext default=\"none\">"
operator|+
literal|"<include path=\"/content/figure/title\" content=\"mixed\"/>"
operator|+
literal|"<include path=\"/content//p\" content=\"mixed\"/>"
operator|+
literal|"</fulltext>"
operator|+
literal|"</index>"
operator|+
literal|"</collection>"
decl_stmt|;
specifier|private
specifier|static
name|String
name|XUPDATE_START
init|=
literal|"<xu:modifications version=\"1.0\" xmlns:xu=\"http://www.xmldb.org/xupdate\">"
decl_stmt|;
specifier|private
specifier|static
name|String
name|XUPDATE_END
init|=
literal|"</xu:modifications>"
decl_stmt|;
specifier|private
specifier|static
name|BrokerPool
name|pool
decl_stmt|;
specifier|private
specifier|static
name|Collection
name|root
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|QName
index|[]
name|QNDESC
init|=
operator|new
name|QName
index|[]
block|{
operator|new
name|QName
argument_list|(
literal|"description"
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
block|}
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|QName
index|[]
name|QNPRICE
init|=
operator|new
name|QName
index|[]
block|{
operator|new
name|QName
argument_list|(
literal|"price"
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
block|}
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|QName
index|[]
name|QNITEM
init|=
operator|new
name|QName
index|[]
block|{
operator|new
name|QName
argument_list|(
literal|"item"
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
block|}
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|mixedIndexes
parameter_list|()
block|{
name|DocumentSet
name|docs
init|=
name|configureAndStore
argument_list|(
name|COLLECTION_CONFIG3
argument_list|,
name|XML
argument_list|,
literal|"mixedIndexes.xml"
argument_list|)
decl_stmt|;
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
try|try
block|{
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|SecurityManager
operator|.
name|SYSTEM_USER
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|Occurrences
index|[]
name|occur
init|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
literal|null
argument_list|,
literal|"hydraulic"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"hydraulic"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
literal|null
argument_list|,
literal|"system"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|occur
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
literal|null
argument_list|,
literal|"powersystem"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"powersystem"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|occur
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
literal|null
argument_list|,
literal|"mix"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mixed"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
literal|null
argument_list|,
literal|"ed"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|occur
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
literal|null
argument_list|,
literal|"mixed"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mixed"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|occur
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
literal|null
argument_list|,
literal|"danger"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"dangerous"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|occur
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
literal|null
argument_list|,
literal|"dangerous"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"dangerous"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|pool
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|mixedQNameIndexes
parameter_list|()
block|{
name|DocumentSet
name|docs
init|=
name|configureAndStore
argument_list|(
name|COLLECTION_CONFIG1
argument_list|,
name|XML
argument_list|,
literal|"mixedIndexes.xml"
argument_list|)
decl_stmt|;
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
try|try
block|{
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|SecurityManager
operator|.
name|SYSTEM_USER
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|Occurrences
index|[]
name|occur
init|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
literal|null
argument_list|,
literal|"aircraft"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"aircraft"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|occur
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
literal|null
argument_list|,
literal|"system"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"system"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|occur
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
literal|null
argument_list|,
literal|"power"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"power"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|QName
name|qn
index|[]
init|=
block|{
operator|new
name|QName
argument_list|(
literal|"p"
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
block|}
decl_stmt|;
name|occur
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|qn
argument_list|,
literal|"mixed"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mixed"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|occur
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|qn
argument_list|,
literal|"dangerous"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"dangerous"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|occur
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|qn
argument_list|,
literal|"content"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"content"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|qn
index|[
literal|0
index|]
operator|=
operator|new
name|QName
argument_list|(
literal|"content"
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|occur
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|qn
argument_list|,
literal|"aircraft"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aircraft"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|occur
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|qn
argument_list|,
literal|"hydraulic"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hydraulic"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
comment|// not a mixed-content index
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|qn
argument_list|,
literal|"dangerous"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|occur
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|qn
argument_list|,
literal|"danger"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"danger"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|occur
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|qn
argument_list|,
literal|"power"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"power"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|pool
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|dropDocument
parameter_list|()
block|{
name|DocumentSet
name|docs
init|=
name|configureAndStore
argument_list|(
name|COLLECTION_CONFIG1
argument_list|,
name|XML
argument_list|,
literal|"dropDocument.xml"
argument_list|)
decl_stmt|;
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
name|TransactionManager
name|transact
init|=
literal|null
decl_stmt|;
name|Txn
name|transaction
init|=
literal|null
decl_stmt|;
try|try
block|{
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|SecurityManager
operator|.
name|SYSTEM_USER
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|transact
operator|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|transact
argument_list|)
expr_stmt|;
name|transaction
operator|=
name|transact
operator|.
name|beginTransaction
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Removing document dropDocument.xml"
argument_list|)
expr_stmt|;
name|root
operator|.
name|removeXMLResource
argument_list|(
name|transaction
argument_list|,
name|broker
argument_list|,
name|XmldbURI
operator|.
name|create
argument_list|(
literal|"dropDocument.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|transact
operator|.
name|commit
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|QName
name|qn
index|[]
init|=
block|{
operator|new
name|QName
argument_list|(
literal|"p"
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
block|}
decl_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|qn
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|qn
index|[
literal|0
index|]
operator|=
operator|new
name|QName
argument_list|(
literal|"content"
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|qn
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|transact
operator|.
name|commit
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|transact
operator|.
name|abort
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|pool
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|reindex
parameter_list|()
block|{
name|DocumentSet
name|docs
init|=
name|configureAndStore
argument_list|(
name|COLLECTION_CONFIG1
argument_list|,
name|XML
argument_list|,
literal|"dropDocument.xml"
argument_list|)
decl_stmt|;
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
try|try
block|{
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|SecurityManager
operator|.
name|SYSTEM_USER
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|broker
operator|.
name|reindexCollection
argument_list|(
name|TestConstants
operator|.
name|TEST_COLLECTION_URI
argument_list|)
expr_stmt|;
name|Occurrences
index|[]
name|occur
init|=
name|broker
operator|.
name|getTextEngine
argument_list|()
operator|.
name|scanIndexTerms
argument_list|(
name|docs
argument_list|,
name|docs
operator|.
name|docsToNodeSet
argument_list|()
argument_list|,
literal|"o"
argument_list|,
literal|"ox"
argument_list|)
decl_stmt|;
name|printOccurrences
argument_list|(
literal|"o, ox"
argument_list|,
name|occur
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|occur
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"of"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"on"
argument_list|,
name|occur
index|[
literal|1
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|occur
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
literal|null
argument_list|,
literal|"power"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"power"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|QName
name|qn
index|[]
init|=
block|{
operator|new
name|QName
argument_list|(
literal|"p"
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
block|}
decl_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|qn
argument_list|,
literal|"mixed"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|pool
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Remove nodes from different levels of the tree and check if the index is      * correctly updated.      */
annotation|@
name|Test
specifier|public
name|void
name|xupdateRemove
parameter_list|()
block|{
name|DocumentSet
name|docs
init|=
name|configureAndStore
argument_list|(
name|COLLECTION_CONFIG2
argument_list|,
name|XML1
argument_list|,
literal|"xupdate.xml"
argument_list|)
decl_stmt|;
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
name|TransactionManager
name|transact
init|=
literal|null
decl_stmt|;
name|Txn
name|transaction
init|=
literal|null
decl_stmt|;
try|try
block|{
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
name|SecurityManager
operator|.
name|SYSTEM_USER
argument_list|)
expr_stmt|;
name|transact
operator|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
expr_stmt|;
name|transaction
operator|=
name|transact
operator|.
name|beginTransaction
argument_list|()
expr_stmt|;
name|Occurrences
name|occur
index|[]
init|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"chair"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"chair"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|null
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|XQuery
name|xquery
init|=
name|broker
operator|.
name|getXQueryService
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|xquery
argument_list|)
expr_stmt|;
name|Sequence
name|seq
init|=
name|xquery
operator|.
name|execute
argument_list|(
literal|"//item[description&= 'chair']"
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|seq
operator|.
name|getItemCount
argument_list|()
argument_list|)
expr_stmt|;
name|seq
operator|=
name|xquery
operator|.
name|execute
argument_list|(
literal|"//item[@id='2']"
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|seq
operator|.
name|getItemCount
argument_list|()
argument_list|)
expr_stmt|;
name|XUpdateProcessor
name|proc
init|=
operator|new
name|XUpdateProcessor
argument_list|(
name|broker
argument_list|,
name|docs
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|proc
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setBroker
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setDocumentSet
argument_list|(
name|docs
argument_list|)
expr_stmt|;
name|String
name|xupdate
init|=
name|XUPDATE_START
operator|+
literal|"<xu:remove select=\"//item[@id='2']/price\"/>"
operator|+
name|XUPDATE_END
decl_stmt|;
name|Modification
index|[]
name|modifications
init|=
name|proc
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|xupdate
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|modifications
argument_list|)
expr_stmt|;
name|modifications
index|[
literal|0
index|]
operator|.
name|process
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|proc
operator|.
name|reset
argument_list|()
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNPRICE
argument_list|,
literal|null
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|null
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNPRICE
argument_list|,
literal|"892"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"892"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|Occurrences
name|o
index|[]
init|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"table"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"table"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"cabinet"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"cabinet"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"table"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"table"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"cabinet"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"cabinet"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setBroker
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setDocumentSet
argument_list|(
name|docs
argument_list|)
expr_stmt|;
name|xupdate
operator|=
name|XUPDATE_START
operator|+
literal|"<xu:remove select=\"//item[@id='3']/description/text()\"/>"
operator|+
name|XUPDATE_END
expr_stmt|;
name|modifications
operator|=
name|proc
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|xupdate
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|modifications
argument_list|)
expr_stmt|;
name|modifications
index|[
literal|0
index|]
operator|.
name|process
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|proc
operator|.
name|reset
argument_list|()
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|null
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|null
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"cabinet"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"cabinet"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNPRICE
argument_list|,
literal|"1525.00"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1525.00"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"1525.00"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1525.00"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setBroker
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setDocumentSet
argument_list|(
name|docs
argument_list|)
expr_stmt|;
name|xupdate
operator|=
name|XUPDATE_START
operator|+
literal|"<xu:remove select=\"//item[@id='1']/@attr\"/>"
operator|+
name|XUPDATE_END
expr_stmt|;
name|modifications
operator|=
name|proc
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|xupdate
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|modifications
argument_list|)
expr_stmt|;
name|modifications
index|[
literal|0
index|]
operator|.
name|process
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|proc
operator|.
name|reset
argument_list|()
expr_stmt|;
name|QName
name|qnattr
index|[]
init|=
block|{
operator|new
name|QName
argument_list|(
literal|"attr"
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
block|}
decl_stmt|;
name|qnattr
index|[
literal|0
index|]
operator|.
name|setNameType
argument_list|(
name|ElementValue
operator|.
name|ATTRIBUTE
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|qnattr
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setBroker
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setDocumentSet
argument_list|(
name|docs
argument_list|)
expr_stmt|;
name|xupdate
operator|=
name|XUPDATE_START
operator|+
literal|"<xu:remove select=\"//item[@id='1']\"/>"
operator|+
name|XUPDATE_END
expr_stmt|;
name|modifications
operator|=
name|proc
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|xupdate
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|modifications
argument_list|)
expr_stmt|;
name|modifications
index|[
literal|0
index|]
operator|.
name|process
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|proc
operator|.
name|reset
argument_list|()
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|null
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"table"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"chair"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|null
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"table"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|transact
operator|.
name|commit
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|transact
operator|.
name|abort
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|pool
operator|!=
literal|null
condition|)
block|{
name|pool
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|/**      * Remove nodes from different levels of the tree and check if the index is      * correctly updated.      */
annotation|@
name|Test
specifier|public
name|void
name|xupdateInsert
parameter_list|()
block|{
name|DocumentSet
name|docs
init|=
name|configureAndStore
argument_list|(
name|COLLECTION_CONFIG2
argument_list|,
name|XML1
argument_list|,
literal|"xupdate.xml"
argument_list|)
decl_stmt|;
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
name|TransactionManager
name|transact
init|=
literal|null
decl_stmt|;
name|Txn
name|transaction
init|=
literal|null
decl_stmt|;
try|try
block|{
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
name|SecurityManager
operator|.
name|SYSTEM_USER
argument_list|)
expr_stmt|;
name|transact
operator|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
expr_stmt|;
name|transaction
operator|=
name|transact
operator|.
name|beginTransaction
argument_list|()
expr_stmt|;
name|Occurrences
name|occur
index|[]
init|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"chair"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"chair"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|null
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|XQuery
name|xquery
init|=
name|broker
operator|.
name|getXQueryService
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|xquery
argument_list|)
expr_stmt|;
name|Sequence
name|seq
init|=
name|xquery
operator|.
name|execute
argument_list|(
literal|"//item[description&= 'chair']"
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|seq
operator|.
name|getItemCount
argument_list|()
argument_list|)
expr_stmt|;
comment|// Append to root node
name|XUpdateProcessor
name|proc
init|=
operator|new
name|XUpdateProcessor
argument_list|(
name|broker
argument_list|,
name|docs
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|proc
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setBroker
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setDocumentSet
argument_list|(
name|docs
argument_list|)
expr_stmt|;
name|String
name|xupdate
init|=
name|XUPDATE_START
operator|+
literal|"<xu:append select=\"/test\">"
operator|+
literal|"<item id='4'><description>Armchair</description><price>340</price></item>"
operator|+
literal|"</xu:append>"
operator|+
name|XUPDATE_END
decl_stmt|;
name|Modification
index|[]
name|modifications
init|=
name|proc
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|xupdate
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|modifications
argument_list|)
expr_stmt|;
name|modifications
index|[
literal|0
index|]
operator|.
name|process
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|proc
operator|.
name|reset
argument_list|()
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNPRICE
argument_list|,
literal|null
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|null
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|null
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|Occurrences
name|o
index|[]
init|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNPRICE
argument_list|,
literal|"340"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"340"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"armchair"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"armchair"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"340"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"340"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"armchair"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"armchair"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
comment|// Insert before top element
name|proc
operator|.
name|setBroker
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setDocumentSet
argument_list|(
name|docs
argument_list|)
expr_stmt|;
name|xupdate
operator|=
name|XUPDATE_START
operator|+
literal|"<xu:insert-before select=\"//item[@id = '1']\">"
operator|+
literal|"<item id='0'><description>Wheelchair</description><price>1230</price></item>"
operator|+
literal|"</xu:insert-before>"
operator|+
name|XUPDATE_END
expr_stmt|;
name|modifications
operator|=
name|proc
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|xupdate
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|modifications
argument_list|)
expr_stmt|;
name|modifications
index|[
literal|0
index|]
operator|.
name|process
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|proc
operator|.
name|reset
argument_list|()
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNPRICE
argument_list|,
literal|null
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|null
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|null
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNPRICE
argument_list|,
literal|"1230"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1230"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"wheelchair"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"wheelchair"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"1230"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1230"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"wheelchair"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"wheelchair"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
comment|// Insert after element
name|proc
operator|.
name|setBroker
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setDocumentSet
argument_list|(
name|docs
argument_list|)
expr_stmt|;
name|xupdate
operator|=
name|XUPDATE_START
operator|+
literal|"<xu:insert-after select=\"//item[@id = '1']\">"
operator|+
literal|"<item id='1.1'><description>refrigerator</description><price>777</price></item>"
operator|+
literal|"</xu:insert-after>"
operator|+
name|XUPDATE_END
expr_stmt|;
name|modifications
operator|=
name|proc
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|xupdate
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|modifications
argument_list|)
expr_stmt|;
name|modifications
index|[
literal|0
index|]
operator|.
name|process
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|proc
operator|.
name|reset
argument_list|()
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNPRICE
argument_list|,
literal|null
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|null
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|null
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNPRICE
argument_list|,
literal|"777"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"777"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"refrigerator"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"refrigerator"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"777"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"777"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"refrigerator"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"refrigerator"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setBroker
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setDocumentSet
argument_list|(
name|docs
argument_list|)
expr_stmt|;
name|xupdate
operator|=
name|XUPDATE_START
operator|+
literal|"<xu:insert-after select=\"//item[@id = '1']/description\">"
operator|+
literal|"<price>999</price>"
operator|+
literal|"</xu:insert-after>"
operator|+
name|XUPDATE_END
expr_stmt|;
name|modifications
operator|=
name|proc
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|xupdate
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|modifications
argument_list|)
expr_stmt|;
name|modifications
index|[
literal|0
index|]
operator|.
name|process
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|proc
operator|.
name|reset
argument_list|()
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNPRICE
argument_list|,
literal|null
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|null
argument_list|,
literal|12
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNPRICE
argument_list|,
literal|"999"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"999"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"999"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"999"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
comment|// Insert before nested element
name|proc
operator|.
name|setBroker
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setDocumentSet
argument_list|(
name|docs
argument_list|)
expr_stmt|;
name|xupdate
operator|=
name|XUPDATE_START
operator|+
literal|"<xu:insert-before select=\"//item[@id = '1']/description\">"
operator|+
literal|"<price>888</price>"
operator|+
literal|"</xu:insert-before>"
operator|+
name|XUPDATE_END
expr_stmt|;
name|modifications
operator|=
name|proc
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|xupdate
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|modifications
argument_list|)
expr_stmt|;
name|modifications
index|[
literal|0
index|]
operator|.
name|process
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|proc
operator|.
name|reset
argument_list|()
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNPRICE
argument_list|,
literal|null
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|null
argument_list|,
literal|13
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNPRICE
argument_list|,
literal|"999"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"999"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNPRICE
argument_list|,
literal|"888"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"888"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"999"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"999"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"888"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"888"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
comment|// Overwrite attribute
name|proc
operator|.
name|setBroker
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setDocumentSet
argument_list|(
name|docs
argument_list|)
expr_stmt|;
name|xupdate
operator|=
name|XUPDATE_START
operator|+
literal|"<xu:append select=\"//item[@id = '1']\">"
operator|+
literal|"<xu:attribute name=\"attr\">abc</xu:attribute>"
operator|+
literal|"</xu:append>"
operator|+
name|XUPDATE_END
expr_stmt|;
name|modifications
operator|=
name|proc
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|xupdate
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|modifications
argument_list|)
expr_stmt|;
name|modifications
index|[
literal|0
index|]
operator|.
name|process
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|proc
operator|.
name|reset
argument_list|()
expr_stmt|;
name|QName
name|qnattr
index|[]
init|=
block|{
operator|new
name|QName
argument_list|(
literal|"attr"
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
block|}
decl_stmt|;
name|qnattr
index|[
literal|0
index|]
operator|.
name|setNameType
argument_list|(
name|ElementValue
operator|.
name|ATTRIBUTE
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|qnattr
argument_list|,
literal|null
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"abc"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|qnattr
argument_list|,
literal|"attribute"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|transact
operator|.
name|commit
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|transact
operator|.
name|abort
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|pool
operator|!=
literal|null
condition|)
block|{
name|pool
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|xupdateUpdate
parameter_list|()
block|{
name|DocumentSet
name|docs
init|=
name|configureAndStore
argument_list|(
name|COLLECTION_CONFIG2
argument_list|,
name|XML1
argument_list|,
literal|"xupdate.xml"
argument_list|)
decl_stmt|;
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
name|TransactionManager
name|transact
init|=
literal|null
decl_stmt|;
name|Txn
name|transaction
init|=
literal|null
decl_stmt|;
try|try
block|{
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|SecurityManager
operator|.
name|SYSTEM_USER
argument_list|)
expr_stmt|;
name|transact
operator|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
expr_stmt|;
name|transaction
operator|=
name|transact
operator|.
name|beginTransaction
argument_list|()
expr_stmt|;
name|Occurrences
name|occur
index|[]
init|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"chair"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"chair"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|null
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|XQuery
name|xquery
init|=
name|broker
operator|.
name|getXQueryService
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|xquery
argument_list|)
expr_stmt|;
name|Sequence
name|seq
init|=
name|xquery
operator|.
name|execute
argument_list|(
literal|"//item[description&= 'chair']"
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|seq
operator|.
name|getItemCount
argument_list|()
argument_list|)
expr_stmt|;
comment|// Update element content
name|XUpdateProcessor
name|proc
init|=
operator|new
name|XUpdateProcessor
argument_list|(
name|broker
argument_list|,
name|docs
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|proc
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setBroker
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setDocumentSet
argument_list|(
name|docs
argument_list|)
expr_stmt|;
name|String
name|xupdate
init|=
name|XUPDATE_START
operator|+
literal|"<xu:update select=\"//item[@id = '1']/description\">wardrobe</xu:update>"
operator|+
name|XUPDATE_END
decl_stmt|;
name|Modification
index|[]
name|modifications
init|=
name|proc
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|xupdate
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|modifications
argument_list|)
expr_stmt|;
name|modifications
index|[
literal|0
index|]
operator|.
name|process
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|proc
operator|.
name|reset
argument_list|()
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|null
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|null
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"chair"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"chair"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|Occurrences
name|o
index|[]
init|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"wardrobe"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"wardrobe"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"wardrobe"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"wardrobe"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
comment|// Update text node
name|proc
operator|.
name|setBroker
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setDocumentSet
argument_list|(
name|docs
argument_list|)
expr_stmt|;
name|xupdate
operator|=
name|XUPDATE_START
operator|+
literal|"<xu:update select=\"//item[@id = '1']/description/text()\">Wheelchair</xu:update>"
operator|+
name|XUPDATE_END
expr_stmt|;
name|modifications
operator|=
name|proc
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|xupdate
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|modifications
argument_list|)
expr_stmt|;
name|modifications
index|[
literal|0
index|]
operator|.
name|process
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|proc
operator|.
name|reset
argument_list|()
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|null
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|null
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"wardrobe"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"wardrobe"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"wheelchair"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"wheelchair"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"wheelchair"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"wheelchair"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
comment|// Update attribute value
name|proc
operator|.
name|setBroker
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setDocumentSet
argument_list|(
name|docs
argument_list|)
expr_stmt|;
name|xupdate
operator|=
name|XUPDATE_START
operator|+
literal|"<xu:update select=\"//item[@id = '1']/@attr\">abc</xu:update>"
operator|+
name|XUPDATE_END
expr_stmt|;
name|modifications
operator|=
name|proc
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|xupdate
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|modifications
argument_list|)
expr_stmt|;
name|modifications
index|[
literal|0
index|]
operator|.
name|process
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|proc
operator|.
name|reset
argument_list|()
expr_stmt|;
name|QName
name|qnattr
index|[]
init|=
block|{
operator|new
name|QName
argument_list|(
literal|"attr"
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
block|}
decl_stmt|;
name|qnattr
index|[
literal|0
index|]
operator|.
name|setNameType
argument_list|(
name|ElementValue
operator|.
name|ATTRIBUTE
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|qnattr
argument_list|,
literal|null
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"abc"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|qnattr
argument_list|,
literal|"attribute"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|transact
operator|.
name|commit
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|transact
operator|.
name|abort
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|pool
operator|!=
literal|null
condition|)
block|{
name|pool
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|xupdateReplace
parameter_list|()
block|{
name|DocumentSet
name|docs
init|=
name|configureAndStore
argument_list|(
name|COLLECTION_CONFIG2
argument_list|,
name|XML1
argument_list|,
literal|"xupdate.xml"
argument_list|)
decl_stmt|;
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
name|TransactionManager
name|transact
init|=
literal|null
decl_stmt|;
name|Txn
name|transaction
init|=
literal|null
decl_stmt|;
try|try
block|{
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
name|SecurityManager
operator|.
name|SYSTEM_USER
argument_list|)
expr_stmt|;
name|transact
operator|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
expr_stmt|;
name|transaction
operator|=
name|transact
operator|.
name|beginTransaction
argument_list|()
expr_stmt|;
name|Occurrences
name|occur
index|[]
init|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"chair"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"chair"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|null
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|XQuery
name|xquery
init|=
name|broker
operator|.
name|getXQueryService
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|xquery
argument_list|)
expr_stmt|;
name|Sequence
name|seq
init|=
name|xquery
operator|.
name|execute
argument_list|(
literal|"//item[description&= 'chair']"
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|seq
operator|.
name|getItemCount
argument_list|()
argument_list|)
expr_stmt|;
name|XUpdateProcessor
name|proc
init|=
operator|new
name|XUpdateProcessor
argument_list|(
name|broker
argument_list|,
name|docs
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|proc
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setBroker
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setDocumentSet
argument_list|(
name|docs
argument_list|)
expr_stmt|;
name|String
name|xupdate
init|=
name|XUPDATE_START
operator|+
literal|"<xu:replace select=\"//item[@id = '1']\">"
operator|+
literal|"<item id='4'><description>Wheelchair</description><price>809.50</price></item>"
operator|+
literal|"</xu:replace>"
operator|+
name|XUPDATE_END
decl_stmt|;
name|Modification
index|[]
name|modifications
init|=
name|proc
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|xupdate
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|modifications
argument_list|)
expr_stmt|;
name|modifications
index|[
literal|0
index|]
operator|.
name|process
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|proc
operator|.
name|reset
argument_list|()
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|null
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNPRICE
argument_list|,
literal|null
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|null
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"chair"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"chair"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|Occurrences
name|o
index|[]
init|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"wheelchair"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"wheelchair"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNPRICE
argument_list|,
literal|"809.50"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"809.50"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"wheelchair"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"wheelchair"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"809.50"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"809.50"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setBroker
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setDocumentSet
argument_list|(
name|docs
argument_list|)
expr_stmt|;
name|xupdate
operator|=
name|XUPDATE_START
operator|+
literal|"<xu:replace select=\"//item[@id = '4']/description\">"
operator|+
literal|"<description>Armchair</description>"
operator|+
literal|"</xu:replace>"
operator|+
name|XUPDATE_END
expr_stmt|;
name|modifications
operator|=
name|proc
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|xupdate
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|modifications
argument_list|)
expr_stmt|;
name|modifications
index|[
literal|0
index|]
operator|.
name|process
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|proc
operator|.
name|reset
argument_list|()
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|null
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|null
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"wheelchair"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"armchair"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"armchair"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"wheelchair"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|o
operator|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"armchair"
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"armchair"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|transact
operator|.
name|commit
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|transact
operator|.
name|abort
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|pool
operator|!=
literal|null
condition|)
block|{
name|pool
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|xupdateRename
parameter_list|()
block|{
name|DocumentSet
name|docs
init|=
name|configureAndStore
argument_list|(
name|COLLECTION_CONFIG2
argument_list|,
name|XML1
argument_list|,
literal|"xupdate.xml"
argument_list|)
decl_stmt|;
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
name|TransactionManager
name|transact
init|=
literal|null
decl_stmt|;
name|Txn
name|transaction
init|=
literal|null
decl_stmt|;
try|try
block|{
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
name|SecurityManager
operator|.
name|SYSTEM_USER
argument_list|)
expr_stmt|;
name|transact
operator|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
expr_stmt|;
name|transaction
operator|=
name|transact
operator|.
name|beginTransaction
argument_list|()
expr_stmt|;
name|Occurrences
name|occur
index|[]
init|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"chair"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"chair"
argument_list|,
name|occur
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|null
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|XQuery
name|xquery
init|=
name|broker
operator|.
name|getXQueryService
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|xquery
argument_list|)
expr_stmt|;
name|Sequence
name|seq
init|=
name|xquery
operator|.
name|execute
argument_list|(
literal|"//item[description&= 'chair']"
argument_list|,
literal|null
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|seq
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|seq
operator|.
name|getItemCount
argument_list|()
argument_list|)
expr_stmt|;
name|XUpdateProcessor
name|proc
init|=
operator|new
name|XUpdateProcessor
argument_list|(
name|broker
argument_list|,
name|docs
argument_list|,
name|AccessContext
operator|.
name|TEST
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|proc
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setBroker
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|proc
operator|.
name|setDocumentSet
argument_list|(
name|docs
argument_list|)
expr_stmt|;
name|String
name|xupdate
init|=
name|XUPDATE_START
operator|+
literal|"<xu:rename select=\"//item[@id='2']\">renamed</xu:rename>"
operator|+
name|XUPDATE_END
decl_stmt|;
name|Modification
index|[]
name|modifications
init|=
name|proc
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
operator|new
name|StringReader
argument_list|(
name|xupdate
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|modifications
argument_list|)
expr_stmt|;
name|modifications
index|[
literal|0
index|]
operator|.
name|process
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|proc
operator|.
name|reset
argument_list|()
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|null
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNPRICE
argument_list|,
literal|null
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|null
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|Occurrences
name|o
index|[]
init|=
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNDESC
argument_list|,
literal|"table"
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"table"
argument_list|,
name|o
index|[
literal|0
index|]
operator|.
name|getTerm
argument_list|()
argument_list|)
expr_stmt|;
name|checkIndex
argument_list|(
name|docs
argument_list|,
name|broker
argument_list|,
name|QNITEM
argument_list|,
literal|"table"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|transact
operator|.
name|commit
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|transact
operator|.
name|abort
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|pool
operator|!=
literal|null
condition|)
block|{
name|pool
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|Occurrences
index|[]
name|checkIndex
parameter_list|(
name|DocumentSet
name|docs
parameter_list|,
name|DBBroker
name|broker
parameter_list|,
name|QName
index|[]
name|qn
parameter_list|,
name|String
name|term
parameter_list|,
name|int
name|expected
parameter_list|)
throws|throws
name|PermissionDeniedException
block|{
name|Occurrences
index|[]
name|occur
decl_stmt|;
if|if
condition|(
name|qn
operator|==
literal|null
condition|)
name|occur
operator|=
name|broker
operator|.
name|getTextEngine
argument_list|()
operator|.
name|scanIndexTerms
argument_list|(
name|docs
argument_list|,
name|docs
operator|.
name|docsToNodeSet
argument_list|()
argument_list|,
name|term
argument_list|,
literal|null
argument_list|)
expr_stmt|;
else|else
name|occur
operator|=
name|broker
operator|.
name|getTextEngine
argument_list|()
operator|.
name|scanIndexTerms
argument_list|(
name|docs
argument_list|,
name|docs
operator|.
name|docsToNodeSet
argument_list|()
argument_list|,
name|qn
argument_list|,
name|term
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|printOccurrences
argument_list|(
name|term
argument_list|,
name|occur
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|occur
operator|.
name|length
argument_list|)
expr_stmt|;
return|return
name|occur
return|;
block|}
specifier|private
name|void
name|printOccurrences
parameter_list|(
name|String
name|msg
parameter_list|,
name|Occurrences
index|[]
name|occur
parameter_list|)
block|{
name|StringBuilder
name|buf
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|msg
operator|!=
literal|null
condition|)
name|buf
operator|.
name|append
argument_list|(
name|msg
argument_list|)
operator|.
name|append
argument_list|(
literal|": "
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|occur
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|Occurrences
name|occurrences
init|=
name|occur
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|i
operator|>
literal|0
condition|)
name|buf
operator|.
name|append
argument_list|(
literal|", "
argument_list|)
expr_stmt|;
name|buf
operator|.
name|append
argument_list|(
name|occurrences
operator|.
name|getTerm
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|":\t"
argument_list|)
operator|.
name|append
argument_list|(
name|occurrences
operator|.
name|getOccurrences
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|buf
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|DocumentSet
name|configureAndStore
parameter_list|(
name|String
name|configuration
parameter_list|,
name|String
name|data
parameter_list|,
name|String
name|docName
parameter_list|)
block|{
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
name|TransactionManager
name|transact
init|=
literal|null
decl_stmt|;
name|Txn
name|transaction
init|=
literal|null
decl_stmt|;
name|MutableDocumentSet
name|docs
init|=
operator|new
name|DefaultDocumentSet
argument_list|()
decl_stmt|;
try|try
block|{
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|SecurityManager
operator|.
name|SYSTEM_USER
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|transact
operator|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|transact
argument_list|)
expr_stmt|;
name|transaction
operator|=
name|transact
operator|.
name|beginTransaction
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
if|if
condition|(
name|configuration
operator|!=
literal|null
condition|)
block|{
name|CollectionConfigurationManager
name|mgr
init|=
name|pool
operator|.
name|getConfigurationManager
argument_list|()
decl_stmt|;
name|mgr
operator|.
name|addConfiguration
argument_list|(
name|transaction
argument_list|,
name|broker
argument_list|,
name|root
argument_list|,
name|configuration
argument_list|)
expr_stmt|;
block|}
name|IndexInfo
name|info
init|=
name|root
operator|.
name|validateXMLResource
argument_list|(
name|transaction
argument_list|,
name|broker
argument_list|,
name|XmldbURI
operator|.
name|create
argument_list|(
name|docName
argument_list|)
argument_list|,
name|data
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|info
argument_list|)
expr_stmt|;
name|root
operator|.
name|store
argument_list|(
name|transaction
argument_list|,
name|broker
argument_list|,
name|info
argument_list|,
name|data
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|docs
operator|.
name|add
argument_list|(
name|info
operator|.
name|getDocument
argument_list|()
argument_list|)
expr_stmt|;
name|transact
operator|.
name|commit
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|transact
operator|.
name|abort
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|pool
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
return|return
name|docs
return|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
name|TransactionManager
name|transact
init|=
literal|null
decl_stmt|;
name|Txn
name|transaction
init|=
literal|null
decl_stmt|;
try|try
block|{
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|SecurityManager
operator|.
name|SYSTEM_USER
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|transact
operator|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|transact
argument_list|)
expr_stmt|;
name|transaction
operator|=
name|transact
operator|.
name|beginTransaction
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Transaction started ..."
argument_list|)
expr_stmt|;
name|root
operator|=
name|broker
operator|.
name|getOrCreateCollection
argument_list|(
name|transaction
argument_list|,
name|TestConstants
operator|.
name|TEST_COLLECTION_URI
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|root
argument_list|)
expr_stmt|;
name|broker
operator|.
name|saveCollection
argument_list|(
name|transaction
argument_list|,
name|root
argument_list|)
expr_stmt|;
name|transact
operator|.
name|commit
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|transact
operator|.
name|abort
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|pool
operator|!=
literal|null
condition|)
name|pool
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|After
specifier|public
name|void
name|cleanup
parameter_list|()
block|{
name|BrokerPool
name|pool
init|=
literal|null
decl_stmt|;
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
name|TransactionManager
name|transact
init|=
literal|null
decl_stmt|;
name|Txn
name|transaction
init|=
literal|null
decl_stmt|;
try|try
block|{
name|pool
operator|=
name|BrokerPool
operator|.
name|getInstance
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|pool
argument_list|)
expr_stmt|;
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|SecurityManager
operator|.
name|SYSTEM_USER
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|broker
argument_list|)
expr_stmt|;
name|transact
operator|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|transact
argument_list|)
expr_stmt|;
name|transaction
operator|=
name|transact
operator|.
name|beginTransaction
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|Collection
name|config
init|=
name|broker
operator|.
name|getOrCreateCollection
argument_list|(
name|transaction
argument_list|,
name|XmldbURI
operator|.
name|create
argument_list|(
name|CollectionConfigurationManager
operator|.
name|CONFIG_COLLECTION
operator|+
literal|"/db"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|broker
operator|.
name|removeCollection
argument_list|(
name|transaction
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|root
argument_list|)
expr_stmt|;
name|broker
operator|.
name|removeCollection
argument_list|(
name|transaction
argument_list|,
name|root
argument_list|)
expr_stmt|;
name|transact
operator|.
name|commit
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|transact
operator|.
name|abort
argument_list|(
name|transaction
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|pool
operator|!=
literal|null
condition|)
name|pool
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startDB
parameter_list|()
block|{
try|try
block|{
name|File
name|confFile
init|=
name|ConfigurationHelper
operator|.
name|lookup
argument_list|(
literal|"conf.xml"
argument_list|)
decl_stmt|;
name|Configuration
name|config
init|=
operator|new
name|Configuration
argument_list|(
name|confFile
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
decl_stmt|;
name|BrokerPool
operator|.
name|configure
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|pool
operator|=
name|BrokerPool
operator|.
name|getInstance
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|pool
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|stopDB
parameter_list|()
block|{
name|TestUtils
operator|.
name|cleanupDB
argument_list|()
expr_stmt|;
name|BrokerPool
operator|.
name|stopAll
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|pool
operator|=
literal|null
expr_stmt|;
name|root
operator|=
literal|null
expr_stmt|;
block|}
block|}
end_class

end_unit

