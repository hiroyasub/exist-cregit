begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|serializer
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|capture
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|isNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|matches
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|EasyMock
operator|.
name|createMock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|EasyMock
operator|.
name|replay
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|EasyMock
operator|.
name|verify
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|Capture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|siemens
operator|.
name|ct
operator|.
name|exi
operator|.
name|api
operator|.
name|sax
operator|.
name|SAXEncoder
import|;
end_import

begin_class
specifier|public
class|class
name|EXISerializerTest
block|{
specifier|private
name|EXISerializer
name|serializer
decl_stmt|;
specifier|private
name|OutputStream
name|mockOutputStream
decl_stmt|;
specifier|private
name|SAXEncoder
name|mockEncoder
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|mockOutputStream
operator|=
name|createMock
argument_list|(
name|OutputStream
operator|.
name|class
argument_list|)
expr_stmt|;
name|serializer
operator|=
operator|new
name|EXISerializer
argument_list|(
name|mockOutputStream
argument_list|)
expr_stmt|;
name|mockEncoder
operator|=
name|createMock
argument_list|(
name|SAXEncoder
operator|.
name|class
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|setEncoder
argument_list|(
name|mockEncoder
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStartDocument
parameter_list|()
throws|throws
name|Exception
block|{
name|mockEncoder
operator|.
name|startDocument
argument_list|()
expr_stmt|;
name|replay
argument_list|(
name|mockEncoder
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|startDocument
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|mockEncoder
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEndDocument
parameter_list|()
throws|throws
name|Exception
block|{
name|mockEncoder
operator|.
name|endDocument
argument_list|()
expr_stmt|;
name|replay
argument_list|(
name|mockEncoder
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endDocument
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|mockEncoder
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStartPrefixMapping
parameter_list|()
throws|throws
name|Exception
block|{
name|mockEncoder
operator|.
name|startPrefixMapping
argument_list|(
literal|"prefix"
argument_list|,
literal|"uri"
argument_list|)
expr_stmt|;
name|replay
argument_list|(
name|mockEncoder
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|startPrefixMapping
argument_list|(
literal|"prefix"
argument_list|,
literal|"uri"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockEncoder
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEndPrefixMapping
parameter_list|()
throws|throws
name|Exception
block|{
name|mockEncoder
operator|.
name|endPrefixMapping
argument_list|(
literal|"prefix"
argument_list|)
expr_stmt|;
name|replay
argument_list|(
name|mockEncoder
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endPrefixMapping
argument_list|(
literal|"prefix"
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockEncoder
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStartElement
parameter_list|()
throws|throws
name|Exception
block|{
name|QName
name|testQName
init|=
operator|new
name|QName
argument_list|(
literal|"local"
argument_list|,
literal|"uri"
argument_list|,
literal|"prefix"
argument_list|)
decl_stmt|;
name|AttrList
name|testAttrList
init|=
operator|new
name|AttrList
argument_list|()
decl_stmt|;
name|testAttrList
operator|.
name|addAttribute
argument_list|(
operator|new
name|QName
argument_list|(
literal|"local"
argument_list|,
literal|"uri"
argument_list|)
argument_list|,
literal|"value"
argument_list|)
expr_stmt|;
name|Capture
argument_list|<
name|Attributes
argument_list|>
name|capturedAttributes
init|=
operator|new
name|Capture
argument_list|<
name|Attributes
argument_list|>
argument_list|()
decl_stmt|;
name|mockEncoder
operator|.
name|startElement
argument_list|(
name|matches
argument_list|(
literal|"uri"
argument_list|)
argument_list|,
name|matches
argument_list|(
literal|"local"
argument_list|)
argument_list|,
operator|(
name|String
operator|)
name|isNull
argument_list|()
argument_list|,
name|capture
argument_list|(
name|capturedAttributes
argument_list|)
argument_list|)
expr_stmt|;
name|replay
argument_list|(
name|mockEncoder
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|startElement
argument_list|(
name|testQName
argument_list|,
name|testAttrList
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockEncoder
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Attributes
argument_list|>
name|capturedAttributeList
init|=
name|capturedAttributes
operator|.
name|getValues
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"local"
argument_list|,
name|capturedAttributeList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLocalName
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"uri"
argument_list|,
name|capturedAttributeList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getURI
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value"
argument_list|,
name|capturedAttributeList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Ignore
argument_list|(
literal|"incomplete"
argument_list|)
annotation|@
name|Test
specifier|public
name|void
name|testEndElement
parameter_list|()
block|{
comment|// TODO
block|}
annotation|@
name|Ignore
argument_list|(
literal|"incomplete"
argument_list|)
annotation|@
name|Test
specifier|public
name|void
name|testCharacters
parameter_list|()
block|{
comment|// TODO
block|}
block|}
end_class

end_unit

