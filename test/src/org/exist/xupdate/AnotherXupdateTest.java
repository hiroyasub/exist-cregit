begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xupdate
package|;
end_package

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|ResourceSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|test
operator|.
name|EmbeddedExistTester
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_comment
comment|/**  *  Test to show an xupdate/replace issue with the results of util:parse()  * @author wessels  */
end_comment

begin_class
specifier|public
class|class
name|AnotherXupdateTest
extends|extends
name|EmbeddedExistTester
block|{
specifier|public
name|AnotherXupdateTest
parameter_list|()
block|{
block|}
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setUpClass
parameter_list|()
throws|throws
name|Exception
block|{
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|tearDownClass
parameter_list|()
throws|throws
name|Exception
block|{
block|}
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
block|}
annotation|@
name|Test
annotation|@
name|Ignore
argument_list|(
literal|"Failing test"
argument_list|)
specifier|public
name|void
name|updateReplace
parameter_list|()
block|{
try|try
block|{
comment|// Store document
name|Collection
name|newCol
init|=
name|createCollection
argument_list|(
name|rootCollection
argument_list|,
literal|"xupdatereplace"
argument_list|)
decl_stmt|;
name|storeResource
argument_list|(
name|newCol
argument_list|,
literal|"test.xml"
argument_list|,
literal|"<x><y/></x>"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
comment|// check results
name|ResourceSet
name|results0
init|=
name|executeQuery
argument_list|(
literal|"doc('/db/xupdatereplace/test.xml')"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|results0
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
comment|// perform query
name|ResourceSet
name|results1
init|=
name|executeQuery
argument_list|(
literal|"update replace doc('/db/xupdatereplace/test.xml')//y with util:parse('<y/>')"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|results1
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
comment|// check results
name|ResourceSet
name|results2
init|=
name|executeQuery
argument_list|(
literal|"doc('/db/xupdatereplace/test.xml')"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|results2
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|ex
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
name|ex
argument_list|)
expr_stmt|;
name|fail
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

