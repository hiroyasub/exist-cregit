begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-2016 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|update
package|;
end_package

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|IArgumentMatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|IMocksControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|persistent
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|indexing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|BrokerPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|btree
operator|.
name|DBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|DatabaseConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|function
operator|.
name|ConsumerE
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|XQueryContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|XQueryService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|BiConsumer
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|anyBoolean
import|;
end_import

begin_class
specifier|public
class|class
name|IndexIntegrationTest
extends|extends
name|AbstractTestUpdate
block|{
specifier|private
name|void
name|run
parameter_list|(
specifier|final
name|XmldbURI
name|docUri
parameter_list|,
specifier|final
name|String
name|data
parameter_list|,
specifier|final
name|BiConsumer
argument_list|<
name|IndexWorker
argument_list|,
name|StreamListener
argument_list|>
name|setup
parameter_list|,
name|ConsumerE
argument_list|<
name|XQueryService
argument_list|,
name|XMLDBException
argument_list|>
name|test
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|XQueryService
name|service
init|=
name|storeXMLStringAndGetQueryService
argument_list|(
name|docUri
operator|.
name|lastSegment
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|data
argument_list|)
decl_stmt|;
specifier|final
name|IMocksControl
name|control
init|=
name|createStrictControl
argument_list|()
decl_stmt|;
specifier|final
name|IndexWorker
name|worker
init|=
name|control
operator|.
name|createMock
argument_list|(
name|IndexWorker
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|StreamListener
name|stream
init|=
name|control
operator|.
name|createMock
argument_list|(
name|AbstractStreamListener
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|AbstractIndex
name|index
init|=
operator|new
name|TestIndex
argument_list|(
name|worker
argument_list|)
decl_stmt|;
specifier|final
name|BrokerPool
name|db
init|=
name|BrokerPool
operator|.
name|getInstance
argument_list|()
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker
init|=
name|db
operator|.
name|authenticate
argument_list|(
literal|"admin"
argument_list|,
literal|""
argument_list|)
init|)
block|{
name|expect
argument_list|(
name|worker
operator|.
name|getIndexId
argument_list|()
argument_list|)
operator|.
name|andStubReturn
argument_list|(
literal|"TestIndex"
argument_list|)
expr_stmt|;
name|control
operator|.
name|replay
argument_list|()
expr_stmt|;
name|db
operator|.
name|getIndexManager
argument_list|()
operator|.
name|registerIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|broker
operator|.
name|initIndexModules
argument_list|()
expr_stmt|;
name|control
operator|.
name|verify
argument_list|()
expr_stmt|;
name|control
operator|.
name|resetToStrict
argument_list|()
expr_stmt|;
comment|//common
name|expect
argument_list|(
name|worker
operator|.
name|getQueryRewriter
argument_list|(
name|anyObject
argument_list|(
name|XQueryContext
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andStubReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|worker
operator|.
name|getIndexName
argument_list|()
argument_list|)
operator|.
name|andStubReturn
argument_list|(
literal|"TestIndex"
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|worker
operator|.
name|getListener
argument_list|()
argument_list|)
operator|.
name|andStubReturn
argument_list|(
name|stream
argument_list|)
expr_stmt|;
name|stream
operator|.
name|setNextInChain
argument_list|(
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
operator|.
name|asStub
argument_list|()
expr_stmt|;
name|setup
operator|.
name|accept
argument_list|(
name|worker
argument_list|,
name|stream
argument_list|)
expr_stmt|;
name|control
operator|.
name|replay
argument_list|()
expr_stmt|;
name|test
operator|.
name|accept
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|control
operator|.
name|verify
argument_list|()
expr_stmt|;
name|control
operator|.
name|resetToStrict
argument_list|()
expr_stmt|;
name|index
operator|.
name|close
argument_list|()
expr_stmt|;
name|db
operator|.
name|getIndexManager
argument_list|()
operator|.
name|unregisterIndex
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|broker
operator|.
name|initIndexModules
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|control
operator|.
name|resetToStrict
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|insertElement
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|docName
init|=
literal|"pathNs2.xml"
decl_stmt|;
specifier|final
name|XmldbURI
name|docUri
init|=
name|XmldbURI
operator|.
name|create
argument_list|(
literal|"/db/test/"
operator|+
name|docName
argument_list|)
decl_stmt|;
name|run
argument_list|(
name|docUri
argument_list|,
literal|"<test/>"
argument_list|,
parameter_list|(
name|worker
parameter_list|,
name|stream
parameter_list|)
lambda|->
block|{
comment|//set document
name|worker
operator|.
name|setDocument
argument_list|(
name|eqDocument
argument_list|(
name|docUri
argument_list|)
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
comment|//get top reindex node
name|expect
argument_list|(
name|worker
operator|.
name|getReindexRoot
argument_list|(
name|anyObject
argument_list|()
argument_list|,
name|anyObject
argument_list|()
argument_list|,
name|anyBoolean
argument_list|()
argument_list|,
name|anyBoolean
argument_list|()
argument_list|)
argument_list|)
operator|.
name|andStubReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
comment|//set mode
name|worker
operator|.
name|setMode
argument_list|(
name|StreamListener
operator|.
name|ReindexMode
operator|.
name|STORE
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
comment|//get stream listener
comment|//setup chain
comment|//stream
name|stream
operator|.
name|startIndexDocument
argument_list|(
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
name|stream
operator|.
name|startElement
argument_list|(
name|anyObject
argument_list|()
argument_list|,
name|anyObject
argument_list|()
argument_list|,
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
name|stream
operator|.
name|attribute
argument_list|(
name|anyObject
argument_list|()
argument_list|,
name|anyObject
argument_list|()
argument_list|,
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
name|stream
operator|.
name|endElement
argument_list|(
name|anyObject
argument_list|()
argument_list|,
name|anyObject
argument_list|()
argument_list|,
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
name|stream
operator|.
name|endIndexDocument
argument_list|(
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
comment|//flush
name|worker
operator|.
name|flush
argument_list|()
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
block|}
argument_list|,
name|service
lambda|->
name|queryResource
argument_list|(
name|service
argument_list|,
name|docName
argument_list|,
literal|"update insert<t xml:id=\"id1\"/> into /test"
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|updateAttribute
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|docName
init|=
literal|"pathNs2.xml"
decl_stmt|;
specifier|final
name|XmldbURI
name|docUri
init|=
name|XmldbURI
operator|.
name|create
argument_list|(
literal|"/db/test/"
operator|+
name|docName
argument_list|)
decl_stmt|;
name|run
argument_list|(
name|docUri
argument_list|,
literal|"<test><t xml:id=\"id1\"/></test>"
argument_list|,
parameter_list|(
name|worker
parameter_list|,
name|stream
parameter_list|)
lambda|->
block|{
comment|//get top reindex node
name|expect
argument_list|(
name|worker
operator|.
name|getReindexRoot
argument_list|(
name|anyObject
argument_list|()
argument_list|,
name|anyObject
argument_list|()
argument_list|,
name|anyBoolean
argument_list|()
argument_list|,
name|anyBoolean
argument_list|()
argument_list|)
argument_list|)
operator|.
name|andStubReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
comment|//REMOVE STAGE
comment|//set document
name|worker
operator|.
name|setDocument
argument_list|(
name|eqDocument
argument_list|(
name|docUri
argument_list|)
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
comment|//set mode
name|worker
operator|.
name|setMode
argument_list|(
name|StreamListener
operator|.
name|ReindexMode
operator|.
name|REMOVE_SOME_NODES
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
comment|//get stream listener
name|worker
operator|.
name|setDocument
argument_list|(
name|eqDocument
argument_list|(
name|docUri
argument_list|)
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
name|worker
operator|.
name|setMode
argument_list|(
name|StreamListener
operator|.
name|ReindexMode
operator|.
name|REMOVE_SOME_NODES
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
comment|//setup chain
comment|//stream
name|stream
operator|.
name|startIndexDocument
argument_list|(
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
name|stream
operator|.
name|attribute
argument_list|(
name|anyObject
argument_list|()
argument_list|,
name|eqAttr
argument_list|(
literal|"xml:id"
argument_list|,
literal|"id1"
argument_list|)
argument_list|,
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
name|stream
operator|.
name|endIndexDocument
argument_list|(
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
name|worker
operator|.
name|flush
argument_list|()
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
comment|//STORE STAGE
comment|//get stream listener
name|worker
operator|.
name|setDocument
argument_list|(
name|eqDocument
argument_list|(
name|docUri
argument_list|)
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
name|worker
operator|.
name|setMode
argument_list|(
name|StreamListener
operator|.
name|ReindexMode
operator|.
name|STORE
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
comment|//setup chain
comment|//stream
name|stream
operator|.
name|startIndexDocument
argument_list|(
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
name|stream
operator|.
name|attribute
argument_list|(
name|anyObject
argument_list|()
argument_list|,
name|eqAttr
argument_list|(
literal|"xml:id"
argument_list|,
literal|"id2"
argument_list|)
argument_list|,
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
name|stream
operator|.
name|endIndexDocument
argument_list|(
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
name|worker
operator|.
name|flush
argument_list|()
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
comment|//flush
name|worker
operator|.
name|flush
argument_list|()
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
block|}
argument_list|,
name|service
lambda|->
name|queryResource
argument_list|(
name|service
argument_list|,
name|docName
argument_list|,
literal|"update value //t/@xml:id with 'id2'"
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|removeAttribute
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|docName
init|=
literal|"pathNs2.xml"
decl_stmt|;
specifier|final
name|XmldbURI
name|docUri
init|=
name|XmldbURI
operator|.
name|create
argument_list|(
literal|"/db/test/"
operator|+
name|docName
argument_list|)
decl_stmt|;
name|run
argument_list|(
name|docUri
argument_list|,
literal|"<test><t xml:id=\"id2\"/></test>"
argument_list|,
parameter_list|(
name|worker
parameter_list|,
name|stream
parameter_list|)
lambda|->
block|{
comment|//get top reindex node
name|expect
argument_list|(
name|worker
operator|.
name|getReindexRoot
argument_list|(
name|anyObject
argument_list|()
argument_list|,
name|anyObject
argument_list|()
argument_list|,
name|anyBoolean
argument_list|()
argument_list|,
name|anyBoolean
argument_list|()
argument_list|)
argument_list|)
operator|.
name|andStubReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
comment|//REMOVE STAGE
comment|//set document
name|worker
operator|.
name|setDocument
argument_list|(
name|eqDocument
argument_list|(
name|docUri
argument_list|)
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
comment|//set mode
name|worker
operator|.
name|setMode
argument_list|(
name|StreamListener
operator|.
name|ReindexMode
operator|.
name|REMOVE_SOME_NODES
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
comment|//get stream listener
name|worker
operator|.
name|setDocument
argument_list|(
name|eqDocument
argument_list|(
name|docUri
argument_list|)
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
name|worker
operator|.
name|setMode
argument_list|(
name|StreamListener
operator|.
name|ReindexMode
operator|.
name|REMOVE_SOME_NODES
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
comment|//setup chain
comment|//stream
name|stream
operator|.
name|startIndexDocument
argument_list|(
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
name|stream
operator|.
name|attribute
argument_list|(
name|anyObject
argument_list|()
argument_list|,
name|eqAttr
argument_list|(
literal|"xml:id"
argument_list|,
literal|"id2"
argument_list|)
argument_list|,
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
name|stream
operator|.
name|endIndexDocument
argument_list|(
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
name|worker
operator|.
name|flush
argument_list|()
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
comment|//flush
name|worker
operator|.
name|flush
argument_list|()
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
block|}
argument_list|,
name|service
lambda|->
name|queryResource
argument_list|(
name|service
argument_list|,
name|docName
argument_list|,
literal|"update delete //t/@xml:id"
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|DocumentImpl
name|eqDocument
parameter_list|(
specifier|final
name|XmldbURI
name|url
parameter_list|)
block|{
name|reportMatcher
argument_list|(
operator|new
name|DocumentMatcher
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|private
specifier|static
class|class
name|DocumentMatcher
implements|implements
name|IArgumentMatcher
block|{
specifier|final
name|XmldbURI
name|url
decl_stmt|;
name|DocumentMatcher
parameter_list|(
specifier|final
name|XmldbURI
name|url
parameter_list|)
block|{
name|this
operator|.
name|url
operator|=
name|url
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|matches
parameter_list|(
specifier|final
name|Object
name|argument
parameter_list|)
block|{
if|if
condition|(
name|argument
operator|instanceof
name|DocumentImpl
condition|)
block|{
specifier|final
name|DocumentImpl
name|doc
init|=
operator|(
name|DocumentImpl
operator|)
name|argument
decl_stmt|;
return|return
name|url
operator|.
name|equals
argument_list|(
name|doc
operator|.
name|getURI
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|appendTo
parameter_list|(
specifier|final
name|StringBuffer
name|buffer
parameter_list|)
block|{
name|buffer
operator|.
name|append
argument_list|(
literal|"eqDocument("
argument_list|)
operator|.
name|append
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|", ?)"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|AttrImpl
name|eqAttr
parameter_list|(
specifier|final
name|String
name|name
parameter_list|,
specifier|final
name|String
name|value
parameter_list|)
block|{
name|reportMatcher
argument_list|(
operator|new
name|AttributeMatcher
argument_list|(
name|name
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|private
specifier|static
class|class
name|AttributeMatcher
implements|implements
name|IArgumentMatcher
block|{
specifier|final
name|String
name|name
decl_stmt|;
specifier|final
name|String
name|value
decl_stmt|;
name|AttributeMatcher
parameter_list|(
specifier|final
name|String
name|name
parameter_list|,
specifier|final
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|matches
parameter_list|(
specifier|final
name|Object
name|argument
parameter_list|)
block|{
if|if
condition|(
name|argument
operator|instanceof
name|AttrImpl
condition|)
block|{
specifier|final
name|AttrImpl
name|attr
init|=
operator|(
name|AttrImpl
operator|)
name|argument
decl_stmt|;
return|return
name|attr
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|name
argument_list|)
operator|&&
name|attr
operator|.
name|getValue
argument_list|()
operator|.
name|equals
argument_list|(
name|value
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|appendTo
parameter_list|(
specifier|final
name|StringBuffer
name|buffer
parameter_list|)
block|{
name|buffer
operator|.
name|append
argument_list|(
literal|"eqAttr(@"
argument_list|)
operator|.
name|append
argument_list|(
name|name
argument_list|)
operator|.
name|append
argument_list|(
literal|"("
argument_list|)
operator|.
name|append
argument_list|(
name|value
argument_list|)
operator|.
name|append
argument_list|(
literal|"), ?)"
argument_list|)
expr_stmt|;
block|}
block|}
class|class
name|TestIndex
extends|extends
name|AbstractIndex
block|{
specifier|final
name|IndexWorker
name|worker
decl_stmt|;
name|TestIndex
parameter_list|(
specifier|final
name|IndexWorker
name|worker
parameter_list|)
block|{
name|this
operator|.
name|worker
operator|=
name|worker
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getIndexId
parameter_list|()
block|{
return|return
literal|"TestIndex"
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getIndexName
parameter_list|()
block|{
return|return
literal|"TestIndex"
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|open
parameter_list|()
throws|throws
name|DatabaseConfigurationException
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|DBException
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|sync
parameter_list|()
throws|throws
name|DBException
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|remove
parameter_list|()
throws|throws
name|DBException
block|{
block|}
annotation|@
name|Override
specifier|public
name|IndexWorker
name|getWorker
parameter_list|(
specifier|final
name|DBBroker
name|broker
parameter_list|)
block|{
return|return
name|worker
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|checkIndex
parameter_list|(
specifier|final
name|DBBroker
name|broker
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
block|}
block|}
end_class

end_unit

