begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-06 Wolfgang M. Meier  *  wolfgang@exist-db.org  *  http://exist.sourceforge.net  *    *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *    *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *    *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *    *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xquery
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|BasicConfigurator
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_comment
comment|/**  * @author Wolfgang Meier (wolfgang@exist-db.org)  */
end_comment

begin_class
specifier|public
class|class
name|XQueryUseCasesTest
extends|extends
name|TestCase
block|{
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|junit
operator|.
name|textui
operator|.
name|TestRunner
operator|.
name|run
argument_list|(
name|XQueryUseCasesTest
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|XQueryUseCase
name|useCase
init|=
operator|new
name|XQueryUseCase
argument_list|()
decl_stmt|;
specifier|public
name|XQueryUseCasesTest
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
comment|/* 	 * @see TestCase#setUp() 	 */
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|useCase
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
comment|// jmv: to activate when we'll have function deep-equal()
comment|//	public void testXMP() throws Exception {
comment|//		useCase.doTest("xmp");
comment|//	}
specifier|public
name|void
name|testSGML
parameter_list|()
throws|throws
name|Exception
block|{
name|useCase
operator|.
name|doTest
argument_list|(
literal|"sgml"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testTREE
parameter_list|()
throws|throws
name|Exception
block|{
name|useCase
operator|.
name|doTest
argument_list|(
literal|"tree"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testParts
parameter_list|()
throws|throws
name|Exception
block|{
name|useCase
operator|.
name|doTest
argument_list|(
literal|"parts"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testString
parameter_list|()
throws|throws
name|Exception
block|{
name|useCase
operator|.
name|doTest
argument_list|(
literal|"string"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testNS
parameter_list|()
throws|throws
name|Exception
block|{
name|useCase
operator|.
name|doTest
argument_list|(
literal|"ns"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSeq
parameter_list|()
throws|throws
name|Exception
block|{
name|useCase
operator|.
name|doTest
argument_list|(
literal|"seq"
argument_list|)
expr_stmt|;
block|}
comment|// jmv: to activate when implemented
comment|// org.xmldb.api.base.XMLDBException: Cannot query constructed nodes.
comment|//	public void testR() throws Exception {
comment|//		useCase.doTest("r");
comment|//	}
block|}
end_class

end_unit

