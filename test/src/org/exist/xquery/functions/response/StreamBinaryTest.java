begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|functions
operator|.
name|response
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertArrayEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|codec
operator|.
name|binary
operator|.
name|Base64
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|HttpStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|NameValuePair
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|GetMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|http
operator|.
name|RESTTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|io
operator|.
name|FastByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Tests expected behaviour of response:stream-binary() XQuery function  *   * @author Adam Retter<adam@exist-db.org>  * @version 1.0  */
end_comment

begin_class
specifier|public
class|class
name|StreamBinaryTest
extends|extends
name|RESTTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testStreamBinary
parameter_list|()
block|{
specifier|final
name|String
name|testValue
init|=
literal|"hello world"
decl_stmt|;
specifier|final
name|String
name|xquery
init|=
literal|"response:stream-binary(xs:base64Binary('"
operator|+
name|Base64
operator|.
name|encodeBase64String
argument_list|(
name|testValue
operator|.
name|getBytes
argument_list|()
argument_list|)
operator|+
literal|"'), 'application/octet-stream', 'test.bin')"
decl_stmt|;
name|GetMethod
name|get
init|=
operator|new
name|GetMethod
argument_list|(
name|getCollectionRootUri
argument_list|()
argument_list|)
decl_stmt|;
name|NameValuePair
name|qsParams
index|[]
init|=
block|{
operator|new
name|NameValuePair
argument_list|(
literal|"_query"
argument_list|,
name|xquery
argument_list|)
block|,
operator|new
name|NameValuePair
argument_list|(
literal|"_indent"
argument_list|,
literal|"no"
argument_list|)
block|}
decl_stmt|;
name|get
operator|.
name|setQueryString
argument_list|(
name|qsParams
argument_list|)
expr_stmt|;
try|try
block|{
name|int
name|httpResult
init|=
name|client
operator|.
name|executeMethod
argument_list|(
name|get
argument_list|)
decl_stmt|;
try|try
init|(
specifier|final
name|InputStream
name|is
init|=
name|get
operator|.
name|getResponseBodyAsStream
argument_list|()
init|;
specifier|final
name|FastByteArrayOutputStream
name|baos
init|=
operator|new
name|FastByteArrayOutputStream
argument_list|()
init|)
block|{
name|baos
operator|.
name|write
argument_list|(
name|is
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|httpResult
argument_list|,
name|HttpStatus
operator|.
name|SC_OK
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|testValue
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|fail
argument_list|(
name|ioe
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|get
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

