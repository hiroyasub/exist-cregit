begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|functions
operator|.
name|request
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|UserManagementService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|output
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|HttpException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|HttpMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|HttpStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|ByteArrayRequestEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|PostMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|http
operator|.
name|RESTTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|EXistResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertArrayEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|DatabaseManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|BinaryResource
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|codec
operator|.
name|binary
operator|.
name|Base64
operator|.
name|encodeBase64String
import|;
end_import

begin_comment
comment|/**  * @author Adam Retter<adam.retter@googlemail.com>  */
end_comment

begin_class
specifier|public
class|class
name|GetDataTest
extends|extends
name|RESTTest
block|{
specifier|private
specifier|final
specifier|static
name|String
name|CONTAINER_ELEMENT_NAME
init|=
literal|"data"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|XQUERY
init|=
name|wrapInElement
argument_list|(
literal|"{request:get-data()}"
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|XQUERY_FILENAME
init|=
literal|"test-get-data.xql"
decl_stmt|;
specifier|private
specifier|static
name|Collection
name|root
decl_stmt|;
specifier|private
specifier|static
name|String
name|wrapInElement
parameter_list|(
name|String
name|value
parameter_list|)
block|{
return|return
name|value
operator|==
literal|null
operator|||
name|value
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|?
literal|"<"
operator|+
name|CONTAINER_ELEMENT_NAME
operator|+
literal|"/>"
else|:
literal|"<"
operator|+
name|CONTAINER_ELEMENT_NAME
operator|+
literal|">"
operator|+
name|value
operator|+
literal|"</"
operator|+
name|CONTAINER_ELEMENT_NAME
operator|+
literal|">"
return|;
block|}
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|beforeClass
parameter_list|()
throws|throws
name|XMLDBException
block|{
comment|// jetty.port.standalone
name|root
operator|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
literal|"xmldb:exist://localhost:"
operator|+
name|System
operator|.
name|getProperty
argument_list|(
literal|"jetty.port"
argument_list|)
operator|+
literal|"/xmlrpc/db"
argument_list|,
literal|"admin"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|BinaryResource
name|res
init|=
operator|(
name|BinaryResource
operator|)
name|root
operator|.
name|createResource
argument_list|(
name|XQUERY_FILENAME
argument_list|,
literal|"BinaryResource"
argument_list|)
decl_stmt|;
operator|(
operator|(
name|EXistResource
operator|)
name|res
operator|)
operator|.
name|setMimeType
argument_list|(
literal|"application/xquery"
argument_list|)
expr_stmt|;
name|res
operator|.
name|setContent
argument_list|(
name|XQUERY
argument_list|)
expr_stmt|;
name|root
operator|.
name|storeResource
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|UserManagementService
name|ums
init|=
operator|(
name|UserManagementService
operator|)
name|root
operator|.
name|getService
argument_list|(
literal|"UserManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|ums
operator|.
name|chmod
argument_list|(
name|res
argument_list|,
literal|0777
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|afterClass
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|BinaryResource
name|res
init|=
operator|(
name|BinaryResource
operator|)
name|root
operator|.
name|getResource
argument_list|(
name|XQUERY_FILENAME
argument_list|)
decl_stmt|;
name|root
operator|.
name|removeResource
argument_list|(
name|res
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|retrieveEmpty
parameter_list|()
block|{
name|PostMethod
name|post
init|=
operator|new
name|PostMethod
argument_list|(
name|COLLECTION_ROOT_URL
operator|+
literal|"/"
operator|+
name|XQUERY_FILENAME
argument_list|)
decl_stmt|;
name|post
operator|.
name|setRequestHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/octet-stream"
argument_list|)
expr_stmt|;
name|testRequest
argument_list|(
name|post
argument_list|,
name|wrapInElement
argument_list|(
literal|""
argument_list|)
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|retrieveBinary
parameter_list|()
block|{
name|PostMethod
name|post
init|=
operator|new
name|PostMethod
argument_list|(
name|COLLECTION_ROOT_URL
operator|+
literal|"/"
operator|+
name|XQUERY_FILENAME
argument_list|)
decl_stmt|;
specifier|final
name|String
name|testData
init|=
literal|"12345"
decl_stmt|;
name|post
operator|.
name|setRequestHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"application/octet-stream"
argument_list|)
expr_stmt|;
name|post
operator|.
name|setRequestEntity
argument_list|(
operator|new
name|ByteArrayRequestEntity
argument_list|(
name|testData
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|testRequest
argument_list|(
name|post
argument_list|,
name|wrapInElement
argument_list|(
name|encodeBase64String
argument_list|(
name|testData
operator|.
name|getBytes
argument_list|()
argument_list|)
operator|.
name|trim
argument_list|()
argument_list|)
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|retrieveXml
parameter_list|()
block|{
name|PostMethod
name|post
init|=
operator|new
name|PostMethod
argument_list|(
name|COLLECTION_ROOT_URL
operator|+
literal|"/"
operator|+
name|XQUERY_FILENAME
argument_list|)
decl_stmt|;
specifier|final
name|String
name|testData
init|=
literal|"<a><b><c>hello</c></b></a>"
decl_stmt|;
name|post
operator|.
name|setRequestHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"text/xml"
argument_list|)
expr_stmt|;
name|post
operator|.
name|setRequestEntity
argument_list|(
operator|new
name|ByteArrayRequestEntity
argument_list|(
name|testData
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|testRequest
argument_list|(
name|post
argument_list|,
name|wrapInElement
argument_list|(
literal|"\n\t"
operator|+
name|testData
operator|+
literal|"\n"
argument_list|)
operator|.
name|getBytes
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|retrieveMalformedXmlFallbackToString
parameter_list|()
block|{
name|PostMethod
name|post
init|=
operator|new
name|PostMethod
argument_list|(
name|COLLECTION_ROOT_URL
operator|+
literal|"/"
operator|+
name|XQUERY_FILENAME
argument_list|)
decl_stmt|;
specifier|final
name|String
name|testData
init|=
literal|"<a><b></a>"
decl_stmt|;
name|post
operator|.
name|setRequestHeader
argument_list|(
literal|"Content-Type"
argument_list|,
literal|"text/xml"
argument_list|)
expr_stmt|;
name|post
operator|.
name|setRequestEntity
argument_list|(
operator|new
name|ByteArrayRequestEntity
argument_list|(
name|testData
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|testRequest
argument_list|(
name|post
argument_list|,
name|wrapInElement
argument_list|(
name|testData
operator|.
name|replace
argument_list|(
literal|"<"
argument_list|,
literal|"&lt;"
argument_list|)
operator|.
name|replace
argument_list|(
literal|">"
argument_list|,
literal|"&gt;"
argument_list|)
argument_list|)
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|retrieveString
parameter_list|()
block|{
name|PostMethod
name|post
init|=
operator|new
name|PostMethod
argument_list|(
name|COLLECTION_ROOT_URL
operator|+
literal|"/"
operator|+
name|XQUERY_FILENAME
argument_list|)
decl_stmt|;
specifier|final
name|String
name|testData
init|=
literal|"12345"
decl_stmt|;
name|post
operator|.
name|setRequestEntity
argument_list|(
operator|new
name|ByteArrayRequestEntity
argument_list|(
name|testData
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|testRequest
argument_list|(
name|post
argument_list|,
name|wrapInElement
argument_list|(
name|testData
argument_list|)
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|testRequest
parameter_list|(
name|HttpMethod
name|method
parameter_list|,
name|byte
name|expectedResponse
index|[]
parameter_list|)
block|{
name|testRequest
argument_list|(
name|method
argument_list|,
name|expectedResponse
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|testRequest
parameter_list|(
name|HttpMethod
name|method
parameter_list|,
name|byte
name|expectedResponse
index|[]
parameter_list|,
name|boolean
name|stripWhitespaceAndFormatting
parameter_list|)
block|{
try|try
block|{
name|int
name|httpResult
init|=
name|client
operator|.
name|executeMethod
argument_list|(
name|method
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|HttpStatus
operator|.
name|SC_OK
argument_list|,
name|httpResult
argument_list|)
expr_stmt|;
name|byte
name|buf
index|[]
init|=
operator|new
name|byte
index|[
literal|1024
index|]
decl_stmt|;
name|int
name|read
init|=
operator|-
literal|1
decl_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|InputStream
name|is
init|=
name|method
operator|.
name|getResponseBodyAsStream
argument_list|()
decl_stmt|;
while|while
condition|(
operator|(
name|read
operator|=
name|is
operator|.
name|read
argument_list|(
name|buf
argument_list|)
operator|)
operator|>
operator|-
literal|1
condition|)
block|{
name|baos
operator|.
name|write
argument_list|(
name|buf
argument_list|,
literal|0
argument_list|,
name|read
argument_list|)
expr_stmt|;
block|}
name|byte
name|actualResponse
index|[]
init|=
name|baos
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
if|if
condition|(
name|stripWhitespaceAndFormatting
condition|)
block|{
name|expectedResponse
operator|=
operator|new
name|String
argument_list|(
name|expectedResponse
argument_list|)
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|""
argument_list|)
operator|.
name|replace
argument_list|(
literal|"\t"
argument_list|,
literal|""
argument_list|)
operator|.
name|replace
argument_list|(
literal|" "
argument_list|,
literal|""
argument_list|)
operator|.
name|getBytes
argument_list|()
expr_stmt|;
name|actualResponse
operator|=
operator|new
name|String
argument_list|(
name|actualResponse
argument_list|)
operator|.
name|replace
argument_list|(
literal|"\n"
argument_list|,
literal|""
argument_list|)
operator|.
name|replace
argument_list|(
literal|"\t"
argument_list|,
literal|""
argument_list|)
operator|.
name|replace
argument_list|(
literal|" "
argument_list|,
literal|""
argument_list|)
operator|.
name|getBytes
argument_list|()
expr_stmt|;
block|}
name|assertArrayEquals
argument_list|(
name|expectedResponse
argument_list|,
name|actualResponse
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|HttpException
name|he
parameter_list|)
block|{
name|fail
argument_list|(
name|he
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|fail
argument_list|(
name|ioe
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|method
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

