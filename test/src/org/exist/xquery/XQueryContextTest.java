begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xquery
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|EasyMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|xacml
operator|.
name|AccessContext
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|EasyMock
operator|.
name|replay
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|EasyMock
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|EasyMock
operator|.
name|expect
import|;
end_import

begin_comment
comment|/**  *  * @author aretter  */
end_comment

begin_class
specifier|public
class|class
name|XQueryContextTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|prepareForExecution_setsUserFromSession
parameter_list|()
block|{
comment|//partial mock context
name|XQueryContext
name|context
init|=
name|EasyMock
operator|.
name|createMockBuilder
argument_list|(
name|XQueryContext
operator|.
name|class
argument_list|)
operator|.
name|withConstructor
argument_list|(
name|AccessContext
operator|.
name|class
argument_list|)
operator|.
name|withArgs
argument_list|(
name|AccessContext
operator|.
name|TEST
argument_list|)
operator|.
name|addMockedMethod
argument_list|(
literal|"getUserFromHttpSession"
argument_list|)
operator|.
name|addMockedMethod
argument_list|(
literal|"getBroker"
argument_list|)
operator|.
name|createMock
argument_list|()
decl_stmt|;
name|DBBroker
name|mockBroker
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|DBBroker
operator|.
name|class
argument_list|)
decl_stmt|;
name|Subject
name|mockSubject
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|Subject
operator|.
name|class
argument_list|)
decl_stmt|;
comment|//expectations
name|expect
argument_list|(
name|context
operator|.
name|getUserFromHttpSession
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockSubject
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|context
operator|.
name|getBroker
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockBroker
argument_list|)
expr_stmt|;
name|mockBroker
operator|.
name|setSubject
argument_list|(
name|mockSubject
argument_list|)
expr_stmt|;
comment|//test
name|replay
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|context
operator|.
name|prepareForExecution
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

