begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Created on 11 juil. 2004 $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xquery
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|DTDHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|EntityResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ErrorHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXNotRecognizedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXNotSupportedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|XMLReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|helpers
operator|.
name|AttributesImpl
import|;
end_import

begin_comment
comment|/** A test data source producing adjustable tabular data */
end_comment

begin_class
class|class
name|TabularXMLReader
implements|implements
name|XMLReader
block|{
specifier|private
name|int
name|lines
init|=
literal|10
decl_stmt|;
specifier|private
name|int
name|columns
init|=
literal|10
decl_stmt|;
name|TabularXMLReader
parameter_list|()
block|{
block|}
name|TabularXMLReader
parameter_list|(
name|int
name|lines
parameter_list|,
name|int
name|columns
parameter_list|)
block|{
name|this
operator|.
name|lines
operator|=
name|lines
expr_stmt|;
name|this
operator|.
name|columns
operator|=
name|columns
expr_stmt|;
block|}
name|ContentHandler
name|contentHandler
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|boolean
name|DIFFERENT_TAG_EACH_LINE
init|=
literal|false
decl_stmt|;
name|void
name|writeDocument
parameter_list|(
name|ContentHandler
name|xmldb
parameter_list|)
throws|throws
name|SAXException
block|{
name|xmldb
operator|.
name|startDocument
argument_list|()
expr_stmt|;
name|AttributesImpl
name|attributesImpl
init|=
operator|new
name|AttributesImpl
argument_list|()
decl_stmt|;
name|xmldb
operator|.
name|startElement
argument_list|(
literal|""
argument_list|,
literal|"root"
argument_list|,
literal|"root"
argument_list|,
name|attributesImpl
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|lines
condition|;
name|i
operator|++
control|)
block|{
name|String
name|line
init|=
literal|"line"
decl_stmt|;
if|if
condition|(
name|DIFFERENT_TAG_EACH_LINE
condition|)
name|line
operator|+=
name|i
expr_stmt|;
name|xmldb
operator|.
name|startElement
argument_list|(
literal|""
argument_list|,
name|line
argument_list|,
name|line
argument_list|,
name|attributesImpl
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|columns
condition|;
name|j
operator|++
control|)
block|{
name|String
name|column
init|=
literal|"col"
operator|+
name|j
decl_stmt|;
name|xmldb
operator|.
name|startElement
argument_list|(
literal|""
argument_list|,
name|column
argument_list|,
name|column
argument_list|,
name|attributesImpl
argument_list|)
expr_stmt|;
name|char
name|ch
index|[]
init|=
operator|new
name|char
index|[
literal|20
index|]
decl_stmt|;
name|column
operator|.
name|getChars
argument_list|(
literal|0
argument_list|,
name|column
operator|.
name|length
argument_list|()
argument_list|,
name|ch
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|xmldb
operator|.
name|characters
argument_list|(
name|ch
argument_list|,
literal|0
argument_list|,
name|column
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|xmldb
operator|.
name|endElement
argument_list|(
literal|""
argument_list|,
name|column
argument_list|,
name|column
argument_list|)
expr_stmt|;
block|}
name|xmldb
operator|.
name|endElement
argument_list|(
literal|""
argument_list|,
name|line
argument_list|,
name|line
argument_list|)
expr_stmt|;
block|}
name|xmldb
operator|.
name|endElement
argument_list|(
literal|""
argument_list|,
literal|"root"
argument_list|,
literal|"root"
argument_list|)
expr_stmt|;
name|xmldb
operator|.
name|endDocument
argument_list|()
expr_stmt|;
block|}
comment|/** ? @see org.xml.sax.XMLReader#parse(java.lang.String)		 */
specifier|public
name|void
name|parse
parameter_list|(
name|String
name|systemId
parameter_list|)
throws|throws
name|IOException
throws|,
name|SAXException
block|{
name|writeDocument
argument_list|(
name|contentHandler
argument_list|)
expr_stmt|;
block|}
comment|/** ? @see org.xml.sax.XMLReader#getFeature(java.lang.String)	 */
specifier|public
name|boolean
name|getFeature
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|SAXNotRecognizedException
throws|,
name|SAXNotSupportedException
block|{
return|return
literal|false
return|;
block|}
comment|/** ? @see org.xml.sax.XMLReader#setFeature(java.lang.String, boolean)	 */
specifier|public
name|void
name|setFeature
parameter_list|(
name|String
name|name
parameter_list|,
name|boolean
name|value
parameter_list|)
throws|throws
name|SAXNotRecognizedException
throws|,
name|SAXNotSupportedException
block|{
block|}
comment|/** ? @see org.xml.sax.XMLReader#getContentHandler()	 */
specifier|public
name|ContentHandler
name|getContentHandler
parameter_list|()
block|{
return|return
name|contentHandler
return|;
block|}
comment|/** ? @see org.xml.sax.XMLReader#setContentHandler(org.xml.sax.ContentHandler) 	 */
specifier|public
name|void
name|setContentHandler
parameter_list|(
name|ContentHandler
name|handler
parameter_list|)
block|{
name|this
operator|.
name|contentHandler
operator|=
name|handler
expr_stmt|;
block|}
comment|/** ? @see org.xml.sax.XMLReader#getDTDHandler() 	 */
specifier|public
name|DTDHandler
name|getDTDHandler
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
comment|/** ? @see org.xml.sax.XMLReader#setDTDHandler(org.xml.sax.DTDHandler) 	 */
specifier|public
name|void
name|setDTDHandler
parameter_list|(
name|DTDHandler
name|handler
parameter_list|)
block|{
block|}
comment|/** ? @see org.xml.sax.XMLReader#getEntityResolver() 	 */
specifier|public
name|EntityResolver
name|getEntityResolver
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
comment|/** ? @see org.xml.sax.XMLReader#setEntityResolver(org.xml.sax.EntityResolver) 	 */
specifier|public
name|void
name|setEntityResolver
parameter_list|(
name|EntityResolver
name|resolver
parameter_list|)
block|{
block|}
comment|/** ? @see org.xml.sax.XMLReader#getErrorHandler() 	 */
specifier|public
name|ErrorHandler
name|getErrorHandler
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
comment|/** ? @see org.xml.sax.XMLReader#setErrorHandler(org.xml.sax.ErrorHandler) 	 */
specifier|public
name|void
name|setErrorHandler
parameter_list|(
name|ErrorHandler
name|handler
parameter_list|)
block|{
block|}
comment|/** ? @see org.xml.sax.XMLReader#parse(org.xml.sax.InputSource) 	 */
specifier|public
name|void
name|parse
parameter_list|(
name|InputSource
name|input
parameter_list|)
throws|throws
name|IOException
throws|,
name|SAXException
block|{
name|writeDocument
argument_list|(
name|contentHandler
argument_list|)
expr_stmt|;
block|}
comment|/** ? @see org.xml.sax.XMLReader#getProperty(java.lang.String) 	 */
specifier|public
name|Object
name|getProperty
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|SAXNotRecognizedException
throws|,
name|SAXNotSupportedException
block|{
return|return
literal|null
return|;
block|}
comment|/** ? @see org.xml.sax.XMLReader#setProperty(java.lang.String, java.lang.Object) 	 */
specifier|public
name|void
name|setProperty
parameter_list|(
name|String
name|name
parameter_list|,
name|Object
name|value
parameter_list|)
throws|throws
name|SAXNotRecognizedException
throws|,
name|SAXNotSupportedException
block|{
block|}
comment|/** 	 * @return Returns the number of lines. 	 */
specifier|public
name|int
name|getLines
parameter_list|()
block|{
return|return
name|lines
return|;
block|}
comment|/** 	 * @return Returns the number of columns. 	 */
specifier|public
name|int
name|getColumns
parameter_list|()
block|{
return|return
name|columns
return|;
block|}
block|}
end_class

end_unit

