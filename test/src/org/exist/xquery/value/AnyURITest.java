begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|value
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|test
operator|.
name|TestConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|ValueIndexByQNameTest
import|;
end_import

begin_comment
comment|/**  *  * @author cgeorg  */
end_comment

begin_class
specifier|public
class|class
name|AnyURITest
extends|extends
name|TestCase
block|{
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|junit
operator|.
name|textui
operator|.
name|TestRunner
operator|.
name|run
argument_list|(
name|ValueIndexByQNameTest
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testFullyEscapedStringToXmldbURI
parameter_list|()
block|{
try|try
block|{
name|String
name|escaped
init|=
name|TestConstants
operator|.
name|SPECIAL_NAME
decl_stmt|;
name|AnyURIValue
name|anyUri
init|=
operator|new
name|AnyURIValue
argument_list|(
name|escaped
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|anyUri
operator|.
name|toXmldbURI
argument_list|()
argument_list|,
name|TestConstants
operator|.
name|SPECIAL_URI
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fail
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testFullyEscapedStringToURI
parameter_list|()
block|{
try|try
block|{
name|URI
name|uri
init|=
name|TestConstants
operator|.
name|SPECIAL_URI
operator|.
name|getXmldbURI
argument_list|()
decl_stmt|;
name|String
name|escaped
init|=
name|TestConstants
operator|.
name|SPECIAL_NAME
decl_stmt|;
name|AnyURIValue
name|anyUri
init|=
operator|new
name|AnyURIValue
argument_list|(
name|escaped
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|anyUri
operator|.
name|toURI
argument_list|()
argument_list|,
name|uri
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fail
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * TODO: change AnyURIValue to directly store the escaped value?      */
specifier|public
name|void
name|todoTestPartiallyEscapedStringToXmldbURI
parameter_list|()
block|{
try|try
block|{
name|String
name|escaped
init|=
name|TestConstants
operator|.
name|SPECIAL_NAME
operator|.
name|replaceAll
argument_list|(
literal|"%20"
argument_list|,
literal|" "
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"%C3%A0"
argument_list|,
literal|"\u00E0"
argument_list|)
decl_stmt|;
name|AnyURIValue
name|anyUri
init|=
operator|new
name|AnyURIValue
argument_list|(
name|escaped
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|anyUri
operator|.
name|toXmldbURI
argument_list|()
argument_list|,
name|TestConstants
operator|.
name|SPECIAL_URI
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testPartiallyEscapedStringToURI
parameter_list|()
block|{
try|try
block|{
name|URI
name|uri
init|=
name|TestConstants
operator|.
name|SPECIAL_URI
operator|.
name|getXmldbURI
argument_list|()
decl_stmt|;
name|String
name|escaped
init|=
name|TestConstants
operator|.
name|SPECIAL_NAME
operator|.
name|replaceAll
argument_list|(
literal|"%20"
argument_list|,
literal|" "
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"%C3%A0"
argument_list|,
literal|"\u00E0"
argument_list|)
decl_stmt|;
name|AnyURIValue
name|anyUri
init|=
operator|new
name|AnyURIValue
argument_list|(
name|escaped
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|anyUri
operator|.
name|toURI
argument_list|()
argument_list|,
name|uri
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fail
argument_list|(
name|e
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

