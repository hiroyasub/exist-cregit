begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|triggers
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|Txn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
specifier|public
class|class
name|CountingCollectionTrigger
implements|implements
name|CollectionTrigger
block|{
specifier|final
name|CountingCollectionTriggerState
name|state
init|=
name|CountingCollectionTriggerState
operator|.
name|getInstance
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|Collection
name|parent
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|?
extends|extends
name|Object
argument_list|>
argument_list|>
name|parameters
parameter_list|)
throws|throws
name|TriggerException
block|{
name|state
operator|.
name|incConfigure
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeCreateCollection
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|txn
parameter_list|,
name|XmldbURI
name|uri
parameter_list|)
throws|throws
name|TriggerException
block|{
name|state
operator|.
name|incBeforeCreate
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterCreateCollection
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|txn
parameter_list|,
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|Collection
name|collection
parameter_list|)
throws|throws
name|TriggerException
block|{
name|state
operator|.
name|incAfterCreate
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeCopyCollection
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|txn
parameter_list|,
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|Collection
name|collection
parameter_list|,
name|XmldbURI
name|newUri
parameter_list|)
throws|throws
name|TriggerException
block|{
name|state
operator|.
name|incBeforeCopy
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterCopyCollection
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|txn
parameter_list|,
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|Collection
name|collection
parameter_list|,
name|XmldbURI
name|oldUri
parameter_list|)
throws|throws
name|TriggerException
block|{
name|state
operator|.
name|incAfterCopy
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeMoveCollection
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|txn
parameter_list|,
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|Collection
name|collection
parameter_list|,
name|XmldbURI
name|newUri
parameter_list|)
throws|throws
name|TriggerException
block|{
name|state
operator|.
name|incBeforeMove
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterMoveCollection
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|txn
parameter_list|,
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|Collection
name|collection
parameter_list|,
name|XmldbURI
name|oldUri
parameter_list|)
throws|throws
name|TriggerException
block|{
name|state
operator|.
name|incAfterMove
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeDeleteCollection
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|txn
parameter_list|,
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|Collection
name|collection
parameter_list|)
throws|throws
name|TriggerException
block|{
name|state
operator|.
name|incBeforeDelete
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterDeleteCollection
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|txn
parameter_list|,
name|XmldbURI
name|uri
parameter_list|)
throws|throws
name|TriggerException
block|{
name|state
operator|.
name|incAfterDelete
argument_list|()
expr_stmt|;
block|}
comment|//this evil thing is here so that we can share state between the trigger and the test
comment|//we really should re-design triggers to make them easily testable!
comment|//...all I am going to say is that I am not redesigning triggers again right now
comment|//and that `they made me do it`!
specifier|public
specifier|final
specifier|static
class|class
name|CountingCollectionTriggerState
block|{
specifier|private
name|int
name|configure
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|beforeCreate
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|afterCreate
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|beforeCopy
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|afterCopy
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|beforeMove
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|afterMove
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|beforeDelete
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|afterDelete
init|=
literal|0
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|CountingCollectionTriggerState
name|instance
init|=
operator|new
name|CountingCollectionTriggerState
argument_list|()
decl_stmt|;
specifier|private
name|CountingCollectionTriggerState
parameter_list|()
block|{
block|}
specifier|public
specifier|final
specifier|static
name|CountingCollectionTriggerState
name|getInstance
parameter_list|()
block|{
return|return
name|instance
return|;
block|}
specifier|public
name|int
name|getConfigure
parameter_list|()
block|{
return|return
name|configure
return|;
block|}
specifier|public
name|void
name|incConfigure
parameter_list|()
block|{
name|configure
operator|++
expr_stmt|;
block|}
specifier|public
name|int
name|getBeforeCreate
parameter_list|()
block|{
return|return
name|beforeCreate
return|;
block|}
specifier|public
name|void
name|incBeforeCreate
parameter_list|()
block|{
name|beforeCreate
operator|++
expr_stmt|;
block|}
specifier|public
name|int
name|getAfterCreate
parameter_list|()
block|{
return|return
name|afterCreate
return|;
block|}
specifier|public
name|void
name|incAfterCreate
parameter_list|()
block|{
name|afterCreate
operator|++
expr_stmt|;
block|}
specifier|public
name|int
name|getBeforeCopy
parameter_list|()
block|{
return|return
name|beforeCopy
return|;
block|}
specifier|public
name|void
name|incBeforeCopy
parameter_list|()
block|{
name|beforeCopy
operator|++
expr_stmt|;
block|}
specifier|public
name|int
name|getAfterCopy
parameter_list|()
block|{
return|return
name|afterCopy
return|;
block|}
specifier|public
name|void
name|incAfterCopy
parameter_list|()
block|{
name|afterCopy
operator|++
expr_stmt|;
block|}
specifier|public
name|int
name|getBeforeMove
parameter_list|()
block|{
return|return
name|beforeMove
return|;
block|}
specifier|public
name|void
name|incBeforeMove
parameter_list|()
block|{
name|beforeMove
operator|++
expr_stmt|;
block|}
specifier|public
name|int
name|getAfterMove
parameter_list|()
block|{
return|return
name|afterMove
return|;
block|}
specifier|public
name|void
name|incAfterMove
parameter_list|()
block|{
name|afterMove
operator|++
expr_stmt|;
block|}
specifier|public
name|int
name|getBeforeDelete
parameter_list|()
block|{
return|return
name|beforeDelete
return|;
block|}
specifier|public
name|void
name|incBeforeDelete
parameter_list|()
block|{
name|beforeDelete
operator|++
expr_stmt|;
block|}
specifier|public
name|int
name|getAfterDelete
parameter_list|()
block|{
return|return
name|afterDelete
return|;
block|}
specifier|public
name|void
name|incAfterDelete
parameter_list|()
block|{
name|afterDelete
operator|++
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

