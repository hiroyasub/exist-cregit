begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|structural
package|;
end_package

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|EasyMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|persistent
operator|.
name|DocumentImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|persistent
operator|.
name|DocumentSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_comment
comment|/**  * @author Adam Retter<adam.retter@googlemail.com>  */
end_comment

begin_class
specifier|public
class|class
name|NativeStructuralIndexWorkerTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|getDocIdRanges_singleContiguous
parameter_list|()
block|{
specifier|final
name|NativeStructuralIndexWorker
name|indexWorker
init|=
operator|new
name|NativeStructuralIndexWorker
argument_list|(
literal|null
argument_list|)
decl_stmt|;
specifier|final
name|DocumentSet
name|docs
init|=
name|documentIdSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|List
argument_list|<
name|NativeStructuralIndexWorker
operator|.
name|Range
argument_list|>
name|ranges
init|=
name|indexWorker
operator|.
name|getDocIdRanges
argument_list|(
name|docs
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ranges
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|start
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|end
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getDocIdRanges_multipleContiguous
parameter_list|()
block|{
specifier|final
name|NativeStructuralIndexWorker
name|indexWorker
init|=
operator|new
name|NativeStructuralIndexWorker
argument_list|(
literal|null
argument_list|)
decl_stmt|;
specifier|final
name|DocumentSet
name|docs
init|=
name|documentIdSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|88
argument_list|,
literal|89
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|77
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|List
argument_list|<
name|NativeStructuralIndexWorker
operator|.
name|Range
argument_list|>
name|ranges
init|=
name|indexWorker
operator|.
name|getDocIdRanges
argument_list|(
name|docs
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|ranges
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|start
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|end
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|88
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|start
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|89
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|end
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|start
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|end
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|77
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|start
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|77
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|end
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|start
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|12
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|4
argument_list|)
operator|.
name|end
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getDocIdRanges_singleId
parameter_list|()
block|{
specifier|final
name|NativeStructuralIndexWorker
name|indexWorker
init|=
operator|new
name|NativeStructuralIndexWorker
argument_list|(
literal|null
argument_list|)
decl_stmt|;
specifier|final
name|DocumentSet
name|docs
init|=
name|documentIdSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|6574
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|List
argument_list|<
name|NativeStructuralIndexWorker
operator|.
name|Range
argument_list|>
name|ranges
init|=
name|indexWorker
operator|.
name|getDocIdRanges
argument_list|(
name|docs
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ranges
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6574
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|start
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6574
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|end
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getDocIdRanges_singleId_followed_by_continguousIds
parameter_list|()
block|{
specifier|final
name|NativeStructuralIndexWorker
name|indexWorker
init|=
operator|new
name|NativeStructuralIndexWorker
argument_list|(
literal|null
argument_list|)
decl_stmt|;
specifier|final
name|DocumentSet
name|docs
init|=
name|documentIdSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|6574
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|,
literal|13
argument_list|,
literal|14
argument_list|,
literal|15
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|List
argument_list|<
name|NativeStructuralIndexWorker
operator|.
name|Range
argument_list|>
name|ranges
init|=
name|indexWorker
operator|.
name|getDocIdRanges
argument_list|(
name|docs
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|ranges
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6574
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|start
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6574
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|end
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|11
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|start
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|15
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|end
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getDocIdRanges_contiguousIds_followed_by_single
parameter_list|()
block|{
specifier|final
name|NativeStructuralIndexWorker
name|indexWorker
init|=
operator|new
name|NativeStructuralIndexWorker
argument_list|(
literal|null
argument_list|)
decl_stmt|;
specifier|final
name|DocumentSet
name|docs
init|=
name|documentIdSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|11
argument_list|,
literal|12
argument_list|,
literal|13
argument_list|,
literal|14
argument_list|,
literal|15
argument_list|,
literal|6574
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|List
argument_list|<
name|NativeStructuralIndexWorker
operator|.
name|Range
argument_list|>
name|ranges
init|=
name|indexWorker
operator|.
name|getDocIdRanges
argument_list|(
name|docs
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|ranges
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|11
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|start
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|15
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|end
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6574
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|start
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6574
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|end
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getDocIdRanges_multiple_singleIds
parameter_list|()
block|{
specifier|final
name|NativeStructuralIndexWorker
name|indexWorker
init|=
operator|new
name|NativeStructuralIndexWorker
argument_list|(
literal|null
argument_list|)
decl_stmt|;
specifier|final
name|DocumentSet
name|docs
init|=
name|documentIdSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|6574
argument_list|,
literal|200
argument_list|,
literal|12
argument_list|,
literal|24
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|List
argument_list|<
name|NativeStructuralIndexWorker
operator|.
name|Range
argument_list|>
name|ranges
init|=
name|indexWorker
operator|.
name|getDocIdRanges
argument_list|(
name|docs
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|ranges
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6574
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|start
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6574
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|end
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|start
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|end
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|12
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|start
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|12
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|end
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|24
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|start
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|24
argument_list|,
name|ranges
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|end
argument_list|)
expr_stmt|;
block|}
specifier|private
name|DocumentSet
name|documentIdSet
parameter_list|(
specifier|final
name|List
argument_list|<
name|Integer
argument_list|>
name|documentIds
parameter_list|)
block|{
specifier|final
name|DocumentSet
name|mockDocumentSet
init|=
name|createMock
argument_list|(
name|DocumentSet
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|List
argument_list|<
name|DocumentImpl
argument_list|>
name|docs
init|=
name|documentIds
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|id
lambda|->
block|{
specifier|final
name|DocumentImpl
name|mockDocument
init|=
name|createMock
argument_list|(
name|DocumentImpl
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|mockDocument
operator|.
name|getDocId
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|id
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
return|return
name|mockDocument
return|;
block|}
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|mockDocumentSet
operator|.
name|getDocumentIterator
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|docs
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|replay
argument_list|(
name|mockDocumentSet
argument_list|)
expr_stmt|;
name|docs
operator|.
name|forEach
argument_list|(
name|EasyMock
operator|::
name|replay
argument_list|)
expr_stmt|;
return|return
name|mockDocumentSet
return|;
block|}
block|}
end_class

end_unit

