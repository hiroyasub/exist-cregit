begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|storage
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|EXistException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|test
operator|.
name|ExistEmbeddedServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|LocalCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_comment
comment|/**  * @author Adam Retter<adam.retter@googlemail.com>  */
end_comment

begin_class
specifier|public
class|class
name|BrokerPoolTest
block|{
annotation|@
name|Rule
specifier|public
specifier|final
name|ExistEmbeddedServer
name|existEmbeddedServer
init|=
operator|new
name|ExistEmbeddedServer
argument_list|()
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|noPrivilegeEscalationThroughBrokerRelease
parameter_list|()
throws|throws
name|EXistException
block|{
comment|//take a broker with the guest user
specifier|final
name|BrokerPool
name|pool
init|=
name|existEmbeddedServer
operator|.
name|getBrokerPool
argument_list|()
decl_stmt|;
specifier|final
name|Subject
name|guestUser
init|=
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getGuestSubject
argument_list|()
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker1
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|guestUser
argument_list|)
argument_list|)
init|)
block|{
name|assertEquals
argument_list|(
literal|"Expected `guest` user, but was: "
operator|+
name|broker1
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|guestUser
operator|.
name|getId
argument_list|()
argument_list|,
name|broker1
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|//take a broker with the system user
specifier|final
name|Subject
name|sysUser
init|=
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker2
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|sysUser
argument_list|)
argument_list|)
init|)
block|{
name|assertEquals
argument_list|(
literal|"Expected `SYSTEM` user, but was: "
operator|+
name|broker2
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|sysUser
operator|.
name|getId
argument_list|()
argument_list|,
name|broker2
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|//ensure that after releasing the broker, the user has been returned to the guest user
name|assertEquals
argument_list|(
literal|"Expected `guest` user, but was: "
operator|+
name|broker1
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|guestUser
operator|.
name|getId
argument_list|()
argument_list|,
name|broker1
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|privilegeStableWhenSubjectNull
parameter_list|()
throws|throws
name|EXistException
block|{
comment|//take a broker with the SYSTEM user
specifier|final
name|BrokerPool
name|pool
init|=
name|existEmbeddedServer
operator|.
name|getBrokerPool
argument_list|()
decl_stmt|;
specifier|final
name|Subject
name|sysUser
init|=
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker1
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|sysUser
argument_list|)
argument_list|)
init|)
block|{
name|assertEquals
argument_list|(
literal|"Expected `SYSTEM` user, but was: "
operator|+
name|broker1
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|sysUser
operator|.
name|getId
argument_list|()
argument_list|,
name|broker1
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|//take a broker without changing the user
try|try
init|(
specifier|final
name|DBBroker
name|broker2
init|=
name|pool
operator|.
name|getBroker
argument_list|()
init|)
block|{
name|assertEquals
argument_list|(
literal|"Expected `SYSTEM` user, but was: "
operator|+
name|broker2
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|sysUser
operator|.
name|getId
argument_list|()
argument_list|,
name|broker2
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|//ensure that after releasing the broker, the user is still the SYSTEM user
name|assertEquals
argument_list|(
literal|"Expected `guest` user, but was: "
operator|+
name|broker1
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|sysUser
operator|.
name|getId
argument_list|()
argument_list|,
name|broker1
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|guestDefaultPriviledge
parameter_list|()
throws|throws
name|EXistException
block|{
comment|//take a broker with default perms
specifier|final
name|BrokerPool
name|pool
init|=
name|existEmbeddedServer
operator|.
name|getBrokerPool
argument_list|()
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker1
init|=
name|pool
operator|.
name|getBroker
argument_list|()
init|)
block|{
specifier|final
name|Subject
name|guestUser
init|=
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getGuestSubject
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Expected `guest` user, but was: "
operator|+
name|broker1
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|guestUser
operator|.
name|getId
argument_list|()
argument_list|,
name|broker1
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|//take a broker without changing the user
try|try
init|(
specifier|final
name|DBBroker
name|broker2
init|=
name|pool
operator|.
name|getBroker
argument_list|()
init|)
block|{
name|assertEquals
argument_list|(
literal|"Expected `guest` user, but was: "
operator|+
name|broker2
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|guestUser
operator|.
name|getId
argument_list|()
argument_list|,
name|broker2
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|//ensure that after releasing the broker, the user is still the SYSTEM user
name|assertEquals
argument_list|(
literal|"Expected `guest` user, but was: "
operator|+
name|broker1
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|guestUser
operator|.
name|getId
argument_list|()
argument_list|,
name|broker1
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|noPrivilegeEscalationThroughBrokerRelease_xmldb
parameter_list|()
throws|throws
name|EXistException
throws|,
name|XMLDBException
block|{
comment|//take a broker with the guest user
specifier|final
name|BrokerPool
name|pool
init|=
name|existEmbeddedServer
operator|.
name|getBrokerPool
argument_list|()
decl_stmt|;
specifier|final
name|Subject
name|guestUser
init|=
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getGuestSubject
argument_list|()
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker1
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|guestUser
argument_list|)
argument_list|)
init|)
block|{
name|assertEquals
argument_list|(
literal|"Expected `guest` user, but was: "
operator|+
name|broker1
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|guestUser
operator|.
name|getId
argument_list|()
argument_list|,
name|broker1
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|//perform an XML:DB operation as the SYSTEM user
specifier|final
name|Subject
name|sysUser
init|=
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
decl_stmt|;
operator|new
name|LocalCollection
argument_list|(
name|sysUser
argument_list|,
name|pool
argument_list|,
name|XmldbURI
operator|.
name|ROOT_COLLECTION_URI
argument_list|)
expr_stmt|;
comment|//ensure that after releasing the broker, the user has been returned to the guest user
name|assertEquals
argument_list|(
literal|"Expected `guest` user, but was: "
operator|+
name|broker1
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|guestUser
operator|.
name|getId
argument_list|()
argument_list|,
name|broker1
operator|.
name|getCurrentSubject
argument_list|()
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

