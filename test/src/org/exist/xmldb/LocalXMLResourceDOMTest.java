begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2018 The eXist Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public  * License along with this library; if not, write to the Free Software  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xmldb
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|test
operator|.
name|ExistXmldbEmbeddedServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|test
operator|.
name|TestConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|ResourceIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|ResourceSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|CollectionManagementService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|XMLResource
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_class
specifier|public
class|class
name|LocalXMLResourceDOMTest
block|{
annotation|@
name|ClassRule
specifier|public
specifier|static
specifier|final
name|ExistXmldbEmbeddedServer
name|existEmbeddedServer
init|=
operator|new
name|ExistXmldbEmbeddedServer
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|String
name|TEST_RESOURCE_NAME
init|=
literal|"doc1.xml"
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setup
parameter_list|()
throws|throws
name|XMLDBException
block|{
specifier|final
name|CollectionManagementService
name|cms
init|=
operator|(
name|CollectionManagementService
operator|)
name|existEmbeddedServer
operator|.
name|getRoot
argument_list|()
operator|.
name|getService
argument_list|(
literal|"CollectionManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
specifier|final
name|Collection
name|coll
init|=
name|cms
operator|.
name|createCollection
argument_list|(
name|TestConstants
operator|.
name|TEST_COLLECTION_URI
operator|.
name|lastSegment
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|XMLResource
name|r
init|=
operator|(
name|XMLResource
operator|)
name|coll
operator|.
name|createResource
argument_list|(
name|TEST_RESOURCE_NAME
argument_list|,
name|XMLResource
operator|.
name|RESOURCE_TYPE
argument_list|)
decl_stmt|;
name|r
operator|.
name|setContent
argument_list|(
literal|"<properties><property key=\"type\">Table</property><test/></properties><!-- comment -->"
argument_list|)
expr_stmt|;
name|coll
operator|.
name|storeResource
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|cleanup
parameter_list|()
throws|throws
name|XMLDBException
block|{
specifier|final
name|CollectionManagementService
name|cms
init|=
operator|(
name|CollectionManagementService
operator|)
name|existEmbeddedServer
operator|.
name|getRoot
argument_list|()
operator|.
name|getService
argument_list|(
literal|"CollectionManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|cms
operator|.
name|removeCollection
argument_list|(
name|TestConstants
operator|.
name|TEST_COLLECTION_URI
operator|.
name|getRawCollectionPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEnhancer01
parameter_list|()
throws|throws
name|XMLDBException
block|{
specifier|final
name|String
name|query
init|=
literal|"doc('"
operator|+
name|TestConstants
operator|.
name|TEST_COLLECTION_URI
operator|.
name|getRawCollectionPath
argument_list|()
operator|+
literal|"/"
operator|+
name|TEST_RESOURCE_NAME
operator|+
literal|"')//properties[property[@key eq 'type'][text() eq 'Table']]"
decl_stmt|;
specifier|final
name|ResourceSet
name|rs1
init|=
name|existEmbeddedServer
operator|.
name|executeQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
specifier|final
name|ResourceSet
name|rs2
init|=
name|existEmbeddedServer
operator|.
name|executeQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
specifier|final
name|ResourceIterator
name|i1
init|=
name|rs1
operator|.
name|getIterator
argument_list|()
decl_stmt|;
specifier|final
name|ResourceIterator
name|i2
init|=
name|rs2
operator|.
name|getIterator
argument_list|()
decl_stmt|;
for|for
control|(
init|;
name|i1
operator|.
name|hasMoreResources
argument_list|()
operator|&&
name|i1
operator|.
name|hasMoreResources
argument_list|()
condition|;
control|)
block|{
specifier|final
name|XMLResource
name|r1
init|=
operator|(
name|XMLResource
operator|)
name|i1
operator|.
name|nextResource
argument_list|()
decl_stmt|;
specifier|final
name|XMLResource
name|r2
init|=
operator|(
name|XMLResource
operator|)
name|i2
operator|.
name|nextResource
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|r1
operator|.
name|getContentAsDOM
argument_list|()
argument_list|,
name|r2
operator|.
name|getContentAsDOM
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEnhancer02
parameter_list|()
throws|throws
name|XMLDBException
block|{
specifier|final
name|ResourceSet
name|rs1
init|=
name|existEmbeddedServer
operator|.
name|executeQuery
argument_list|(
literal|"doc('"
operator|+
name|TestConstants
operator|.
name|TEST_COLLECTION_URI
operator|.
name|getRawCollectionPath
argument_list|()
operator|+
literal|"/"
operator|+
name|TEST_RESOURCE_NAME
operator|+
literal|"')//properties/property[@key='type' and text()='Table']"
argument_list|)
decl_stmt|;
for|for
control|(
specifier|final
name|ResourceIterator
name|i1
init|=
name|rs1
operator|.
name|getIterator
argument_list|()
init|;
name|i1
operator|.
name|hasMoreResources
argument_list|()
condition|;
control|)
block|{
specifier|final
name|XMLResource
name|r1
init|=
operator|(
name|XMLResource
operator|)
name|i1
operator|.
name|nextResource
argument_list|()
decl_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|variables
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|variables
operator|.
name|put
argument_list|(
literal|"local:document"
argument_list|,
name|r1
operator|.
name|getContentAsDOM
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|String
name|query
init|=
literal|"xquery version \"1.0\";"
operator|+
literal|"declare namespace xmldb=\"http://exist-db.org/xquery/xmldb\";"
operator|+
literal|"declare variable $local:document external;"
operator|+
literal|"$local:document"
decl_stmt|;
specifier|final
name|ResourceSet
name|rs2
init|=
name|existEmbeddedServer
operator|.
name|executeQuery
argument_list|(
name|query
argument_list|,
name|variables
argument_list|)
decl_stmt|;
for|for
control|(
specifier|final
name|ResourceIterator
name|i2
init|=
name|rs2
operator|.
name|getIterator
argument_list|()
init|;
name|i2
operator|.
name|hasMoreResources
argument_list|()
condition|;
control|)
block|{
specifier|final
name|XMLResource
name|r2
init|=
operator|(
name|XMLResource
operator|)
name|i2
operator|.
name|nextResource
argument_list|()
decl_stmt|;
specifier|final
name|Node
name|content2
init|=
name|r2
operator|.
name|getContentAsDOM
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|content2
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

