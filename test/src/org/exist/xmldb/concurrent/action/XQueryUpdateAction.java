begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|concurrent
operator|.
name|action
package|;
end_package

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|DatabaseManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|XQueryService
import|;
end_import

begin_class
specifier|public
class|class
name|XQueryUpdateAction
extends|extends
name|Action
block|{
specifier|private
specifier|static
specifier|final
name|String
name|query
init|=
literal|"util:exclusive-lock(collection('/db/C1'),\n"
operator|+
literal|"	let $maxId := max(for $i in //node/@id return xs:integer($i)) + 1\n"
operator|+
literal|"	let $isLoggedIn := xmldb:login('/db/C1', 'guest', 'guest')\n"
operator|+
literal|"	let $update :=\n"
operator|+
literal|"<xu:modifications xmlns:xu=\"http://www.xmldb.org/xupdate\" version=\"1.0\">\n"
operator|+
literal|"<xu:append select=\"/root\">\n"
operator|+
literal|"<node id=\"{$maxId}\">appended node</node>\n"
operator|+
literal|"</xu:append>\n"
operator|+
literal|"</xu:modifications>\n"
operator|+
literal|"	return\n"
operator|+
literal|"		xmldb:update('/db/C1', $update)"
operator|+
literal|")"
decl_stmt|;
specifier|public
name|XQueryUpdateAction
parameter_list|(
specifier|final
name|String
name|collectionPath
parameter_list|,
specifier|final
name|String
name|resourceName
parameter_list|)
block|{
name|super
argument_list|(
name|collectionPath
argument_list|,
name|resourceName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|execute
parameter_list|()
throws|throws
name|XMLDBException
block|{
specifier|final
name|Collection
name|col
init|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|collectionPath
argument_list|)
decl_stmt|;
specifier|final
name|XQueryService
name|service
init|=
operator|(
name|XQueryService
operator|)
name|col
operator|.
name|getService
argument_list|(
literal|"XQueryService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|service
operator|.
name|query
argument_list|(
name|query
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

