begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2013 The eXist Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *    * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *   * You should have received a copy of the GNU Lesser General Public License  * along with this program; if not, write to the Free Software Foundation  * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  *    *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|jetty
operator|.
name|JettyStart
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|internal
operator|.
name|aider
operator|.
name|GroupAider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|internal
operator|.
name|aider
operator|.
name|UserAider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|test
operator|.
name|ExistWebServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|UserManagementService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|DatabaseManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|BinaryResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|CollectionManagementService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|XMLResource
import|;
end_import

begin_comment
comment|/**  *  * @author Adam Retter<adam.retter@googlemail.com>  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
specifier|public
class|class
name|XmldbApiSecurityTest
extends|extends
name|AbstractApiSecurityTest
block|{
annotation|@
name|ClassRule
specifier|public
specifier|static
specifier|final
name|ExistWebServer
name|existWebServer
init|=
operator|new
name|ExistWebServer
argument_list|(
literal|true
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PORT_PLACEHOLDER
init|=
literal|"${PORT}"
decl_stmt|;
annotation|@
name|Parameters
argument_list|(
name|name
operator|=
literal|"{0}"
argument_list|)
specifier|public
specifier|static
name|java
operator|.
name|util
operator|.
name|Collection
argument_list|<
name|Object
index|[]
argument_list|>
name|data
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|Object
index|[]
index|[]
block|{
block|{
literal|"local"
block|,
literal|"xmldb:exist://"
block|}
block|,
block|{
literal|"remote"
block|,
literal|"xmldb:exist://localhost:"
operator|+
name|PORT_PLACEHOLDER
operator|+
literal|"/xmlrpc"
block|}
block|}
argument_list|)
return|;
block|}
annotation|@
name|Parameter
specifier|public
name|String
name|apiName
decl_stmt|;
annotation|@
name|Parameter
argument_list|(
name|value
operator|=
literal|1
argument_list|)
specifier|public
name|String
name|baseUri
decl_stmt|;
specifier|private
specifier|final
name|String
name|getBaseUri
parameter_list|()
block|{
return|return
name|baseUri
operator|.
name|replace
argument_list|(
name|PORT_PLACEHOLDER
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|existWebServer
operator|.
name|getPort
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|createCol
parameter_list|(
specifier|final
name|String
name|collectionName
parameter_list|,
specifier|final
name|String
name|uid
parameter_list|,
specifier|final
name|String
name|pwd
parameter_list|)
throws|throws
name|ApiException
block|{
name|Collection
name|col
init|=
literal|null
decl_stmt|;
try|try
block|{
name|col
operator|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|getBaseUri
argument_list|()
operator|+
literal|"/db"
argument_list|,
name|uid
argument_list|,
name|pwd
argument_list|)
expr_stmt|;
name|CollectionManagementService
name|cms
init|=
operator|(
name|CollectionManagementService
operator|)
name|col
operator|.
name|getService
argument_list|(
literal|"CollectionManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|cms
operator|.
name|createCollection
argument_list|(
name|collectionName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|col
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|col
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
block|}
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|removeCol
parameter_list|(
specifier|final
name|String
name|collectionName
parameter_list|,
specifier|final
name|String
name|uid
parameter_list|,
specifier|final
name|String
name|pwd
parameter_list|)
throws|throws
name|ApiException
block|{
name|Collection
name|col
init|=
literal|null
decl_stmt|;
try|try
block|{
name|col
operator|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|getBaseUri
argument_list|()
operator|+
literal|"/db"
argument_list|,
name|uid
argument_list|,
name|pwd
argument_list|)
expr_stmt|;
specifier|final
name|Collection
name|child
init|=
name|col
operator|.
name|getChildCollection
argument_list|(
name|collectionName
argument_list|)
decl_stmt|;
if|if
condition|(
name|child
operator|!=
literal|null
condition|)
block|{
name|child
operator|.
name|close
argument_list|()
expr_stmt|;
specifier|final
name|CollectionManagementService
name|cms
init|=
operator|(
name|CollectionManagementService
operator|)
name|col
operator|.
name|getService
argument_list|(
literal|"CollectionManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|cms
operator|.
name|removeCollection
argument_list|(
name|collectionName
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|col
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|col
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
block|}
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|chownCol
parameter_list|(
specifier|final
name|String
name|collectionUri
parameter_list|,
specifier|final
name|String
name|owner_uid
parameter_list|,
specifier|final
name|String
name|group_gid
parameter_list|,
specifier|final
name|String
name|uid
parameter_list|,
specifier|final
name|String
name|pwd
parameter_list|)
throws|throws
name|ApiException
block|{
name|Collection
name|col
init|=
literal|null
decl_stmt|;
try|try
block|{
name|col
operator|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|getBaseUri
argument_list|()
operator|+
name|collectionUri
argument_list|,
name|uid
argument_list|,
name|pwd
argument_list|)
expr_stmt|;
specifier|final
name|UserManagementService
name|ums
init|=
operator|(
name|UserManagementService
operator|)
name|col
operator|.
name|getService
argument_list|(
literal|"UserManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|ums
operator|.
name|chown
argument_list|(
name|ums
operator|.
name|getAccount
argument_list|(
name|owner_uid
argument_list|)
argument_list|,
name|group_gid
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|col
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|col
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
block|}
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|chmodCol
parameter_list|(
specifier|final
name|String
name|collectionUri
parameter_list|,
specifier|final
name|String
name|mode
parameter_list|,
specifier|final
name|String
name|uid
parameter_list|,
specifier|final
name|String
name|pwd
parameter_list|)
throws|throws
name|ApiException
block|{
name|Collection
name|col
init|=
literal|null
decl_stmt|;
try|try
block|{
name|col
operator|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|getBaseUri
argument_list|()
operator|+
name|collectionUri
argument_list|,
name|uid
argument_list|,
name|pwd
argument_list|)
expr_stmt|;
specifier|final
name|UserManagementService
name|ums
init|=
operator|(
name|UserManagementService
operator|)
name|col
operator|.
name|getService
argument_list|(
literal|"UserManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|ums
operator|.
name|chmod
argument_list|(
name|mode
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|col
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|col
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
block|}
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|chownRes
parameter_list|(
specifier|final
name|String
name|resourceUri
parameter_list|,
specifier|final
name|String
name|owner_uid
parameter_list|,
specifier|final
name|String
name|group_gid
parameter_list|,
specifier|final
name|String
name|uid
parameter_list|,
specifier|final
name|String
name|pwd
parameter_list|)
throws|throws
name|ApiException
block|{
name|Collection
name|col
init|=
literal|null
decl_stmt|;
try|try
block|{
name|col
operator|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|getBaseUri
argument_list|()
operator|+
name|getCollectionUri
argument_list|(
name|resourceUri
argument_list|)
argument_list|,
name|uid
argument_list|,
name|pwd
argument_list|)
expr_stmt|;
specifier|final
name|Resource
name|resource
init|=
name|col
operator|.
name|getResource
argument_list|(
name|getResourceName
argument_list|(
name|resourceUri
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|UserManagementService
name|ums
init|=
operator|(
name|UserManagementService
operator|)
name|col
operator|.
name|getService
argument_list|(
literal|"UserManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|ums
operator|.
name|chown
argument_list|(
name|resource
argument_list|,
name|ums
operator|.
name|getAccount
argument_list|(
name|owner_uid
argument_list|)
argument_list|,
name|group_gid
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|col
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|col
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
block|}
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|chmodRes
parameter_list|(
specifier|final
name|String
name|resourceUri
parameter_list|,
specifier|final
name|String
name|mode
parameter_list|,
specifier|final
name|String
name|uid
parameter_list|,
specifier|final
name|String
name|pwd
parameter_list|)
throws|throws
name|ApiException
block|{
name|Collection
name|col
init|=
literal|null
decl_stmt|;
try|try
block|{
name|col
operator|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|getBaseUri
argument_list|()
operator|+
name|getCollectionUri
argument_list|(
name|resourceUri
argument_list|)
argument_list|,
name|uid
argument_list|,
name|pwd
argument_list|)
expr_stmt|;
specifier|final
name|Resource
name|resource
init|=
name|col
operator|.
name|getResource
argument_list|(
name|getResourceName
argument_list|(
name|resourceUri
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|UserManagementService
name|ums
init|=
operator|(
name|UserManagementService
operator|)
name|col
operator|.
name|getService
argument_list|(
literal|"UserManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|ums
operator|.
name|chmod
argument_list|(
name|resource
argument_list|,
name|mode
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|col
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|col
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
block|}
block|}
block|}
annotation|@
name|Override
specifier|protected
name|String
name|getXmlResourceContent
parameter_list|(
specifier|final
name|String
name|resourceUri
parameter_list|,
specifier|final
name|String
name|uid
parameter_list|,
specifier|final
name|String
name|pwd
parameter_list|)
throws|throws
name|ApiException
block|{
name|Collection
name|col
init|=
literal|null
decl_stmt|;
try|try
block|{
name|col
operator|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|getBaseUri
argument_list|()
operator|+
name|getCollectionUri
argument_list|(
name|resourceUri
argument_list|)
argument_list|,
name|uid
argument_list|,
name|pwd
argument_list|)
expr_stmt|;
specifier|final
name|Resource
name|resource
init|=
name|col
operator|.
name|getResource
argument_list|(
name|getResourceName
argument_list|(
name|resourceUri
argument_list|)
argument_list|)
decl_stmt|;
return|return
operator|(
name|String
operator|)
name|resource
operator|.
name|getContent
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|col
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|col
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
block|}
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|removeAccount
parameter_list|(
specifier|final
name|String
name|account_uid
parameter_list|,
specifier|final
name|String
name|uid
parameter_list|,
specifier|final
name|String
name|pwd
parameter_list|)
throws|throws
name|ApiException
block|{
name|Collection
name|col
init|=
literal|null
decl_stmt|;
try|try
block|{
name|col
operator|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|getBaseUri
argument_list|()
operator|+
literal|"/db"
argument_list|,
name|uid
argument_list|,
name|pwd
argument_list|)
expr_stmt|;
specifier|final
name|UserManagementService
name|ums
init|=
operator|(
name|UserManagementService
operator|)
name|col
operator|.
name|getService
argument_list|(
literal|"UserManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
specifier|final
name|Account
name|acct
init|=
name|ums
operator|.
name|getAccount
argument_list|(
name|account_uid
argument_list|)
decl_stmt|;
if|if
condition|(
name|acct
operator|!=
literal|null
condition|)
block|{
name|ums
operator|.
name|removeAccount
argument_list|(
name|acct
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|col
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|col
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
block|}
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|removeGroup
parameter_list|(
name|String
name|group_uid
parameter_list|,
name|String
name|uid
parameter_list|,
name|String
name|pwd
parameter_list|)
throws|throws
name|ApiException
block|{
name|Collection
name|col
init|=
literal|null
decl_stmt|;
try|try
block|{
name|col
operator|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|getBaseUri
argument_list|()
operator|+
literal|"/db"
argument_list|,
name|uid
argument_list|,
name|pwd
argument_list|)
expr_stmt|;
specifier|final
name|UserManagementService
name|ums
init|=
operator|(
name|UserManagementService
operator|)
name|col
operator|.
name|getService
argument_list|(
literal|"UserManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
specifier|final
name|Group
name|grp
init|=
name|ums
operator|.
name|getGroup
argument_list|(
name|group_uid
argument_list|)
decl_stmt|;
if|if
condition|(
name|grp
operator|!=
literal|null
condition|)
block|{
name|ums
operator|.
name|removeGroup
argument_list|(
name|grp
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|col
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|col
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
block|}
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|createAccount
parameter_list|(
name|String
name|account_uid
parameter_list|,
name|String
name|account_pwd
parameter_list|,
name|String
name|group_uid
parameter_list|,
name|String
name|uid
parameter_list|,
name|String
name|pwd
parameter_list|)
throws|throws
name|ApiException
block|{
name|Collection
name|col
init|=
literal|null
decl_stmt|;
try|try
block|{
name|col
operator|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|getBaseUri
argument_list|()
operator|+
literal|"/db"
argument_list|,
name|uid
argument_list|,
name|pwd
argument_list|)
expr_stmt|;
specifier|final
name|UserManagementService
name|ums
init|=
operator|(
name|UserManagementService
operator|)
name|col
operator|.
name|getService
argument_list|(
literal|"UserManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
specifier|final
name|Group
name|group
init|=
name|ums
operator|.
name|getGroup
argument_list|(
name|group_uid
argument_list|)
decl_stmt|;
specifier|final
name|Account
name|user
init|=
operator|new
name|UserAider
argument_list|(
name|account_uid
argument_list|,
name|group
argument_list|)
decl_stmt|;
name|user
operator|.
name|setPassword
argument_list|(
name|account_pwd
argument_list|)
expr_stmt|;
name|ums
operator|.
name|addAccount
argument_list|(
name|user
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|col
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|col
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
block|}
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|createGroup
parameter_list|(
name|String
name|group_uid
parameter_list|,
name|String
name|uid
parameter_list|,
name|String
name|pwd
parameter_list|)
throws|throws
name|ApiException
block|{
name|Collection
name|col
init|=
literal|null
decl_stmt|;
try|try
block|{
name|col
operator|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|getBaseUri
argument_list|()
operator|+
literal|"/db"
argument_list|,
name|uid
argument_list|,
name|pwd
argument_list|)
expr_stmt|;
specifier|final
name|UserManagementService
name|ums
init|=
operator|(
name|UserManagementService
operator|)
name|col
operator|.
name|getService
argument_list|(
literal|"UserManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|Group
name|group
init|=
operator|new
name|GroupAider
argument_list|(
literal|"exist"
argument_list|,
name|group_uid
argument_list|)
decl_stmt|;
name|ums
operator|.
name|addGroup
argument_list|(
name|group
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|col
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|col
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
block|}
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|createXmlResource
parameter_list|(
name|String
name|resourceUri
parameter_list|,
name|String
name|content
parameter_list|,
name|String
name|uid
parameter_list|,
name|String
name|pwd
parameter_list|)
throws|throws
name|ApiException
block|{
name|Collection
name|col
init|=
literal|null
decl_stmt|;
try|try
block|{
name|col
operator|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|getBaseUri
argument_list|()
operator|+
name|getCollectionUri
argument_list|(
name|resourceUri
argument_list|)
argument_list|,
name|uid
argument_list|,
name|pwd
argument_list|)
expr_stmt|;
name|Resource
name|resource
init|=
name|col
operator|.
name|createResource
argument_list|(
name|getResourceName
argument_list|(
name|resourceUri
argument_list|)
argument_list|,
name|XMLResource
operator|.
name|RESOURCE_TYPE
argument_list|)
decl_stmt|;
name|resource
operator|.
name|setContent
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|col
operator|.
name|storeResource
argument_list|(
name|resource
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|col
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|col
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
block|}
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|createBinResource
parameter_list|(
name|String
name|resourceUri
parameter_list|,
name|byte
index|[]
name|content
parameter_list|,
name|String
name|uid
parameter_list|,
name|String
name|pwd
parameter_list|)
throws|throws
name|ApiException
block|{
name|Collection
name|col
init|=
literal|null
decl_stmt|;
try|try
block|{
name|col
operator|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|getBaseUri
argument_list|()
operator|+
name|getCollectionUri
argument_list|(
name|resourceUri
argument_list|)
argument_list|,
name|uid
argument_list|,
name|pwd
argument_list|)
expr_stmt|;
name|Resource
name|resource
init|=
name|col
operator|.
name|createResource
argument_list|(
name|getResourceName
argument_list|(
name|resourceUri
argument_list|)
argument_list|,
name|BinaryResource
operator|.
name|RESOURCE_TYPE
argument_list|)
decl_stmt|;
name|resource
operator|.
name|setContent
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|col
operator|.
name|storeResource
argument_list|(
name|resource
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|col
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|col
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
throw|throw
operator|new
name|ApiException
argument_list|(
name|xmldbe
argument_list|)
throw|;
block|}
block|}
block|}
block|}
block|}
end_class

end_unit

