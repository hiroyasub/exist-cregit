begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|io
operator|.
name|VariableByteInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|io
operator|.
name|VariableByteOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|EasyMock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|EasyMock
operator|.
name|expect
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|EasyMock
operator|.
name|replay
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|EasyMock
operator|.
name|verify
import|;
end_import

begin_comment
comment|/**  *  * @author aretter  */
end_comment

begin_class
specifier|public
class|class
name|UnixStylePermissionTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|writeRead_roundtrip
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|SecurityManager
name|mockSecurityManager
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|SecurityManager
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|Account
name|mockOwner
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|Account
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|int
name|ownerId
init|=
operator|new
name|Random
argument_list|()
operator|.
name|nextInt
argument_list|()
decl_stmt|;
specifier|final
name|Group
name|mockOwnerGroup
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|Group
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|int
name|ownerGroupId
init|=
operator|new
name|Random
argument_list|()
operator|.
name|nextInt
argument_list|()
decl_stmt|;
specifier|final
name|int
name|mode
init|=
literal|644
decl_stmt|;
specifier|final
name|VariableByteOutputStream
name|mockOstream
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|VariableByteOutputStream
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|VariableByteInput
name|mockIstream
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|VariableByteInput
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|Account
name|mockOwner2
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|Account
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|Group
name|mockOwnerGroup2
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|Group
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|int
name|mode2
init|=
literal|588
decl_stmt|;
comment|//constructor logic expectations
name|expect
argument_list|(
name|mockSecurityManager
operator|.
name|getSystemSubject
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockSecurityManager
operator|.
name|getDBAGroup
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
comment|//write(ostream) expectations
name|expect
argument_list|(
name|mockOwner
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|ownerId
argument_list|)
expr_stmt|;
name|mockOstream
operator|.
name|writeInt
argument_list|(
name|ownerId
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockOwnerGroup
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|ownerGroupId
argument_list|)
expr_stmt|;
name|mockOstream
operator|.
name|writeInt
argument_list|(
name|ownerGroupId
argument_list|)
expr_stmt|;
name|mockOstream
operator|.
name|writeInt
argument_list|(
name|mode
argument_list|)
expr_stmt|;
comment|//read(istream) expectations
name|expect
argument_list|(
name|mockIstream
operator|.
name|readInt
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|ownerId
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockSecurityManager
operator|.
name|getAccount
argument_list|(
name|ownerId
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockOwner2
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockIstream
operator|.
name|readInt
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|ownerGroupId
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockSecurityManager
operator|.
name|getGroup
argument_list|(
name|ownerGroupId
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockOwnerGroup2
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockIstream
operator|.
name|readInt
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mode2
argument_list|)
expr_stmt|;
name|replay
argument_list|(
name|mockSecurityManager
argument_list|,
name|mockOwner
argument_list|,
name|mockOwnerGroup
argument_list|,
name|mockOstream
argument_list|,
name|mockIstream
argument_list|)
expr_stmt|;
name|Permission
name|permission
init|=
operator|new
name|TestableUnixStylePermission
argument_list|(
name|mockSecurityManager
argument_list|,
name|mockOwner
argument_list|,
name|mockOwnerGroup
argument_list|,
name|mode
argument_list|)
decl_stmt|;
name|permission
operator|.
name|write
argument_list|(
name|mockOstream
argument_list|)
expr_stmt|;
name|permission
operator|.
name|read
argument_list|(
name|mockIstream
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockSecurityManager
argument_list|,
name|mockOwner
argument_list|,
name|mockOwnerGroup
argument_list|,
name|mockOstream
argument_list|,
name|mockIstream
argument_list|)
expr_stmt|;
comment|//test read(...) set values
name|assertEquals
argument_list|(
name|permission
operator|.
name|getOwner
argument_list|()
argument_list|,
name|mockOwner2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|permission
operator|.
name|getOwnerGroup
argument_list|()
argument_list|,
name|mockOwnerGroup2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|permission
operator|.
name|getPermissions
argument_list|()
argument_list|,
name|mode2
argument_list|)
expr_stmt|;
block|}
specifier|public
class|class
name|TestableUnixStylePermission
extends|extends
name|UnixStylePermission
block|{
specifier|public
name|TestableUnixStylePermission
parameter_list|(
name|SecurityManager
name|sm
parameter_list|,
name|Account
name|owner
parameter_list|,
name|Group
name|ownerGroup
parameter_list|,
name|int
name|mode
parameter_list|)
block|{
name|super
argument_list|(
name|sm
argument_list|)
expr_stmt|;
comment|//set values directly
name|this
operator|.
name|owner
operator|=
name|owner
expr_stmt|;
name|this
operator|.
name|ownerGroup
operator|=
name|ownerGroup
expr_stmt|;
name|setPermissions
argument_list|(
name|mode
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

