begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-07 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  * $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|validation
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLConnection
import|;
end_import

begin_comment
comment|/**  *  A set of helper methods for the validation tests.  *  * @author Dannes Wessels (dizzzz@exist-db.org)  */
end_comment

begin_class
specifier|public
class|class
name|TestTools
block|{
specifier|public
specifier|final
specifier|static
name|String
name|VALIDATION_HOME
init|=
literal|"/db/validation"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|VALIDATION_DTD
init|=
name|VALIDATION_HOME
operator|+
literal|"/dtd"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|VALIDATION_XSD
init|=
name|VALIDATION_HOME
operator|+
literal|"/xsd"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|VALIDATION_TMP
init|=
name|VALIDATION_HOME
operator|+
literal|"/tmp"
decl_stmt|;
specifier|public
name|TestTools
parameter_list|()
block|{
comment|// --
block|}
comment|// Transfer bytes from in to out
specifier|public
specifier|static
name|void
name|copyStream
parameter_list|(
name|InputStream
name|is
parameter_list|,
name|OutputStream
name|os
parameter_list|)
throws|throws
name|IOException
block|{
name|byte
index|[]
name|buf
init|=
operator|new
name|byte
index|[
literal|1024
index|]
decl_stmt|;
name|int
name|len
decl_stmt|;
while|while
condition|(
operator|(
name|len
operator|=
name|is
operator|.
name|read
argument_list|(
name|buf
argument_list|)
operator|)
operator|>
literal|0
condition|)
block|{
name|os
operator|.
name|write
argument_list|(
name|buf
argument_list|,
literal|0
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      *      * @param file     File to be uploaded      * @param target  Target URL (e.g. xmldb:exist:///db/collection/document.xml)      * @throws java.lang.Exception  Oops.....      */
specifier|static
name|void
name|insertDocumentToURL
parameter_list|(
name|String
name|file
parameter_list|,
name|String
name|target
parameter_list|)
throws|throws
name|Exception
block|{
name|InputStream
name|is
init|=
operator|new
name|FileInputStream
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|target
argument_list|)
decl_stmt|;
name|URLConnection
name|connection
init|=
name|url
operator|.
name|openConnection
argument_list|()
decl_stmt|;
name|OutputStream
name|os
init|=
name|connection
operator|.
name|getOutputStream
argument_list|()
decl_stmt|;
name|TestTools
operator|.
name|copyStream
argument_list|(
name|is
argument_list|,
name|os
argument_list|)
expr_stmt|;
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
name|os
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

