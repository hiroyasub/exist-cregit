begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|ant
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameters
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
specifier|public
class|class
name|BaseTaskTest
extends|extends
name|AbstractTaskTest
block|{
annotation|@
name|Parameters
specifier|public
specifier|static
name|Iterable
argument_list|<
name|?
extends|extends
name|Object
argument_list|>
name|data
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|UserTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|UserPasswordTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|AddUserTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|RemoveUserTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|AddGroupTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|RemoveGroupTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|ListUsersTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|ListGroupsTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|XMLDBCreateTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|XMLDBListTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|XMLDBExistTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|XMLDBStoreTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|XMLDBCopyTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|XMLDBMoveTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|XMLDBExtractTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|XMLDBRemoveTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|BackupTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|RestoreTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|ChmodTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|ChownTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|LockResourceTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|XMLDBXPathTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|XMLDBXQueryTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|XMLDBXUpdateTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|,
name|XMLDBShutdownTask
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Parameter
specifier|public
name|String
name|taskName
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PROP_ANT_TEST_DATA_TASK_NAME
init|=
literal|"test.data.task.name"
decl_stmt|;
annotation|@
name|Nullable
annotation|@
name|Override
specifier|protected
name|URL
name|getBuildFile
parameter_list|()
block|{
return|return
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"base.xml"
argument_list|)
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|taskAvailable
parameter_list|()
block|{
specifier|final
name|Project
name|project
init|=
name|buildFileRule
operator|.
name|getProject
argument_list|()
decl_stmt|;
name|project
operator|.
name|setProperty
argument_list|(
name|PROP_ANT_TEST_DATA_TASK_NAME
argument_list|,
name|taskName
argument_list|)
expr_stmt|;
name|buildFileRule
operator|.
name|executeTarget
argument_list|(
literal|"taskAvailable"
argument_list|)
expr_stmt|;
specifier|final
name|String
name|result
init|=
name|project
operator|.
name|getProperty
argument_list|(
name|PROP_ANT_TEST_DATA_RESULT
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|Boolean
operator|.
name|parseBoolean
argument_list|(
name|result
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

