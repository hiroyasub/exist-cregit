begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|persistent
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|XMLUtilTest
block|{
specifier|private
specifier|static
specifier|final
name|String
name|utf8TestFileName
init|=
literal|"utf8.xml"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|utf16TestFileName
init|=
literal|"utf16.xml"
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testGetXMLDeclWithUTF8
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
specifier|final
name|URL
name|testFileUrl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
name|utf8TestFileName
argument_list|)
decl_stmt|;
specifier|final
name|Path
name|testFile
init|=
name|Paths
operator|.
name|get
argument_list|(
name|testFileUrl
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|String
name|expectedDecl
init|=
literal|"<?xml version=\"1.0\"?>"
decl_stmt|;
specifier|final
name|String
name|decl
init|=
name|XMLUtil
operator|.
name|getXMLDecl
argument_list|(
name|Files
operator|.
name|readAllBytes
argument_list|(
name|testFile
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"XML Declaration for the UTF-8 encode example file wasn't resolved properly"
argument_list|,
name|expectedDecl
argument_list|,
name|decl
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetXMLDeclWithUTF16
parameter_list|()
throws|throws
name|IOException
throws|,
name|URISyntaxException
block|{
specifier|final
name|URL
name|testFileUrl
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
name|utf16TestFileName
argument_list|)
decl_stmt|;
specifier|final
name|Path
name|testFile
init|=
name|Paths
operator|.
name|get
argument_list|(
name|testFileUrl
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|String
name|expectedDecl
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-16\" standalone=\"no\"?>"
decl_stmt|;
specifier|final
name|String
name|decl
init|=
name|XMLUtil
operator|.
name|getXMLDecl
argument_list|(
name|Files
operator|.
name|readAllBytes
argument_list|(
name|testFile
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"XML Declaration for the UTF-16 encode example file wasn't resolved properly"
argument_list|,
name|expectedDecl
argument_list|,
name|decl
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

