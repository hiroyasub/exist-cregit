begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|storage
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|EXistException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|IndexInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|triggers
operator|.
name|TriggerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|persistent
operator|.
name|BinaryDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|persistent
operator|.
name|LockedDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|PermissionDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|lock
operator|.
name|Lock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|Txn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|test
operator|.
name|ExistEmbeddedServer
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|exist
operator|.
name|test
operator|.
name|TestConstants
operator|.
name|TEST_COLLECTION_URI
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|LockException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_class
specifier|public
class|class
name|ModificationTimeTest
block|{
specifier|private
specifier|static
specifier|final
name|String
name|XML_FILENAME
init|=
literal|"test.xml"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|VALID_XML
init|=
literal|"<?xml version=\"1.0\"?>"
operator|+
literal|"<valid/>"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|INVALID_XML
init|=
literal|"<?xml version=\"1.0\"?>"
operator|+
literal|"<invalid>"
decl_stmt|;
comment|/**      * Store a binary document, wait for a while and then overwrite it      * with another binary document. The document's modification time should      * have been updated afterwards.      */
annotation|@
name|Test
specifier|public
name|void
name|check_if_modification_time_is_updated_binary
parameter_list|()
throws|throws
name|EXistException
throws|,
name|InterruptedException
throws|,
name|PermissionDeniedException
throws|,
name|LockException
throws|,
name|IOException
throws|,
name|TriggerException
block|{
specifier|final
name|String
name|mimeType
init|=
literal|"application/octet-stream"
decl_stmt|;
specifier|final
name|String
name|filename
init|=
literal|"data.dat"
decl_stmt|;
specifier|final
name|String
name|data
init|=
literal|"some data"
decl_stmt|;
specifier|final
name|BrokerPool
name|pool
init|=
name|existEmbeddedServer
operator|.
name|getBrokerPool
argument_list|()
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
argument_list|)
argument_list|)
init|;
specifier|final
name|Txn
name|transaction
init|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
operator|.
name|beginTransaction
argument_list|()
init|)
block|{
name|BinaryDocument
name|binaryDoc
init|=
name|storeBinary
argument_list|(
name|broker
argument_list|,
name|transaction
argument_list|,
name|filename
argument_list|,
name|data
argument_list|,
name|mimeType
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|binaryDoc
argument_list|)
expr_stmt|;
specifier|final
name|long
name|modificationTimeBefore
init|=
name|binaryDoc
operator|.
name|getMetadata
argument_list|()
operator|.
name|getLastModified
argument_list|()
decl_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|binaryDoc
operator|=
name|storeBinary
argument_list|(
name|broker
argument_list|,
name|transaction
argument_list|,
name|filename
argument_list|,
name|data
argument_list|,
name|mimeType
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|binaryDoc
argument_list|)
expr_stmt|;
specifier|final
name|long
name|modificationTimeAfter
init|=
name|binaryDoc
operator|.
name|getMetadata
argument_list|()
operator|.
name|getLastModified
argument_list|()
decl_stmt|;
comment|//check the mimetype has been preserved across database restarts
name|assertNotEquals
argument_list|(
name|modificationTimeBefore
argument_list|,
name|modificationTimeAfter
argument_list|)
expr_stmt|;
name|transaction
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**      * Store a valid XML resource, wait for a while and then overwrite it      * with another valid XML resource. The resource's modification time should      * have been updated afterwards.      */
annotation|@
name|Test
specifier|public
name|void
name|check_if_modification_time_is_updated_xml
parameter_list|()
throws|throws
name|EXistException
throws|,
name|InterruptedException
throws|,
name|PermissionDeniedException
throws|,
name|LockException
throws|,
name|IOException
throws|,
name|SAXException
block|{
specifier|final
name|BrokerPool
name|pool
init|=
name|existEmbeddedServer
operator|.
name|getBrokerPool
argument_list|()
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
argument_list|)
argument_list|)
init|;
specifier|final
name|Txn
name|transaction
init|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
operator|.
name|beginTransaction
argument_list|()
init|)
block|{
name|storeXML
argument_list|(
name|broker
argument_list|,
name|transaction
argument_list|,
name|XML_FILENAME
argument_list|,
name|VALID_XML
argument_list|)
expr_stmt|;
specifier|final
name|long
name|modificationTimeBefore
init|=
name|getDocLastModified
argument_list|(
name|broker
argument_list|,
name|transaction
argument_list|,
name|XML_FILENAME
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|storeXML
argument_list|(
name|broker
argument_list|,
name|transaction
argument_list|,
name|XML_FILENAME
argument_list|,
name|VALID_XML
argument_list|)
expr_stmt|;
specifier|final
name|long
name|modificationTimeAfter
init|=
name|getDocLastModified
argument_list|(
name|broker
argument_list|,
name|transaction
argument_list|,
name|XML_FILENAME
argument_list|)
decl_stmt|;
name|assertNotEquals
argument_list|(
name|modificationTimeBefore
argument_list|,
name|modificationTimeAfter
argument_list|)
expr_stmt|;
name|transaction
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**      * Store a valid XML resource, wait for a while and then try to overwrite      * it with an invalid XML resource. The invalid XML should be rejected and      * the resource's modification time should be the same afterwards.      */
annotation|@
name|Test
specifier|public
name|void
name|check_if_modification_time_is_not_updated_on_parse_error
parameter_list|()
throws|throws
name|EXistException
throws|,
name|InterruptedException
throws|,
name|PermissionDeniedException
throws|,
name|LockException
throws|,
name|IOException
throws|,
name|SAXException
block|{
specifier|final
name|BrokerPool
name|pool
init|=
name|existEmbeddedServer
operator|.
name|getBrokerPool
argument_list|()
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
argument_list|)
argument_list|)
init|;
specifier|final
name|Txn
name|transaction
init|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
operator|.
name|beginTransaction
argument_list|()
init|)
block|{
name|storeXML
argument_list|(
name|broker
argument_list|,
name|transaction
argument_list|,
name|XML_FILENAME
argument_list|,
name|VALID_XML
argument_list|)
expr_stmt|;
specifier|final
name|long
name|modificationTimeBefore
init|=
name|getDocLastModified
argument_list|(
name|broker
argument_list|,
name|transaction
argument_list|,
name|XML_FILENAME
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|boolean
name|threw
init|=
literal|false
decl_stmt|;
try|try
block|{
name|storeXML
argument_list|(
name|broker
argument_list|,
name|transaction
argument_list|,
name|XML_FILENAME
argument_list|,
name|INVALID_XML
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|SAXException
name|e
parameter_list|)
block|{
name|threw
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|threw
argument_list|)
expr_stmt|;
specifier|final
name|long
name|modificationTimeAfter
init|=
name|getDocLastModified
argument_list|(
name|broker
argument_list|,
name|transaction
argument_list|,
name|XML_FILENAME
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|modificationTimeBefore
argument_list|,
name|modificationTimeAfter
argument_list|)
expr_stmt|;
name|transaction
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|ClassRule
specifier|public
specifier|static
specifier|final
name|ExistEmbeddedServer
name|existEmbeddedServer
init|=
operator|new
name|ExistEmbeddedServer
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
specifier|private
name|BinaryDocument
name|storeBinary
parameter_list|(
specifier|final
name|DBBroker
name|broker
parameter_list|,
specifier|final
name|Txn
name|transaction
parameter_list|,
specifier|final
name|String
name|name
parameter_list|,
specifier|final
name|String
name|data
parameter_list|,
specifier|final
name|String
name|mimeType
parameter_list|)
throws|throws
name|EXistException
throws|,
name|PermissionDeniedException
throws|,
name|IOException
throws|,
name|TriggerException
throws|,
name|LockException
block|{
specifier|final
name|Collection
name|root
init|=
name|broker
operator|.
name|getOrCreateCollection
argument_list|(
name|transaction
argument_list|,
name|TEST_COLLECTION_URI
argument_list|)
decl_stmt|;
name|broker
operator|.
name|saveCollection
argument_list|(
name|transaction
argument_list|,
name|root
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|root
argument_list|)
expr_stmt|;
return|return
name|root
operator|.
name|addBinaryResource
argument_list|(
name|transaction
argument_list|,
name|broker
argument_list|,
name|XmldbURI
operator|.
name|create
argument_list|(
name|name
argument_list|)
argument_list|,
name|data
operator|.
name|getBytes
argument_list|()
argument_list|,
name|mimeType
argument_list|)
return|;
block|}
specifier|private
name|void
name|storeXML
parameter_list|(
specifier|final
name|DBBroker
name|broker
parameter_list|,
specifier|final
name|Txn
name|transaction
parameter_list|,
specifier|final
name|String
name|name
parameter_list|,
specifier|final
name|String
name|xml
parameter_list|)
throws|throws
name|EXistException
throws|,
name|PermissionDeniedException
throws|,
name|IOException
throws|,
name|LockException
throws|,
name|SAXException
block|{
specifier|final
name|Collection
name|root
init|=
name|broker
operator|.
name|getOrCreateCollection
argument_list|(
name|transaction
argument_list|,
name|TEST_COLLECTION_URI
argument_list|)
decl_stmt|;
name|broker
operator|.
name|saveCollection
argument_list|(
name|transaction
argument_list|,
name|root
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|root
argument_list|)
expr_stmt|;
specifier|final
name|IndexInfo
name|info
init|=
name|root
operator|.
name|validateXMLResource
argument_list|(
name|transaction
argument_list|,
name|broker
argument_list|,
name|XmldbURI
operator|.
name|create
argument_list|(
name|name
argument_list|)
argument_list|,
name|xml
argument_list|)
decl_stmt|;
name|root
operator|.
name|store
argument_list|(
name|transaction
argument_list|,
name|broker
argument_list|,
name|info
argument_list|,
name|xml
argument_list|)
expr_stmt|;
block|}
specifier|private
name|long
name|getDocLastModified
parameter_list|(
specifier|final
name|DBBroker
name|broker
parameter_list|,
specifier|final
name|Txn
name|transaction
parameter_list|,
specifier|final
name|String
name|name
parameter_list|)
throws|throws
name|PermissionDeniedException
block|{
specifier|final
name|long
name|modificationTimeBefore
decl_stmt|;
try|try
init|(
specifier|final
name|LockedDocument
name|lockedDocument
init|=
name|broker
operator|.
name|getXMLResource
argument_list|(
name|TEST_COLLECTION_URI
operator|.
name|append
argument_list|(
name|name
argument_list|)
argument_list|,
name|Lock
operator|.
name|LockMode
operator|.
name|READ_LOCK
argument_list|)
init|)
block|{
name|assertNotNull
argument_list|(
name|lockedDocument
argument_list|)
expr_stmt|;
return|return
name|lockedDocument
operator|.
name|getDocument
argument_list|()
operator|.
name|getMetadata
argument_list|()
operator|.
name|getLastModified
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

