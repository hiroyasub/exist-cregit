begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2018 The eXist Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public  * License along with this library; if not, write to the Free Software  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|journal
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|input
operator|.
name|CountingInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|EXistException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|triggers
operator|.
name|TriggerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|persistent
operator|.
name|BinaryDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|persistent
operator|.
name|DocumentImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|PermissionDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|blob
operator|.
name|BlobId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|blob
operator|.
name|StoreBlobFileLoggable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|blob
operator|.
name|UpdateBlobRefCountLoggable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|Txn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|FileInputSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|LockException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|crypto
operator|.
name|digest
operator|.
name|DigestType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|crypto
operator|.
name|digest
operator|.
name|StreamableDigest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|StandardOpenOption
operator|.
name|CREATE_NEW
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * Test expectations to check that the correct entries  * are written to the journal during  * various Binary operations.  *  * Actual JUnit test cases are defined in the  * subclass {@link AbstractJournalTest}.  *  * @author<a href="mailto:adam@evolvedbinary.com">Adam Retter</a>  */
end_comment

begin_class
specifier|public
class|class
name|JournalBinaryTest
extends|extends
name|AbstractJournalTest
argument_list|<
name|JournalBinaryTest
operator|.
name|BinaryDocLocator
argument_list|>
block|{
annotation|@
name|ClassRule
specifier|public
specifier|static
specifier|final
name|TemporaryFolder
name|temporaryFolder
init|=
operator|new
name|TemporaryFolder
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|Path
name|testFile1
init|=
literal|null
decl_stmt|;
specifier|private
specifier|static
name|Path
name|testFile2
init|=
literal|null
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|storeTempBinaryDocs
parameter_list|()
throws|throws
name|IOException
block|{
name|testFile1
operator|=
name|temporaryFolder
operator|.
name|getRoot
argument_list|()
operator|.
name|toPath
argument_list|()
operator|.
name|resolve
argument_list|(
literal|"blob1.bin"
argument_list|)
expr_stmt|;
name|Files
operator|.
name|write
argument_list|(
name|testFile1
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"blob1"
argument_list|)
argument_list|,
name|CREATE_NEW
argument_list|)
expr_stmt|;
name|testFile2
operator|=
name|temporaryFolder
operator|.
name|getRoot
argument_list|()
operator|.
name|toPath
argument_list|()
operator|.
name|resolve
argument_list|(
literal|"blob2.bin"
argument_list|)
expr_stmt|;
name|Files
operator|.
name|write
argument_list|(
name|testFile2
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"blob2"
argument_list|)
argument_list|,
name|CREATE_NEW
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|ExpectedLoggable
argument_list|>
name|store_expected
parameter_list|(
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|stored
parameter_list|,
specifier|final
name|int
name|offset
parameter_list|)
block|{
specifier|final
name|int
name|docId
init|=
name|FIRST_USABLE_DOC_ID
operator|+
name|offset
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Start
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|)
argument_list|,
name|CollectionNextDocId
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|)
argument_list|,
name|StoreBlobFile
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
name|stored
operator|.
name|docLocation
operator|.
name|blobId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
name|stored
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|CollectionCreateDoc
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|stored
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Commit
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|ExpectedLoggable
argument_list|>
name|storeWithoutCommit_expected
parameter_list|(
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|stored
parameter_list|)
block|{
specifier|final
name|int
name|docId
init|=
name|FIRST_USABLE_DOC_ID
operator|+
literal|0
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Start
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|)
argument_list|,
name|CollectionNextDocId
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|)
argument_list|,
name|StoreBlobFile
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
name|stored
operator|.
name|docLocation
operator|.
name|blobId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
name|stored
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|CollectionCreateDoc
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|stored
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|ExpectedLoggable
argument_list|>
name|storeThenDelete_expected
parameter_list|(
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|stored
parameter_list|,
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|deleted
parameter_list|,
specifier|final
name|int
name|offset
parameter_list|)
block|{
specifier|final
name|int
name|docId
init|=
name|FIRST_USABLE_DOC_ID
operator|+
name|offset
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Start
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|)
argument_list|,
name|CollectionNextDocId
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|)
argument_list|,
name|StoreBlobFile
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
name|stored
operator|.
name|docLocation
operator|.
name|blobId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
name|stored
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|CollectionCreateDoc
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|stored
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Commit
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|)
argument_list|,
name|Start
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Commit
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|ExpectedLoggable
argument_list|>
name|storeWithoutCommitThenDelete_expected
parameter_list|(
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|stored
parameter_list|,
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|deleted
parameter_list|)
block|{
specifier|final
name|int
name|docId
init|=
name|FIRST_USABLE_DOC_ID
operator|+
literal|0
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Start
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|)
argument_list|,
name|CollectionNextDocId
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|)
argument_list|,
name|StoreBlobFile
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
name|stored
operator|.
name|docLocation
operator|.
name|blobId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
name|stored
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|CollectionCreateDoc
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|stored
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Start
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Commit
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|ExpectedLoggable
argument_list|>
name|storeThenDeleteWithoutCommit_expected
parameter_list|(
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|stored
parameter_list|,
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|deleted
parameter_list|,
specifier|final
name|int
name|offset
parameter_list|)
block|{
specifier|final
name|int
name|docId
init|=
name|FIRST_USABLE_DOC_ID
operator|+
name|offset
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Start
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|)
argument_list|,
name|CollectionNextDocId
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|)
argument_list|,
name|StoreBlobFile
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
name|stored
operator|.
name|docLocation
operator|.
name|blobId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
name|stored
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|CollectionCreateDoc
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|stored
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Commit
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|)
argument_list|,
name|Start
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|ExpectedLoggable
argument_list|>
name|storeWithoutCommitThenDeleteWithoutCommit_expected
parameter_list|(
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|stored
parameter_list|,
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|deleted
parameter_list|)
block|{
specifier|final
name|int
name|docId
init|=
name|FIRST_USABLE_DOC_ID
operator|+
literal|0
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Start
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|)
argument_list|,
name|CollectionNextDocId
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|)
argument_list|,
name|StoreBlobFile
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
name|stored
operator|.
name|docLocation
operator|.
name|blobId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
name|stored
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|CollectionCreateDoc
argument_list|(
name|stored
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|stored
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Start
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|ExpectedLoggable
argument_list|>
name|delete_expected
parameter_list|(
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|deleted
parameter_list|,
specifier|final
name|int
name|offset
parameter_list|)
block|{
specifier|final
name|int
name|docId
init|=
name|FIRST_USABLE_DOC_ID
operator|+
name|offset
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Start
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Commit
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|ExpectedLoggable
argument_list|>
name|deleteWithoutCommit_expected
parameter_list|(
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|deleted
parameter_list|,
specifier|final
name|int
name|offset
parameter_list|)
block|{
specifier|final
name|int
name|docId
init|=
name|FIRST_USABLE_DOC_ID
operator|+
name|offset
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Start
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|ExpectedLoggable
argument_list|>
name|replaceSameContent_expected
parameter_list|(
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|replaced
parameter_list|,
specifier|final
name|int
name|offset
parameter_list|,
specifier|final
name|boolean
name|overridesStore
parameter_list|)
block|{
specifier|final
name|int
name|docId
init|=
name|FIRST_USABLE_DOC_ID
operator|+
name|offset
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Start
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|)
argument_list|,
name|CollectionNextDocId
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|CollectionCreateDoc
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Commit
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|ExpectedLoggable
argument_list|>
name|replaceDifferentContent_expected
parameter_list|(
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|original
parameter_list|,
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|replacement
parameter_list|,
specifier|final
name|int
name|offset
parameter_list|,
specifier|final
name|boolean
name|overridesStore
parameter_list|)
block|{
specifier|final
name|int
name|docId
init|=
name|FIRST_USABLE_DOC_ID
operator|+
name|offset
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Start
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|)
argument_list|,
name|CollectionNextDocId
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
name|original
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|original
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|StoreBlobFile
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
name|replacement
operator|.
name|docLocation
operator|.
name|blobId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
name|replacement
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|CollectionCreateDoc
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|,
name|replacement
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Commit
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|ExpectedLoggable
argument_list|>
name|replaceSameContentWithoutCommit_expected
parameter_list|(
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|replaced
parameter_list|,
specifier|final
name|int
name|offset
parameter_list|)
block|{
specifier|final
name|int
name|docId
init|=
name|FIRST_USABLE_DOC_ID
operator|+
name|offset
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Start
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|)
argument_list|,
name|CollectionNextDocId
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|CollectionCreateDoc
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|ExpectedLoggable
argument_list|>
name|replaceDifferentContentWithoutCommit_expected
parameter_list|(
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|original
parameter_list|,
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|replacement
parameter_list|,
specifier|final
name|int
name|offset
parameter_list|)
block|{
specifier|final
name|int
name|docId
init|=
name|FIRST_USABLE_DOC_ID
operator|+
name|offset
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Start
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|)
argument_list|,
name|CollectionNextDocId
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
name|original
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|original
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|StoreBlobFile
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
name|replacement
operator|.
name|docLocation
operator|.
name|blobId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
name|replacement
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|CollectionCreateDoc
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|,
name|replacement
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|ExpectedLoggable
argument_list|>
name|replaceSameContentThenDelete_expected
parameter_list|(
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|replaced
parameter_list|,
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|deleted
parameter_list|,
specifier|final
name|int
name|offset
parameter_list|)
block|{
specifier|final
name|int
name|docId
init|=
name|FIRST_USABLE_DOC_ID
operator|+
name|offset
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Start
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|)
argument_list|,
name|CollectionNextDocId
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|CollectionCreateDoc
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Commit
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|)
argument_list|,
name|Start
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Commit
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|ExpectedLoggable
argument_list|>
name|replaceDifferentContentThenDelete_expected
parameter_list|(
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|original
parameter_list|,
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|replacement
parameter_list|,
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|deleted
parameter_list|,
specifier|final
name|int
name|offset
parameter_list|)
block|{
specifier|final
name|int
name|docId
init|=
name|FIRST_USABLE_DOC_ID
operator|+
name|offset
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Start
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|)
argument_list|,
name|CollectionNextDocId
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
name|original
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|original
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|StoreBlobFile
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
name|replacement
operator|.
name|docLocation
operator|.
name|blobId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
name|replacement
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|CollectionCreateDoc
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|,
name|replacement
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Commit
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|)
argument_list|,
name|Start
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Commit
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|ExpectedLoggable
argument_list|>
name|replaceSameContentWithoutCommitThenDelete_expected
parameter_list|(
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|replaced
parameter_list|,
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|deleted
parameter_list|,
specifier|final
name|int
name|offset
parameter_list|)
block|{
specifier|final
name|int
name|docId
init|=
name|FIRST_USABLE_DOC_ID
operator|+
name|offset
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Start
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|)
argument_list|,
name|CollectionNextDocId
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|CollectionCreateDoc
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Start
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Commit
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|ExpectedLoggable
argument_list|>
name|replaceDifferentContentWithoutCommitThenDelete_expected
parameter_list|(
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|original
parameter_list|,
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|replacement
parameter_list|,
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|deleted
parameter_list|,
specifier|final
name|int
name|offset
parameter_list|)
block|{
specifier|final
name|int
name|docId
init|=
name|FIRST_USABLE_DOC_ID
operator|+
name|offset
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Start
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|)
argument_list|,
name|CollectionNextDocId
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
name|original
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|original
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|StoreBlobFile
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
name|replacement
operator|.
name|docLocation
operator|.
name|blobId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
name|replacement
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|CollectionCreateDoc
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|,
name|replacement
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Start
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Commit
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|ExpectedLoggable
argument_list|>
name|replaceSameContentThenDeleteWithoutCommit_expected
parameter_list|(
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|replaced
parameter_list|,
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|deleted
parameter_list|,
specifier|final
name|int
name|offset
parameter_list|,
specifier|final
name|boolean
name|overridesStore
parameter_list|)
block|{
specifier|final
name|int
name|docId
init|=
name|FIRST_USABLE_DOC_ID
operator|+
name|offset
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Start
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|)
argument_list|,
name|CollectionNextDocId
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|CollectionCreateDoc
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Commit
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|)
argument_list|,
name|Start
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|ExpectedLoggable
argument_list|>
name|replaceDifferentContentThenDeleteWithoutCommit_expected
parameter_list|(
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|original
parameter_list|,
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|replacement
parameter_list|,
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|deleted
parameter_list|,
specifier|final
name|int
name|offset
parameter_list|,
specifier|final
name|boolean
name|overridesStore
parameter_list|)
block|{
specifier|final
name|int
name|docId
init|=
name|FIRST_USABLE_DOC_ID
operator|+
name|offset
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Start
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|)
argument_list|,
name|CollectionNextDocId
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
name|original
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|original
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|StoreBlobFile
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
name|replacement
operator|.
name|docLocation
operator|.
name|blobId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
name|replacement
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|CollectionCreateDoc
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|,
name|replacement
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Commit
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|)
argument_list|,
name|Start
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|ExpectedLoggable
argument_list|>
name|replaceSameContentWithoutCommitThenDeleteWithoutCommit_expected
parameter_list|(
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|replaced
parameter_list|,
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|deleted
parameter_list|,
specifier|final
name|int
name|offset
parameter_list|)
block|{
specifier|final
name|int
name|docId
init|=
name|FIRST_USABLE_DOC_ID
operator|+
name|offset
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Start
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|)
argument_list|,
name|CollectionNextDocId
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|CollectionCreateDoc
argument_list|(
name|replaced
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|,
name|replaced
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Start
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|ExpectedLoggable
argument_list|>
name|replaceDifferentContentWithoutCommitThenDeleteWithoutCommit_expected
parameter_list|(
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|original
parameter_list|,
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|replacement
parameter_list|,
specifier|final
name|TxnDoc
argument_list|<
name|BinaryDocLocator
argument_list|>
name|deleted
parameter_list|,
specifier|final
name|int
name|offset
parameter_list|)
block|{
specifier|final
name|int
name|docId
init|=
name|FIRST_USABLE_DOC_ID
operator|+
name|offset
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|Start
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|)
argument_list|,
name|CollectionNextDocId
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
name|original
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
argument_list|,
name|original
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|StoreBlobFile
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
name|replacement
operator|.
name|docLocation
operator|.
name|blobId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
name|replacement
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|,
name|CollectionCreateDoc
argument_list|(
name|replacement
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|,
name|replacement
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|,
name|Start
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|)
argument_list|,
name|UpdateBlobRefCount
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|blobId
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|CollectionDeleteDoc
argument_list|(
name|deleted
operator|.
name|transactionId
argument_list|,
literal|1
argument_list|,
name|docId
operator|+
literal|1
argument_list|,
name|deleted
operator|.
name|docLocation
operator|.
name|dbLocation
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|Path
name|getTestFile1
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|testFile1
return|;
block|}
annotation|@
name|Override
specifier|protected
name|Path
name|getTestFile2
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|testFile2
return|;
block|}
annotation|@
name|Override
specifier|protected
name|BinaryDocLocator
name|storeAndVerify
parameter_list|(
specifier|final
name|DBBroker
name|broker
parameter_list|,
specifier|final
name|Txn
name|transaction
parameter_list|,
specifier|final
name|Collection
name|collection
parameter_list|,
specifier|final
name|InputSource
name|data
parameter_list|,
specifier|final
name|String
name|dbFilename
parameter_list|)
throws|throws
name|EXistException
throws|,
name|PermissionDeniedException
throws|,
name|IOException
throws|,
name|TriggerException
throws|,
name|LockException
block|{
name|assertTrue
argument_list|(
name|data
operator|instanceof
name|FileInputSource
argument_list|)
expr_stmt|;
specifier|final
name|Path
name|file
init|=
operator|(
operator|(
name|FileInputSource
operator|)
name|data
operator|)
operator|.
name|getFile
argument_list|()
decl_stmt|;
specifier|final
name|byte
index|[]
name|content
init|=
name|Files
operator|.
name|readAllBytes
argument_list|(
name|file
argument_list|)
decl_stmt|;
specifier|final
name|BinaryDocument
name|doc
init|=
name|collection
operator|.
name|addBinaryResource
argument_list|(
name|transaction
argument_list|,
name|broker
argument_list|,
name|XmldbURI
operator|.
name|create
argument_list|(
name|dbFilename
argument_list|)
argument_list|,
name|content
argument_list|,
literal|"application/octet-stream"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Files
operator|.
name|size
argument_list|(
name|file
argument_list|)
argument_list|,
name|doc
operator|.
name|getContentLength
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|new
name|BinaryDocLocator
argument_list|(
name|collection
operator|.
name|getURI
argument_list|()
operator|.
name|append
argument_list|(
name|dbFilename
argument_list|)
operator|.
name|getRawCollectionPath
argument_list|()
argument_list|,
name|doc
operator|.
name|getBlobId
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|BinaryDocLocator
name|calcDocLocation
parameter_list|(
specifier|final
name|Path
name|content
parameter_list|,
specifier|final
name|XmldbURI
name|collectionUri
parameter_list|,
specifier|final
name|String
name|fileName
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|StreamableDigest
name|streamableDigest
init|=
name|DigestType
operator|.
name|BLAKE_256
operator|.
name|newStreamableDigest
argument_list|()
decl_stmt|;
name|FileUtils
operator|.
name|digest
argument_list|(
name|content
argument_list|,
name|streamableDigest
argument_list|)
expr_stmt|;
return|return
operator|new
name|BinaryDocLocator
argument_list|(
name|collectionUri
operator|.
name|append
argument_list|(
name|fileName
argument_list|)
operator|.
name|getRawCollectionPath
argument_list|()
argument_list|,
operator|new
name|BlobId
argument_list|(
name|streamableDigest
operator|.
name|getMessageDigest
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|readAndVerify
parameter_list|(
specifier|final
name|DBBroker
name|broker
parameter_list|,
specifier|final
name|DocumentImpl
name|doc
parameter_list|,
specifier|final
name|Path
name|file
parameter_list|,
specifier|final
name|String
name|dbFilename
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|BinaryDocument
name|binDoc
init|=
operator|(
name|BinaryDocument
operator|)
name|doc
decl_stmt|;
comment|// verify the size, to ensure it is the correct content
specifier|final
name|long
name|expectedSize
init|=
name|Files
operator|.
name|size
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedSize
argument_list|,
name|binDoc
operator|.
name|getContentLength
argument_list|()
argument_list|)
expr_stmt|;
comment|// check the actual content too!
specifier|final
name|byte
index|[]
name|bdata
init|=
operator|new
name|byte
index|[
operator|(
name|int
operator|)
name|binDoc
operator|.
name|getContentLength
argument_list|()
index|]
decl_stmt|;
try|try
init|(
specifier|final
name|CountingInputStream
name|cis
init|=
operator|new
name|CountingInputStream
argument_list|(
name|broker
operator|.
name|getBinaryResource
argument_list|(
name|binDoc
argument_list|)
argument_list|)
init|)
block|{
specifier|final
name|int
name|read
init|=
name|cis
operator|.
name|read
argument_list|(
name|bdata
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|bdata
operator|.
name|length
argument_list|,
name|read
argument_list|)
expr_stmt|;
specifier|final
name|String
name|data
init|=
operator|new
name|String
argument_list|(
name|bdata
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedSize
argument_list|,
name|cis
operator|.
name|getByteCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|BinaryDocLocator
name|delete
parameter_list|(
specifier|final
name|DBBroker
name|broker
parameter_list|,
specifier|final
name|Txn
name|transaction
parameter_list|,
specifier|final
name|Collection
name|collection
parameter_list|,
specifier|final
name|String
name|dbFilename
parameter_list|)
throws|throws
name|PermissionDeniedException
throws|,
name|LockException
throws|,
name|IOException
throws|,
name|TriggerException
block|{
specifier|final
name|DocumentImpl
name|doc
init|=
name|collection
operator|.
name|getDocument
argument_list|(
name|broker
argument_list|,
name|XmldbURI
operator|.
name|create
argument_list|(
name|dbFilename
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|doc
operator|!=
literal|null
condition|)
block|{
name|collection
operator|.
name|removeResource
argument_list|(
name|transaction
argument_list|,
name|broker
argument_list|,
name|doc
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|BinaryDocLocator
argument_list|(
name|doc
operator|.
name|getURI
argument_list|()
operator|.
name|getRawCollectionPath
argument_list|()
argument_list|,
operator|(
operator|(
name|BinaryDocument
operator|)
name|doc
operator|)
operator|.
name|getBlobId
argument_list|()
argument_list|)
return|;
block|}
specifier|private
specifier|final
specifier|static
name|String
name|FS_SUBDIR
init|=
literal|"fs"
decl_stmt|;
specifier|private
name|ExpectedStoreBlobFile
name|StoreBlobFile
parameter_list|(
specifier|final
name|long
name|transactionId
parameter_list|,
specifier|final
name|BlobId
name|blobId
parameter_list|)
block|{
return|return
operator|new
name|ExpectedStoreBlobFile
argument_list|(
name|transactionId
argument_list|,
name|blobId
argument_list|)
return|;
block|}
specifier|private
name|ExpectedUpdateBlobRefCount
name|UpdateBlobRefCount
parameter_list|(
specifier|final
name|long
name|transactionId
parameter_list|,
specifier|final
name|BlobId
name|blobId
parameter_list|,
specifier|final
name|int
name|currentCount
parameter_list|,
specifier|final
name|int
name|newCount
parameter_list|)
block|{
return|return
operator|new
name|ExpectedUpdateBlobRefCount
argument_list|(
name|transactionId
argument_list|,
name|blobId
argument_list|,
name|currentCount
argument_list|,
name|newCount
argument_list|)
return|;
block|}
specifier|private
specifier|static
class|class
name|ExpectedStoreBlobFile
extends|extends
name|ExpectedLoggable
block|{
specifier|private
specifier|final
name|BlobId
name|blobId
decl_stmt|;
specifier|public
name|ExpectedStoreBlobFile
parameter_list|(
specifier|final
name|long
name|transactionId
parameter_list|,
specifier|final
name|BlobId
name|blobId
parameter_list|)
block|{
name|super
argument_list|(
name|transactionId
argument_list|)
expr_stmt|;
name|this
operator|.
name|blobId
operator|=
name|blobId
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|o
operator|.
name|getClass
argument_list|()
operator|!=
name|StoreBlobFileLoggable
operator|.
name|class
condition|)
return|return
literal|false
return|;
specifier|final
name|StoreBlobFileLoggable
name|that
init|=
operator|(
name|StoreBlobFileLoggable
operator|)
name|o
decl_stmt|;
return|return
name|that
operator|.
name|transactionId
operator|==
name|transactionId
operator|&&
name|that
operator|.
name|getBlobId
argument_list|()
operator|.
name|equals
argument_list|(
name|blobId
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"STORE BLOB FILE T-"
operator|+
name|transactionId
operator|+
literal|" blobId="
operator|+
name|blobId
return|;
block|}
block|}
specifier|private
specifier|static
class|class
name|ExpectedUpdateBlobRefCount
extends|extends
name|ExpectedLoggable
block|{
specifier|private
specifier|final
name|BlobId
name|blobId
decl_stmt|;
specifier|private
specifier|final
name|int
name|currentCount
decl_stmt|;
specifier|private
specifier|final
name|int
name|newCount
decl_stmt|;
specifier|public
name|ExpectedUpdateBlobRefCount
parameter_list|(
specifier|final
name|long
name|transactionId
parameter_list|,
specifier|final
name|BlobId
name|blobId
parameter_list|,
specifier|final
name|int
name|currentCount
parameter_list|,
specifier|final
name|int
name|newCount
parameter_list|)
block|{
name|super
argument_list|(
name|transactionId
argument_list|)
expr_stmt|;
name|this
operator|.
name|blobId
operator|=
name|blobId
expr_stmt|;
name|this
operator|.
name|currentCount
operator|=
name|currentCount
expr_stmt|;
name|this
operator|.
name|newCount
operator|=
name|newCount
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|o
operator|.
name|getClass
argument_list|()
operator|!=
name|UpdateBlobRefCountLoggable
operator|.
name|class
condition|)
return|return
literal|false
return|;
specifier|final
name|UpdateBlobRefCountLoggable
name|that
init|=
operator|(
name|UpdateBlobRefCountLoggable
operator|)
name|o
decl_stmt|;
return|return
name|that
operator|.
name|transactionId
operator|==
name|transactionId
operator|&&
name|that
operator|.
name|getBlobId
argument_list|()
operator|.
name|equals
argument_list|(
name|blobId
argument_list|)
operator|&&
name|that
operator|.
name|getCurrentCount
argument_list|()
operator|==
name|currentCount
operator|&&
name|that
operator|.
name|getNewCount
argument_list|()
operator|==
name|newCount
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"UPDATE BLOB REF COUNT T-"
operator|+
name|transactionId
operator|+
literal|" blobId="
operator|+
name|blobId
operator|+
literal|" v="
operator|+
name|currentCount
operator|+
literal|" w="
operator|+
name|newCount
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|BinaryDocLocator
block|{
specifier|final
name|String
name|dbLocation
decl_stmt|;
specifier|final
name|BlobId
name|blobId
decl_stmt|;
specifier|public
name|BinaryDocLocator
parameter_list|(
specifier|final
name|String
name|dbLocation
parameter_list|,
specifier|final
name|BlobId
name|blobId
parameter_list|)
block|{
name|this
operator|.
name|dbLocation
operator|=
name|dbLocation
expr_stmt|;
name|this
operator|.
name|blobId
operator|=
name|blobId
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

