begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xmldb
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|test
operator|.
name|ExistXmldbEmbeddedServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Permission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|exist
operator|.
name|TestUtils
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|DatabaseManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|CopyMoveTest
block|{
annotation|@
name|ClassRule
specifier|public
specifier|static
specifier|final
name|ExistXmldbEmbeddedServer
name|existEmbeddedServer
init|=
operator|new
name|ExistXmldbEmbeddedServer
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|TEST_COLLECTION
init|=
literal|"testCopyMove"
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|copyResourceChangeName
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|Collection
name|testCollection
init|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|XmldbURI
operator|.
name|LOCAL_DB
operator|+
literal|"/"
operator|+
name|TEST_COLLECTION
argument_list|)
decl_stmt|;
name|XMLResource
name|original
init|=
operator|(
name|XMLResource
operator|)
name|testCollection
operator|.
name|createResource
argument_list|(
literal|"original"
argument_list|,
name|XMLResource
operator|.
name|RESOURCE_TYPE
argument_list|)
decl_stmt|;
name|original
operator|.
name|setContent
argument_list|(
literal|"<sample/>"
argument_list|)
expr_stmt|;
name|testCollection
operator|.
name|storeResource
argument_list|(
name|original
argument_list|)
expr_stmt|;
name|EXistCollectionManagementService
name|cms
init|=
operator|(
name|EXistCollectionManagementService
operator|)
name|testCollection
operator|.
name|getService
argument_list|(
literal|"CollectionManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|cms
operator|.
name|copyResource
argument_list|(
literal|"original"
argument_list|,
literal|""
argument_list|,
literal|"duplicate"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|testCollection
operator|.
name|getResourceCount
argument_list|()
argument_list|)
expr_stmt|;
name|XMLResource
name|duplicate
init|=
operator|(
name|XMLResource
operator|)
name|testCollection
operator|.
name|getResource
argument_list|(
literal|"duplicate"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|duplicate
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|queryCopiedResource
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|Collection
name|testCollection
init|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|XmldbURI
operator|.
name|LOCAL_DB
operator|+
literal|"/"
operator|+
name|TEST_COLLECTION
argument_list|)
decl_stmt|;
name|XMLResource
name|original
init|=
operator|(
name|XMLResource
operator|)
name|testCollection
operator|.
name|createResource
argument_list|(
literal|"original"
argument_list|,
name|XMLResource
operator|.
name|RESOURCE_TYPE
argument_list|)
decl_stmt|;
name|original
operator|.
name|setContent
argument_list|(
literal|"<sample/>"
argument_list|)
expr_stmt|;
name|testCollection
operator|.
name|storeResource
argument_list|(
name|original
argument_list|)
expr_stmt|;
name|EXistCollectionManagementService
name|cms
init|=
operator|(
name|EXistCollectionManagementService
operator|)
name|testCollection
operator|.
name|getService
argument_list|(
literal|"CollectionManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|cms
operator|.
name|copyResource
argument_list|(
literal|"original"
argument_list|,
literal|""
argument_list|,
literal|"duplicate"
argument_list|)
expr_stmt|;
name|XMLResource
name|duplicate
init|=
operator|(
name|XMLResource
operator|)
name|testCollection
operator|.
name|getResource
argument_list|(
literal|"duplicate"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|duplicate
argument_list|)
expr_stmt|;
name|XPathQueryService
name|xq
init|=
operator|(
name|XPathQueryService
operator|)
name|testCollection
operator|.
name|getService
argument_list|(
literal|"XPathQueryService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|ResourceSet
name|rs
init|=
name|xq
operator|.
name|queryResource
argument_list|(
literal|"duplicate"
argument_list|,
literal|"/sample"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rs
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|changePermissionsAfterCopy
parameter_list|()
throws|throws
name|XMLDBException
block|{
specifier|final
name|String
name|collectionURL
init|=
name|XmldbURI
operator|.
name|LOCAL_DB
operator|+
literal|"/"
operator|+
name|TEST_COLLECTION
decl_stmt|;
specifier|final
name|String
name|originalResource
init|=
literal|"original.xml"
decl_stmt|;
specifier|final
name|String
name|copyResource
init|=
literal|"copy.xml"
decl_stmt|;
specifier|final
name|String
name|resourceURL
init|=
name|collectionURL
operator|+
literal|"/"
operator|+
name|originalResource
decl_stmt|;
comment|//get collection& services
name|EXistCollection
name|col
init|=
operator|(
name|EXistCollection
operator|)
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|collectionURL
argument_list|)
decl_stmt|;
name|EXistCollectionManagementService
name|service
init|=
operator|(
name|EXistCollectionManagementService
operator|)
name|col
operator|.
name|getService
argument_list|(
literal|"CollectionManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|UserManagementService
name|ums
init|=
operator|(
name|UserManagementService
operator|)
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|collectionURL
argument_list|,
name|ADMIN_DB_USER
argument_list|,
name|ADMIN_DB_PWD
argument_list|)
operator|.
name|getService
argument_list|(
literal|"UserManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
comment|//store xml document
name|XMLResource
name|original
init|=
operator|(
name|XMLResource
operator|)
name|col
operator|.
name|createResource
argument_list|(
name|originalResource
argument_list|,
name|XMLResource
operator|.
name|RESOURCE_TYPE
argument_list|)
decl_stmt|;
name|original
operator|.
name|setContent
argument_list|(
literal|"<sample/>"
argument_list|)
expr_stmt|;
name|col
operator|.
name|storeResource
argument_list|(
name|original
argument_list|)
expr_stmt|;
comment|//get original resource
name|Resource
name|orgnRes
init|=
name|col
operator|.
name|getResource
argument_list|(
name|originalResource
argument_list|)
decl_stmt|;
comment|//check permission before copy
name|Permission
name|prm
init|=
name|ums
operator|.
name|getPermissions
argument_list|(
name|orgnRes
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"rw-r--r--"
argument_list|,
name|prm
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|//copy
name|service
operator|.
name|copyResource
argument_list|(
name|XmldbURI
operator|.
name|create
argument_list|(
name|resourceURL
argument_list|)
argument_list|,
name|col
operator|.
name|getPathURI
argument_list|()
argument_list|,
name|XmldbURI
operator|.
name|create
argument_list|(
name|copyResource
argument_list|)
argument_list|)
expr_stmt|;
comment|//check permission after copy
name|prm
operator|=
name|ums
operator|.
name|getPermissions
argument_list|(
name|orgnRes
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"rw-r--r--"
argument_list|,
name|prm
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|//get copy resource
name|Resource
name|copyRes
init|=
name|col
operator|.
name|getResource
argument_list|(
name|copyResource
argument_list|)
decl_stmt|;
comment|//change permission on copy
name|Account
name|admin
init|=
name|ums
operator|.
name|getAccount
argument_list|(
name|ADMIN_DB_USER
argument_list|)
decl_stmt|;
name|ums
operator|.
name|chown
argument_list|(
name|copyRes
argument_list|,
name|admin
argument_list|,
name|admin
operator|.
name|getPrimaryGroup
argument_list|()
argument_list|)
expr_stmt|;
name|ums
operator|.
name|chmod
argument_list|(
name|copyRes
argument_list|,
literal|"rwx--x---"
argument_list|)
expr_stmt|;
comment|//check permission of copy
name|prm
operator|=
name|ums
operator|.
name|getPermissions
argument_list|(
name|copyRes
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"rwx--x---"
argument_list|,
name|prm
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|//check permission of original
name|prm
operator|=
name|ums
operator|.
name|getPermissions
argument_list|(
name|orgnRes
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"rw-r--r--"
argument_list|,
name|prm
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|CollectionManagementService
name|cms
init|=
operator|(
name|CollectionManagementService
operator|)
name|existEmbeddedServer
operator|.
name|getRoot
argument_list|()
operator|.
name|getService
argument_list|(
literal|"CollectionManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
specifier|final
name|Collection
name|testCollection
init|=
name|cms
operator|.
name|createCollection
argument_list|(
name|TEST_COLLECTION
argument_list|)
decl_stmt|;
specifier|final
name|UserManagementService
name|ums
init|=
operator|(
name|UserManagementService
operator|)
name|testCollection
operator|.
name|getService
argument_list|(
literal|"UserManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
comment|// change ownership to guest
specifier|final
name|Account
name|guest
init|=
name|ums
operator|.
name|getAccount
argument_list|(
name|GUEST_DB_USER
argument_list|)
decl_stmt|;
name|ums
operator|.
name|chown
argument_list|(
name|guest
argument_list|,
name|guest
operator|.
name|getPrimaryGroup
argument_list|()
argument_list|)
expr_stmt|;
name|ums
operator|.
name|chmod
argument_list|(
literal|"rwxr-xr-x"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|XMLDBException
block|{
comment|//delete the test collection
specifier|final
name|CollectionManagementService
name|cms
init|=
operator|(
name|CollectionManagementService
operator|)
name|existEmbeddedServer
operator|.
name|getRoot
argument_list|()
operator|.
name|getService
argument_list|(
literal|"CollectionManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|cms
operator|.
name|removeCollection
argument_list|(
name|TEST_COLLECTION
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

