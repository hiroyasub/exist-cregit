begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2013 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|client
operator|.
name|security
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|PermissionDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|internal
operator|.
name|aider
operator|.
name|UnixStylePermissionAider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
specifier|public
class|class
name|BasicPermissionsTableModelTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|getMode
parameter_list|()
throws|throws
name|PermissionDeniedException
block|{
specifier|final
name|int
name|modes
index|[]
init|=
block|{
literal|0
block|,
literal|01
block|,
literal|04
block|,
literal|05
block|,
literal|07
block|,
literal|011
block|,
literal|044
block|,
literal|055
block|,
literal|077
block|,
literal|0111
block|,
literal|0444
block|,
literal|0555
block|,
literal|0777
block|,
literal|0711
block|,
literal|0744
block|,
literal|0755
block|,
literal|04000
block|,
literal|04100
block|,
literal|02000
block|,
literal|02010
block|,
literal|06777
block|}
decl_stmt|;
for|for
control|(
specifier|final
name|int
name|mode
range|:
name|modes
control|)
block|{
specifier|final
name|UnixStylePermissionAider
name|permission
init|=
operator|new
name|UnixStylePermissionAider
argument_list|(
name|mode
argument_list|)
decl_stmt|;
specifier|final
name|ModeDisplay
name|modeDisplay
init|=
name|ModeDisplay
operator|.
name|fromPermission
argument_list|(
name|permission
argument_list|)
decl_stmt|;
specifier|final
name|BasicPermissionsTableModel
name|model
init|=
operator|new
name|BasicPermissionsTableModel
argument_list|(
name|modeDisplay
argument_list|)
decl_stmt|;
specifier|final
name|UnixStylePermissionAider
name|updatedPermission
init|=
operator|new
name|UnixStylePermissionAider
argument_list|()
decl_stmt|;
name|model
operator|.
name|getMode
argument_list|()
operator|.
name|writeToPermission
argument_list|(
name|updatedPermission
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mode
argument_list|,
name|updatedPermission
operator|.
name|getMode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

