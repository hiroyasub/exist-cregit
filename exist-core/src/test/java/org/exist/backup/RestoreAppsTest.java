begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|backup
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|EXistException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|backup
operator|.
name|restore
operator|.
name|listener
operator|.
name|RestoreListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|repo
operator|.
name|Deployment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|repo
operator|.
name|ExistRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|PermissionDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|BrokerPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|Txn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|test
operator|.
name|ExistEmbeddedServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|expath
operator|.
name|pkg
operator|.
name|repo
operator|.
name|PackageException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|expath
operator|.
name|pkg
operator|.
name|repo
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|expath
operator|.
name|pkg
operator|.
name|repo
operator|.
name|XarFileSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|expath
operator|.
name|pkg
operator|.
name|repo
operator|.
name|XarSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|expath
operator|.
name|pkg
operator|.
name|repo
operator|.
name|tui
operator|.
name|BatchUserInteraction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|StandardOpenOption
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|ZipEntry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|ZipOutputStream
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|RestoreAppsTest
block|{
annotation|@
name|ClassRule
specifier|public
specifier|static
name|TemporaryFolder
name|temporaryFolder
init|=
operator|new
name|TemporaryFolder
argument_list|()
decl_stmt|;
annotation|@
name|ClassRule
specifier|public
specifier|static
specifier|final
name|ExistEmbeddedServer
name|existEmbeddedServer
init|=
operator|new
name|ExistEmbeddedServer
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|REPO_XML
init|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
operator|+
literal|"<meta xmlns=\"http://exist-db.org/xquery/repo\">\n"
operator|+
literal|"<description>Backup Test App</description>\n"
operator|+
literal|"<type>application</type>\n"
operator|+
literal|"<target>backup-test</target>"
operator|+
literal|"</meta>"
decl_stmt|;
comment|/**      * Create an app package and generate a backup. Install a newer version      * of the same package and restore the backup. The newer version inside      * the expath repo should be preserved and not overwritten.      *      * @throws Exception in case of error      */
annotation|@
name|Test
specifier|public
name|void
name|restoreSkipNewer
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|BrokerPool
name|pool
init|=
name|existEmbeddedServer
operator|.
name|getBrokerPool
argument_list|()
decl_stmt|;
name|removePackage
argument_list|(
name|pool
argument_list|)
expr_stmt|;
name|createAndInstallApp
argument_list|(
literal|"1.0.0"
argument_list|)
expr_stmt|;
name|Path
name|backup
init|=
name|export
argument_list|(
name|pool
argument_list|)
decl_stmt|;
name|removePackage
argument_list|(
name|pool
argument_list|)
expr_stmt|;
name|createAndInstallApp
argument_list|(
literal|"2.0.0"
argument_list|)
expr_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
argument_list|)
argument_list|)
init|;
specifier|final
name|Txn
name|transaction
init|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
operator|.
name|beginTransaction
argument_list|()
init|)
block|{
name|Restore
name|restore
init|=
operator|new
name|Restore
argument_list|()
decl_stmt|;
name|TestRestoreListener
name|listener
init|=
operator|new
name|TestRestoreListener
argument_list|()
decl_stmt|;
name|restore
operator|.
name|restore
argument_list|(
name|broker
argument_list|,
name|transaction
argument_list|,
literal|null
argument_list|,
name|backup
argument_list|,
name|listener
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|listener
operator|.
name|info
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|listener
operator|.
name|info
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|endsWith
argument_list|(
literal|"Newer version is already installed."
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Create an app package and generate a backup. Install an older version      * of the same package and restore the backup. The newer version inside      * the backup should overwrite the older in the database.      *      * @throws Exception in case of error      */
annotation|@
name|Test
specifier|public
name|void
name|restoreOverwriteOlder
parameter_list|()
throws|throws
name|IOException
throws|,
name|EXistException
throws|,
name|PackageException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
block|{
specifier|final
name|BrokerPool
name|pool
init|=
name|existEmbeddedServer
operator|.
name|getBrokerPool
argument_list|()
decl_stmt|;
name|removePackage
argument_list|(
name|pool
argument_list|)
expr_stmt|;
name|createAndInstallApp
argument_list|(
literal|"2.0.0"
argument_list|)
expr_stmt|;
name|Path
name|backup
init|=
name|export
argument_list|(
name|pool
argument_list|)
decl_stmt|;
name|removePackage
argument_list|(
name|pool
argument_list|)
expr_stmt|;
name|createAndInstallApp
argument_list|(
literal|"1.0.0"
argument_list|)
expr_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
argument_list|)
argument_list|)
init|;
specifier|final
name|Txn
name|transaction
init|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
operator|.
name|beginTransaction
argument_list|()
init|)
block|{
name|Restore
name|restore
init|=
operator|new
name|Restore
argument_list|()
decl_stmt|;
name|TestRestoreListener
name|listener
init|=
operator|new
name|TestRestoreListener
argument_list|()
decl_stmt|;
name|restore
operator|.
name|restore
argument_list|(
name|broker
argument_list|,
name|transaction
argument_list|,
literal|null
argument_list|,
name|backup
argument_list|,
name|listener
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|listener
operator|.
name|info
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|removePackage
parameter_list|(
name|BrokerPool
name|pool
parameter_list|)
throws|throws
name|PackageException
block|{
name|Optional
argument_list|<
name|ExistRepository
argument_list|>
name|repo
init|=
name|pool
operator|.
name|getExpathRepo
argument_list|()
decl_stmt|;
name|Repository
name|parent_repo
init|=
name|repo
operator|.
name|get
argument_list|()
operator|.
name|getParentRepo
argument_list|()
decl_stmt|;
name|parent_repo
operator|.
name|removePackage
argument_list|(
literal|"http://existsolutions.com/apps/backup-test"
argument_list|,
literal|true
argument_list|,
operator|new
name|BatchUserInteraction
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Path
name|export
parameter_list|(
name|BrokerPool
name|pool
parameter_list|)
throws|throws
name|IOException
throws|,
name|EXistException
block|{
name|Path
name|backup
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
argument_list|)
argument_list|)
init|)
block|{
name|SystemExport
name|export
init|=
operator|new
name|SystemExport
argument_list|(
name|broker
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|String
name|backupDir
init|=
name|temporaryFolder
operator|.
name|newFolder
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
name|backup
operator|=
name|export
operator|.
name|export
argument_list|(
name|backupDir
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
name|assertNotNull
argument_list|(
name|backup
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|isReadable
argument_list|(
name|backup
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|backup
return|;
block|}
specifier|private
name|void
name|createAndInstallApp
parameter_list|(
name|String
name|version
parameter_list|)
throws|throws
name|IOException
throws|,
name|PackageException
throws|,
name|EXistException
block|{
name|String
name|descriptor
init|=
literal|"<package xmlns=\"http://expath.org/ns/pkg\" name=\"http://existsolutions.com/apps/backup-test\"\n"
operator|+
literal|"   abbrev=\"backup-test\" version=\""
operator|+
name|version
operator|+
literal|"\" spec=\"1.0\">\n"
operator|+
literal|"<title>Backup Test App</title>\n"
operator|+
literal|"<dependency processor=\"http://exist-db.org\" semver-min=\"5.0.0-RC8\"/>\n"
operator|+
literal|"</package>"
decl_stmt|;
name|Path
name|xarFile
init|=
name|temporaryFolder
operator|.
name|newFile
argument_list|()
operator|.
name|toPath
argument_list|()
decl_stmt|;
name|ZipOutputStream
name|zos
init|=
operator|new
name|ZipOutputStream
argument_list|(
name|Files
operator|.
name|newOutputStream
argument_list|(
name|xarFile
argument_list|,
name|StandardOpenOption
operator|.
name|WRITE
argument_list|)
argument_list|)
decl_stmt|;
name|ZipEntry
name|entry
init|=
operator|new
name|ZipEntry
argument_list|(
literal|"expath-pkg.xml"
argument_list|)
decl_stmt|;
name|zos
operator|.
name|putNextEntry
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|byte
index|[]
name|bytes
init|=
name|descriptor
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
decl_stmt|;
name|zos
operator|.
name|write
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
name|zos
operator|.
name|closeEntry
argument_list|()
expr_stmt|;
name|entry
operator|=
operator|new
name|ZipEntry
argument_list|(
literal|"repo.xml"
argument_list|)
expr_stmt|;
name|zos
operator|.
name|putNextEntry
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|bytes
operator|=
name|REPO_XML
operator|.
name|getBytes
argument_list|(
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
expr_stmt|;
name|zos
operator|.
name|write
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
name|zos
operator|.
name|closeEntry
argument_list|()
expr_stmt|;
name|zos
operator|.
name|close
argument_list|()
expr_stmt|;
specifier|final
name|BrokerPool
name|pool
init|=
name|existEmbeddedServer
operator|.
name|getBrokerPool
argument_list|()
decl_stmt|;
name|Optional
argument_list|<
name|ExistRepository
argument_list|>
name|repo
init|=
name|pool
operator|.
name|getExpathRepo
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|repo
operator|.
name|isPresent
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|EXistException
argument_list|(
literal|"expath repository not available for test"
argument_list|)
throw|;
block|}
name|XarSource
name|xar
init|=
operator|new
name|XarFileSource
argument_list|(
name|xarFile
argument_list|)
decl_stmt|;
name|Deployment
name|deployment
init|=
operator|new
name|Deployment
argument_list|()
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
argument_list|)
argument_list|)
init|;
specifier|final
name|Txn
name|transaction
init|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
operator|.
name|beginTransaction
argument_list|()
init|)
block|{
name|deployment
operator|.
name|installAndDeploy
argument_list|(
name|broker
argument_list|,
name|transaction
argument_list|,
name|xar
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|transaction
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
block|}
class|class
name|TestRestoreListener
implements|implements
name|RestoreListener
block|{
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|info
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|started
parameter_list|(
name|long
name|numberOfFiles
parameter_list|)
block|{
comment|// unused
block|}
annotation|@
name|Override
specifier|public
name|void
name|processingDescriptor
parameter_list|(
name|String
name|backupDescriptor
parameter_list|)
block|{
comment|// unused
block|}
annotation|@
name|Override
specifier|public
name|void
name|createdCollection
parameter_list|(
name|String
name|collection
parameter_list|)
block|{
comment|// unused
block|}
annotation|@
name|Override
specifier|public
name|void
name|restoredResource
parameter_list|(
name|String
name|resource
parameter_list|)
block|{
comment|// unused
block|}
annotation|@
name|Override
specifier|public
name|void
name|info
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|info
operator|.
name|add
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|warn
parameter_list|(
name|String
name|message
parameter_list|)
block|{
comment|// unused
block|}
annotation|@
name|Override
specifier|public
name|void
name|error
parameter_list|(
name|String
name|message
parameter_list|)
block|{
comment|// unused
block|}
annotation|@
name|Override
specifier|public
name|void
name|finished
parameter_list|()
block|{
comment|// unused
block|}
block|}
block|}
end_class

end_unit

