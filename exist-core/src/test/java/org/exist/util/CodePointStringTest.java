begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2019 Evolved Binary Ltd  *  * This file was ported from FusionDB and relicensed by Evolved Binary  * for use in eXist-db under The 3-Clause BSD License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|CodePointStringTest
block|{
comment|/**      * Equivalent to&#110000;      */
specifier|private
specifier|final
specifier|static
name|String
name|UNDEFINED_110000
init|=
name|String
operator|.
name|valueOf
argument_list|(
name|Character
operator|.
name|toChars
argument_list|(
literal|110000
argument_list|)
argument_list|)
decl_stmt|;
comment|/**      * Equivalent to&#110001;      */
specifier|private
specifier|final
specifier|static
name|String
name|UNDEFINED_110001
init|=
name|String
operator|.
name|valueOf
argument_list|(
name|Character
operator|.
name|toChars
argument_list|(
literal|110001
argument_list|)
argument_list|)
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|roundtrip
parameter_list|()
block|{
name|String
name|str
init|=
literal|"abcdef"
decl_stmt|;
name|CodePointString
name|cps
init|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|str
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|str
operator|=
name|UNDEFINED_110000
operator|+
name|UNDEFINED_110001
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|str
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|str
operator|=
literal|"a"
operator|+
name|UNDEFINED_110001
operator|+
literal|"a"
operator|+
name|UNDEFINED_110000
operator|+
literal|"a"
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|str
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|replaceFirst
parameter_list|()
block|{
name|String
name|str
init|=
literal|"abc"
decl_stmt|;
name|CodePointString
name|cps
init|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"zbc"
argument_list|,
name|cps
operator|.
name|replaceFirst
argument_list|(
literal|'a'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"azc"
argument_list|,
name|cps
operator|.
name|replaceFirst
argument_list|(
literal|'b'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"abz"
argument_list|,
name|cps
operator|.
name|replaceFirst
argument_list|(
literal|'c'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|str
operator|=
literal|"aac"
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"zac"
argument_list|,
name|cps
operator|.
name|replaceFirst
argument_list|(
literal|'a'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aaz"
argument_list|,
name|cps
operator|.
name|replaceFirst
argument_list|(
literal|'c'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|str
operator|=
literal|"acc"
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"zcc"
argument_list|,
name|cps
operator|.
name|replaceFirst
argument_list|(
literal|'a'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"azc"
argument_list|,
name|cps
operator|.
name|replaceFirst
argument_list|(
literal|'c'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|str
operator|=
literal|"a"
operator|+
name|UNDEFINED_110001
operator|+
literal|"a"
operator|+
name|UNDEFINED_110000
operator|+
literal|"a"
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"z"
operator|+
name|UNDEFINED_110001
operator|+
literal|"a"
operator|+
name|UNDEFINED_110000
operator|+
literal|"a"
argument_list|,
name|cps
operator|.
name|replaceFirst
argument_list|(
literal|'a'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aza"
operator|+
name|UNDEFINED_110000
operator|+
literal|"a"
argument_list|,
name|cps
operator|.
name|replaceFirst
argument_list|(
name|UNDEFINED_110001
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|str
operator|=
literal|"a"
operator|+
name|UNDEFINED_110001
operator|+
literal|"z"
operator|+
name|UNDEFINED_110001
operator|+
literal|"a"
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"azz"
operator|+
name|UNDEFINED_110001
operator|+
literal|"a"
argument_list|,
name|cps
operator|.
name|replaceFirst
argument_list|(
name|UNDEFINED_110001
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|replaceAll
parameter_list|()
block|{
name|String
name|str
init|=
literal|"abc"
decl_stmt|;
name|CodePointString
name|cps
init|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"zbc"
argument_list|,
name|cps
operator|.
name|replaceAll
argument_list|(
literal|'a'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"azc"
argument_list|,
name|cps
operator|.
name|replaceAll
argument_list|(
literal|'b'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"abz"
argument_list|,
name|cps
operator|.
name|replaceAll
argument_list|(
literal|'c'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|str
operator|=
literal|"aac"
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"zzc"
argument_list|,
name|cps
operator|.
name|replaceAll
argument_list|(
literal|'a'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aaz"
argument_list|,
name|cps
operator|.
name|replaceAll
argument_list|(
literal|'c'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|str
operator|=
literal|"acc"
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"zcc"
argument_list|,
name|cps
operator|.
name|replaceAll
argument_list|(
literal|'a'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"azz"
argument_list|,
name|cps
operator|.
name|replaceAll
argument_list|(
literal|'c'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|str
operator|=
literal|"aabbcc"
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"zzbbcc"
argument_list|,
name|cps
operator|.
name|replaceAll
argument_list|(
literal|'a'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aazzcc"
argument_list|,
name|cps
operator|.
name|replaceAll
argument_list|(
literal|'b'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aabbzz"
argument_list|,
name|cps
operator|.
name|replaceAll
argument_list|(
literal|'c'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|str
operator|=
literal|"ababcac"
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"zbzbczc"
argument_list|,
name|cps
operator|.
name|replaceAll
argument_list|(
literal|'a'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"azazcac"
argument_list|,
name|cps
operator|.
name|replaceAll
argument_list|(
literal|'b'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ababzaz"
argument_list|,
name|cps
operator|.
name|replaceAll
argument_list|(
literal|'c'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|str
operator|=
literal|"a"
operator|+
name|UNDEFINED_110001
operator|+
literal|"a"
operator|+
name|UNDEFINED_110000
operator|+
literal|"a"
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"z"
operator|+
name|UNDEFINED_110001
operator|+
literal|"z"
operator|+
name|UNDEFINED_110000
operator|+
literal|"z"
argument_list|,
name|cps
operator|.
name|replaceAll
argument_list|(
literal|'a'
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aza"
operator|+
name|UNDEFINED_110000
operator|+
literal|"a"
argument_list|,
name|cps
operator|.
name|replaceAll
argument_list|(
name|UNDEFINED_110001
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|str
operator|=
literal|"a"
operator|+
name|UNDEFINED_110001
operator|+
literal|"z"
operator|+
name|UNDEFINED_110001
operator|+
literal|"a"
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"azzza"
argument_list|,
name|cps
operator|.
name|replaceAll
argument_list|(
name|UNDEFINED_110001
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|str
operator|=
literal|"a"
operator|+
name|UNDEFINED_110001
operator|+
literal|"a"
operator|+
name|UNDEFINED_110001
operator|+
literal|"a"
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"azaza"
argument_list|,
name|cps
operator|.
name|replaceAll
argument_list|(
name|UNDEFINED_110001
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|str
operator|=
name|UNDEFINED_110001
operator|+
name|UNDEFINED_110001
operator|+
literal|"a"
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"zza"
argument_list|,
name|cps
operator|.
name|replaceAll
argument_list|(
name|UNDEFINED_110001
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|str
operator|=
literal|"a"
operator|+
name|UNDEFINED_110001
operator|+
name|UNDEFINED_110001
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"azz"
argument_list|,
name|cps
operator|.
name|replaceAll
argument_list|(
name|UNDEFINED_110001
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|str
operator|=
literal|"a"
operator|+
name|UNDEFINED_110001
operator|+
name|UNDEFINED_110001
operator|+
literal|"a"
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"azza"
argument_list|,
name|cps
operator|.
name|replaceAll
argument_list|(
name|UNDEFINED_110001
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|'z'
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|indexOf
parameter_list|()
block|{
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
operator|new
name|CodePointString
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"a"
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
operator|new
name|CodePointString
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"z"
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
operator|new
name|CodePointString
argument_list|(
literal|"abcdefghijklmnopqrstuvwxy0123456789"
argument_list|)
operator|.
name|indexOf
argument_list|(
literal|"z"
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
operator|new
name|CodePointString
argument_list|(
literal|"abcdefghijklmnopqrstuvwxyz0123456789"
argument_list|)
operator|.
name|indexOf
argument_list|(
literal|"a"
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
operator|new
name|CodePointString
argument_list|(
literal|"abcdefghijklmnopqrstuvwxyz0123456789"
argument_list|)
operator|.
name|indexOf
argument_list|(
literal|"b"
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|25
argument_list|,
operator|new
name|CodePointString
argument_list|(
literal|"abcdefghijklmnopqrstuvwxyz0123456789"
argument_list|)
operator|.
name|indexOf
argument_list|(
literal|"z"
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|26
argument_list|,
operator|new
name|CodePointString
argument_list|(
literal|"abcdefghijklmnopqrstuvwxyz0123456789"
argument_list|)
operator|.
name|indexOf
argument_list|(
literal|"0"
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|34
argument_list|,
operator|new
name|CodePointString
argument_list|(
literal|"abcdefghijklmnopqrstuvwxyz0123456789"
argument_list|)
operator|.
name|indexOf
argument_list|(
literal|"8"
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|35
argument_list|,
operator|new
name|CodePointString
argument_list|(
literal|"abcdefghijklmnopqrstuvwxyz0123456789"
argument_list|)
operator|.
name|indexOf
argument_list|(
literal|"9"
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|append
parameter_list|()
block|{
name|CodePointString
name|cps
init|=
operator|new
name|CodePointString
argument_list|()
operator|.
name|append
argument_list|(
literal|"a"
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|,
name|cps
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|()
operator|.
name|append
argument_list|(
literal|'a'
argument_list|)
operator|.
name|append
argument_list|(
literal|'b'
argument_list|)
operator|.
name|append
argument_list|(
literal|'c'
argument_list|)
operator|.
name|append
argument_list|(
literal|'d'
argument_list|)
operator|.
name|append
argument_list|(
literal|'e'
argument_list|)
operator|.
name|append
argument_list|(
literal|'f'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"abcdef"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|append
argument_list|(
name|UNDEFINED_110000
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|append
argument_list|(
name|UNDEFINED_110001
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"abcdef"
operator|+
name|UNDEFINED_110000
operator|+
name|UNDEFINED_110001
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|append
argument_list|(
name|UNDEFINED_110000
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|append
argument_list|(
name|UNDEFINED_110001
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"abcdef"
operator|+
name|UNDEFINED_110000
operator|+
name|UNDEFINED_110001
operator|+
name|UNDEFINED_110000
operator|+
name|UNDEFINED_110001
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|appendCodePointString
parameter_list|()
block|{
name|CodePointString
name|cps
init|=
operator|new
name|CodePointString
argument_list|()
operator|.
name|append
argument_list|(
operator|new
name|CodePointString
argument_list|(
literal|"a"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|,
name|cps
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|()
operator|.
name|append
argument_list|(
operator|new
name|CodePointString
argument_list|(
literal|"abc"
argument_list|)
argument_list|)
operator|.
name|append
argument_list|(
operator|new
name|CodePointString
argument_list|(
literal|"def"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"abcdef"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|append
argument_list|(
operator|new
name|CodePointString
argument_list|(
name|UNDEFINED_110000
argument_list|)
argument_list|)
operator|.
name|append
argument_list|(
operator|new
name|CodePointString
argument_list|(
name|UNDEFINED_110001
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"abcdef"
operator|+
name|UNDEFINED_110000
operator|+
name|UNDEFINED_110001
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|append
argument_list|(
operator|new
name|CodePointString
argument_list|(
name|UNDEFINED_110000
operator|+
name|UNDEFINED_110001
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"abcdef"
operator|+
name|UNDEFINED_110000
operator|+
name|UNDEFINED_110001
operator|+
name|UNDEFINED_110000
operator|+
name|UNDEFINED_110001
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|ltrim
parameter_list|()
block|{
name|CodePointString
name|cps
init|=
operator|new
name|CodePointString
argument_list|(
literal|""
argument_list|)
decl_stmt|;
name|cps
operator|=
name|cps
operator|.
name|leftTrim
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"0001"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|leftTrim
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"1000"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|leftTrim
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1000"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"0100"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|leftTrim
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"100"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"0010"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|leftTrim
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"10"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"0001"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|leftTrim
argument_list|(
literal|'1'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"0001"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"1000"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|leftTrim
argument_list|(
literal|'1'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"000"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"0100"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|leftTrim
argument_list|(
literal|'1'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"0100"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"0010"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|leftTrim
argument_list|(
literal|'1'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"0010"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|rtrim
parameter_list|()
block|{
name|CodePointString
name|cps
init|=
operator|new
name|CodePointString
argument_list|(
literal|""
argument_list|)
decl_stmt|;
name|cps
operator|=
name|cps
operator|.
name|rightTrim
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"0001"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|rightTrim
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"0001"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"1000"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|rightTrim
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"0100"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|rightTrim
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"01"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"0010"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|rightTrim
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"001"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"0001"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|rightTrim
argument_list|(
literal|'1'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"000"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"1000"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|rightTrim
argument_list|(
literal|'1'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1000"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"0100"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|rightTrim
argument_list|(
literal|'1'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"0100"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"0010"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|rightTrim
argument_list|(
literal|'1'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"0010"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|transform
parameter_list|()
block|{
name|CodePointString
name|cps
init|=
operator|new
name|CodePointString
argument_list|(
literal|"abcdef"
argument_list|)
decl_stmt|;
name|cps
operator|=
name|cps
operator|.
name|transform
argument_list|(
literal|'b'
argument_list|,
literal|'e'
argument_list|,
literal|'0'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a0123f"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"012345"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|transform
argument_list|(
literal|'1'
argument_list|,
literal|'4'
argument_list|,
literal|'a'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"0abcd5"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abcdef"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|transform
argument_list|(
literal|'c'
argument_list|,
literal|'e'
argument_list|,
literal|'a'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ababcf"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|String
name|undefined_110002
init|=
name|String
operator|.
name|valueOf
argument_list|(
name|Character
operator|.
name|toChars
argument_list|(
name|UNDEFINED_110001
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
operator|+
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abcdef"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|transform
argument_list|(
literal|'c'
argument_list|,
literal|'e'
argument_list|,
name|UNDEFINED_110000
operator|.
name|codePointAt
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ab"
operator|+
name|UNDEFINED_110000
operator|+
name|UNDEFINED_110001
operator|+
name|undefined_110002
operator|+
literal|"f"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|leftPad
parameter_list|()
block|{
name|CodePointString
name|cps
init|=
operator|new
name|CodePointString
argument_list|()
decl_stmt|;
name|cps
operator|=
name|cps
operator|.
name|leftPad
argument_list|(
literal|'a'
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|()
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|leftPad
argument_list|(
literal|'a'
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aaaaaa"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"123"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|leftPad
argument_list|(
literal|'0'
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"123"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"123"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|leftPad
argument_list|(
literal|'0'
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"000123"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|rightPad
parameter_list|()
block|{
name|CodePointString
name|cps
init|=
operator|new
name|CodePointString
argument_list|()
decl_stmt|;
name|cps
operator|=
name|cps
operator|.
name|rightPad
argument_list|(
literal|'a'
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|()
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|rightPad
argument_list|(
literal|'a'
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aaaaaa"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"123"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|rightPad
argument_list|(
literal|'0'
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"123"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"123"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|rightPad
argument_list|(
literal|'0'
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"123000"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|insert
parameter_list|()
block|{
name|CodePointString
name|cps
init|=
operator|new
name|CodePointString
argument_list|()
decl_stmt|;
name|cps
operator|=
name|cps
operator|.
name|insert
argument_list|(
literal|0
argument_list|,
literal|'a'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abc"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|insert
argument_list|(
literal|0
argument_list|,
literal|'z'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"zabc"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abc"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|insert
argument_list|(
literal|3
argument_list|,
literal|'z'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"abcz"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abc"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|insert
argument_list|(
literal|1
argument_list|,
literal|'z'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"azbc"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abc"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|insert
argument_list|(
literal|2
argument_list|,
literal|'z'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"abzc"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abc"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|insert
argument_list|(
operator|-
literal|1
argument_list|,
literal|'z'
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Expected IndexOutOfBoundsException as offset< 0"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IndexOutOfBoundsException
name|e
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abc"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|insert
argument_list|(
literal|4
argument_list|,
literal|'z'
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Expected IndexOutOfBoundsException as offset> cps.length"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IndexOutOfBoundsException
name|e
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|insertMulti
parameter_list|()
block|{
name|CodePointString
name|cps
init|=
operator|new
name|CodePointString
argument_list|()
decl_stmt|;
name|cps
operator|=
name|cps
operator|.
name|insert
argument_list|(
operator|new
name|int
index|[
literal|0
index|]
argument_list|,
literal|'a'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|()
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|insert
argument_list|(
operator|new
name|int
index|[]
block|{
literal|0
block|}
argument_list|,
literal|'a'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abc"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|insert
argument_list|(
operator|new
name|int
index|[]
block|{
literal|0
block|}
argument_list|,
literal|'z'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"zabc"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abc"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|insert
argument_list|(
operator|new
name|int
index|[]
block|{
literal|3
block|}
argument_list|,
literal|'z'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"abcz"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abc"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|insert
argument_list|(
operator|new
name|int
index|[]
block|{
literal|1
block|}
argument_list|,
literal|'z'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"azbc"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abc"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|insert
argument_list|(
operator|new
name|int
index|[]
block|{
literal|2
block|}
argument_list|,
literal|'z'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"abzc"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abc"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|insert
argument_list|(
operator|new
name|int
index|[]
block|{
operator|-
literal|1
block|}
argument_list|,
literal|'z'
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Expected IndexOutOfBoundsException as offset< 0"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IndexOutOfBoundsException
name|e
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abc"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|insert
argument_list|(
operator|new
name|int
index|[]
block|{
literal|2
block|,
operator|-
literal|1
block|,
literal|1
block|}
argument_list|,
literal|'z'
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Expected IndexOutOfBoundsException as offset< 0"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IndexOutOfBoundsException
name|e
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abc"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|insert
argument_list|(
operator|new
name|int
index|[]
block|{
literal|4
block|}
argument_list|,
literal|'z'
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Expected IndexOutOfBoundsException as offset> cps.length"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IndexOutOfBoundsException
name|e
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abc"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|insert
argument_list|(
operator|new
name|int
index|[]
block|{
literal|1
block|,
literal|4
block|,
literal|2
block|}
argument_list|,
literal|'z'
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Expected IndexOutOfBoundsException as offset> cps.length"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IndexOutOfBoundsException
name|e
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abc"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|insert
argument_list|(
operator|new
name|int
index|[]
block|{
literal|0
block|,
literal|1
block|}
argument_list|,
literal|'z'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"zazbc"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abc"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|insert
argument_list|(
operator|new
name|int
index|[]
block|{
literal|0
block|,
literal|1
block|,
literal|2
block|}
argument_list|,
literal|'z'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"zazbzc"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abc"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|insert
argument_list|(
operator|new
name|int
index|[]
block|{
literal|0
block|,
literal|0
block|}
argument_list|,
literal|'z'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"zzabc"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|removeFirst
parameter_list|()
block|{
name|CodePointString
name|cps
init|=
operator|new
name|CodePointString
argument_list|()
decl_stmt|;
name|cps
operator|=
name|cps
operator|.
name|removeFirst
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"0"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|removeFirst
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abcdef"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|removeFirst
argument_list|(
literal|'a'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bcdef"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abcdef"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|removeFirst
argument_list|(
literal|'f'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"abcde"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"abcdef"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|removeFirst
argument_list|(
literal|'c'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"abdef"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"aaa"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|removeFirst
argument_list|(
literal|'a'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aa"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|cps
operator|=
operator|new
name|CodePointString
argument_list|(
literal|"aaabbb"
argument_list|)
expr_stmt|;
name|cps
operator|=
name|cps
operator|.
name|removeFirst
argument_list|(
literal|'b'
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|cps
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aaabb"
argument_list|,
name|cps
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

