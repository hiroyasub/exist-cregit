begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2020 The eXist Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public  * License along with this library; if not, write to the Free Software  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|functions
operator|.
name|transform
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|repo
operator|.
name|AutoDeploymentTrigger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|test
operator|.
name|ExistXmldbEmbeddedServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|ResourceSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:adam@evolvedbinary.com">Adam Retter</a>  */
end_comment

begin_class
specifier|public
class|class
name|TransformFromPkgTest
block|{
annotation|@
name|Rule
specifier|public
name|ExistXmldbEmbeddedServer
name|existXmldbEmbeddedServer
init|=
operator|new
name|ExistXmldbEmbeddedServer
argument_list|(
literal|true
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|String
name|PREV_AUTODEPLOY_DIRECTORY
init|=
literal|null
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setup
parameter_list|()
throws|throws
name|URISyntaxException
block|{
specifier|final
name|URL
name|functxPkgUrl
init|=
name|TransformFromPkgTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"/functx/functx-1.0.1.xar"
argument_list|)
decl_stmt|;
specifier|final
name|Path
name|functxDir
init|=
name|Paths
operator|.
name|get
argument_list|(
name|functxPkgUrl
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|PREV_AUTODEPLOY_DIRECTORY
operator|=
name|System
operator|.
name|getProperty
argument_list|(
name|AutoDeploymentTrigger
operator|.
name|AUTODEPLOY_DIRECTORY_PROPERTY
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
name|AutoDeploymentTrigger
operator|.
name|AUTODEPLOY_DIRECTORY_PROPERTY
argument_list|,
name|functxDir
operator|.
name|getParent
argument_list|()
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|cleanup
parameter_list|()
block|{
if|if
condition|(
name|PREV_AUTODEPLOY_DIRECTORY
operator|!=
literal|null
operator|&&
operator|!
name|PREV_AUTODEPLOY_DIRECTORY
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|System
operator|.
name|setProperty
argument_list|(
name|AutoDeploymentTrigger
operator|.
name|AUTODEPLOY_DIRECTORY_PROPERTY
argument_list|,
name|PREV_AUTODEPLOY_DIRECTORY
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|transformWithModuleFromPkg
parameter_list|()
throws|throws
name|XMLDBException
block|{
specifier|final
name|String
name|xslt
init|=
literal|"<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n"
operator|+
literal|"    xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n"
operator|+
literal|"    xmlns:functx=\"http://www.functx.com\"\n"
operator|+
literal|"    exclude-result-prefixes=\"xs\"\n"
operator|+
literal|"    version=\"2.0\">\n"
operator|+
literal|"    \n"
operator|+
literal|"<xsl:import href=\"http://www.functx.com/functx.xsl\"/>\n"
operator|+
literal|"    \n"
operator|+
literal|"<xsl:template match=\"/\">\n"
operator|+
literal|"<xsl:value-of select=\"functx:replace-first('hello', 'he', 'ho')\"/>\n"
operator|+
literal|"</xsl:template>\n"
operator|+
literal|"    \n"
operator|+
literal|"</xsl:stylesheet>"
decl_stmt|;
specifier|final
name|String
name|xml
init|=
literal|"<x>bonjourno</x>"
decl_stmt|;
specifier|final
name|String
name|xquery
init|=
literal|"transform:transform("
operator|+
name|xml
operator|+
literal|", "
operator|+
name|xslt
operator|+
literal|", ())"
decl_stmt|;
specifier|final
name|ResourceSet
name|result
init|=
name|existXmldbEmbeddedServer
operator|.
name|executeQuery
argument_list|(
name|xquery
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|result
operator|.
name|getSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

