begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|functions
operator|.
name|response
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertArrayEquals
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLEncoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|codec
operator|.
name|binary
operator|.
name|Base64
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|HttpStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|fluent
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|http
operator|.
name|RESTTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|io
operator|.
name|FastByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Tests expected behaviour of response:stream-binary() XQuery function  *   * @author<a href="mailto:adam@exist-db.org">Adam Retter</a>  * @version 1.0  */
end_comment

begin_class
specifier|public
class|class
name|StreamBinaryTest
extends|extends
name|RESTTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testStreamBinary
parameter_list|()
throws|throws
name|IOException
block|{
specifier|final
name|String
name|testValue
init|=
literal|"hello world"
decl_stmt|;
specifier|final
name|String
name|xquery
init|=
literal|"response:stream-binary(xs:base64Binary('"
operator|+
name|Base64
operator|.
name|encodeBase64String
argument_list|(
name|testValue
operator|.
name|getBytes
argument_list|()
argument_list|)
operator|+
literal|"'), 'application/octet-stream', 'test.bin')"
decl_stmt|;
specifier|final
name|Request
name|get
init|=
name|Request
operator|.
name|Get
argument_list|(
name|getCollectionRootUri
argument_list|()
operator|+
literal|"?_query="
operator|+
name|URLEncoder
operator|.
name|encode
argument_list|(
name|xquery
argument_list|,
literal|"UTF-8"
argument_list|)
operator|+
literal|"&_indent=no"
argument_list|)
decl_stmt|;
specifier|final
name|HttpResponse
name|response
init|=
name|get
operator|.
name|execute
argument_list|()
operator|.
name|returnResponse
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|HttpStatus
operator|.
name|SC_OK
argument_list|,
name|response
operator|.
name|getStatusLine
argument_list|()
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
try|try
init|(
specifier|final
name|FastByteArrayOutputStream
name|os
init|=
operator|new
name|FastByteArrayOutputStream
argument_list|()
init|)
block|{
name|response
operator|.
name|getEntity
argument_list|()
operator|.
name|writeTo
argument_list|(
name|os
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|testValue
operator|.
name|getBytes
argument_list|()
argument_list|,
name|os
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

