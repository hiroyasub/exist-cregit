begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2008-2010 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|backup
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|EXistException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|PermissionDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|BrokerPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|Txn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|MimeTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|MimeType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|SystemExitCodes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|TerminatedException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|filechooser
operator|.
name|FileFilter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
operator|.
name|UTF_8
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|ThreadUtils
operator|.
name|newGlobalThread
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|ThreadUtils
operator|.
name|newInstanceThread
import|;
end_import

begin_comment
comment|/**  * DOCUMENT ME!  *  * @author wolf  */
end_comment

begin_class
specifier|public
class|class
name|ExportGUI
extends|extends
name|javax
operator|.
name|swing
operator|.
name|JFrame
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|8104424554660744639L
decl_stmt|;
specifier|private
name|BrokerPool
name|pool
init|=
literal|null
decl_stmt|;
specifier|private
name|int
name|documentCount
init|=
literal|0
decl_stmt|;
specifier|private
name|PrintWriter
name|logWriter
init|=
literal|null
decl_stmt|;
comment|// Variables declaration - do not modify//GEN-BEGIN:variables
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JButton
name|btnChangeDir
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JButton
name|btnConfSelect
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JLabel
name|currentTask
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JTextField
name|dbConfig
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JButton
name|exportBtn
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JCheckBox
name|zipBtn
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JCheckBox
name|incrementalBtn
decl_stmt|;
specifier|private
name|JCheckBox
name|directAccessBtn
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JCheckBox
name|scanBtn
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JLabel
name|jLabel1
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JLabel
name|jLabel2
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JMenu
name|jMenu1
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JMenuBar
name|jMenuBar1
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
name|jScrollPane2
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JToolBar
name|jToolBar1
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JMenuItem
name|menuQuit
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JTextArea
name|messages
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JTextField
name|outputDir
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JProgressBar
name|progress
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JButton
name|startBtn
decl_stmt|;
comment|// End of variables declaration//GEN-END:variables
comment|/**      * Creates new form CheckerGUI.      */
specifier|public
name|ExportGUI
parameter_list|()
block|{
name|super
argument_list|(
literal|"Consistency Check and Repair"
argument_list|)
expr_stmt|;
name|initComponents
argument_list|()
expr_stmt|;
specifier|final
name|String
name|existHome
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"exist.home"
argument_list|,
literal|"./"
argument_list|)
decl_stmt|;
specifier|final
name|Path
name|home
init|=
name|Paths
operator|.
name|get
argument_list|(
name|existHome
argument_list|)
operator|.
name|normalize
argument_list|()
decl_stmt|;
name|dbConfig
operator|.
name|setText
argument_list|(
name|Optional
operator|.
name|ofNullable
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"exist.configurationFile"
argument_list|)
argument_list|)
operator|.
name|map
argument_list|(
name|Paths
operator|::
name|get
argument_list|)
operator|.
name|orElse
argument_list|(
name|home
operator|.
name|resolve
argument_list|(
literal|"etc"
argument_list|)
operator|.
name|resolve
argument_list|(
literal|"conf.xml"
argument_list|)
argument_list|)
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|outputDir
operator|.
name|setText
argument_list|(
name|home
operator|.
name|resolve
argument_list|(
literal|"export"
argument_list|)
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|boolean
name|checkOutputDir
parameter_list|()
block|{
specifier|final
name|Path
name|dir
init|=
name|Paths
operator|.
name|get
argument_list|(
name|outputDir
operator|.
name|getText
argument_list|()
argument_list|)
operator|.
name|normalize
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|Files
operator|.
name|exists
argument_list|(
name|dir
argument_list|)
condition|)
block|{
if|if
condition|(
name|JOptionPane
operator|.
name|showConfirmDialog
argument_list|(
name|this
argument_list|,
literal|"The output directory "
operator|+
name|dir
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|" does not exist. Create it?"
argument_list|,
literal|"Confirm"
argument_list|,
name|JOptionPane
operator|.
name|YES_NO_OPTION
argument_list|)
operator|==
name|JOptionPane
operator|.
name|YES_OPTION
condition|)
block|{
try|try
block|{
name|Files
operator|.
name|createDirectories
argument_list|(
name|dir
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IOException
name|e
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
literal|"Could not create output dir: "
operator|+
name|dir
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
literal|"Configuration Error"
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"ERROR: Failed to create output dir: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|protected
name|boolean
name|startDB
parameter_list|()
block|{
if|if
condition|(
name|pool
operator|!=
literal|null
condition|)
block|{
return|return
literal|true
return|;
block|}
specifier|final
name|Path
name|confFile
init|=
name|Paths
operator|.
name|get
argument_list|(
name|dbConfig
operator|.
name|getText
argument_list|()
argument_list|)
operator|.
name|normalize
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|Files
operator|.
name|exists
argument_list|(
name|confFile
argument_list|)
operator|&&
name|Files
operator|.
name|isReadable
argument_list|(
name|confFile
argument_list|)
operator|)
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
literal|"The selected database configuration file "
operator|+
name|confFile
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|" does not exist or is not readable."
argument_list|,
literal|"Configuration Error"
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
try|try
block|{
specifier|final
name|Configuration
name|config
init|=
operator|new
name|Configuration
argument_list|(
name|confFile
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|Optional
operator|.
name|empty
argument_list|()
argument_list|)
decl_stmt|;
name|BrokerPool
operator|.
name|configure
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|pool
operator|=
name|BrokerPool
operator|.
name|getInstance
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
catch|catch
parameter_list|(
specifier|final
name|Exception
name|e
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
literal|"Could not start the database instance. Please remember\n"
operator|+
literal|"that this tool tries to launch an embedded db instance. No other db instance should\n"
operator|+
literal|"be running on the same data."
argument_list|,
literal|"DB Error"
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"ERROR: Failed to open database: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
literal|false
return|;
block|}
comment|/**      * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is      * always regenerated by the Form Editor.      */
comment|//<editor-fold defaultstate="collapsed" desc="Generated
comment|// Code">//GEN-BEGIN:initComponents
specifier|private
name|void
name|initComponents
parameter_list|()
block|{
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
name|gridBagConstraints
decl_stmt|;
name|currentTask
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JLabel
argument_list|()
expr_stmt|;
name|progress
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JProgressBar
argument_list|()
expr_stmt|;
name|jScrollPane2
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
argument_list|()
expr_stmt|;
name|messages
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JTextArea
argument_list|()
expr_stmt|;
name|jToolBar1
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JToolBar
argument_list|()
expr_stmt|;
name|startBtn
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JButton
argument_list|()
expr_stmt|;
name|exportBtn
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JButton
argument_list|()
expr_stmt|;
name|incrementalBtn
operator|=
operator|new
name|JCheckBox
argument_list|(
literal|"Incremental"
argument_list|)
expr_stmt|;
name|scanBtn
operator|=
operator|new
name|JCheckBox
argument_list|(
literal|"Scan docs"
argument_list|)
expr_stmt|;
name|directAccessBtn
operator|=
operator|new
name|JCheckBox
argument_list|(
literal|"Direct access"
argument_list|)
expr_stmt|;
name|zipBtn
operator|=
operator|new
name|JCheckBox
argument_list|(
literal|"Create ZIP"
argument_list|)
expr_stmt|;
name|zipBtn
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|outputDir
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JTextField
argument_list|()
expr_stmt|;
name|jLabel1
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JLabel
argument_list|()
expr_stmt|;
name|btnChangeDir
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JButton
argument_list|()
expr_stmt|;
name|dbConfig
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JTextField
argument_list|()
expr_stmt|;
name|jLabel2
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JLabel
argument_list|()
expr_stmt|;
name|btnConfSelect
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JButton
argument_list|()
expr_stmt|;
name|jMenuBar1
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JMenuBar
argument_list|()
expr_stmt|;
name|jMenu1
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JMenu
argument_list|()
expr_stmt|;
name|menuQuit
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JMenuItem
argument_list|()
expr_stmt|;
name|setDefaultCloseOperation
argument_list|(
name|javax
operator|.
name|swing
operator|.
name|WindowConstants
operator|.
name|EXIT_ON_CLOSE
argument_list|)
expr_stmt|;
name|addWindowListener
argument_list|(
operator|new
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowAdapter
argument_list|()
block|{
specifier|public
name|void
name|windowClosed
parameter_list|(
specifier|final
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowEvent
name|evt
parameter_list|)
block|{
name|formWindowClosed
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|setLayout
argument_list|(
operator|new
name|java
operator|.
name|awt
operator|.
name|GridBagLayout
argument_list|()
argument_list|)
expr_stmt|;
name|currentTask
operator|.
name|setText
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
name|currentTask
operator|.
name|setMinimumSize
argument_list|(
operator|new
name|java
operator|.
name|awt
operator|.
name|Dimension
argument_list|(
literal|0
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|gridBagConstraints
operator|=
operator|new
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
argument_list|()
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridy
operator|=
literal|3
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridwidth
operator|=
literal|3
expr_stmt|;
name|gridBagConstraints
operator|.
name|fill
operator|=
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
operator|.
name|HORIZONTAL
expr_stmt|;
name|gridBagConstraints
operator|.
name|anchor
operator|=
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
operator|.
name|NORTH
expr_stmt|;
name|gridBagConstraints
operator|.
name|weightx
operator|=
literal|1.0
expr_stmt|;
name|gridBagConstraints
operator|.
name|insets
operator|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Insets
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|currentTask
argument_list|,
name|gridBagConstraints
argument_list|)
expr_stmt|;
name|gridBagConstraints
operator|=
operator|new
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
argument_list|()
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridy
operator|=
literal|4
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridwidth
operator|=
literal|3
expr_stmt|;
name|gridBagConstraints
operator|.
name|fill
operator|=
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
operator|.
name|HORIZONTAL
expr_stmt|;
name|gridBagConstraints
operator|.
name|anchor
operator|=
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
operator|.
name|NORTH
expr_stmt|;
name|gridBagConstraints
operator|.
name|weightx
operator|=
literal|1.0
expr_stmt|;
name|gridBagConstraints
operator|.
name|insets
operator|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Insets
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|progress
argument_list|,
name|gridBagConstraints
argument_list|)
expr_stmt|;
name|jScrollPane2
operator|.
name|setBorder
argument_list|(
name|javax
operator|.
name|swing
operator|.
name|BorderFactory
operator|.
name|createTitledBorder
argument_list|(
literal|"Messages"
argument_list|)
argument_list|)
expr_stmt|;
name|jScrollPane2
operator|.
name|setPreferredSize
argument_list|(
operator|new
name|java
operator|.
name|awt
operator|.
name|Dimension
argument_list|(
literal|400
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
name|messages
operator|.
name|setColumns
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|messages
operator|.
name|setLineWrap
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|messages
operator|.
name|setRows
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|messages
operator|.
name|setBorder
argument_list|(
name|javax
operator|.
name|swing
operator|.
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|jScrollPane2
operator|.
name|setViewportView
argument_list|(
name|messages
argument_list|)
expr_stmt|;
name|gridBagConstraints
operator|=
operator|new
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
argument_list|()
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridy
operator|=
literal|5
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridwidth
operator|=
literal|3
expr_stmt|;
name|gridBagConstraints
operator|.
name|fill
operator|=
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
operator|.
name|BOTH
expr_stmt|;
name|gridBagConstraints
operator|.
name|anchor
operator|=
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
operator|.
name|SOUTHWEST
expr_stmt|;
name|gridBagConstraints
operator|.
name|weightx
operator|=
literal|1.0
expr_stmt|;
name|gridBagConstraints
operator|.
name|weighty
operator|=
literal|1.0
expr_stmt|;
name|gridBagConstraints
operator|.
name|insets
operator|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Insets
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|jScrollPane2
argument_list|,
name|gridBagConstraints
argument_list|)
expr_stmt|;
name|jToolBar1
operator|.
name|setRollover
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|startBtn
operator|.
name|setText
argument_list|(
literal|"Check"
argument_list|)
expr_stmt|;
name|startBtn
operator|.
name|setFocusable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|startBtn
operator|.
name|setHorizontalTextPosition
argument_list|(
name|javax
operator|.
name|swing
operator|.
name|SwingConstants
operator|.
name|CENTER
argument_list|)
expr_stmt|;
name|startBtn
operator|.
name|setVerticalTextPosition
argument_list|(
name|javax
operator|.
name|swing
operator|.
name|SwingConstants
operator|.
name|BOTTOM
argument_list|)
expr_stmt|;
name|startBtn
operator|.
name|addActionListener
argument_list|(
name|this
operator|::
name|startBtncheck
argument_list|)
expr_stmt|;
name|jToolBar1
operator|.
name|add
argument_list|(
name|startBtn
argument_list|)
expr_stmt|;
name|exportBtn
operator|.
name|setText
argument_list|(
literal|"Check& Export"
argument_list|)
expr_stmt|;
name|exportBtn
operator|.
name|setFocusable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|exportBtn
operator|.
name|setHorizontalTextPosition
argument_list|(
name|javax
operator|.
name|swing
operator|.
name|SwingConstants
operator|.
name|CENTER
argument_list|)
expr_stmt|;
name|exportBtn
operator|.
name|setVerticalTextPosition
argument_list|(
name|javax
operator|.
name|swing
operator|.
name|SwingConstants
operator|.
name|BOTTOM
argument_list|)
expr_stmt|;
name|exportBtn
operator|.
name|addActionListener
argument_list|(
name|this
operator|::
name|exportBtnActionPerformed
argument_list|)
expr_stmt|;
name|jToolBar1
operator|.
name|add
argument_list|(
name|exportBtn
argument_list|)
expr_stmt|;
name|jToolBar1
operator|.
name|add
argument_list|(
name|incrementalBtn
argument_list|)
expr_stmt|;
name|scanBtn
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|scanBtn
operator|.
name|setToolTipText
argument_list|(
literal|"Perform additional checks; scans every XML document"
argument_list|)
expr_stmt|;
name|jToolBar1
operator|.
name|add
argument_list|(
name|scanBtn
argument_list|)
expr_stmt|;
name|directAccessBtn
operator|.
name|setToolTipText
argument_list|(
literal|"Bypass collection index by scanning collection store"
argument_list|)
expr_stmt|;
name|jToolBar1
operator|.
name|add
argument_list|(
name|directAccessBtn
argument_list|)
expr_stmt|;
name|jToolBar1
operator|.
name|add
argument_list|(
name|zipBtn
argument_list|)
expr_stmt|;
name|gridBagConstraints
operator|=
operator|new
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
argument_list|()
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridwidth
operator|=
literal|3
expr_stmt|;
name|gridBagConstraints
operator|.
name|fill
operator|=
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
operator|.
name|HORIZONTAL
expr_stmt|;
name|gridBagConstraints
operator|.
name|weightx
operator|=
literal|1.0
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|jToolBar1
argument_list|,
name|gridBagConstraints
argument_list|)
expr_stmt|;
name|gridBagConstraints
operator|=
operator|new
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
argument_list|()
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridx
operator|=
literal|1
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridy
operator|=
literal|2
expr_stmt|;
name|gridBagConstraints
operator|.
name|fill
operator|=
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
operator|.
name|HORIZONTAL
expr_stmt|;
name|gridBagConstraints
operator|.
name|weightx
operator|=
literal|1.0
expr_stmt|;
name|gridBagConstraints
operator|.
name|insets
operator|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Insets
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|outputDir
argument_list|,
name|gridBagConstraints
argument_list|)
expr_stmt|;
name|jLabel1
operator|.
name|setText
argument_list|(
literal|"Output Directory:"
argument_list|)
expr_stmt|;
name|gridBagConstraints
operator|=
operator|new
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
argument_list|()
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridy
operator|=
literal|2
expr_stmt|;
name|gridBagConstraints
operator|.
name|anchor
operator|=
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|gridBagConstraints
operator|.
name|insets
operator|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Insets
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|jLabel1
argument_list|,
name|gridBagConstraints
argument_list|)
expr_stmt|;
name|btnChangeDir
operator|.
name|setText
argument_list|(
literal|"Change"
argument_list|)
expr_stmt|;
name|btnChangeDir
operator|.
name|addActionListener
argument_list|(
name|this
operator|::
name|btnChangeDirActionPerformed
argument_list|)
expr_stmt|;
name|gridBagConstraints
operator|=
operator|new
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
argument_list|()
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridx
operator|=
literal|2
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridy
operator|=
literal|2
expr_stmt|;
name|gridBagConstraints
operator|.
name|anchor
operator|=
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
operator|.
name|EAST
expr_stmt|;
name|gridBagConstraints
operator|.
name|insets
operator|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Insets
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|btnChangeDir
argument_list|,
name|gridBagConstraints
argument_list|)
expr_stmt|;
name|gridBagConstraints
operator|=
operator|new
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
argument_list|()
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridx
operator|=
literal|1
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridy
operator|=
literal|1
expr_stmt|;
name|gridBagConstraints
operator|.
name|fill
operator|=
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
operator|.
name|HORIZONTAL
expr_stmt|;
name|gridBagConstraints
operator|.
name|weightx
operator|=
literal|1.0
expr_stmt|;
name|gridBagConstraints
operator|.
name|insets
operator|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Insets
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|dbConfig
argument_list|,
name|gridBagConstraints
argument_list|)
expr_stmt|;
name|jLabel2
operator|.
name|setText
argument_list|(
literal|"DB Configuration:"
argument_list|)
expr_stmt|;
name|gridBagConstraints
operator|=
operator|new
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
argument_list|()
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridy
operator|=
literal|1
expr_stmt|;
name|gridBagConstraints
operator|.
name|anchor
operator|=
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|gridBagConstraints
operator|.
name|insets
operator|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Insets
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|jLabel2
argument_list|,
name|gridBagConstraints
argument_list|)
expr_stmt|;
name|btnConfSelect
operator|.
name|setText
argument_list|(
literal|"Select"
argument_list|)
expr_stmt|;
name|btnConfSelect
operator|.
name|setMaximumSize
argument_list|(
operator|new
name|java
operator|.
name|awt
operator|.
name|Dimension
argument_list|(
literal|75
argument_list|,
literal|24
argument_list|)
argument_list|)
expr_stmt|;
name|btnConfSelect
operator|.
name|setMinimumSize
argument_list|(
operator|new
name|java
operator|.
name|awt
operator|.
name|Dimension
argument_list|(
literal|75
argument_list|,
literal|24
argument_list|)
argument_list|)
expr_stmt|;
name|btnConfSelect
operator|.
name|setPreferredSize
argument_list|(
operator|new
name|java
operator|.
name|awt
operator|.
name|Dimension
argument_list|(
literal|75
argument_list|,
literal|24
argument_list|)
argument_list|)
expr_stmt|;
name|btnConfSelect
operator|.
name|addActionListener
argument_list|(
name|this
operator|::
name|btnConfSelectActionPerformed
argument_list|)
expr_stmt|;
name|gridBagConstraints
operator|=
operator|new
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
argument_list|()
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridx
operator|=
literal|2
expr_stmt|;
name|gridBagConstraints
operator|.
name|gridy
operator|=
literal|1
expr_stmt|;
name|gridBagConstraints
operator|.
name|anchor
operator|=
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
operator|.
name|EAST
expr_stmt|;
name|gridBagConstraints
operator|.
name|insets
operator|=
operator|new
name|java
operator|.
name|awt
operator|.
name|Insets
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|btnConfSelect
argument_list|,
name|gridBagConstraints
argument_list|)
expr_stmt|;
name|jMenu1
operator|.
name|setText
argument_list|(
literal|"File"
argument_list|)
expr_stmt|;
name|menuQuit
operator|.
name|setAccelerator
argument_list|(
name|javax
operator|.
name|swing
operator|.
name|KeyStroke
operator|.
name|getKeyStroke
argument_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|KeyEvent
operator|.
name|VK_Q
argument_list|,
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|InputEvent
operator|.
name|CTRL_MASK
argument_list|)
argument_list|)
expr_stmt|;
name|menuQuit
operator|.
name|setText
argument_list|(
literal|"Quit"
argument_list|)
expr_stmt|;
name|menuQuit
operator|.
name|addActionListener
argument_list|(
name|this
operator|::
name|menuQuitActionPerformed
argument_list|)
expr_stmt|;
name|jMenu1
operator|.
name|add
argument_list|(
name|menuQuit
argument_list|)
expr_stmt|;
name|jMenuBar1
operator|.
name|add
argument_list|(
name|jMenu1
argument_list|)
expr_stmt|;
name|setJMenuBar
argument_list|(
name|jMenuBar1
argument_list|)
expr_stmt|;
name|pack
argument_list|()
expr_stmt|;
block|}
comment|//</editor-fold>//GEN-END:initComponents
specifier|private
name|void
name|formWindowClosed
parameter_list|(
specifier|final
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowEvent
name|evt
parameter_list|)
block|{
comment|// GEN-FIRST:event_formWindowClosed
name|BrokerPool
operator|.
name|stopAll
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
comment|// GEN-LAST:event_formWindowClosed
specifier|private
name|void
name|startBtncheck
parameter_list|(
specifier|final
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
comment|// GEN-FIRST:event_startBtncheck
if|if
condition|(
operator|!
name|checkOutputDir
argument_list|()
condition|)
block|{
return|return;
block|}
specifier|final
name|Runnable
name|checkRun
init|=
parameter_list|()
lambda|->
block|{
name|openLog
argument_list|(
name|outputDir
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|checkDB
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|closeLog
argument_list|()
expr_stmt|;
block|}
block|}
decl_stmt|;
if|if
condition|(
name|pool
operator|!=
literal|null
condition|)
block|{
name|newInstanceThread
argument_list|(
name|pool
argument_list|,
literal|"export-gui.check-run"
argument_list|,
name|checkRun
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|newGlobalThread
argument_list|(
literal|"export-gui.check-run"
argument_list|,
name|checkRun
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
comment|// GEN-LAST:event_startBtncheck
specifier|private
name|void
name|exportBtnActionPerformed
parameter_list|(
specifier|final
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
comment|// GEN-FIRST:event_exportBtnActionPerformed
if|if
condition|(
operator|!
name|checkOutputDir
argument_list|()
condition|)
block|{
return|return;
block|}
specifier|final
name|Runnable
name|th
init|=
parameter_list|()
lambda|->
block|{
name|openLog
argument_list|(
name|outputDir
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|currentTask
operator|.
name|setText
argument_list|(
literal|"Checking database consistency ..."
argument_list|)
expr_stmt|;
specifier|final
name|List
argument_list|<
name|ErrorReport
argument_list|>
name|errors
init|=
name|checkDB
argument_list|()
decl_stmt|;
name|currentTask
operator|.
name|setText
argument_list|(
literal|"Exporting data ..."
argument_list|)
expr_stmt|;
name|exportDB
argument_list|(
name|outputDir
operator|.
name|getText
argument_list|()
argument_list|,
name|errors
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|closeLog
argument_list|()
expr_stmt|;
block|}
block|}
decl_stmt|;
if|if
condition|(
name|pool
operator|!=
literal|null
condition|)
block|{
name|newInstanceThread
argument_list|(
name|pool
argument_list|,
literal|"export-gui.export"
argument_list|,
name|th
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|newGlobalThread
argument_list|(
literal|"export-gui.export"
argument_list|,
name|th
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
comment|// GEN-LAST:event_exportBtnActionPerformed
specifier|private
name|void
name|btnChangeDirActionPerformed
parameter_list|(
specifier|final
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
comment|// GEN-FIRST:event_btnChangeDirActionPerformed
specifier|final
name|Path
name|dir
init|=
name|Paths
operator|.
name|get
argument_list|(
name|outputDir
operator|.
name|getText
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|JFileChooser
name|chooser
init|=
operator|new
name|JFileChooser
argument_list|()
decl_stmt|;
name|chooser
operator|.
name|setMultiSelectionEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setFileSelectionMode
argument_list|(
name|JFileChooser
operator|.
name|DIRECTORIES_ONLY
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setSelectedFile
argument_list|(
name|dir
operator|.
name|resolve
argument_list|(
literal|"export"
argument_list|)
operator|.
name|toFile
argument_list|()
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setCurrentDirectory
argument_list|(
name|dir
operator|.
name|toFile
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|chooser
operator|.
name|showDialog
argument_list|(
name|this
argument_list|,
literal|"Export"
argument_list|)
operator|==
name|JFileChooser
operator|.
name|APPROVE_OPTION
condition|)
block|{
name|outputDir
operator|.
name|setText
argument_list|(
name|chooser
operator|.
name|getSelectedFile
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|// GEN-LAST:event_btnChangeDirActionPerformed
specifier|private
name|void
name|menuQuitActionPerformed
parameter_list|(
specifier|final
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
comment|// GEN-FIRST:event_menuQuitActionPerformed
name|BrokerPool
operator|.
name|stopAll
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
name|SystemExitCodes
operator|.
name|OK_EXIT_CODE
argument_list|)
expr_stmt|;
block|}
comment|// GEN-LAST:event_menuQuitActionPerformed
specifier|private
name|void
name|btnConfSelectActionPerformed
parameter_list|(
specifier|final
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
comment|// GEN-FIRST:event_btnConfSelectActionPerformed
specifier|final
name|Path
name|dir
init|=
name|Paths
operator|.
name|get
argument_list|(
name|dbConfig
operator|.
name|getText
argument_list|()
argument_list|)
operator|.
name|normalize
argument_list|()
operator|.
name|getParent
argument_list|()
decl_stmt|;
specifier|final
name|JFileChooser
name|chooser
init|=
operator|new
name|JFileChooser
argument_list|()
decl_stmt|;
name|chooser
operator|.
name|setMultiSelectionEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setFileSelectionMode
argument_list|(
name|JFileChooser
operator|.
name|FILES_ONLY
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setSelectedFile
argument_list|(
name|Optional
operator|.
name|ofNullable
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"exist.configurationFile"
argument_list|)
argument_list|)
operator|.
name|map
argument_list|(
name|Paths
operator|::
name|get
argument_list|)
operator|.
name|orElse
argument_list|(
name|dir
operator|.
name|resolve
argument_list|(
literal|"etc"
argument_list|)
operator|.
name|resolve
argument_list|(
literal|"conf.xml"
argument_list|)
argument_list|)
operator|.
name|toFile
argument_list|()
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setCurrentDirectory
argument_list|(
name|dir
operator|.
name|resolve
argument_list|(
literal|"etc"
argument_list|)
operator|.
name|toFile
argument_list|()
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setFileFilter
argument_list|(
operator|new
name|FileFilter
argument_list|()
block|{
specifier|public
name|boolean
name|accept
parameter_list|(
specifier|final
name|File
name|f
parameter_list|)
block|{
if|if
condition|(
name|f
operator|.
name|isDirectory
argument_list|()
condition|)
block|{
return|return
operator|(
literal|true
operator|)
return|;
block|}
specifier|final
name|MimeType
name|mime
init|=
name|MimeTable
operator|.
name|getInstance
argument_list|()
operator|.
name|getContentTypeFor
argument_list|(
name|f
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|mime
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
name|mime
operator|.
name|isXMLType
argument_list|()
return|;
block|}
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
operator|(
literal|"Database XML configuration file"
operator|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|chooser
operator|.
name|showDialog
argument_list|(
name|this
argument_list|,
literal|"Select"
argument_list|)
operator|==
name|JFileChooser
operator|.
name|APPROVE_OPTION
condition|)
block|{
name|dbConfig
operator|.
name|setText
argument_list|(
name|chooser
operator|.
name|getSelectedFile
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|// GEN-LAST:event_btnConfSelectActionPerformed
specifier|private
name|void
name|exportDB
parameter_list|(
specifier|final
name|String
name|exportTarget
parameter_list|,
specifier|final
name|List
argument_list|<
name|ErrorReport
argument_list|>
name|errorList
parameter_list|)
block|{
if|if
condition|(
operator|!
name|startDB
argument_list|()
condition|)
block|{
return|return;
block|}
try|try
block|{
specifier|final
name|SystemExport
operator|.
name|StatusCallback
name|callback
init|=
operator|new
name|SystemExport
operator|.
name|StatusCallback
argument_list|()
block|{
specifier|public
name|void
name|startCollection
parameter_list|(
specifier|final
name|String
name|path
parameter_list|)
block|{
name|progress
operator|.
name|setString
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|startDocument
parameter_list|(
specifier|final
name|String
name|name
parameter_list|,
specifier|final
name|int
name|current
parameter_list|,
specifier|final
name|int
name|count
parameter_list|)
block|{
name|progress
operator|.
name|setString
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|progress
operator|.
name|setValue
argument_list|(
name|progress
operator|.
name|getValue
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|error
parameter_list|(
specifier|final
name|String
name|message
parameter_list|,
specifier|final
name|Throwable
name|exception
parameter_list|)
block|{
name|displayMessage
argument_list|(
name|message
argument_list|)
expr_stmt|;
if|if
condition|(
name|exception
operator|!=
literal|null
condition|)
block|{
name|displayMessage
argument_list|(
name|exception
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|displayMessage
argument_list|(
literal|"---------------------------------------------------"
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|progress
operator|.
name|setIndeterminate
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|progress
operator|.
name|setValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|progress
operator|.
name|setStringPainted
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|progress
operator|.
name|setMinimum
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|progress
operator|.
name|setMaximum
argument_list|(
name|documentCount
argument_list|)
expr_stmt|;
name|Object
index|[]
name|selected
init|=
name|directAccessBtn
operator|.
name|getSelectedObjects
argument_list|()
decl_stmt|;
specifier|final
name|boolean
name|directAccess
init|=
operator|(
name|selected
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|selected
index|[
literal|0
index|]
operator|!=
literal|null
operator|)
decl_stmt|;
name|selected
operator|=
name|incrementalBtn
operator|.
name|getSelectedObjects
argument_list|()
expr_stmt|;
specifier|final
name|boolean
name|incremental
init|=
operator|(
name|selected
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|selected
index|[
literal|0
index|]
operator|!=
literal|null
operator|)
decl_stmt|;
name|selected
operator|=
name|zipBtn
operator|.
name|getSelectedObjects
argument_list|()
expr_stmt|;
specifier|final
name|boolean
name|zip
init|=
operator|(
name|selected
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|selected
index|[
literal|0
index|]
operator|!=
literal|null
operator|)
decl_stmt|;
name|displayMessage
argument_list|(
literal|"Starting export ..."
argument_list|)
expr_stmt|;
specifier|final
name|long
name|start
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
try|try
init|(
specifier|final
name|DBBroker
name|broker
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
argument_list|)
argument_list|)
init|;
specifier|final
name|Txn
name|transaction
init|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
operator|.
name|beginTransaction
argument_list|()
init|)
block|{
specifier|final
name|SystemExport
name|sysexport
init|=
operator|new
name|SystemExport
argument_list|(
name|broker
argument_list|,
name|transaction
argument_list|,
name|callback
argument_list|,
literal|null
argument_list|,
name|directAccess
argument_list|)
decl_stmt|;
specifier|final
name|Path
name|file
init|=
name|sysexport
operator|.
name|export
argument_list|(
name|exportTarget
argument_list|,
name|incremental
argument_list|,
name|zip
argument_list|,
name|errorList
argument_list|)
decl_stmt|;
name|transaction
operator|.
name|commit
argument_list|()
expr_stmt|;
specifier|final
name|long
name|end
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|displayMessage
argument_list|(
literal|"Export to "
operator|+
name|file
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|" completed successfully."
argument_list|)
expr_stmt|;
name|displayMessage
argument_list|(
literal|"Export took "
operator|+
operator|(
name|end
operator|-
name|start
operator|)
operator|+
literal|"ms."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|EXistException
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"ERROR: Failed to retrieve database broker: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|progress
operator|.
name|setString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|progress
operator|.
name|setValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|currentTask
operator|.
name|setText
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|List
argument_list|<
name|ErrorReport
argument_list|>
name|checkDB
parameter_list|()
block|{
if|if
condition|(
operator|!
name|startDB
argument_list|()
condition|)
block|{
return|return
operator|(
literal|null
operator|)
return|;
block|}
try|try
init|(
specifier|final
name|DBBroker
name|broker
init|=
name|pool
operator|.
name|get
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
argument_list|)
argument_list|)
init|;
specifier|final
name|Txn
name|transaction
init|=
name|pool
operator|.
name|getTransactionManager
argument_list|()
operator|.
name|beginTransaction
argument_list|()
init|)
block|{
name|Object
index|[]
name|selected
init|=
name|directAccessBtn
operator|.
name|getSelectedObjects
argument_list|()
decl_stmt|;
specifier|final
name|boolean
name|directAccess
init|=
operator|(
name|selected
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|selected
index|[
literal|0
index|]
operator|!=
literal|null
operator|)
decl_stmt|;
name|selected
operator|=
name|scanBtn
operator|.
name|getSelectedObjects
argument_list|()
expr_stmt|;
specifier|final
name|boolean
name|scan
init|=
operator|(
name|selected
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|selected
index|[
literal|0
index|]
operator|!=
literal|null
operator|)
decl_stmt|;
specifier|final
name|ConsistencyCheck
name|checker
init|=
operator|new
name|ConsistencyCheck
argument_list|(
name|broker
argument_list|,
name|transaction
argument_list|,
name|directAccess
argument_list|,
name|scan
argument_list|)
decl_stmt|;
specifier|final
name|org
operator|.
name|exist
operator|.
name|backup
operator|.
name|ConsistencyCheck
operator|.
name|ProgressCallback
name|cb
init|=
operator|new
name|ConsistencyCheck
operator|.
name|ProgressCallback
argument_list|()
block|{
specifier|public
name|void
name|startDocument
parameter_list|(
specifier|final
name|String
name|path
parameter_list|,
specifier|final
name|int
name|current
parameter_list|,
specifier|final
name|int
name|count
parameter_list|)
block|{
name|progress
operator|.
name|setString
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|progress
operator|.
name|setValue
argument_list|(
name|progress
operator|.
name|getValue
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|error
parameter_list|(
specifier|final
name|ErrorReport
name|error
parameter_list|)
block|{
name|displayMessage
argument_list|(
name|error
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|displayMessage
argument_list|(
literal|"---------------------------------------------------"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|startCollection
parameter_list|(
specifier|final
name|String
name|path
parameter_list|)
block|{
name|progress
operator|.
name|setString
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|progress
operator|.
name|setIndeterminate
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|messages
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|displayMessage
argument_list|(
literal|"Checking collections ..."
argument_list|)
expr_stmt|;
specifier|final
name|List
argument_list|<
name|ErrorReport
argument_list|>
name|errors
init|=
name|checker
operator|.
name|checkCollectionTree
argument_list|(
name|cb
argument_list|)
decl_stmt|;
if|if
condition|(
name|errors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|displayMessage
argument_list|(
literal|"No errors found."
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|displayMessage
argument_list|(
literal|"Errors found."
argument_list|)
expr_stmt|;
block|}
name|progress
operator|.
name|setStringPainted
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|progress
operator|.
name|setString
argument_list|(
literal|"Counting documents ..."
argument_list|)
expr_stmt|;
name|documentCount
operator|=
name|checker
operator|.
name|getDocumentCount
argument_list|()
expr_stmt|;
name|progress
operator|.
name|setIndeterminate
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|progress
operator|.
name|setValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|progress
operator|.
name|setMinimum
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|progress
operator|.
name|setMaximum
argument_list|(
name|documentCount
argument_list|)
expr_stmt|;
name|displayMessage
argument_list|(
literal|"Checking documents ..."
argument_list|)
expr_stmt|;
name|checker
operator|.
name|checkDocuments
argument_list|(
name|cb
argument_list|,
name|errors
argument_list|)
expr_stmt|;
if|if
condition|(
name|errors
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|displayMessage
argument_list|(
literal|"No errors found."
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|displayMessage
argument_list|(
literal|"Errors found."
argument_list|)
expr_stmt|;
block|}
name|progress
operator|.
name|setString
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|transaction
operator|.
name|commit
argument_list|()
expr_stmt|;
return|return
name|errors
return|;
block|}
catch|catch
parameter_list|(
specifier|final
name|EXistException
decl||
name|PermissionDeniedException
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"ERROR: Failed to retrieve database broker: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|TerminatedException
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"WARN: Check terminated by db."
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|progress
operator|.
name|setValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|currentTask
operator|.
name|setText
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
block|}
return|return
operator|(
literal|null
operator|)
return|;
block|}
specifier|public
name|void
name|displayMessage
parameter_list|(
specifier|final
name|String
name|message
parameter_list|)
block|{
name|messages
operator|.
name|append
argument_list|(
name|message
operator|+
literal|'\n'
argument_list|)
expr_stmt|;
name|messages
operator|.
name|setCaretPosition
argument_list|(
name|messages
operator|.
name|getDocument
argument_list|()
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|logWriter
operator|!=
literal|null
condition|)
block|{
name|logWriter
operator|.
name|println
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|openLog
parameter_list|(
specifier|final
name|String
name|dir
parameter_list|)
block|{
specifier|final
name|Path
name|file
init|=
name|SystemExport
operator|.
name|getUniqueFile
argument_list|(
literal|"report"
argument_list|,
literal|".log"
argument_list|,
name|dir
argument_list|)
decl_stmt|;
try|try
block|{
name|logWriter
operator|=
operator|new
name|PrintWriter
argument_list|(
name|Files
operator|.
name|newBufferedWriter
argument_list|(
name|file
argument_list|,
name|UTF_8
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IOException
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"ERROR: failed to create log file"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|closeLog
parameter_list|()
block|{
if|if
condition|(
name|logWriter
operator|!=
literal|null
condition|)
block|{
name|logWriter
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**      * DOCUMENT ME!      *      * @param args the command line arguments      */
specifier|public
specifier|static
name|void
name|main
parameter_list|(
specifier|final
name|String
index|[]
name|args
parameter_list|)
block|{
name|java
operator|.
name|awt
operator|.
name|EventQueue
operator|.
name|invokeLater
argument_list|(
parameter_list|()
lambda|->
operator|new
name|ExportGUI
argument_list|()
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

