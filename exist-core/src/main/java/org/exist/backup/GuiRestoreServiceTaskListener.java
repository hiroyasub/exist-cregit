begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2019 The eXist Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public  * License along with this library; if not, write to the Free Software  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|backup
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|AbstractRestoreServiceTaskListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:adam@exist-db.org">Adam Retter</a>  */
end_comment

begin_class
specifier|public
class|class
name|GuiRestoreServiceTaskListener
extends|extends
name|AbstractRestoreServiceTaskListener
block|{
specifier|private
specifier|final
name|RestoreDialog
name|dialog
decl_stmt|;
specifier|private
name|StringBuilder
name|allProblems
init|=
literal|null
decl_stmt|;
specifier|public
name|GuiRestoreServiceTaskListener
parameter_list|()
block|{
name|this
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|GuiRestoreServiceTaskListener
parameter_list|(
annotation|@
name|Nullable
specifier|final
name|JFrame
name|parent
parameter_list|)
block|{
name|this
operator|.
name|dialog
operator|=
operator|new
name|RestoreDialog
argument_list|(
name|parent
argument_list|,
literal|"Restoring data ..."
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|this
operator|.
name|dialog
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|started
parameter_list|(
specifier|final
name|long
name|numberOfFiles
parameter_list|)
block|{
name|dialog
operator|.
name|setTotalNumberOfFiles
argument_list|(
name|numberOfFiles
argument_list|)
expr_stmt|;
name|super
operator|.
name|started
argument_list|(
name|numberOfFiles
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|info
parameter_list|(
specifier|final
name|String
name|message
parameter_list|)
block|{
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
parameter_list|()
lambda|->
name|dialog
operator|.
name|displayMessage
argument_list|(
name|message
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|warn
parameter_list|(
specifier|final
name|String
name|message
parameter_list|)
block|{
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
parameter_list|()
lambda|->
name|dialog
operator|.
name|displayMessage
argument_list|(
name|message
argument_list|)
argument_list|)
expr_stmt|;
name|addProblem
argument_list|(
literal|true
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|error
parameter_list|(
specifier|final
name|String
name|message
parameter_list|)
block|{
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
parameter_list|()
lambda|->
name|dialog
operator|.
name|displayMessage
argument_list|(
name|message
argument_list|)
argument_list|)
expr_stmt|;
name|addProblem
argument_list|(
literal|false
argument_list|,
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|createdCollection
parameter_list|(
specifier|final
name|String
name|collection
parameter_list|)
block|{
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
parameter_list|()
lambda|->
name|dialog
operator|.
name|setCollection
argument_list|(
name|collection
argument_list|)
argument_list|)
expr_stmt|;
name|super
operator|.
name|createdCollection
argument_list|(
name|collection
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|restoredResource
parameter_list|(
specifier|final
name|String
name|resource
parameter_list|)
block|{
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
parameter_list|()
lambda|->
name|dialog
operator|.
name|setResource
argument_list|(
name|resource
argument_list|)
argument_list|)
expr_stmt|;
name|super
operator|.
name|restoredResource
argument_list|(
name|resource
argument_list|)
expr_stmt|;
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
name|dialog
operator|::
name|incrementFileCounter
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|processingDescriptor
parameter_list|(
specifier|final
name|String
name|backupDescriptor
parameter_list|)
block|{
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
parameter_list|()
lambda|->
name|dialog
operator|.
name|setBackup
argument_list|(
name|backupDescriptor
argument_list|)
argument_list|)
expr_stmt|;
name|super
operator|.
name|processingDescriptor
argument_list|(
name|backupDescriptor
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|hideDialog
parameter_list|()
block|{
name|dialog
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasProblems
parameter_list|()
block|{
return|return
name|allProblems
operator|!=
literal|null
operator|&&
name|allProblems
operator|.
name|length
argument_list|()
operator|>
literal|0
return|;
block|}
specifier|public
name|String
name|getAllProblems
parameter_list|()
block|{
return|return
name|allProblems
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|private
name|void
name|addProblem
parameter_list|(
specifier|final
name|boolean
name|warning
parameter_list|,
specifier|final
name|String
name|message
parameter_list|)
block|{
specifier|final
name|String
name|sep
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"line.separator"
argument_list|)
decl_stmt|;
if|if
condition|(
name|allProblems
operator|==
literal|null
condition|)
block|{
name|allProblems
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
name|allProblems
operator|.
name|append
argument_list|(
literal|"------------------------------------"
argument_list|)
operator|.
name|append
argument_list|(
name|sep
argument_list|)
expr_stmt|;
name|allProblems
operator|.
name|append
argument_list|(
literal|"Problems occurred found during restore:"
argument_list|)
operator|.
name|append
argument_list|(
name|sep
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|warning
condition|)
block|{
name|allProblems
operator|.
name|append
argument_list|(
literal|"WARN: "
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|allProblems
operator|.
name|append
argument_list|(
literal|"ERROR: "
argument_list|)
expr_stmt|;
block|}
name|allProblems
operator|.
name|append
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|allProblems
operator|.
name|append
argument_list|(
name|sep
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

