begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2020 The eXist-dh Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public License  * along with this program; if not, write to the Free Software Foundation  * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|backup
package|;
end_package

begin_import
import|import
name|net
operator|.
name|jcip
operator|.
name|annotations
operator|.
name|NotThreadSafe
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|Namespaces
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|ExistSAXParserFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|XMLReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|helpers
operator|.
name|DefaultHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|ParserConfigurationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|SAXParser
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|SAXParserFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:adam@evolvedbinary.com">Adam Retter</a>  */
end_comment

begin_class
annotation|@
name|NotThreadSafe
specifier|public
class|class
name|DescriptorResourceCounter
block|{
specifier|private
specifier|final
specifier|static
name|SAXParserFactory
name|saxFactory
init|=
name|ExistSAXParserFactory
operator|.
name|getSAXParserFactory
argument_list|()
decl_stmt|;
static|static
block|{
name|saxFactory
operator|.
name|setNamespaceAware
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|final
name|XMLReader
name|xmlReader
decl_stmt|;
specifier|private
specifier|final
name|CounterHandler
name|counterHandler
decl_stmt|;
specifier|public
name|DescriptorResourceCounter
parameter_list|()
throws|throws
name|ParserConfigurationException
throws|,
name|SAXException
block|{
specifier|final
name|SAXParser
name|saxParser
init|=
name|saxFactory
operator|.
name|newSAXParser
argument_list|()
decl_stmt|;
name|this
operator|.
name|xmlReader
operator|=
name|saxParser
operator|.
name|getXMLReader
argument_list|()
expr_stmt|;
name|this
operator|.
name|counterHandler
operator|=
operator|new
name|CounterHandler
argument_list|()
expr_stmt|;
name|xmlReader
operator|.
name|setContentHandler
argument_list|(
name|counterHandler
argument_list|)
expr_stmt|;
block|}
specifier|public
name|long
name|count
parameter_list|(
specifier|final
name|InputStream
name|descriptorInputStream
parameter_list|)
throws|throws
name|IOException
throws|,
name|SAXException
block|{
name|xmlReader
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
name|descriptorInputStream
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|long
name|numberOfFiles
init|=
name|counterHandler
operator|.
name|numberOfFiles
decl_stmt|;
comment|// reset
name|counterHandler
operator|.
name|numberOfFiles
operator|=
literal|0
expr_stmt|;
return|return
name|numberOfFiles
return|;
block|}
specifier|private
specifier|static
class|class
name|CounterHandler
extends|extends
name|DefaultHandler
block|{
name|long
name|numberOfFiles
init|=
literal|0
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|startElement
parameter_list|(
specifier|final
name|String
name|uri
parameter_list|,
specifier|final
name|String
name|localName
parameter_list|,
specifier|final
name|String
name|qName
parameter_list|,
specifier|final
name|Attributes
name|attributes
parameter_list|)
throws|throws
name|SAXException
block|{
if|if
condition|(
name|Namespaces
operator|.
name|EXIST_NS
operator|.
name|equals
argument_list|(
name|uri
argument_list|)
operator|&&
literal|"resource"
operator|.
name|equals
argument_list|(
name|localName
argument_list|)
condition|)
block|{
name|numberOfFiles
operator|++
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

