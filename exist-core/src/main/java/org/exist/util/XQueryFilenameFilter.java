begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2018 The eXist Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public  * License along with this library; if not, write to the Free Software  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FilenameFilter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Predicate
import|;
end_import

begin_class
specifier|public
class|class
name|XQueryFilenameFilter
implements|implements
name|FilenameFilter
block|{
specifier|public
specifier|static
specifier|final
name|String
name|MEDIA_TYPE_APPLICATION_XQUERY
init|=
literal|"application/xquery"
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|accept
parameter_list|(
specifier|final
name|File
name|dir
parameter_list|,
specifier|final
name|String
name|name
parameter_list|)
block|{
specifier|final
name|MimeTable
name|mimetab
init|=
name|MimeTable
operator|.
name|getInstance
argument_list|()
decl_stmt|;
specifier|final
name|MimeType
name|mime
init|=
name|mimetab
operator|.
name|getContentTypeFor
argument_list|(
name|name
argument_list|)
decl_stmt|;
return|return
name|mime
operator|!=
literal|null
operator|&&
operator|!
name|mime
operator|.
name|isXMLType
argument_list|()
operator|&&
name|mime
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|MEDIA_TYPE_APPLICATION_XQUERY
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Predicate
argument_list|<
name|Path
argument_list|>
name|asPredicate
parameter_list|()
block|{
specifier|final
name|MimeTable
name|mimetab
init|=
name|MimeTable
operator|.
name|getInstance
argument_list|()
decl_stmt|;
return|return
name|path
lambda|->
block|{
if|if
condition|(
operator|!
name|Files
operator|.
name|isDirectory
argument_list|(
name|path
argument_list|)
condition|)
block|{
specifier|final
name|MimeType
name|mime
init|=
name|mimetab
operator|.
name|getContentTypeFor
argument_list|(
name|FileUtils
operator|.
name|fileName
argument_list|(
name|path
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|mime
operator|!=
literal|null
operator|&&
operator|!
name|mime
operator|.
name|isXMLType
argument_list|()
operator|&&
name|mime
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|MEDIA_TYPE_APPLICATION_XQUERY
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
return|;
block|}
block|}
end_class

end_unit

