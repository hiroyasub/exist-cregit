begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2018 The eXist Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public  * License along with this library; if not, write to the Free Software  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|MessageDigest
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|NoSuchAlgorithmException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|uuid
operator|.
name|Generators
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|uuid
operator|.
name|impl
operator|.
name|NameBasedGenerator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|uuid
operator|.
name|impl
operator|.
name|RandomBasedGenerator
import|;
end_import

begin_comment
comment|/**  *  UUID generator.  *  * {@see http://en.wikipedia.org/wiki/UUID}  *  * @author Adam Retter<adam@evolvedbinary.com>  * @author Dannes Wessels  */
end_comment

begin_class
specifier|public
class|class
name|UUIDGenerator
block|{
specifier|private
specifier|final
specifier|static
name|UUID
name|EXISTDB_UUID_NAMESPACE
init|=
name|UUID
operator|.
name|fromString
argument_list|(
literal|"a99c2b03-67c4-49fb-b812-aa4c12099e65"
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|RandomBasedGenerator
name|UUIDv4_GENERATOR
init|=
name|Generators
operator|.
name|randomBasedGenerator
argument_list|()
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|NameBasedGenerator
name|UUIDv3_GENERATOR
decl_stmt|;
static|static
block|{
try|try
block|{
name|UUIDv3_GENERATOR
operator|=
name|Generators
operator|.
name|nameBasedGenerator
argument_list|(
name|EXISTDB_UUID_NAMESPACE
argument_list|,
name|MessageDigest
operator|.
name|getInstance
argument_list|(
literal|"MD5"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|NoSuchAlgorithmException
name|e
parameter_list|)
block|{
comment|// NOTE: very very unlikely, MD5 is widely supported in various JDKs
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
comment|/**      *  Generate random UUID code.      *      * @return UUID code, formatted as f271ec43-bf1f-4030-a269-b11576538f71      */
specifier|public
specifier|static
name|String
name|getUUID
parameter_list|()
block|{
return|return
name|getUUIDversion4
argument_list|()
return|;
block|}
comment|/**      * Generate a version 4 UUID.      * {@see http://en.wikipedia.org/wiki/Universally_Unique_Identifier#Version_4_.28random.29}      *      * @return a Version 4 UUID      */
specifier|public
specifier|static
name|String
name|getUUIDversion4
parameter_list|()
block|{
return|return
name|UUIDv4_GENERATOR
operator|.
name|generate
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**      * Generate a version 3 UUID code.      * {@see http://en.wikipedia.org/wiki/Universally_Unique_Identifier#Version_3_.28MD5_hash.29}      *      * @param name the name to generate a UUID for.      *      * @return a Version 3 UUID      */
specifier|public
specifier|static
name|String
name|getUUIDversion3
parameter_list|(
specifier|final
name|String
name|name
parameter_list|)
block|{
return|return
name|UUIDv3_GENERATOR
operator|.
name|generate
argument_list|(
name|name
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

