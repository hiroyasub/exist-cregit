begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2015 The eXist Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public License  * along with this program; if not, write to the Free Software Foundation  * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xmldb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|CollectionManagementService
import|;
end_import

begin_comment
comment|/**  * Extends the {@link org.xmldb.api.modules.CollectionManagementService}  * interface with extensions specific to eXist, in particular moving and copying  * collections and resources.  *  * @author wolf  */
end_comment

begin_interface
specifier|public
interface|interface
name|EXistCollectionManagementService
extends|extends
name|CollectionManagementService
block|{
comment|/**      * Move a Collection.      *      * @param collection the source collection.      * @param destination the destination collection.      * @param newName the new name in the destination collection.      *      * @deprecated Use XmldbURI version instead.      *      * @throws XMLDBException if an error occurs when moving the collection.      */
annotation|@
name|Deprecated
name|void
name|move
parameter_list|(
name|String
name|collection
parameter_list|,
name|String
name|destination
parameter_list|,
name|String
name|newName
parameter_list|)
throws|throws
name|XMLDBException
function_decl|;
comment|/**      * Move a Resource.      *      * @param resourcePath the source resource.      * @param destinationPath the destination collection.      * @param newName the new name in the destination collection.      *      * @deprecated Use XmldbURI version instead.      *      * @throws XMLDBException if an error occurs when moving the resource.      */
annotation|@
name|Deprecated
name|void
name|moveResource
parameter_list|(
name|String
name|resourcePath
parameter_list|,
name|String
name|destinationPath
parameter_list|,
name|String
name|newName
parameter_list|)
throws|throws
name|XMLDBException
function_decl|;
comment|/**      * Copy a Resource.      *      * @param resourcePath the source resource.      * @param destinationPath the destination collection.      * @param newName the new name in the destination collection.      *      * @deprecated Use XmldbURI version instead.      *      * @throws XMLDBException if an error occurs when copying the resource.      */
annotation|@
name|Deprecated
name|void
name|copyResource
parameter_list|(
name|String
name|resourcePath
parameter_list|,
name|String
name|destinationPath
parameter_list|,
name|String
name|newName
parameter_list|)
throws|throws
name|XMLDBException
function_decl|;
comment|/**      * Copy a Collection.      *      * @param collection the source collection.      * @param destination the destination collection.      * @param newName the new name in the destination collection.      *      * @deprecated Use XmldbURI version instead.      *      * @throws XMLDBException if an error occurs when copying the collection.      */
annotation|@
name|Deprecated
name|void
name|copy
parameter_list|(
name|String
name|collection
parameter_list|,
name|String
name|destination
parameter_list|,
name|String
name|newName
parameter_list|)
throws|throws
name|XMLDBException
function_decl|;
comment|/**      * Create a Collection.      *      * @param collName the name of the collection.      * @param created the created time of the collection.      *      * @return the newly created collection.      *      * @throws XMLDBException if an error occurs when creating the collection.      *      * @deprecated Use XmldbURI version instead      */
annotation|@
name|Deprecated
name|Collection
name|createCollection
parameter_list|(
name|String
name|collName
parameter_list|,
name|Date
name|created
parameter_list|)
throws|throws
name|XMLDBException
function_decl|;
name|void
name|move
parameter_list|(
name|XmldbURI
name|collection
parameter_list|,
name|XmldbURI
name|destination
parameter_list|,
name|XmldbURI
name|newName
parameter_list|)
throws|throws
name|XMLDBException
function_decl|;
name|void
name|moveResource
parameter_list|(
name|XmldbURI
name|resourcePath
parameter_list|,
name|XmldbURI
name|destinationPath
parameter_list|,
name|XmldbURI
name|newName
parameter_list|)
throws|throws
name|XMLDBException
function_decl|;
comment|/**      * Copy a Resource.      *      * @param resourcePath the source resource.      * @param destinationPath the destination collection.      * @param newName the new name in the destination collection.      *      * @deprecated Use {@link #copyResource(XmldbURI, XmldbURI, XmldbURI, String)}      *      * @throws XMLDBException if an error occurs when copying the resource.      */
annotation|@
name|Deprecated
name|void
name|copyResource
parameter_list|(
name|XmldbURI
name|resourcePath
parameter_list|,
name|XmldbURI
name|destinationPath
parameter_list|,
name|XmldbURI
name|newName
parameter_list|)
throws|throws
name|XMLDBException
function_decl|;
comment|/**      * Copy a Resource.      *      * @param resourcePath The source document      * @param destinationPath The destination collection      * @param newName The new name of the copied source in the destination collection      * @param preserveType one of either "DEFAULT", "NO_PRESERVE", "PRESERVE"      *      * @throws XMLDBException if an error occurs when copying the resource.      */
name|void
name|copyResource
parameter_list|(
name|XmldbURI
name|resourcePath
parameter_list|,
name|XmldbURI
name|destinationPath
parameter_list|,
name|XmldbURI
name|newName
parameter_list|,
name|String
name|preserveType
parameter_list|)
throws|throws
name|XMLDBException
function_decl|;
comment|/**      * Copy a Collection.      *      * @param collection the source collection.      * @param destination the destination collection.      * @param newName the new name in the destination collection.      *      * @throws XMLDBException if an error occurs when copying the resource.      *      * @deprecated Use {@link #copy(XmldbURI, XmldbURI, XmldbURI, String)}      */
annotation|@
name|Deprecated
name|void
name|copy
parameter_list|(
name|XmldbURI
name|collection
parameter_list|,
name|XmldbURI
name|destination
parameter_list|,
name|XmldbURI
name|newName
parameter_list|)
throws|throws
name|XMLDBException
function_decl|;
comment|/** Copy a Collection      *      * @param collection The source collection      * @param destination The destination collection      * @param newName The new name of the copied source in the destination collection      * @param preserveType one of either "DEFAULT", "NO_PRESERVE", "PRESERVE"      *      * @throws XMLDBException if an error occurs when copying the resource.      */
name|void
name|copy
parameter_list|(
name|XmldbURI
name|collection
parameter_list|,
name|XmldbURI
name|destination
parameter_list|,
name|XmldbURI
name|newName
parameter_list|,
name|String
name|preserveType
parameter_list|)
throws|throws
name|XMLDBException
function_decl|;
name|Collection
name|createCollection
parameter_list|(
name|XmldbURI
name|collName
parameter_list|,
name|Date
name|created
parameter_list|)
throws|throws
name|XMLDBException
function_decl|;
comment|/**      * Create a Collection.      *      * @param collName the collection name.      *      * @return the newly created collection.      *      * @throws XMLDBException if an error occurs when creating the collection.      *      * @deprecated Use XmldbURI version instead      */
annotation|@
name|Deprecated
annotation|@
name|Override
name|Collection
name|createCollection
parameter_list|(
name|String
name|collName
parameter_list|)
throws|throws
name|XMLDBException
function_decl|;
comment|/**      * Create a Collection.      *      * @param collName the collection name.      *      * @return the newly created collection.      *      * @throws XMLDBException if an error occurs when creating the collection.      */
name|Collection
name|createCollection
parameter_list|(
name|XmldbURI
name|collName
parameter_list|)
throws|throws
name|XMLDBException
function_decl|;
comment|/**      * Remove a Collection.      *      * @param collName the name of the collection.      *      * @throws XMLDBException if an error occurs when removing the collection.      *      * @deprecated Use XmldbURI version instead      */
annotation|@
name|Override
annotation|@
name|Deprecated
name|void
name|removeCollection
parameter_list|(
name|String
name|collName
parameter_list|)
throws|throws
name|XMLDBException
function_decl|;
name|void
name|removeCollection
parameter_list|(
name|XmldbURI
name|collName
parameter_list|)
throws|throws
name|XMLDBException
function_decl|;
name|void
name|runCommand
parameter_list|(
name|String
index|[]
name|params
parameter_list|)
throws|throws
name|XMLDBException
function_decl|;
block|}
end_interface

end_unit

