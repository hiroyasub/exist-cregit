begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2010 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xquery
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|persistent
operator|.
name|DocumentSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|value
operator|.
name|Sequence
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|value
operator|.
name|SequenceType
import|;
end_import

begin_comment
comment|/**  * An XQuery/XPath variable, consisting of a QName and a value.  *   * @author wolf  */
end_comment

begin_interface
specifier|public
interface|interface
name|Variable
block|{
specifier|public
name|void
name|setValue
parameter_list|(
name|Sequence
name|val
parameter_list|)
function_decl|;
specifier|public
name|Sequence
name|getValue
parameter_list|()
function_decl|;
specifier|public
name|QName
name|getQName
parameter_list|()
function_decl|;
specifier|public
name|int
name|getType
parameter_list|()
function_decl|;
specifier|public
name|void
name|setSequenceType
parameter_list|(
name|SequenceType
name|type
parameter_list|)
throws|throws
name|XPathException
function_decl|;
specifier|public
name|SequenceType
name|getSequenceType
parameter_list|()
function_decl|;
specifier|public
name|void
name|setStaticType
parameter_list|(
name|int
name|type
parameter_list|)
function_decl|;
specifier|public
name|int
name|getStaticType
parameter_list|()
function_decl|;
specifier|public
name|boolean
name|isInitialized
parameter_list|()
function_decl|;
specifier|public
name|void
name|setIsInitialized
parameter_list|(
name|boolean
name|initialized
parameter_list|)
function_decl|;
comment|//public String toString();
specifier|public
name|int
name|getDependencies
parameter_list|(
name|XQueryContext
name|context
parameter_list|)
function_decl|;
specifier|public
name|int
name|getCardinality
parameter_list|()
function_decl|;
specifier|public
name|void
name|setStackPosition
parameter_list|(
name|int
name|position
parameter_list|)
function_decl|;
specifier|public
name|DocumentSet
name|getContextDocs
parameter_list|()
function_decl|;
specifier|public
name|void
name|setContextDocs
parameter_list|(
name|DocumentSet
name|docs
parameter_list|)
function_decl|;
specifier|public
name|void
name|checkType
parameter_list|()
throws|throws
name|XPathException
function_decl|;
comment|//private Sequence convert(Sequence seq) throws XPathException;
block|}
end_interface

end_unit

