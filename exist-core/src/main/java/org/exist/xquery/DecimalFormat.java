begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-2019 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xquery
package|;
end_package

begin_comment
comment|/**  * Data class for a Decimal Format.  *  * See https://www.w3.org/TR/xpath-31/#dt-static-decimal-formats  *  * NOTE: UTF-16 characters are stored as code-points!  *  * @author<a href="mailto:adam@evolvedbinary.com">Adam Retter</a>  */
end_comment

begin_class
specifier|public
class|class
name|DecimalFormat
block|{
specifier|public
specifier|static
specifier|final
name|DecimalFormat
name|UNNAMED
init|=
operator|new
name|DecimalFormat
argument_list|(
literal|'.'
argument_list|,
literal|'e'
argument_list|,
literal|','
argument_list|,
literal|'%'
argument_list|,
literal|'\u2030'
argument_list|,
literal|'0'
argument_list|,
literal|'#'
argument_list|,
literal|';'
argument_list|,
literal|"Infinity"
argument_list|,
literal|"NaN"
argument_list|,
literal|'-'
argument_list|)
decl_stmt|;
comment|// used both in the picture string, and in the formatted number
specifier|public
specifier|final
name|int
name|decimalSeparator
decl_stmt|;
specifier|public
specifier|final
name|int
name|exponentSeparator
decl_stmt|;
specifier|public
specifier|final
name|int
name|groupingSeparator
decl_stmt|;
specifier|public
specifier|final
name|int
name|percent
decl_stmt|;
specifier|public
specifier|final
name|int
name|perMille
decl_stmt|;
specifier|public
specifier|final
name|int
name|zeroDigit
decl_stmt|;
comment|// used in the picture string
specifier|public
specifier|final
name|int
name|digit
decl_stmt|;
specifier|public
specifier|final
name|int
name|patternSeparator
decl_stmt|;
comment|//used in the result of formatting the number, but not in the picture string
specifier|public
specifier|final
name|String
name|infinity
decl_stmt|;
specifier|public
specifier|final
name|String
name|NaN
decl_stmt|;
specifier|public
specifier|final
name|int
name|minusSign
decl_stmt|;
specifier|public
name|DecimalFormat
parameter_list|(
specifier|final
name|int
name|decimalSeparator
parameter_list|,
specifier|final
name|int
name|exponentSeparator
parameter_list|,
specifier|final
name|int
name|groupingSeparator
parameter_list|,
specifier|final
name|int
name|percent
parameter_list|,
specifier|final
name|int
name|perMille
parameter_list|,
specifier|final
name|int
name|zeroDigit
parameter_list|,
specifier|final
name|int
name|digit
parameter_list|,
specifier|final
name|int
name|patternSeparator
parameter_list|,
specifier|final
name|String
name|infinity
parameter_list|,
specifier|final
name|String
name|NaN
parameter_list|,
specifier|final
name|int
name|minusSign
parameter_list|)
block|{
name|this
operator|.
name|decimalSeparator
operator|=
name|decimalSeparator
expr_stmt|;
name|this
operator|.
name|exponentSeparator
operator|=
name|exponentSeparator
expr_stmt|;
name|this
operator|.
name|groupingSeparator
operator|=
name|groupingSeparator
expr_stmt|;
name|this
operator|.
name|percent
operator|=
name|percent
expr_stmt|;
name|this
operator|.
name|perMille
operator|=
name|perMille
expr_stmt|;
name|this
operator|.
name|zeroDigit
operator|=
name|zeroDigit
expr_stmt|;
name|this
operator|.
name|digit
operator|=
name|digit
expr_stmt|;
name|this
operator|.
name|patternSeparator
operator|=
name|patternSeparator
expr_stmt|;
name|this
operator|.
name|infinity
operator|=
name|infinity
expr_stmt|;
name|this
operator|.
name|NaN
operator|=
name|NaN
expr_stmt|;
name|this
operator|.
name|minusSign
operator|=
name|minusSign
expr_stmt|;
block|}
block|}
end_class

end_unit

