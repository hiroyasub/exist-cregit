begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2015 The eXist Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public License  * along with this program; if not, write to the Free Software Foundation  * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xquery
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Subject
import|;
end_import

begin_comment
comment|/**  * Base class for XQuery functions which switch the current user  *  * Provides the function {@link #switchUser(Subject)} to allow us  * to switch the current broker to a user and then have it switched  * back when the XQuery expression is reset  *  * @author<a href="mailto:adam.retter@googlemail.com">Adam Retter</a>  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|UserSwitchingBasicFunction
extends|extends
name|BasicFunction
block|{
comment|/**      * Flag which indicates how many subjects we have pushed, and so we must later      * pop the same number of subjects when the expression is reset, see {@link UserSwitchingBasicFunction#resetState(boolean)}      */
specifier|private
name|int
name|pushedSubjects
init|=
literal|0
decl_stmt|;
specifier|public
name|UserSwitchingBasicFunction
parameter_list|(
specifier|final
name|XQueryContext
name|context
parameter_list|,
specifier|final
name|FunctionSignature
name|signature
parameter_list|)
block|{
name|super
argument_list|(
name|context
argument_list|,
name|signature
argument_list|)
expr_stmt|;
block|}
comment|/**      * Switches the current broker to the provided user      *      * @param user the user to switch to      */
specifier|protected
name|void
name|switchUser
parameter_list|(
specifier|final
name|Subject
name|user
parameter_list|)
block|{
name|context
operator|.
name|getBroker
argument_list|()
operator|.
name|pushSubject
argument_list|(
name|user
argument_list|)
expr_stmt|;
name|pushedSubjects
operator|++
expr_stmt|;
block|}
comment|/**      * Takes care to switch the broker back from the switched      * user before calling @{link super#resetState(boolean)}      */
annotation|@
name|Override
specifier|public
name|void
name|resetState
parameter_list|(
specifier|final
name|boolean
name|postOptimization
parameter_list|)
block|{
comment|//if we pushed a subject, we must pop it
while|while
condition|(
name|pushedSubjects
operator|>
literal|0
condition|)
block|{
name|context
operator|.
name|getBroker
argument_list|()
operator|.
name|popSubject
argument_list|()
expr_stmt|;
name|pushedSubjects
operator|--
expr_stmt|;
block|}
name|super
operator|.
name|resetState
argument_list|(
name|postOptimization
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

