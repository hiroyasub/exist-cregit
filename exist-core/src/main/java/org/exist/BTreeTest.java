begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|BrokerPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|btree
operator|.
name|BTree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|btree
operator|.
name|DBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|btree
operator|.
name|Value
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|TerminatedException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStreamWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_class
specifier|public
class|class
name|BTreeTest
block|{
specifier|private
specifier|final
specifier|static
name|byte
name|BTREE_TEST_FILE_ID
init|=
literal|0x7F
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|short
name|BTREE_TEST_FILE_VERSION
init|=
name|Short
operator|.
name|MIN_VALUE
decl_stmt|;
specifier|private
name|Path
name|file
decl_stmt|;
specifier|private
name|BrokerPool
name|pool
init|=
literal|null
decl_stmt|;
specifier|public
name|BTreeTest
parameter_list|()
block|{
name|file
operator|=
name|Paths
operator|.
name|get
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"exist.home"
argument_list|,
literal|"."
argument_list|)
argument_list|)
operator|.
name|resolve
argument_list|(
literal|"test/test.dbx"
argument_list|)
expr_stmt|;
try|try
block|{
name|Configuration
name|config
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|BrokerPool
operator|.
name|configure
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|pool
operator|=
name|BrokerPool
operator|.
name|getInstance
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|DatabaseConfigurationException
decl||
name|EXistException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|shutdown
parameter_list|()
block|{
name|pool
operator|.
name|shutdown
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|create
parameter_list|(
name|int
name|count
parameter_list|)
throws|throws
name|DBException
throws|,
name|IOException
block|{
name|FileUtils
operator|.
name|deleteQuietly
argument_list|(
name|file
argument_list|)
expr_stmt|;
try|try
init|(
name|BTree
name|btree
init|=
operator|new
name|BTree
argument_list|(
name|pool
argument_list|,
name|BTREE_TEST_FILE_ID
argument_list|,
name|BTREE_TEST_FILE_VERSION
argument_list|,
literal|false
argument_list|,
name|pool
operator|.
name|getCacheManager
argument_list|()
argument_list|,
name|file
argument_list|)
init|)
block|{
name|btree
operator|.
name|create
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
expr_stmt|;
name|String
name|prefixStr
init|=
literal|"KEY"
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
name|count
condition|;
name|i
operator|++
control|)
block|{
name|Value
name|value
init|=
operator|new
name|Value
argument_list|(
name|prefixStr
operator|+
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|btree
operator|.
name|addValue
argument_list|(
name|value
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
name|btree
operator|.
name|flush
argument_list|()
expr_stmt|;
try|try
init|(
specifier|final
name|OutputStreamWriter
name|writer
init|=
operator|new
name|OutputStreamWriter
argument_list|(
name|System
operator|.
name|out
argument_list|)
init|)
block|{
name|btree
operator|.
name|dump
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|writer
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|rebuild
parameter_list|()
throws|throws
name|DBException
throws|,
name|IOException
throws|,
name|TerminatedException
block|{
name|BTree
name|btree
init|=
literal|null
decl_stmt|;
try|try
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Loading btree ..."
argument_list|)
expr_stmt|;
name|btree
operator|=
operator|new
name|BTree
argument_list|(
name|pool
argument_list|,
name|BTREE_TEST_FILE_ID
argument_list|,
name|BTREE_TEST_FILE_VERSION
argument_list|,
literal|false
argument_list|,
name|pool
operator|.
name|getCacheManager
argument_list|()
argument_list|,
name|file
argument_list|)
expr_stmt|;
name|btree
operator|.
name|open
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Rebuilding ..."
argument_list|)
expr_stmt|;
name|btree
operator|.
name|rebuild
argument_list|()
expr_stmt|;
try|try
init|(
specifier|final
name|OutputStreamWriter
name|writer
init|=
operator|new
name|OutputStreamWriter
argument_list|(
name|System
operator|.
name|out
argument_list|)
init|)
block|{
name|btree
operator|.
name|dump
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|writer
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
block|}
finally|finally
block|{
if|if
condition|(
name|btree
operator|!=
literal|null
condition|)
block|{
name|btree
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|read
parameter_list|(
name|int
name|count
parameter_list|)
throws|throws
name|DBException
throws|,
name|IOException
throws|,
name|TerminatedException
block|{
name|BTree
name|btree
init|=
literal|null
decl_stmt|;
try|try
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Loading btree ..."
argument_list|)
expr_stmt|;
name|btree
operator|=
operator|new
name|BTree
argument_list|(
name|pool
argument_list|,
name|BTREE_TEST_FILE_ID
argument_list|,
name|BTREE_TEST_FILE_VERSION
argument_list|,
literal|false
argument_list|,
name|pool
operator|.
name|getCacheManager
argument_list|()
argument_list|,
name|file
argument_list|)
expr_stmt|;
name|btree
operator|.
name|open
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
expr_stmt|;
name|String
name|prefixStr
init|=
literal|"KEY"
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
name|count
condition|;
name|i
operator|++
control|)
block|{
name|Value
name|value
init|=
operator|new
name|Value
argument_list|(
name|prefixStr
operator|+
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|long
name|r
init|=
name|btree
operator|.
name|findValue
argument_list|(
name|value
argument_list|)
decl_stmt|;
if|if
condition|(
name|r
operator|==
operator|-
literal|1
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Key not found: "
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
block|}
block|}
finally|finally
block|{
if|if
condition|(
name|btree
operator|!=
literal|null
condition|)
block|{
name|btree
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|int
name|count
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|args
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|String
name|command
init|=
name|args
operator|.
name|length
operator|==
literal|2
condition|?
name|args
index|[
literal|1
index|]
else|:
literal|null
decl_stmt|;
name|BTreeTest
name|test
init|=
operator|new
name|BTreeTest
argument_list|()
decl_stmt|;
try|try
block|{
if|if
condition|(
name|command
operator|==
literal|null
condition|)
block|{
name|test
operator|.
name|create
argument_list|(
name|count
argument_list|)
expr_stmt|;
name|test
operator|.
name|rebuild
argument_list|()
expr_stmt|;
name|test
operator|.
name|read
argument_list|(
name|count
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
literal|"read"
operator|.
name|equals
argument_list|(
name|command
argument_list|)
condition|)
block|{
name|test
operator|.
name|read
argument_list|(
name|count
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
literal|"create"
operator|.
name|equals
argument_list|(
name|command
argument_list|)
condition|)
block|{
name|test
operator|.
name|create
argument_list|(
name|count
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
literal|"rebuild"
operator|.
name|equals
argument_list|(
name|command
argument_list|)
condition|)
block|{
name|test
operator|.
name|rebuild
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|DBException
decl||
name|TerminatedException
decl||
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|test
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

