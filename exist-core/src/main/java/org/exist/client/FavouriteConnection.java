begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-2012 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|client
package|;
end_package

begin_comment
comment|/**  * Wrapper used to hold a favourite's connection information.  *  * @author Tobias Wunden  */
end_comment

begin_class
specifier|public
class|class
name|FavouriteConnection
extends|extends
name|Connection
implements|implements
name|Comparable
argument_list|<
name|Object
argument_list|>
block|{
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
name|Messages
operator|.
name|getString
argument_list|(
literal|"LoginPanel.42"
argument_list|)
decl_stmt|;
comment|//$NON-NLS-1$
comment|//$NON-NLS-1$
specifier|public
specifier|static
specifier|final
name|String
name|USERNAME
init|=
name|Messages
operator|.
name|getString
argument_list|(
literal|"LoginPanel.43"
argument_list|)
decl_stmt|;
comment|//$NON-NLS-1$
comment|//$NON-NLS-1$
specifier|public
specifier|static
specifier|final
name|String
name|PASSWORD
init|=
name|Messages
operator|.
name|getString
argument_list|(
literal|"LoginPanel.44"
argument_list|)
decl_stmt|;
comment|//$NON-NLS-1$
comment|//$NON-NLS-1$
specifier|public
specifier|static
specifier|final
name|String
name|URI
init|=
name|Messages
operator|.
name|getString
argument_list|(
literal|"LoginPanel.45"
argument_list|)
decl_stmt|;
comment|//$NON-NLS-1$
comment|//$NON-NLS-1$
specifier|public
specifier|static
specifier|final
name|String
name|CONFIGURATION
init|=
name|Messages
operator|.
name|getString
argument_list|(
literal|"LoginPanel.46"
argument_list|)
decl_stmt|;
comment|//$NON-NLS-1$
comment|//$NON-NLS-1$
specifier|public
specifier|static
specifier|final
name|String
name|SSL
init|=
name|Messages
operator|.
name|getString
argument_list|(
literal|"LoginPanel.47"
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
comment|/**      * Creates a new connection favourite from the given parameters.      *      * @param name the favourite's name      * @param username the username      * @param password the password      * @param url the url      */
comment|/**      * Creates a new connection favourite from the given parameters.      *      * @param name the favourite's name.      * @param username the username.      * @param password the password      * @param ssl flag to have SSL connection.      * @param url the url.      */
specifier|public
name|FavouriteConnection
parameter_list|(
specifier|final
name|String
name|name
parameter_list|,
specifier|final
name|String
name|username
parameter_list|,
specifier|final
name|String
name|password
parameter_list|,
specifier|final
name|String
name|url
parameter_list|,
specifier|final
name|boolean
name|ssl
parameter_list|)
block|{
name|super
argument_list|(
name|username
argument_list|,
name|password
argument_list|,
name|url
argument_list|,
name|ssl
argument_list|)
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
comment|/**      * Creates a new connection favourite from the given parameters.      *      * @param name the favourite's name.      * @param username the username.      * @param password the password.      * @param configuration location of configuration file.      */
specifier|public
name|FavouriteConnection
parameter_list|(
specifier|final
name|String
name|name
parameter_list|,
specifier|final
name|String
name|username
parameter_list|,
specifier|final
name|String
name|password
parameter_list|,
specifier|final
name|String
name|configuration
parameter_list|)
block|{
name|super
argument_list|(
name|username
argument_list|,
name|password
argument_list|,
name|configuration
argument_list|)
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
comment|/**      * Returns the connection name.      *      * @return the connection name      */
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
comment|/**      * Compares<code>o</code> to this favourite by comparing the      * connection names to the object's toString() output.      *      * @see java.util.Comparator#compare(Object, Object)      */
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
specifier|final
name|Object
name|o
parameter_list|)
block|{
return|return
name|name
operator|.
name|compareTo
argument_list|(
name|o
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Returns the favourite's hashcode.      *      * @see java.lang.Object#hashCode()      */
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|name
operator|.
name|hashCode
argument_list|()
return|;
block|}
comment|/**      * Returns<code>true</code> if this favourite equals the given object.      *      * @see java.lang.Object#equals(Object)      */
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
name|name
operator|.
name|equals
argument_list|(
name|o
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Returns the connection name.      *      * @return the connection name      */
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|name
return|;
block|}
block|}
end_class

end_unit

