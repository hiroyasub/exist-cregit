begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2020 The eXist-db Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public License  * along with this program; if not, write to the Free Software Foundation  * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|client
operator|.
name|tristatecheckbox
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_comment
comment|/**  * See<a href="http://www.javaspecialists.eu/archive/Issue145.html">TristateCheckBox Revisited</a>  *  * @author<a href="mailto:adam@evolvedbinary.com">Adam Retter</a>  */
end_comment

begin_enum
specifier|public
enum|enum
name|TristateState
block|{
name|DESELECTED
block|{
specifier|public
name|TristateState
name|next
parameter_list|()
block|{
return|return
name|INDETERMINATE
return|;
block|}
block|}
block|,
name|INDETERMINATE
block|{
specifier|public
name|TristateState
name|next
parameter_list|()
block|{
return|return
name|SELECTED
return|;
block|}
block|}
block|,
name|SELECTED
block|{
specifier|public
name|TristateState
name|next
parameter_list|()
block|{
return|return
name|DESELECTED
return|;
block|}
block|}
block|;
specifier|public
specifier|abstract
name|TristateState
name|next
argument_list|()
block|;
specifier|public
specifier|static
name|TristateState
name|fromBoolean
parameter_list|(
annotation|@
name|Nullable
specifier|final
name|Boolean
name|state
parameter_list|)
block|{
if|if
condition|(
name|state
operator|==
literal|null
condition|)
block|{
return|return
name|TristateState
operator|.
name|INDETERMINATE
return|;
block|}
if|else if
condition|(
name|state
condition|)
block|{
return|return
name|TristateState
operator|.
name|SELECTED
return|;
block|}
else|else
block|{
return|return
name|TristateState
operator|.
name|DESELECTED
return|;
block|}
block|}
specifier|public
specifier|static
annotation|@
name|Nullable
name|Boolean
name|toBoolean
parameter_list|(
specifier|final
name|TristateState
name|state
parameter_list|)
block|{
switch|switch
condition|(
name|state
condition|)
block|{
case|case
name|DESELECTED
case|:
return|return
literal|false
return|;
case|case
name|SELECTED
case|:
return|return
literal|true
return|;
case|case
name|INDETERMINATE
case|:
default|default:
return|return
literal|null
return|;
block|}
block|}
block|}
end_enum

end_unit

