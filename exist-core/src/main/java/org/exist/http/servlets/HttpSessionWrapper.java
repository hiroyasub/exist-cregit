begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-06 Wolfgang M. Meier  *  wolfgang@exist-db.org  *  http://exist.sourceforge.net  *    *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *    *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *    *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|http
operator|.
name|servlets
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSession
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:wolfgang@exist-db.org">Wolfgang Meier</a>  */
end_comment

begin_class
specifier|public
class|class
name|HttpSessionWrapper
implements|implements
name|SessionWrapper
block|{
specifier|private
name|HttpSession
name|session
decl_stmt|;
comment|/** 	 * Get the Servlet Context 	 * 	 * @return the servlet context 	 */
specifier|public
name|ServletContext
name|getServletContext
parameter_list|()
block|{
return|return
name|session
operator|.
name|getServletContext
argument_list|()
return|;
block|}
comment|/** 	 * @param session The HTTP Session 	 */
specifier|public
name|HttpSessionWrapper
parameter_list|(
name|HttpSession
name|session
parameter_list|)
block|{
name|this
operator|.
name|session
operator|=
name|session
expr_stmt|;
block|}
comment|/** 	 * @param name the name of the attribute 	 * @return Returns the session attribute object or null 	 */
specifier|public
name|Object
name|getAttribute
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|session
operator|.
name|getAttribute
argument_list|(
name|name
argument_list|)
return|;
block|}
comment|/** 	 * @return An enumeration of all the attribute names 	 */
specifier|public
name|Enumeration
name|getAttributeNames
parameter_list|()
block|{
return|return
name|session
operator|.
name|getAttributeNames
argument_list|()
return|;
block|}
comment|/** 	 * @return The creation time of the session 	 */
specifier|public
name|long
name|getCreationTime
parameter_list|()
block|{
return|return
name|session
operator|.
name|getCreationTime
argument_list|()
return|;
block|}
comment|/** 	 * @return The id of the session 	 */
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|session
operator|.
name|getId
argument_list|()
return|;
block|}
comment|/** 	 * @return The last time the session was accessed 	 */
specifier|public
name|long
name|getLastAccessedTime
parameter_list|()
block|{
return|return
name|session
operator|.
name|getLastAccessedTime
argument_list|()
return|;
block|}
comment|/** 	 * @return The maximum inactive interval. 	 */
specifier|public
name|int
name|getMaxInactiveInterval
parameter_list|()
block|{
return|return
name|session
operator|.
name|getMaxInactiveInterval
argument_list|()
return|;
block|}
comment|/** 	 * Invalidate the session. 	 */
specifier|public
name|void
name|invalidate
parameter_list|()
block|{
name|session
operator|.
name|invalidate
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * @return A boolean indicating if the session was just created 	 */
specifier|public
name|boolean
name|isNew
parameter_list|()
block|{
return|return
name|session
operator|.
name|isNew
argument_list|()
return|;
block|}
comment|/** 	 * @param name the name of the attribute 	 */
specifier|public
name|void
name|removeAttribute
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|session
operator|.
name|removeAttribute
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param name the name of the attribute 	 * @param value the value of the attribute 	 */
specifier|public
name|void
name|setAttribute
parameter_list|(
name|String
name|name
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|session
operator|.
name|setAttribute
argument_list|(
name|name
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param interval the maximum inactive interval 	 */
specifier|public
name|void
name|setMaxInactiveInterval
parameter_list|(
name|int
name|interval
parameter_list|)
block|{
name|session
operator|.
name|setMaxInactiveInterval
argument_list|(
name|interval
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

