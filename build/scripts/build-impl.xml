<?xml version="1.0" encoding="UTF-8"?>

<!-- ======================================================================= -->
<!-- eXist build file                                                        -->
<!-- ======================================================================= -->
<project basedir="../.." default="all" name="exist">

    <!-- import default properties from file -->
    <property file="build.properties"/>

    <!-- setup properties -->
    <property name="jetty.dir" value="tools/jetty"/>
    <property name="src" value="./src"/>
    <property name="src.webapp" value="./webapp"/>
    <property name="samples" value="./samples"/>
    <property name="bin" value="./bin"/>
    <property name="lib.core" value="./lib/core"/>
    <property name="lib.optional" value="./lib/optional"/>
    <property name="lib.endorsed" value="./lib/endorsed"/>
    <property name="lib.user" value="./lib/user"/>
    <property name="lib.tools" value="./tools/lib"/>
    <property name="build" value="./build"/>
    <property name="build.src" value="${build}/src"/>
    <property name="build.soap" value="${build}/soap"/>
    <property name="build.classes" value="${build}/classes"/>
    <property name="build.docs" value="${build}/docs"/>
    <property name="build.docs.src" value="${build.docs}/source"/>
    <property name="build.docs.html" value="${build.docs}/html"/>
    <property name="ant.home" value="."/>
    <property name="dist" value="./dist"/>
    <property name="webapp.dir" value="${dist}/webapp"/>
    <property name="build.compiler" value="modern"/>
    <property name="build.compiler.source" value="1.4"/>
    <property name="build.compiler.target" value="1.4"/>
    <property name="build.debug" value="on"/>
    <property name="build.optimize" value="on"/>
    <property name="build.deprecation" value="on"/>
    <property name="jvmarg" value="-Xmx128000k -Xms32000k -Djetty.home=${jetty.dir} -Dexist.home=${basedir}"/>
    <property name="xmldb.src" value="undefined"/>
    <property name="dist.dir" value="${dist}/${project.name}-${project.version}"/>

    <!-- setup conditional properties -->
    <available file="${xmldb.src}" type="dir" property="has.xmldb.src"/>
    <available file="${catalina.home}/bin" property="catalina.present"/>
    <available file="key.store" property="key.store.present"/>

    <!-- setup class path -->
    <path id="classpath.core">
        <fileset dir="${lib.core}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${lib.optional}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${lib.endorsed}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${lib.tools}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${lib.user}">
            <include name="*.jar"/>
        </fileset>
        <pathelement path="exist.jar"/>
        <pathelement path="exist-optional.jar"/>
        <pathelement path="exist-modules.jar"/>
        <pathelement path="start.jar"/>
        <pathelement path="${java.class.path}"/>
    </path>
    
    <path id="classpath.jetty">
        <fileset dir="${jetty.dir}/lib">
            <include name="*.jar"/>
        </fileset>
    </path>

    <taskdef name="java2wsdl" classname="org.apache.axis.tools.ant.wsdl.Java2WsdlAntTask">
        <classpath refid="classpath.core"/>
    </taskdef>

    <taskdef name="wsdl2java" classname="org.apache.axis.tools.ant.wsdl.Wsdl2javaAntTask">
        <classpath refid="classpath.core"/>
    </taskdef>

    <taskdef name="axis-admin" classname="org.apache.axis.tools.ant.axis.AdminClientTask">
        <classpath refid="classpath.core"/>
    </taskdef>

    <taskdef name="cocoon" classname="org.apache.cocoon.CocoonTask">
        <classpath refid="classpath.core"/>
    </taskdef>
    
    <!-- =================================================================== -->
    <!-- Prepare the build                                                   -->
    <!-- =================================================================== -->
    <target name="prepare">
        <echo message="-------------------------"/>
        <echo message="eXist ${project.version} build"/>
        <echo message="-------------------------"/>
        <echo message="basedir=${basedir}"/>
        <mkdir dir="${build}"/>
        <mkdir dir="${build.classes}"/>
        <mkdir dir="${jetty.dir}/logs"/>
        <mkdir dir="${jetty.dir}/work"/>
        <tstamp/>
        <filter token="version" value="${project.version}-${DSTAMP}"/>
        <filter token="database" value="native"/>
        <copy
        file="${src.webapp}/header.xml.tmpl"
        tofile="${src.webapp}/header.xml" filtering="true"
        overwrite="true" />
        <copy file="${src.webapp}/header.xml.tmpl"
        tofile="${src.webapp}/xquery/header.xml" filtering="true"
        overwrite="true"/>
        <copy file="${basedir}/conf.xml.tmpl" tofile="${basedir}/conf.xml" filtering="true"/>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles the source code                                            -->
    <!-- =================================================================== -->
    <target depends="prepare" name="compile" description="Compiles the source code">
        <mkdir dir="${build}"/>
        <echo message="Compiling with Java ${ant.java.version} from ${build.compiler.source} source to ${build.compiler.target} target, debug ${build.debug}, optimize ${build.optimize}, deprecation ${build.deprecation}"/>
        <javac debug="${build.debug}" deprecation="${build.deprecation}"
            destdir="${build.classes}" encoding="UTF-8"
            optimize="${build.optimize}" srcdir="${src}"
            source="${build.compiler.source}" target="${build.compiler.target}">

            <include name="org/**"/>
            <include name="org/exist/schema/**"/>
            <exclude name="org/exist/http/realm/**"/>
            <exclude name="doxygen" />
            <classpath>
                <path refid="classpath.core"/>
                <path refid="classpath.jetty"/>
            </classpath>
        </javac>
    </target>

    <!-- =================================================================== -->
    <!-- Compile the Tomcat realm                                            -->
    <!-- =================================================================== -->
    <target name="compile-tomcat-realm" if="catalina.present" description="Compile the Tomcat realm">
        <echo message="Compiling Tomcat Realm  with Java ${ant.java.version} from ${build.compiler.source} source to ${build.compiler.target} target, debug ${build.debug}, optimize ${build.optimize}, deprecation ${build.deprecation}"/>    	
        <javac debug="${build.debug}" deprecation="${build.deprecation}"
            destdir="${build.classes}" encoding="UTF-8"
            optimize="${build.optimize}" srcdir="${src}"
            source="${build.compiler.source}" target="${build.compiler.target}">
            <include name="org/exist/http/realm/**"/>
            <classpath>
                <path refid="classpath.core"/>
                <fileset dir="${catalina.home}/bin">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${catalina.home}/server/lib">
                    <include name="*.jar"/>
                </fileset>
                <!--fileset dir="${catalina.home}/common/lib">
                <include name="*.jar"/>
                </fileset-->
            </classpath>
        </javac>
    </target>

    <!-- =================================================================== -->
    <!-- Run antlr parser generator										   -->
    <!-- needs antlr distribution-directory in the classpath				   -->
    <!-- =================================================================== -->
    <target depends="prepare" name="antlr">
        <echo message="Running ANTLR to generate XQuery parser"/>
        <delete failonerror="false">
            <fileset dir="${src}/org/exist/xquery/parser">
                <include name="*.java"/>
                <include name="*.txt"/>
                <exclude name="XQueryAST.java"/>
            </fileset>
        </delete>
        <antlr target="${src}/org/exist/xquery/parser/XQuery.g"
            outputdirectory="${src}/org/exist/xquery/parser"
            traceparser="${antlr.traceParser}"
            tracelexer="${antlr.traceLexer}">
            <classpath>
                <path refid="classpath.core"/>
            </classpath>
        </antlr>
        <antlr target="${src}/org/exist/xquery/parser/XQueryTree.g"
            outputdirectory="${src}/org/exist/xquery/parser">
            <classpath>
                <path refid="classpath.core"/>
            </classpath>
        </antlr>
        <antlr target="${src}/org/exist/xquery/parser/DeclScanner.g"
            outputdirectory="${src}/org/exist/xquery/parser">
            <classpath>
                <path refid="classpath.core"/>
            </classpath>
        </antlr>
    </target>

    <target depends="antlr,jar" name="xquery"/>
    
    <!-- ================================================================== -->
    <!-- Create samples                                                     -->
    <!-- ================================================================== -->
    <target depends="prepare" name="samples" description="Create samples">
        <delete failonerror="false" dir="${build}/examples"/>
        <mkdir dir="${build}/examples"/>
        <echo message="Compiling samples with Java ${ant.java.version} from ${build.compiler.source} source to ${build.compiler.target} target, debug ${build.debug}, optimize ${build.optimize}, deprecation ${build.deprecation}"/>
        <javac debug="${build.debug}"
            deprecation="${build.deprecation}"
            destdir="${build}/examples" srcdir="${samples}"
            source="${build.compiler.source}" target="${build.compiler.target}"
            optimize="${build.optimize}" encoding="UTF-8">
            <classpath>
                <path refid="classpath.core"/>
            </classpath>
        </javac>
        <jar basedir="${build}/examples" compress="true" jarfile="examples.jar">
            <include name="org/exist/examples/**"/>
        </jar>
    </target>
    
    <!-- ================================================================== -->
    <!-- Create jar files                    							   	-->
    <!-- ================================================================== -->
    <target name="jar" depends="compile, compile-tomcat-realm" description="Create eXist unisgned jar files">
        <filter token="version" value="${project.version}"/>
        <filter token="build" value="${DSTAMP}"/>
        <copy file="${src}/CatalogManager.properties" todir="${build.classes}"/>
        <copy todir="${build.classes}/org/exist/client">
            <fileset dir="${src}/org/exist/client">
                <include name="icons/**.png"/>
                <include name="icons/**.gif"/>
                <include name="*.xsl"/>
                <include name="**/*.xconf"/>
            </fileset>
        </copy>
        <copy todir="${build.classes}/org/exist/xquery/lib">
            <fileset dir="${src}/org/exist/xquery/lib">
                <include name="**.xq"/>
            </fileset>
        </copy>
        <copy todir="${build.classes}/org/exist/security/xacml/policies">
            <fileset dir="${src}/org/exist/security/xacml/policies">
                <include name="*.xml"/>
            </fileset>
        </copy>
        <copy file="${src}/org/exist/xquery/util/messages.properties"
             todir="${build.classes}/org/exist/xquery/util"/>
        <copy file="${src}/org/exist/ant/antlib.xml"
             todir="${build.classes}/org/exist/ant"/>
        <copy file="${src}/org/exist/exist.xsl"
             todir="${build.classes}/org/exist"/>
        <copy file="${src}/org/exist/xmldb.xsl"
             todir="${build.classes}/org/exist"/>
        <copy file="${src}/org/exist/xmldb2.xsl"
             todir="${build.classes}/org/exist"/>
        <copy file="${src}/org/exist/start/start.config"
             todir="${build.classes}/org/exist/start"/>
        <copy file="${src}/org/exist/security/security.properties"
             todir="${build.classes}/org/exist/security"/>
        <copy file="${src}/org/exist/system.properties"
             todir="${build.classes}/org/exist" filtering="true"/>
        <copy file="${src}/org/exist/util/mime-types.xml"
             todir="${build.classes}/org/exist/util"/>
        <copy todir="${build.classes}/org/exist/http/webdav/methods">
            <fileset dir="${src}/org/exist/http/webdav/methods">
                <include name="**.xq"/>
            </fileset>
        </copy>
        <echo message="Creating exist.jar ..."/>
        <jar basedir="${build.classes}" compress="true" jarfile="exist.jar">
            <exclude name="org/exist/start/**"/>
            <exclude name="org/exist/soap/**"/>
            <exclude name="org/exist/ant/**"/>
            <exclude name="org/exist/http/servlets/**"/>
            <exclude name="org/exist/xquery/functions/request/**"/>
            <exclude name="org/exist/cocoon/**"/>
            <exclude name="org/exist/source/CocoonSource.java"/>
            <exclude name="org/exist/*.xsl"/>
        </jar>
        <echo message="Creating start.jar ..."/>
        <jar basedir="${build.classes}" compress="true" jarfile="start.jar">
            <manifest>
                <attribute name="Main-Class" value="org.exist.start.Main"/>
                <attribute name="Package-Title" value="org.exist"/>
                <attribute name="Implementation-Title" value="eXist XML Database"/>
                <attribute name="Implementation-URL" value="http://exist-db.org"/>
            </manifest>
            <include name="org/exist/start/**"/>
        </jar>
        <echo message="Creating exist-optional.jar ..."/>
        <jar basedir="${build.classes}" compress="true" jarfile="exist-optional.jar">
            <include name="org/exist/soap/**"/>
            <include name="org/exist/ant/**"/>
            <include name="org/exist/http/servlets/**"/>
            <include name="org/exist/xquery/functions/request/**"/>
            <include name="org/exist/cocoon/**"/>
            <include name="org/exist/source/CocoonSource.java"/>
            <include name="org/exist/*.xsl"/>
        </jar>

        <antcall target="sign"/>
    </target>
        
    <!-- ================================================================== -->
    <!-- Build all                                                          -->
    <!-- ================================================================== -->
    <target name="all" depends="jar,wrapper,extension-modules" description="Build all"/>

    <!-- ================================================================== -->
    <!-- Rebuild all                                                        -->
    <!-- ================================================================== -->
    <target name="rebuild" depends="clean,all" description="Rebuild all"/>

	
    <!-- ================================================================== -->
    <!-- Create javadoc                                                     -->
    <!-- ================================================================== -->
    <target depends="prepare" name="javadocs" description="Create javadoc">
        <mkdir dir="${build.src}"/>
        <antcall target="copy-xapi"/>

        <!--delete dir="webapp/api"/>
        <mkdir dir="webapp/api"/-->
        <echo message="Generating Javadocs ..."/>
        <echo message="XMLDB: ${xmldb.src} ${has.xmldb.src}"/>
        <javadoc bottom="Copyright (C) Wolfgang Meier. All rights reserved."
            destdir="webapp/api" doctitle="eXist Javadocs"
            noindex="true" notree="true" access="public"
            maxmemory="512M"
            source="1.4">
            <packageset dir="${src}">
                <include name="org/**"/>
            </packageset>
            <packageset dir="${build.src}">
                <include name="org/**"/>
            </packageset>
            <classpath>
                <path refid="classpath.core"/>
            </classpath>
        </javadoc>
        <delete dir="${build.src}"/>
    </target>

    <target name="copy-xapi" if="has.xmldb.src">
        <echo message="Copying XML:DB API sources ..."/>
        <copy todir="${build.src}">
            <fileset dir="${xmldb.src}">
                <include name="org/xmldb/api/base/**"/>
                <include name="org/xmldb/api/modules/**"/>
                <include name="org/xmldb/api/*.java"/>
            </fileset>
        </copy>
    </target>

    <!-- ================================================================== -->
    <!-- Cleanup                                                            -->
    <!-- ================================================================== -->
    <target name="clean" description="Cleanup">
        <echo message="-------------------------"/>
        <echo message="Cleaning"/>
        <echo message="-------------------------"/>
        <delete dir="${build.classes}"/>
        <delete dir="${dist.dir}"/>
        <delete quiet="true">
            <fileset dir="log" includes="*"/>
            <fileset dir="tmp" includes="*"/>
            <fileset dir="${src.webapp}/WEB-INF/logs"
            excludes=".DO_NOT_DELETE" includes="*"/>
        </delete>
        <delete dir="${junit.reports.dat}"/>
        <delete dir="${junit.reports.html}"/>
        <delete dir="${src.webapp}/api"/>
        <delete dir="${src.webapp}/WEB-INF/data/backup"/>
        <delete dir="${src.webapp}/WEB-INF/data/journal"/>
        <delete>
            <fileset dir="${src.webapp}/WEB-INF/data"
            includes="*.dbx,*.log" excludes=".DO_NOT_DELETE" />
        </delete>
        <delete dir="samples/classes"/>
        <delete failonerror="no" file="examples.jar"/>
        <delete failonerror="no" file="exist.jar"/>
        <delete failonerror="no" file="exist-optional.jar"/>
        <delete failonerror="no" file="start.jar"/>
        <delete failonerror="no" dir="${dist}"/>
        <ant antfile="build.xml" dir="tools/wrapper" target="clean"/>
        <ant antfile="build.xml" dir="extensions/modules" target="clean"/>
    </target>


    <!-- ================================================================== -->
    <!-- Prepare webapp                                                     -->
    <!-- ================================================================== -->
    <target depends="jar,extension-modules,samples" name="webapps">
        <mkdir dir="dist"/>
        
        <!-- When there are no java docs, create empty file -->
        <mkdir dir="webapp/api"/>
        <touch file="webapp/api/index.html"/>

        <mkdir dir="webapp/WEB-INF/data"/>
        <mkdir dir="webapp/WEB-INF/logs"/>

        <chmod file="webapp/bin/client.sh" perm="+x"/>
    </target>

    <!-- ================================================================== -->
    <!-- Create .war file                                                   -->
    <!-- ================================================================== -->
    <target name="dist-war" depends="webapps" description="Create war file">
        <war destfile="${dist}/exist-${DSTAMP}.war" webxml="webapp/WEB-INF/web.xml">
                
            <!-- Add files to WEB-INF/lib -->
            <lib dir=".">
                <include name="start.jar"/>
                <include name="exist.jar"/>
                <include name="exist-optional.jar"/>
                <include name="exist-modules.jar"/>
            </lib>
            <lib dir="${lib.core}">
                <include name="*.jar"/>
                <exclude name="javax.servlet.jar"/>
            </lib>
            <lib dir="${lib.optional}">
                <include name="*.jar"/>
            </lib>
            <lib dir="${lib.user}">
                <include name="*.jar"/>
            </lib>
            <!-- The following jars should not be here, but in 'endorsed' -->
            <lib dir="${lib.endorsed}">
                <include name="*.jar"/>
            </lib>
            
            <!-- Add configuration files to WEB-INF -->
            <webinf dir=".">
                <include name="client.properties"/>
                <include name="backup.properties"/>
                <include name="server.xml"/>
            </webinf>
            
            <!-- Add files context root ('/') -->
            <fileset dir="webapp">
                <exclude name="**/*~"/>
                <exclude name="WEB-INF/web.xml"/>
                <exclude name="WEB-INF/data/*.dbx"/>
                <exclude name="**/*.log"/>
            </fileset>
            <zipfileset dir="samples" prefix="samples">
                <include name="**"/>
                <exclude name="**/*~"/>
                <exclude name="xupdate/**"/>
                <exclude name="test.xml"/>
                <exclude name="**/.*"/>
            </zipfileset>
            
            <!-- Not needed for war file -->
            <!-- <fileset dir=".">
            <include name="start.jar"/>
            <include name="examples.jar"/>
            </fileset> -->
            
            <!-- Add additional information -->
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Build-Timestamp" value="${DSTAMP}"/>
                <attribute name="Project-Name" value="${project.name}"/>
                <attribute name="Project-Version" value="${project.version}"/>
            </manifest>

        </war>
    </target>
    
    <!-- ================================================================== -->
    <!-- Prepare dist                                                       -->
    <!-- ================================================================== -->
    <target depends="jar,samples,extension-modules,wrapper" name="dist">
        <delete dir="dist"/>
        <delete failonerror="false">
            <fileset dir="webapp/WEB-INF/logs" includes="*.log"/>
        </delete>
        <mkdir dir="${dist}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${dist.dir}/bin"/>
        <mkdir dir="${dist.dir}/src"/>
        <mkdir dir="${dist.dir}/lib"/>
        <mkdir dir="${dist.dir}/lib/core"/>
        <mkdir dir="${dist.dir}/lib/optional"/>
        <mkdir dir="${dist.dir}/lib/endorsed"/>
        <mkdir dir="${dist.dir}/lib/user"/>
        <mkdir dir="${dist.dir}/tools"/>
        <mkdir dir="${dist.dir}/tools/lib"/>
        <mkdir dir="${jetty.dir}/logs"/>
        <mkdir dir="${jetty.dir}/work"/>
        <mkdir dir="${dist.dir}/webapp"/>
        <mkdir dir="${dist.dir}/webapp/WEB-INF/logs"/>
        <mkdir dir="${dist.dir}/webapp/WEB-INF/data"/>
        <mkdir dir="${dist.dir}/log"/>
        <mkdir dir="${dist.dir}/samples"/>
        <mkdir dir="${dist.dir}/thirdparty"/>
        <mkdir dir="${dist.dir}/extensions"/>
        <mkdir dir="${dist.dir}/extensions/modules"/>
        <touch file="${dist.dir}/webapp/WEB-INF/data/.DO_NOT_DELETE"/>
        <touch file="${dist.dir}/webapp/WEB-INF/logs/.DO_NOT_DELETE"/>
        <touch file="${dist.dir}/log/.DO_NOT_DELETE"/>

        <!--   <filter token="database" value="native_cluster"/>   -->
        <filter token="database" value="native"/>

        <copy todir="${dist.dir}/" filtering="true">
            <fileset dir=".">
                <include name="LICENSE"/>
                <include name="README"/>
                <include name="*.bat"/>
                <include name="*.sh"/>
                <include name="conf.xml"/>
                <include name="descriptor.xml"/>
                <include name="build.xml"/>
                <include name="log4j.xml"/>
                <include name="examples-setup.xml"/>
                <include name="stopword"/>
                <include name="*.properties"/>
                <include name="*.jpg"/>
                <include name="*.css"/>
            </fileset>
        </copy>

        <copy todir="${dist.dir}/">
            <fileset dir=".">
                <include name="exist.jar"/>
                <include name="exist-optional.jar"/>
                <include name="examples.jar"/>
                <include name="start.jar"/>
                <include name="exist-modules.jar"/>
            </fileset>
        </copy>

        <copy todir="${dist.dir}/src">
            <fileset dir="./src">
                <exclude name="**/*~"/>
                <exclude name=".*"/>
            </fileset>
        </copy>
        <copy todir="${dist.dir}/bin">
            <fileset dir="./bin">
                <exclude name="**/*~"/>
                <exclude name="*.log"/>
                <exclude name=".*"/>
            </fileset>
        </copy>
        <copy todir="${dist.dir}/lib/core">
            <fileset dir="${lib.core}"/>
        </copy>
        <copy todir="${dist.dir}/lib/optional">
            <fileset dir="${lib.optional}"/>
        </copy>
        <copy todir="${dist.dir}/lib/endorsed">
            <fileset dir="${lib.endorsed}"/>
        </copy>
        <copy todir="${dist.dir}/lib/user">
            <fileset dir="${lib.user}"/>
        </copy>
        <copy todir="${dist.dir}/tools">
            <fileset dir="tools">
                <exclude name="**/work/**/*"/>
                <exclude name="**/logs/*"/>
            </fileset>
        </copy>
        <copy todir="${dist.dir}/webapp">
            <fileset dir="./webapp">
                <exclude name="**/*.dbx"/>
                <exclude name="**/logs/*"/>
                <exclude name="*~"/>
                <exclude name=".*"/>
                <exclude name="resources/*.jpg"/>
            </fileset>
        </copy>
        <copy todir="${dist.dir}/thirdparty">
            <fileset dir="./thirdparty">
                <exclude name="**/lib/*.jar"/>
            </fileset>
        </copy>
        <copy todir="${dist.dir}/extensions">
            <fileset dir="./extensions"/>
        </copy>
        <copy todir="${dist.dir}/samples">
            <fileset dir="./samples">
                <exclude name="**/*~"/>
                <exclude name=".*"/>
                <exclude name="xupdate/**"/>
                <exclude name="test.xml"/>
            </fileset>
        </copy>
        <copy file="${src}/org/exist/util/mime-types.xml"
        todir="${dist.dir}"/>
        <fixcrlf eol="crlf" includes="**/*.bat" srcdir="${dist.dir}/bin"/>
        <fixcrlf eof="remove" eol="lf" includes="**/*.sh" srcdir="${dist.dir}/bin"/>
        <fixcrlf eol="crlf" includes="build.bat" srcdir="${dist.dir}"/>
        <fixcrlf eof="remove" eol="lf" includes="build.sh" srcdir="${dist.dir}"/>
        <fixcrlf eol="crlf" includes="conf.xml" srcdir="${dist.dir}"/>
        <chmod perm="+x">
            <fileset dir="${dist.dir}">
                <include name="**/*.sh"/>
                <include name="**/*.pl"/>
            </fileset>
        </chmod>
        <chmod perm="+x">
            <fileset dir="${dist.dir}/tools/wrapper/bin">
                <include name="wrapper"/>
            </fileset>
        </chmod>
    </target>
    
    <!-- ================================================================== -->
    <!-- Create dist-zip                                                    -->
    <!-- ================================================================== -->
    <target depends="dist" name="dist-zip" description="Create dist-zip">
        <zip basedir="${dist}" compress="true"
        excludes="${project.name}-${project.version}.zip"
        zipfile="${dist}/${project.name}-${project.version}.zip"/>
    </target>
	
    <!-- ================================================================== -->
    <!-- Create dist-tgz                                                    -->
    <!-- ================================================================== -->
    <target depends="dist" name="dist-tgz" description="Create dist-tgz">
        <property name="dist.name" value="${project.name}-${project.version}"/>
        <delete file="${dist}/${dist.name}.tar.gz"/>
        <delete file="${dist}/${dist.name}.tar"/>
        <tar basedir="${dist}" excludes="${dist.name}.zip" longfile="gnu" tarfile="${dist}/${dist.name}.tar"/>
        <gzip src="${dist}/${dist.name}.tar" zipfile="${dist}/${dist.name}.tar.gz"/>
        <delete file="${dist}/${dist.name}.tar"/>
    </target>
    
    <!-- ================================================================== -->
    <!-- Build installer                                                    -->
    <!-- ================================================================== -->
    <target name="commandline-installer">
        <ant antfile="build.xml" dir="tools/izpack"/>
    </target>

    <target depends="all,samples,javadocs" name="prepare-installer">
        <taskdef name="izpack" classpath="${izpack.dir}/lib/compiler.jar"
        classname="com.izforge.izpack.ant.IzPackTask"/>
        <tstamp/>
        <delete dir="${jetty.dir}/work/Jetty__8080__exist"/>
        <touch file="webapp/WEB-INF/logs/exist.log"/>
        <touch file="webapp/WEB-INF/logs/xmldb.log"/>
        <copy file="installer/install.xml.tmpl" tofile="installer/install.xml" filtering="true"/>
    </target>

    <target depends="prepare-installer" name="installer" description="Create installer">
        <echo message="Calling IzPack to create installer ..."/>
        <izpack input="installer/install.xml"
        output="installer/${project.name}-${project.version}.jar"
        basedir="." izPackDir="${izpack.dir}"
        installerType="standard"/>
    </target>

    <target depends="prepare-installer,commandline-installer"
        name="snapshot-installer" description="Create snapshot installer">
        <echo message="Calling IzPack to create installer ..."/>
        <property name="inst-jar" value="installer/${project.name}-snapshot-${DSTAMP}.jar"/>
        <izpack input="installer/install.xml"
        output="installer/${project.name}-snapshot-${DSTAMP}.jar"
        basedir="." izPackDir="${izpack.dir}"
        installerType="standard"/>

        <mkdir dir="installer/temp"/>
        <tstamp/>
        <unjar src="installer/${project.name}-snapshot-${DSTAMP}.jar"
        dest="installer/temp"/>
        <delete>
            <fileset dir="installer/temp">
                <include name="META-INF/EXIST.*"/>
            </fileset>
        </delete>
        <delete file="installer/${project.name}-snapshot-${DSTAMP}.jar"/>
        <jar destfile="installer/${project.name}-snapshot-${DSTAMP}.jar"
            basedir="installer/temp" compress="yes" update="yes">
            <manifest>
                <attribute name="Main-Class" value="org.exist.izpack.CommandLineInstaller"/>
            </manifest>
        </jar>
        <delete dir="installer/temp"/>
    </target>

    <target depends="prepare-installer" name="cvs-build">
        <echo message="Calling IzPack to create installer ..."/>
        <izpack input="installer/install.xml"
        output="installer/${project.name}-cvs-${DSTAMP}.jar"
        basedir="." izPackDir="${izpack.dir}"
        installerType="standard"/>
    </target>
	
    <!-- ================================================================== -->
    <!-- Create HTML files for docs on http://exist-db.org                  -->
    <!-- ================================================================== -->
    <target depends="jar" name="prepare-docs">
        <property name="demo.host" value="http://demo.exist-db.org"/>
        <delete dir="${build.docs}" failonerror="false"/>
        <mkdir dir="${build.docs}"/>
        <mkdir dir="${build.docs.src}"/>

        <echo message="Copying docs to temporary location ${build.docs.src}"/>
        <copy todir="${build.docs.src}">
            <fileset dir="${src.webapp}">
                <include name="WEB-INF/**"/>
                <include name="*.xml"/>
                <include name="*.html"/>
                <include name="sitemap.xmap"/>
                <include name="styles/**"/>
                <include name="stylesheets/**"/>
                <exclude name="WEB-INF/data/*"/>
            </fileset>
        </copy>

        <echo message="Adjusting links ..."/>
        <replace dir="${build.docs.src}" summary="true"
            includes="*.xml">
            <replacefilter token="index.xml" value="index.html"/>
            <replacefilter token="acknowledge.xml" value="acknowledge.html"/>
            <replacefilter token="ant-tasks.xml" value="ant-tasks.html"/>
            <replacefilter token="changes.xml" value="changes.html"/>
            <replacefilter token="client.xml" value="client.html"/>
            <replacefilter token="cluster.xml" value="cluster.html"/>
            <replacefilter token="journal.xml" value="journal.html"/>
            <replacefilter token="configuration.xml" value="configuration.html"/>
            <replacefilter token="credits.xml" value="credits.html"/>
            <replacefilter token="deployment.xml" value="deployment.html"/>
            <replacefilter token="devguide.xml" value="devguide.html"/>
            <replacefilter token="documentation.xml" value="documentation.html"/>
            <replacefilter token="indexing.xml" value="indexing.html"/>
            <replacefilter token="facts.xml" value="facts.html"/>
            <replacefilter token="howtos.xml" value="howtos.html"/>
            <replacefilter token="performance.xml" value="performance.html"/>
            <replacefilter token="quickstart.xml" value="quickstart.html"/>
            <replacefilter token="security.xml" value="security.html"/>
            <replacefilter token="xquery.xml" value="xquery.html"/>
            <replacefilter token="updating.xml" value="updating.html"/>
            <replacefilter token="update_ext.xml" value="update_ext.html"/>
            <replacefilter token='"xinclude.xml' value='"xinclude.html'/>
            <replacefilter token="xacml.xml" value="xacml.html"/>
            <replacefilter token="xacml-features.xml" value="xacml-features.html"/>
            <replacefilter token="xacml-intro.xml" value="xacml-intro.html"/>
            <replacefilter token="xacml-usage.xml" value="xacml-usage.html"/>
            <replacefilter token="xacml-dev.xml" value="xacml-dev.html"/>
            <replacefilter token="webdav.xml" value="webdav.html"/>
            
            <replacefilter token="examples.xml" value="${demo.host}/examples.xml"/>
            <replacefilter token="xquery/acronyms.xq" value="${demo.host}/xquery/acronyms.xq"/>
            <replacefilter token="mods/" value="${demo.host}/mods/"/>
            <replacefilter token="xquery/xquery.xq" value="${demo.host}/xquery/xquery.xq"/>
            <replacefilter token="sandbox/sandbox.xql" value="${demo.host}/sandbox/sandbox.xql"/>
            <replacefilter token='url="xmldb/db/' value='url="${demo.host}/xmldb/db/'/>
            <replacefilter token='href="xmldb/db/' value='href="${demo.host}/xmldb/db/'/>
            <replacefilter token="admin/admin.xql" value="${demo.host}/admin/admin.xql"/>
            <replacefilter token='href="status"' value='href="${demo.host}/status"'/>
            <replacefilter token="xquery/functions.xq" value="${demo.host}/xquery/functions.xq"/>
            <replacefilter token='url="xquery/guess.xql' value='url="${demo.host}/xquery/guess.xql'/>
            <replacefilter token="xquery/login.xql" value="${demo.host}/xquery/login.xql"/>
            <replacefilter token="apps/applications.xml" value="${demo.host}/apps/applications.xml"/>
            <replacefilter token="webstart/exist.jnlp" value="${demo.host}/webstart/exist.jnlp"/>
        </replace>
    </target>

    <target depends="prepare-docs" name="docs">
        <mkdir dir="${build.docs.html}"/>

        <delete dir="${build}/work"/>

        <echo message="Calling Cocoon ..."/>

        <cocoon verbose="true"
            classpathref="classpath.core"
            precompile-only="false"
            confirm-extensions="false"
            context-dir="${build.docs.src}"
            config-file="${build.docs.src}/WEB-INF/cocoon.xconf"
            work-dir="${build}/work"
            dest-dir="${build.docs.html}"
            extension=".html"
            accept="*/*">
            <logging log-kit="${build.docs.src}/WEB-INF/logkit.xconf" logger="cli" level="DEBUG" />
            <uris name="site" follow-links="false">
                <uri type="append" src="index.xml"/>
                <uri type="append" src="acknowledge.xml"/>
                <uri type="append" src="ant-tasks.xml"/>
                <uri type="append" src="changes.xml"/>
                <uri type="append" src="client.xml"/>
                <uri type="append" src="cluster.xml"/>
                <uri type="append" src="journal.xml"/>
                <uri type="append" src="configuration.xml"/>
                <uri type="append" src="credits.xml"/>
                <uri type="append" src="deployment.xml"/>
                <uri type="append" src="devguide.xml"/>
                <uri type="append" src="documentation.xml"/>
                <uri type="append" src="examples.xml"/>
                <uri type="append" src="indexing.xml"/>
                <uri type="append" src="facts.xml"/>
                <uri type="append" src="howtos.xml"/>
                <uri type="append" src="performance.xml"/>
                <uri type="append" src="quickstart.xml"/>
                <uri type="append" src="security.xml"/>
                <uri type="append" src="xquery.xml"/>
                <uri type="append" src="xinclude.xml"/>
                <uri type="append" src="updating.xml"/>
                <uri type="append" src="update_ext.xml"/>
                <uri type="append" src="xacml.xml"/>
                <uri type="append" src="xacml-features.xml"/>
                <uri type="append" src="xacml-intro.xml"/>
                <uri type="append" src="xacml-usage.xml"/>
                <uri type="append" src="xacml-dev.xml"/>
                <uri type="append" src="webdav.xml"/>
                <uri type="append" src="developper.html"/>
            </uris>
        </cocoon>

        <echo message="Renaming files ..."/>
        <move todir="${build.docs.html}">
            <fileset dir="${build.docs.html}">
                <include name="*.xml"/>
            </fileset>
            <mapper type="glob" from="*.xml" to="*.html"/>
        </move>

        <copy todir="${build.docs.html}">
            <fileset dir="webapp">
                <include name="styles/**"/>
                <include name="resources/**"/>
                <include name="*.jpg"/>
                <include name="*.png"/>
                <include name="*.gif"/>
            </fileset>
        </copy>
    </target>

    <!-- ============================================================================ -->
    <!-- Build thirdparty modules (JBoss integration)                                 -->
    <!--                                                                              -->
    <!-- ============================================================================ -->
    <target name="thirdparty" depends="jar">
        <ant antfile="build.xml" dir="thirdparty/jboss"/>
    </target>

    <target name="wrapper" depends="jar">
        <ant antfile="build.xml" dir="tools/wrapper"/>
    </target>

    <target name="extension-modules" depends="jar">
        <ant antfile="build.xml" dir="extensions/modules"/>
    </target>

    <target name="cleandocs">
        <replaceregexp>
            <regexp pattern="/\*.*Description of the Method.*\*/"/>
            <substitution expression=""/>
            <fileset dir="src/org/exist/xmldb">
                <include name="*.java"/>
            </fileset>
        </replaceregexp>
    </target>

    <target name="demoserver">
        <echo message="Adjusting links ..."/>
        <property name="host" value="http://exist-db.org"/>
        <delete dir="${build.docs}" failonerror="false"/>
        <mkdir dir="${build.docs}"/>
        <mkdir dir="${build.docs.src}"/>

        <echo message="Copying docs to temporary location ${build.docs.src}"/>
        <copy todir="${build.docs.src}">
            <fileset dir="${src.webapp}">
                <include name="**/*"/>
                <exclude name="WEB-INF/data/*"/>
                <exclude name="WEB-INF/logs/*"/>
            </fileset>
        </copy>
    	
        <replace dir="${build.docs.src}" summary="true"
            includes="sidebar.xml">
            <replacefilter token="index.xml" value="${host}/index.html"/>
            <replacefilter token="acknowledge.xml" value="${host}/acknowledge.html"/>
            <replacefilter token="credits.xml" value="${host}/credits.html"/>
            <replacefilter token="facts.xml" value="${host}/facts.html"/>
            <replacefilter token="quickstart.xml" value="${host}/quickstart.html"/>
            <replacefilter token="documentation.xml" value="${host}/documentation.html"/>
            <!--replacefilter token="#mailing" value="${host}/index.html#mailing"/-->
            <replacefilter token="api/index.html" value="${host}/api/index.html"/>
        </replace>

        <replace dir="${build.docs.src}" summary="true">
            <include name="acronyms/sidebar.xml"/>
            <include name="apps/sidebar.xml"/>
            <include name="library/sidebar.xml"/>
            <include name="xquery/sidebar.xml"/>
            <replacefilter token="../index.xml" value="${host}/index.html"/>
            <replacefilter token="../acknowledge.xml" value="${host}/acknowledge.html"/>
            <replacefilter token="../credits.xml" value="${host}/credits.html"/>
            <replacefilter token="../quickstart.xml" value="${host}/quickstart.html"/>
            <replacefilter token="../documentation.xml" value="${host}/documentation.html"/>
            <replacefilter token="../api/index.html" value="${host}/api/index.html"/>
        </replace>

        <replace dir="${build.docs.src}/admin" summary="true">
            <include name="admin.xql"/>
            <replacefilter token='&lt;a href="..">Home&lt;/a>' value='&lt;a href="${host}">Home&lt;/a>'/>
        </replace>
        <replace dir="${build.docs.src}/sandbox" summary="true">
            <include name="sandbox.xql"/>
            <replacefilter token='&lt;a href="../index.xml">Home&lt;/a>' value='&lt;a href="${host}">Home&lt;/a>'/>
            <replacefilter token='&lt;a href="../index.xml#download">Download&lt;/a>' value='&lt;a href="${host}#download">Download&lt;/a>'/>
        </replace>
        <replace dir="${build.docs.src}/mods" summary="true">
            <include name="config.xqm"/>
            <include name="login.xhtml"/>
            <include name="mods.xq"/>
            <replacefilter token='&lt;a href=".."' value='&lt;a href="${host}"'/>
            <replacefilter token="../index.xml" value="${host}"/>
        </replace>
    </target>
    
    <!-- ============================================================================ -->
    <!-- Sign jar files for java webstart.                                            -->
    <!--                                                                              -->
    <!-- ============================================================================ -->
    <target name="sign" if="key.store.present">
        
        <!-- Only sign if key store exists. otherwise skip signing -->
    
        <echo message="!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"/>
        <echo message="!! Signing jar files ..."/>
        <echo message="!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"/>
        <ant antfile="build/scripts/jarsigner.xml" dir="." target="jnlp-sign-exist"/>

        <echo message="!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"/>
        <echo message="!! Please run &apos;build -f build-sign.xml&apos; "/>
        <echo message="!! at least once manually for enabling webstart !!"/>
        <echo message="!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"/>
        
        <!-- the core jars can NOT be signed in this build.xml file because -->
        <!-- the jars are some how locked by ant (classpath.core)-->

    </target>
    
</project>
