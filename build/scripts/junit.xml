<?xml version="1.0" encoding="UTF-8"?>

<!-- ======================================================================= -->
<!-- eXist-db build file : Run jUnit tests                                    -->
<!-- ======================================================================= -->

<project basedir="../.." default="test" name="jUnit tests">

    <description>jUnit tests for eXist-db</description>
    
    <!-- import common targets -->
    <import file="../../build.xml"/>

    <path id="classpath.junit">
        <pathelement path="${module.exist-core}/${build.test.classes}"/>
    </path>

     <path id="classpath.test-libs">
         <path path="${module.exist-testkit}/${build.classes}"/>
         <fileset dir="${lib.test}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <condition property="junit.haltonerror" value="true" else="false">
        <isset property="test.haltonerror"/>
    </condition>

    <condition property="junit.haltonfailure" value="true" else="false">
        <isset property="test.haltonfailure"/>
    </condition>

    <condition property="gc.log.file.prefix" 
        value="-XX:+PrintReferenceGC -XX:+PrintGCCause -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+PrintTenuringDistribution -Xloggc:" 
        else="-Xlog:gc*,gc+ref=debug,gc+phases=debug,gc+age=debug,safepoint:file=" >
        <matches pattern="^1\.[1-8]+\.[0-9]+(_[0-9]+)?$" string="${java.version}"/>
    </condition>

    <target name="test"
        depends="test-prepare, test-local, test-extensions, test-jetty, test-concurrent, test-remote, test-recovery, test-wrapup, test-ant"
            description="Run jUnit tests"/>

    <!-- jetty.port and jetty.port.ssl with defaults. /ljo -->
    <property name="jetty.port" value="8080" />
    <property name="jetty.port.ssl" value="8443" />
    <!-- Or shall we rather have two, eg
            jetty.port.jetty and jetty.port.standalone
            with jetty.port pointing to jetty.port.jetty? /ljo -->
    <property name="jetty.port.jetty" value="8080" />
    <property name="jetty.port.ssl.jetty" value="8443" />
    <property name="jetty.port.standalone" value="8088" />
    <property name="jetty.port.ssl.standalone" value="8451" />

    <!-- Extra jUnit properties -->
    <property name="junit.reports.dat" value="${module.exist-core}/${junit.reports}/data"/>
    <property name="junit.reports.html" value="${module.exist-core}/${junit.reports}/html"/>

    <target name="test-compile">
        <mkdir dir="${module.exist-core}/${build.test.classes}"/>

         <echo
            message="Compiling with Java ${ant.java.version} from ${build.compiler.source} source to ${build.compiler.target} target, debug ${build.debug}, optimize ${build.optimize}, deprecation ${build.deprecation}"/>
            
        <javac includeAntRuntime="false" debug="${build.debug}" deprecation="${build.deprecation}"
            destdir="${module.exist-core}/${build.test.classes}" encoding="UTF-8"
            optimize="${build.optimize}" srcdir="${module.exist-core}/${src.test}"
            source="${build.compiler.source}" target="${build.compiler.target}">
            <classpath>
                <path refid="classpath.core"/>
                <path refid="classpath.jetty"/>
                <path refid="classpath.test-libs"/>
            </classpath>
        </javac>

        <!-- copy all test resources to compiled tests output dir -->
        <copy todir="${module.exist-core}/${build.test.classes}" includeEmptyDirs="false">
            <fileset dir="${module.exist-core}/${resources.test}">
                <include name="**/*"/>
            </fileset>
            <file name="LICENSE"/>
        </copy>

        <copy todir="${build.test.classes}/samples" includeemptydirs="false">
            <fileset dir="samples" >
                <exclude name="ant/**"/>
                <exclude name="http/**"/>
                <exclude name="soap/**"/>
                <exclude name="src/**"/>
                <exclude name="xmlrpc/**"/>
                <exclude name="build.xml"/>
            </fileset>
        </copy>
        <copy todir="${module.exist-core}/${build.test.classes}/org/exist/xquery/value" includeemptydirs="false">
            <file name="webapp/logo.jpg"/>
        </copy>

       <!-- <ant antfile="build.xml" dir="extensions/indexes" target="compile-tests"/>
        <ant antfile="build.xml" dir="extensions/xqdoc" target="compile-tests"/> -->
    </target>

    <!-- Seperate target for creating folders -->
    <target name="test-prepare" depends="jar,test-compile">
        <delete failonerror="false">
            <fileset dir="webapp/WEB-INF/data" includes="*.dbx,*.log"/>
        </delete>

        <delete dir="${junit.reports}"/>
        <mkdir dir="${junit.reports.dat}"/>
        <mkdir dir="${junit.reports.html}"/>

        <!-- create a log4j config for running the tests -->
        <xslt in="${basedir}/log4j2.xml" out="${module.exist-core}/${build.test.classes}/log4j2-test.xml" style="${build.scripts}/log4j2-test.xsl" classpathref="classpath.core">
            <factory name="net.sf.saxon.TransformerFactoryImpl"/>
            <classpath>
                <fileset dir="lib/endorsed">
                    <include name="Saxon*.jar"/>
                </fileset>
            </classpath>
        </xslt>

    </target>

    <!-- Generate HTML reports -->
    <target name="test-wrapup">
        <echo message="-----------------------------"/>
        <echo message="Creating jUnit reports, please wait"/>
        <echo message="-----------------------------"/>
        <junitreport todir="${junit.reports.dat}">
            <fileset dir="${junit.reports.dat}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.reports.html}">
                <classpath>
                    <fileset dir="lib/endorsed">
                        <include name="xalan*.jar"/>
                        <include name="xml-apis*.jar"/>
                        <include name="xercesImpl*.jar"/>
                        <include name="serializer*.jar"/>
                    </fileset>
                </classpath>
                <factory name="org.apache.xalan.processor.TransformerFactoryImpl"/>
            </report>
        </junitreport>
    </target>

    <!-- Test set 1 : local database instance -->
    <target name="test-local">
        <echo message="------------------------------------------"/>
        <echo message="Running tests on a local database instance"/>
        <echo message="------------------------------------------"/>

        <junit haltonfailure="${junit.haltonfailure}" haltonerror="${junit.haltonerror}" printsummary="yes" showoutput="${junit.output}" fork="yes" forkmode="perTest">
            <jvmarg value="-Xms2g" />
            <jvmarg value="-Xmx2g" />
            <jvmarg value="-XX:MetaspaceSize=1g" />
            <jvmarg value="-XX:NewRatio=1" />
            <jvmarg line="${gc.log.file.prefix}${junit.reports.dat}/test-local_gc.log" />

            <sysproperty key="exist.home" value="${basedir}" />
            <sysproperty key="java.util.logging.manager" value="org.apache.logging.log4j.jul.LogManager"/>
            <!-- local database, so should not be needed. /ljo -->
            <sysproperty key="jetty.port" value="${jetty.port}" />
            <sysproperty key="jetty.port.ssl" value="${jetty.port.ssl}" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.aspectj"/>
            <classpath refid="classpath.junit"/>
            <classpath refid="classpath.test-libs"/>
            
            <formatter type="plain"/>
            <formatter type="xml"/>

            <!-- xquery smoke tests //-->
            <test name="xquery.CoreTests" todir="${junit.reports.dat}"/>
            <test name="xquery.dates.DateTests" todir="${junit.reports.dat}"/>
            <test name="xquery.expathrepo.ExpathRepoTests" todir="${junit.reports.dat}"/>
            <!--test name="xquery.indexing.IndexingTests" todir="${junit.reports.dat}"/-->
            <test name="xquery.util.UtilTests" todir="${junit.reports.dat}"/>
            <test name="xquery.xinclude.XIncludeTests" todir="${junit.reports.dat}"/>
            <!--test name="xquery.xmlcalabash.XMLCalabashTests" todir="${junit.reports.dat}"/-->
            <!--test name="xquery.xproc.XProcTests" todir="${junit.reports.dat}"/-->
            <test name="xquery.xquery3.XQuery3Tests" todir="${junit.reports.dat}"/>
            <test name="xquery.optimizer.OptimizerTests" todir="${junit.reports.dat}"/>
            <test name="xquery.arrays.ArrayTests" todir="${junit.reports.dat}"/>
            <test name="xquery.maps.MapTests" todir="${junit.reports.dat}"/>
            <test name="xquery.logicalOp.LogicalOpTests" todir="${junit.reports.dat}"/>
            <test name="xquery.numbers.NumberTests" todir="${junit.reports.dat}"/>
            <test name="xquery.modules.compression.CompressionTests" todir="${junit.reports.dat}"/>
            <test name="xquery.modules.file.FileTests" todir="${junit.reports.dat}"/>
            <test name="xquery.validation.ValidationTests" todir="${junit.reports.dat}"/>

            <!--  //-->
            <test name="org.exist.http.AuditTrailSessionListenerTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.util.SortTests" todir="${junit.reports.dat}"/>
            <test name="org.exist.xmldb.XmldbLocalTests" todir="${junit.reports.dat}"/>
            <test name="org.exist.xupdate.XUpdateTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.xupdate.RemoveAppendTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.xupdate.StressTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.xquery.AllXqueryTests" todir="${junit.reports.dat}"/>
            <test name="org.exist.xquery.OptimizerTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.collections.triggers.AllTriggerTests" todir="${junit.reports.dat}"/>
            <test name="org.exist.collections.AllCollectionTests" todir="${junit.reports.dat}"/>
            <test name="org.exist.security.AccountTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.security.LocalSecurityManagerRoundtripTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.security.RemoteSecurityManagerRoundtripTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.security.RestApiSecurityTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.security.SimpleACLPermissionTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.security.UnixStylePermissionTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.security.XmldbApiSecurityTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.security.XMLDBSecurityTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.security.internal.aider.UnixStylePermissionAiderTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.storage.NativeBrokerTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.storage.StartupLockingTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.storage.lock.DocumentLocksTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.storage.lock.CollectionLocksTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.storage.lock.GetXMLResourceNoLockTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.storage.lock.LockManagerTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.storage.lock.ProtectedModeTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.AllIndexerTests" todir="${junit.reports.dat}"/>

            <test name="org.exist.storage.ModificationTimeTest" todir="${junit.reports.dat}"/>
            
            <!-- Execute all other tests except those that have to be called manually.   -->
            <batchtest todir="${junit.reports.dat}">
                <fileset dir="${module.exist-core}/${src.test}">
                    <include name="**/*Test.java"/>
                    <include name="org/exist/*/*Test.java"/>
                    <exclude name="**/concurrent/**/*.java"/>
                    <exclude name="**/xmldb/*.java"/>
                    <exclude name="**/xupdate/*.java"/>
                    <exclude name="**/xquery/*.java"/>
                    <exclude name="**/xmlrpc/*.java"/>
                    <exclude name="**/http/*.java"/>
                    <exclude name="**/storage/*.java"/>
                    <exclude name="**/storage/journal/AbstractJournalTest.java"/>
                    <exclude name="**/storage/serializers/*.java"/>
                    <exclude name="**/storage/lock/*.java"/>
                    <exclude name="**/soap/*.java"/>
                    <exclude name="**/numbering/*.java"/>
                    <exclude name="**/collections/*.java"/>
                    <exclude name="**/security/*.java"/>
                    <exclude name="org/exist/*.java"/>
                    <exclude name="org/exist/http/underheavyload/*.java"/>
                    <exclude name="org/exist/util/hashtable/Abstract*.java"/>
                    <exclude name="xquery/**/*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <!-- Test set 2 : Jetty Server -->
    <target name="test-jetty">
        <echo message="------------------------------------------"/>
        <echo message="Running tests on a remote Jetty Server"/>
        <echo message="------------------------------------------"/>

        <junit haltonfailure="${junit.haltonfailure}" haltonerror="${junit.haltonerror}" printsummary="yes" showoutput="${junit.output}" fork="yes" forkmode="perTest">
            <jvmarg value="-Xms2g" />
            <jvmarg value="-Xmx2g" />
            <jvmarg value="-XX:MetaspaceSize=1g" />
            <jvmarg value="-XX:NewRatio=1" />
            <jvmarg line="${gc.log.file.prefix}${junit.reports.dat}/test-jetty_gc.log" />

            <sysproperty key="exist.home" value="${basedir}" />
            <sysproperty key="java.util.logging.manager" value="org.apache.logging.log4j.jul.LogManager"/>
            <!-- fixme! - jetty.port.jetty /ljo -->
            <sysproperty key="jetty.port" value="${jetty.port}" />
            <sysproperty key="jetty.port.ssl" value="${jetty.port.ssl}" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.aspectj"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.junit"/>
            <classpath refid="classpath.test-libs"/>
            
            <formatter type="plain"/>
            <formatter type="xml"/>

            <batchtest todir="${junit.reports.dat}">
                <fileset dir="${module.exist-core}/${src.test}">
                    <include name="org/exist/soap/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>


    <!-- Test set 3 : concurrent tests -->
    <target name="test-concurrent">
        <delete failonerror="false">
            <fileset dir="webapp/WEB-INF/data" includes="*.dbx"/>
        </delete>
        <echo message="-----------------"/>
        <echo message="Concurrency tests on local database"/>
        <echo message="-----------------"/>
        <junit haltonfailure="${junit.haltonfailure}" haltonerror="${junit.haltonerror}" printsummary="yes" showoutput="${junit.output}" fork="yes" forkmode="once">
            <jvmarg value="-Xms2g" />
            <jvmarg value="-Xmx4g" />
            <jvmarg value="-XX:MetaspaceSize=1g" />
            <jvmarg value="-XX:NewRatio=1" />
            <jvmarg line="${gc.log.file.prefix}${junit.reports.dat}/test-concurrent_gc.log" />

            <sysproperty key="exist.home" value="${basedir}" />
            <sysproperty key="java.util.logging.manager" value="org.apache.logging.log4j.jul.LogManager"/>
            <!-- local database, so should not be needed. /ljo -->
            <sysproperty key="jetty.port" value="${jetty.port}" />
            <sysproperty key="jetty.port.ssl" value="${jetty.port.ssl}" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.aspectj"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.junit"/>
            <classpath refid="classpath.test-libs"/>
            
            <formatter type="plain"/>
            <formatter type="xml"/>
            <test name="org.exist.xmldb.concurrent.AllConcurrentTests" todir="${junit.reports.dat}"/>

            <!-- NOTE: Can still show Collection <-> Document deadlocks -->
            <!-- test name="org.exist.collections.ConcurrencyTest" todir="${junit.reports.dat}"/ -->
        </junit>
    </target>

    <!-- Test set 4 : recovery tests -->
    <target name="test-recovery">
        <echo message="--------------"/>
        <echo message="Recovery tests"/>
        <echo message="--------------"/>
        <junit haltonfailure="${junit.haltonfailure}" haltonerror="${junit.haltonerror}" printsummary="yes" showoutput="${junit.output}" fork="yes" forkmode="perTest">
            <jvmarg value="-Xms2g" />
            <jvmarg value="-Xmx2g" />
            <jvmarg value="-XX:MetaspaceSize=1g" />
            <jvmarg value="-XX:NewRatio=1" />
            <jvmarg line="${gc.log.file.prefix}${junit.reports.dat}/test-recovery_gc.log" />

            <sysproperty key="exist.home" value="${basedir}" />
            <sysproperty key="java.util.logging.manager" value="org.apache.logging.log4j.jul.LogManager"/>
            <!-- local database, so should not be needed. /ljo -->
            <sysproperty key="jetty.port" value="${jetty.port}" />
            <sysproperty key="jetty.port.ssl" value="${jetty.port.ssl}" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.aspectj"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.junit"/>
            <classpath refid="classpath.test-libs"/>
            <formatter type="plain"/>
            <formatter type="xml"/>
            <test name="org.exist.storage.AllStorageTests" todir="${junit.reports.dat}"/>
            <test name="org.exist.storage.RecoverBinaryTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.storage.RecoverXmlTest" todir="${junit.reports.dat}"/>
        </junit>
    </target>

    <!-- Test set 5: tests on custom index modules -->
    <target name="test-extensions">
        <ant antfile="${build.scripts}/extensions-build.xml" target="test" inheritAll="false"/>
    </target>


    <!-- Helper target for starting Standalone Server -->
    <target name="start-server">
        <echo message="---------------------------------------"/>
        <echo message="Starting remote Standalone Server..."/>
        <echo message="---------------------------------------"/>
        <delete failonerror="false">
            <fileset dir="webapp/WEB-INF/data" includes="*.dbx"/>
        </delete>
        <java classname="org.exist.jetty.StandaloneServer">
            <sysproperty key="exist.home" value="${basedir}" />
            <sysproperty key="java.util.logging.manager" value="org.apache.logging.log4j.jul.LogManager"/>
            <!-- fixme! - jetty.port.standalone /ljo -->
            <sysproperty key="jetty.port" value="${jetty.port.standalone}" />
            <sysproperty key="jetty.port.ssl" value="${jetty.port.ssl.standalone}" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.junit"/>
            <!--arg value="-d"/-->
        </java>
        <echo>Standalone Server started.</echo>
    </target>

    <!-- Test set 5 : tests on remote server -->
    <target name="test-remote" depends="jar">
        <mkdir dir="${junit.reports}"/>
        <echo message="--------------------------------"/>
        <echo message="Running tests on remote database"/>
        <echo message="--------------------------------"/>
        <junit haltonfailure="${junit.haltonfailure}" haltonerror="${junit.haltonerror}" printsummary="yes" showoutput="${junit.output}" fork="yes" forkmode="perTest">
            <jvmarg value="-Xms2g" />
            <jvmarg value="-Xmx2g" />
            <jvmarg value="-XX:MetaspaceSize=1g" />
            <jvmarg value="-XX:NewRatio=1" />
            <jvmarg line="${gc.log.file.prefix}${junit.reports.dat}/test-remote_gc.log" />

            <sysproperty key="exist.home" value="${basedir}" />
            <sysproperty key="java.util.logging.manager" value="org.apache.logging.log4j.jul.LogManager"/>
            <!-- fixme! - jetty.port.standalone /ljo -->
            <sysproperty key="jetty.port" value="${jetty.port.standalone}" />
            <sysproperty key="jetty.port.ssl" value="${jetty.port.ssl.standalone}" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.aspectj"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.junit"/>
            <classpath refid="classpath.test-libs"/>
            <formatter type="plain"/>
            <formatter type="xml"/>

            <test name="org.exist.xmlrpc.AllXmlRpcTests" todir="${junit.reports.dat}"/>

            <test name="org.exist.xmldb.XmldbRemoteTests" todir="${junit.reports.dat}"/>
            <test name="org.exist.xquery.XPathQueryTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.http.RESTServiceTest" todir="${junit.reports.dat}"/>
            <test name="org.exist.storage.XIncludeSerializerTest" todir="${junit.reports.dat}"/>
        </junit>
    </target>

    
        <!-- Test set 6 : tests on eXist-db ant tasks -->
    <target name="test-ant" depends="jar">
        <mkdir dir="${junit.reports}"/>
        <echo message="--------------------------------"/>
        <echo message="Running antunit tests on eXist-db ant tasks"/>
        <echo message="--------------------------------"/>
        <junit haltonfailure="${junit.haltonfailure}" haltonerror="${junit.haltonerror}" printsummary="yes" showoutput="${junit.output}" fork="yes" forkmode="once">
            <jvmarg value="-Xms2g" />
            <jvmarg value="-Xmx2g" />
            <jvmarg value="-XX:MetaspaceSize=1g" />
            <jvmarg value="-XX:NewRatio=1" />
            <jvmarg line="${gc.log.file.prefix}${junit.reports.dat}/test-ant_gc.log" />

            <sysproperty key="exist.home" value="${basedir}" />
            <sysproperty key="java.util.logging.manager" value="org.apache.logging.log4j.jul.LogManager"/>
            <!-- local database, so should not be needed. /ljo -->
            <sysproperty key="jetty.port" value="${jetty.port}" />
            <sysproperty key="jetty.port.ssl" value="${jetty.port.ssl}" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.aspectj"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.junit"/>
            <classpath refid="classpath.test-libs"/>
            <formatter type="plain"/>
            <formatter type="xml"/>

            <test name="org.exist.ant.AntUnitTestRunner" todir="${junit.reports.dat}"/>
        </junit>
    </target>

    <target name="extra-tests">
        <echo message="------------------------------------------"/>
        <echo message="Running additional tests, which may take some time"/>
        <echo message="------------------------------------------"/>

        <junit haltonfailure="${junit.haltonfailure}" haltonerror="${junit.haltonerror}" printsummary="yes" showoutput="${junit.output}" fork="yes" forkmode="once">
            <jvmarg value="-Xms2g" />
            <jvmarg value="-Xmx2g" />
            <jvmarg value="-XX:MetaspaceSize=1g" />
            <jvmarg value="-XX:NewRatio=1" />
            <jvmarg line="${gc.log.file.prefix}${junit.reports.dat}/extra-tests_gc.log" />

            <sysproperty key="exist.home" value="${basedir}" />
            <sysproperty key="java.util.logging.manager" value="org.apache.logging.log4j.jul.LogManager"/>
            <!-- fixme! - jetty.port.jetty /ljo -->
            <sysproperty key="jetty.port" value="${jetty.port}" />
            <sysproperty key="jetty.port.ssl" value="${jetty.port.ssl}" />
            <classpath refid="classpath.core"/>
            <classpath refid="classpath.aspectj"/>
            <classpath refid="classpath.jetty"/>
            <classpath refid="classpath.junit"/>
            <classpath refid="classpath.test-libs"/>
            
            <formatter type="plain"/>
            <formatter type="xml"/>
            <test name="org.exist.xquery.XQueryUpdateTest" todir="${junit.reports.dat}"/>
        </junit>
    </target>

    <!-- Helper target for stopping remote Standalone Server -->
    <!-- This target must be called after all tests because it shutsdown -->
    <!-- the current Jvm -->
    <target name="test-shutdown-server">
      <!-- Register Ant tasks for eXist-db -->
      <typedef resource="org/exist/ant/antlib.xml" uri="http://exist-db.org/ant">

        <!-- fixme! -  jetty.port.standalone.
             But no need to pass in here in shutdown.
             And no .ssl needed. /ljo -->
        <sysproperty key="jetty.port" value="${jetty.port.standalone}" />
        <classpath refid="classpath.core"/>
        <classpath refid="classpath.junit"/>
        <classpath refid="classpath.jetty"/>
      </typedef>
      
      <echo message="Shutting down the Standalone Server ..."/>
      <xmldb:shutdown xmlns:xmldb="http://exist-db.org/ant"
                      uri="xmldb:exist://localhost:${jetty.port.standalone}/xmlrpc/db"
                      user="admin" password=""/>
      <sleep seconds="10"/>
    </target>
    
</project>
