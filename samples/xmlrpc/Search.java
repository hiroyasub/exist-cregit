begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|samples
operator|.
name|xmlrpc
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlrpc
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_comment
comment|/**  *  Description of the Class  *  * @author     Wolfgang Meier<meier@ifs.tu-darmstadt.de>  * @created    August 1, 2002  */
end_comment

begin_class
specifier|public
class|class
name|Search
block|{
specifier|private
specifier|static
name|String
name|encoding
init|=
literal|"ISO-8859-1"
decl_stmt|;
comment|/**      *  Description of the Method      *      * @param  args           Description of the Parameter      * @exception  Exception  Description of the Exception      */
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
name|args
index|[]
parameter_list|)
throws|throws
name|Exception
block|{
name|XmlRpcClient
name|xmlrpc
init|=
operator|new
name|XmlRpcClient
argument_list|(
literal|"http://localhost:8080/exist/xmlrpc"
argument_list|)
decl_stmt|;
name|xmlrpc
operator|.
name|setBasicAuthentication
argument_list|(
literal|"admin"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
comment|// execute query and retrieve an id for the generated result set
name|Vector
name|params
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
name|params
operator|.
name|addElement
argument_list|(
literal|"document(*)//SPEECH[SPEAKER='HAMLET']"
argument_list|)
expr_stmt|;
name|Integer
name|resultId
init|=
operator|(
name|Integer
operator|)
name|xmlrpc
operator|.
name|execute
argument_list|(
literal|"executeQuery"
argument_list|,
name|params
argument_list|)
decl_stmt|;
comment|// get the number of hits
name|params
operator|.
name|clear
argument_list|()
expr_stmt|;
name|params
operator|.
name|addElement
argument_list|(
name|resultId
argument_list|)
expr_stmt|;
name|Integer
name|hits
init|=
operator|(
name|Integer
operator|)
name|xmlrpc
operator|.
name|execute
argument_list|(
literal|"getHits"
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"found "
operator|+
name|hits
operator|+
literal|" hits."
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"retrieving hits 1 to 5 ..."
argument_list|)
expr_stmt|;
comment|// retrieve some results
name|params
operator|.
name|clear
argument_list|()
expr_stmt|;
name|params
operator|.
name|addElement
argument_list|(
name|resultId
argument_list|)
expr_stmt|;
name|params
operator|.
name|addElement
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|params
operator|.
name|addElement
argument_list|(
operator|new
name|Integer
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|params
operator|.
name|addElement
argument_list|(
name|encoding
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
operator|&&
name|i
operator|<
name|hits
operator|.
name|intValue
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|params
operator|.
name|setElementAt
argument_list|(
operator|new
name|Integer
argument_list|(
name|i
argument_list|)
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|byte
index|[]
name|data
init|=
operator|(
name|byte
index|[]
operator|)
name|xmlrpc
operator|.
name|execute
argument_list|(
literal|"retrieve"
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
operator|new
name|String
argument_list|(
name|data
argument_list|,
name|encoding
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

