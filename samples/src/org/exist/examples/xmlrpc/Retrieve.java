begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|examples
operator|.
name|xmlrpc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlrpc
operator|.
name|XmlRpc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlrpc
operator|.
name|XmlRpcClient
import|;
end_import

begin_comment
comment|/**  *  Retrieve a document from the database using XMLRPC.  *  *  @author     Wolfgang Meier<meier@ifs.tu-darmstadt.de>  *  @created    August 1, 2002  */
end_comment

begin_class
specifier|public
class|class
name|Retrieve
block|{
specifier|protected
specifier|final
specifier|static
name|String
name|uri
init|=
literal|"http://localhost:8080/exist/xmlrpc"
decl_stmt|;
specifier|protected
specifier|static
name|void
name|usage
parameter_list|()
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"usage: org.exist.examples.xmlrpc.Retrieve path-to-document"
argument_list|)
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
name|args
index|[]
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|args
operator|.
name|length
operator|<
literal|1
condition|)
block|{
name|usage
argument_list|()
expr_stmt|;
block|}
name|XmlRpc
operator|.
name|setEncoding
argument_list|(
literal|"UTF-8"
argument_list|)
expr_stmt|;
name|XmlRpcClient
name|xmlrpc
init|=
operator|new
name|XmlRpcClient
argument_list|(
name|uri
argument_list|)
decl_stmt|;
name|Hashtable
name|options
init|=
operator|new
name|Hashtable
argument_list|()
decl_stmt|;
name|options
operator|.
name|put
argument_list|(
literal|"indent"
argument_list|,
literal|"yes"
argument_list|)
expr_stmt|;
name|options
operator|.
name|put
argument_list|(
literal|"encoding"
argument_list|,
literal|"UTF-8"
argument_list|)
expr_stmt|;
name|options
operator|.
name|put
argument_list|(
literal|"expand-xincludes"
argument_list|,
literal|"yes"
argument_list|)
expr_stmt|;
name|options
operator|.
name|put
argument_list|(
literal|"process-xsl-pi"
argument_list|,
literal|"no"
argument_list|)
expr_stmt|;
name|Vector
name|params
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
name|params
operator|.
name|addElement
argument_list|(
name|args
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|params
operator|.
name|addElement
argument_list|(
name|options
argument_list|)
expr_stmt|;
name|String
name|xml
init|=
operator|(
name|String
operator|)
name|xmlrpc
operator|.
name|execute
argument_list|(
literal|"getDocumentAsString"
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|xml
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

