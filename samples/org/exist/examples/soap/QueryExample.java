begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|examples
operator|.
name|soap
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|soap
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|QueryExample
block|{
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|xpath
init|=
name|args
operator|.
name|length
operator|>
literal|0
condition|?
name|args
index|[
literal|0
index|]
else|:
literal|"//SPEECH[LINE&= 'curse*']"
decl_stmt|;
name|QueryService
name|service
init|=
operator|new
name|QueryServiceLocator
argument_list|()
decl_stmt|;
name|Query
name|query
init|=
name|service
operator|.
name|getQuery
argument_list|()
decl_stmt|;
comment|// connect to the database
name|String
name|sessionId
init|=
name|query
operator|.
name|connect
argument_list|(
literal|"guest"
argument_list|,
literal|"guest"
argument_list|)
decl_stmt|;
comment|// execute the query
name|QueryResponse
name|resp
init|=
name|query
operator|.
name|query
argument_list|(
name|sessionId
argument_list|,
name|xpath
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"found: "
operator|+
name|resp
operator|.
name|getHits
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|resp
operator|.
name|getHits
argument_list|()
operator|==
literal|0
condition|)
comment|// nothing found
return|return;
comment|// iterate through collections and print hits for each document
name|QueryResponseCollection
name|collections
index|[]
init|=
name|resp
operator|.
name|getCollections
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|collections
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Collection: "
operator|+
name|collections
index|[
name|i
index|]
operator|.
name|getCollectionName
argument_list|()
argument_list|)
expr_stmt|;
name|QueryResponseDocument
name|documents
index|[]
init|=
name|collections
index|[
name|i
index|]
operator|.
name|getDocuments
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|documents
operator|.
name|length
condition|;
name|j
operator|++
control|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"\t"
operator|+
name|documents
index|[
name|j
index|]
operator|.
name|getDocumentName
argument_list|()
operator|+
literal|"\t"
operator|+
name|documents
index|[
name|j
index|]
operator|.
name|getHitCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|// retrieve first 10 results, indenting is on, xinclude is off, matches in elements
comment|// are highlighted (tagged)
name|String
index|[]
name|hits
init|=
name|query
operator|.
name|retrieve
argument_list|(
name|sessionId
argument_list|,
literal|1
argument_list|,
literal|10
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|"elements"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|hits
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|hits
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
comment|// close the connection (release session on the server)
name|query
operator|.
name|disconnect
argument_list|(
name|sessionId
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

