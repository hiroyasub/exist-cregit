begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|examples
operator|.
name|xmldb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|DatabaseInstanceManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XQueryService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xupdate
operator|.
name|XUpdateProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|DatabaseManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|ResourceIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|ResourceSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|XMLResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|XUpdateQueryService
import|;
end_import

begin_comment
comment|/**  *  Retrieve a document from the database. To run this example enter:  *   *  bin/run.sh org.exist.examples.xmldb.Retrieve collection document   *   *  in the root directory of the distribution.  *  *	@author     Wolfgang Meier<meier@ifs.tu-darmstadt.de>  */
end_comment

begin_class
specifier|public
class|class
name|MultipleDatabases
block|{
specifier|protected
specifier|static
name|String
name|driver
init|=
literal|"org.exist.xmldb.DatabaseImpl"
decl_stmt|;
specifier|protected
specifier|static
name|String
name|URI_DB1
init|=
literal|"xmldb:exist://"
operator|+
name|DBBroker
operator|.
name|ROOT_COLLECTION
decl_stmt|;
specifier|protected
specifier|static
name|String
name|URI_DB2
init|=
literal|"xmldb:test://"
operator|+
name|DBBroker
operator|.
name|ROOT_COLLECTION
decl_stmt|;
specifier|protected
specifier|static
name|String
name|XUPDATE_1
init|=
literal|"<xu:modifications version=\"1.0\" xmlns:xu=\""
operator|+
name|XUpdateProcessor
operator|.
name|XUPDATE_NS
operator|+
literal|"\">"
operator|+
literal|"<xu:insert-after select=\"//SPEECH/LINE[.&amp;= 'loving']\">"
operator|+
literal|"<TEST>New line inserted</TEST>"
operator|+
literal|"</xu:insert-after>"
operator|+
literal|"</xu:modifications>"
decl_stmt|;
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
name|args
index|[]
parameter_list|)
throws|throws
name|Exception
block|{
comment|// initialize database drivers
name|Class
name|cl
init|=
name|Class
operator|.
name|forName
argument_list|(
name|driver
argument_list|)
decl_stmt|;
comment|// create the default database
name|Database
name|database
init|=
operator|(
name|Database
operator|)
name|cl
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|database
operator|.
name|setProperty
argument_list|(
literal|"create-database"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|DatabaseManager
operator|.
name|registerDatabase
argument_list|(
name|database
argument_list|)
expr_stmt|;
comment|// create a second database called "test", configured by
comment|// configuration file "testConf.xml"
name|Database
name|database2
init|=
operator|(
name|Database
operator|)
name|cl
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|database2
operator|.
name|setProperty
argument_list|(
literal|"create-database"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|database2
operator|.
name|setProperty
argument_list|(
literal|"configuration"
argument_list|,
literal|"/home/wolf/test/conf.xml"
argument_list|)
expr_stmt|;
name|database2
operator|.
name|setProperty
argument_list|(
literal|"database-id"
argument_list|,
literal|"test"
argument_list|)
expr_stmt|;
name|DatabaseManager
operator|.
name|registerDatabase
argument_list|(
name|database2
argument_list|)
expr_stmt|;
name|Collection
name|collection1
init|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|URI_DB1
argument_list|,
literal|"admin"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|loadFile
argument_list|(
name|collection1
argument_list|,
literal|"samples/shakespeare/hamlet.xml"
argument_list|)
expr_stmt|;
name|Collection
name|collection2
init|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|URI_DB2
argument_list|,
literal|"admin"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|loadFile
argument_list|(
name|collection2
argument_list|,
literal|"samples/shakespeare/r_and_j.xml"
argument_list|)
expr_stmt|;
name|doQuery
argument_list|(
name|collection1
argument_list|,
literal|"document()//SPEECH[LINE&= 'cursed spite']"
argument_list|)
expr_stmt|;
name|doQuery
argument_list|(
name|collection2
argument_list|,
literal|"document()//SPEECH[LINE&= 'love' and SPEAKER = 'JULIET']"
argument_list|)
expr_stmt|;
name|doXUpdate
argument_list|(
name|collection1
argument_list|,
name|XUPDATE_1
argument_list|)
expr_stmt|;
name|doXUpdate
argument_list|(
name|collection2
argument_list|,
name|XUPDATE_1
argument_list|)
expr_stmt|;
name|shutdown
argument_list|(
name|collection1
argument_list|)
expr_stmt|;
name|shutdown
argument_list|(
name|collection2
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|doQuery
parameter_list|(
name|Collection
name|collection
parameter_list|,
name|String
name|query
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|XQueryService
name|service
init|=
operator|(
name|XQueryService
operator|)
name|collection
operator|.
name|getService
argument_list|(
literal|"XQueryService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|ResourceSet
name|result
init|=
name|service
operator|.
name|query
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Found "
operator|+
name|result
operator|.
name|getSize
argument_list|()
operator|+
literal|" results."
argument_list|)
expr_stmt|;
for|for
control|(
name|ResourceIterator
name|i
init|=
name|result
operator|.
name|getIterator
argument_list|()
init|;
name|i
operator|.
name|hasMoreResources
argument_list|()
condition|;
control|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|i
operator|.
name|nextResource
argument_list|()
operator|.
name|getContent
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|void
name|doXUpdate
parameter_list|(
name|Collection
name|collection
parameter_list|,
name|String
name|xupdate
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|XUpdateQueryService
name|service
init|=
operator|(
name|XUpdateQueryService
operator|)
name|collection
operator|.
name|getService
argument_list|(
literal|"XUpdateQueryService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|long
name|mods
init|=
name|service
operator|.
name|update
argument_list|(
name|xupdate
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|mods
operator|+
literal|" modifications processed."
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|loadFile
parameter_list|(
name|Collection
name|collection
parameter_list|,
name|String
name|path
parameter_list|)
throws|throws
name|XMLDBException
block|{
comment|// create new XMLResource; an id will be assigned to the new resource
name|XMLResource
name|document
init|=
operator|(
name|XMLResource
operator|)
name|collection
operator|.
name|createResource
argument_list|(
name|path
operator|.
name|substring
argument_list|(
name|path
operator|.
name|lastIndexOf
argument_list|(
name|File
operator|.
name|separatorChar
argument_list|)
argument_list|)
argument_list|,
literal|"XMLResource"
argument_list|)
decl_stmt|;
name|document
operator|.
name|setContent
argument_list|(
operator|new
name|File
argument_list|(
name|path
argument_list|)
argument_list|)
expr_stmt|;
name|collection
operator|.
name|storeResource
argument_list|(
name|document
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|shutdown
parameter_list|(
name|Collection
name|collection
parameter_list|)
throws|throws
name|XMLDBException
block|{
comment|//		shutdown the database gracefully
name|DatabaseInstanceManager
name|manager
init|=
operator|(
name|DatabaseInstanceManager
operator|)
name|collection
operator|.
name|getService
argument_list|(
literal|"DatabaseInstanceManager"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|manager
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

