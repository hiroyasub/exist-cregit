begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  XFormsFilter: BufferedHttpServletResponseWrapper  *  Copyright (C) 2006 Matthijs Wensveen<m.wensveen@func.nl>  *    *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *    *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *    *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *    *  $Id: XFormsFilter.java 4565 2006-10-12 12:42:18 +0000 (Thu, 12 Oct 2006) deliriumsky $  */
end_comment

begin_package
package|package
name|uk
operator|.
name|gov
operator|.
name|devonline
operator|.
name|www
operator|.
name|xforms
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|external
operator|.
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|output
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletOutputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponseWrapper
import|;
end_import

begin_comment
comment|/**  * @author Matthijs Wensveen<m.wensveen@func.nl>  */
end_comment

begin_class
specifier|public
class|class
name|BufferedHttpServletResponseWrapper
extends|extends
name|HttpServletResponseWrapper
block|{
specifier|private
name|ByteArrayOutputStream
name|output
decl_stmt|;
specifier|private
name|BufferedServletOutputStream
name|servletOutputStream
decl_stmt|;
specifier|private
name|int
name|contentLength
decl_stmt|;
comment|/** GenericResponseWrapper constructor      *       * @param response HttpServletResponse      */
specifier|public
name|BufferedHttpServletResponseWrapper
parameter_list|(
name|HttpServletResponse
name|response
parameter_list|)
block|{
name|super
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|output
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|servletOutputStream
operator|=
operator|new
name|BufferedServletOutputStream
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
comment|/**      * getData get the data that would be written to the response as array of bytes      * @return byte[] array of bytes      */
specifier|public
name|byte
index|[]
name|getData
parameter_list|()
block|{
return|return
name|output
operator|.
name|toByteArray
argument_list|()
return|;
block|}
comment|/**      * getData get the data that would be written to the response as String      * @return String String with output      */
specifier|public
name|String
name|getDataAsString
parameter_list|()
block|{
return|return
name|output
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/** getOutputStream      * overriden method to capture the output written to the ServlertOutputStream      */
specifier|public
name|ServletOutputStream
name|getOutputStream
parameter_list|()
block|{
return|return
name|servletOutputStream
return|;
block|}
specifier|public
name|void
name|setContentLength
parameter_list|(
name|int
name|length
parameter_list|)
block|{
name|this
operator|.
name|contentLength
operator|=
name|length
expr_stmt|;
name|super
operator|.
name|setContentLength
argument_list|(
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getContentLength
parameter_list|()
block|{
return|return
name|contentLength
return|;
block|}
comment|/** getWriter get the PrintWriter to write data to      * @return PrintWriter       */
specifier|public
name|PrintWriter
name|getWriter
parameter_list|()
block|{
return|return
operator|new
name|PrintWriter
argument_list|(
name|getOutputStream
argument_list|()
argument_list|,
literal|true
argument_list|)
return|;
block|}
block|}
end_class

end_unit

