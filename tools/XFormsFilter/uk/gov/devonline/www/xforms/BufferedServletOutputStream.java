begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  XFormsFilter: BufferedServletOutputStream  *  Copyright (C) 2006 Matthijs Wensveen<m.wensveen@func.nl>  *    *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *    *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *    *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *    *  $Id: XFormsFilter.java 4565 2006-10-12 12:42:18 +0000 (Thu, 12 Oct 2006) deliriumsky $  */
end_comment

begin_package
package|package
name|uk
operator|.
name|gov
operator|.
name|devonline
operator|.
name|www
operator|.
name|xforms
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletOutputStream
import|;
end_import

begin_comment
comment|/**  * @author Matthijs Wensveen<m.wensveen@func.nl>  */
end_comment

begin_class
specifier|public
class|class
name|BufferedServletOutputStream
extends|extends
name|ServletOutputStream
block|{
specifier|private
name|PrintStream
name|stream
decl_stmt|;
comment|/** FilterServletOutputStream      *       * @param output      */
specifier|public
name|BufferedServletOutputStream
parameter_list|(
name|OutputStream
name|output
parameter_list|)
block|{
name|stream
operator|=
operator|new
name|PrintStream
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param b 	 * @see java.io.PrintStream#print(boolean) 	 */
specifier|public
name|void
name|print
parameter_list|(
name|boolean
name|b
parameter_list|)
block|{
name|stream
operator|.
name|print
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param c 	 * @see java.io.PrintStream#print(char) 	 */
specifier|public
name|void
name|print
parameter_list|(
name|char
name|c
parameter_list|)
block|{
name|stream
operator|.
name|print
argument_list|(
name|c
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param d 	 * @see java.io.PrintStream#print(double) 	 */
specifier|public
name|void
name|print
parameter_list|(
name|double
name|d
parameter_list|)
block|{
name|stream
operator|.
name|print
argument_list|(
name|d
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param f 	 * @see java.io.PrintStream#print(float) 	 */
specifier|public
name|void
name|print
parameter_list|(
name|float
name|f
parameter_list|)
block|{
name|stream
operator|.
name|print
argument_list|(
name|f
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param i 	 * @see java.io.PrintStream#print(int) 	 */
specifier|public
name|void
name|print
parameter_list|(
name|int
name|i
parameter_list|)
block|{
name|stream
operator|.
name|print
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param l 	 * @see java.io.PrintStream#print(long) 	 */
specifier|public
name|void
name|print
parameter_list|(
name|long
name|l
parameter_list|)
block|{
name|stream
operator|.
name|print
argument_list|(
name|l
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param s 	 * @see java.io.PrintStream#print(java.lang.String) 	 */
specifier|public
name|void
name|print
parameter_list|(
name|String
name|s
parameter_list|)
block|{
name|stream
operator|.
name|print
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
comment|/** 	 *  	 * @see java.io.PrintStream#println() 	 */
specifier|public
name|void
name|println
parameter_list|()
block|{
name|stream
operator|.
name|println
argument_list|()
expr_stmt|;
block|}
comment|/** 	 * @param x 	 * @see java.io.PrintStream#println(boolean) 	 */
specifier|public
name|void
name|println
parameter_list|(
name|boolean
name|x
parameter_list|)
block|{
name|stream
operator|.
name|println
argument_list|(
name|x
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param x 	 * @see java.io.PrintStream#println(char) 	 */
specifier|public
name|void
name|println
parameter_list|(
name|char
name|x
parameter_list|)
block|{
name|stream
operator|.
name|println
argument_list|(
name|x
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param x 	 * @see java.io.PrintStream#println(double) 	 */
specifier|public
name|void
name|println
parameter_list|(
name|double
name|x
parameter_list|)
block|{
name|stream
operator|.
name|println
argument_list|(
name|x
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param x 	 * @see java.io.PrintStream#println(float) 	 */
specifier|public
name|void
name|println
parameter_list|(
name|float
name|x
parameter_list|)
block|{
name|stream
operator|.
name|println
argument_list|(
name|x
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param x 	 * @see java.io.PrintStream#println(int) 	 */
specifier|public
name|void
name|println
parameter_list|(
name|int
name|x
parameter_list|)
block|{
name|stream
operator|.
name|println
argument_list|(
name|x
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param x 	 * @see java.io.PrintStream#println(long) 	 */
specifier|public
name|void
name|println
parameter_list|(
name|long
name|x
parameter_list|)
block|{
name|stream
operator|.
name|println
argument_list|(
name|x
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param x 	 * @see java.io.PrintStream#println(java.lang.String) 	 */
specifier|public
name|void
name|println
parameter_list|(
name|String
name|x
parameter_list|)
block|{
name|stream
operator|.
name|println
argument_list|(
name|x
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param buf 	 * @param off 	 * @param len 	 * @see java.io.PrintStream#write(byte[], int, int) 	 */
specifier|public
name|void
name|write
parameter_list|(
name|byte
index|[]
name|buf
parameter_list|,
name|int
name|off
parameter_list|,
name|int
name|len
parameter_list|)
block|{
name|stream
operator|.
name|write
argument_list|(
name|buf
argument_list|,
name|off
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param b 	 * @throws IOException 	 * @see java.io.FilterOutputStream#write(byte[]) 	 */
specifier|public
name|void
name|write
parameter_list|(
name|byte
index|[]
name|b
parameter_list|)
throws|throws
name|IOException
block|{
name|stream
operator|.
name|write
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param b 	 * @see java.io.PrintStream#write(int) 	 */
specifier|public
name|void
name|write
parameter_list|(
name|int
name|b
parameter_list|)
block|{
name|stream
operator|.
name|write
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
name|super
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|flush
parameter_list|()
throws|throws
name|IOException
block|{
name|stream
operator|.
name|flush
argument_list|()
expr_stmt|;
name|super
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

