<?xml version="1.0" encoding="UTF-8"?>
<project name="eXistTest" basedir="." default="all">

    <property name="webtest.home" location="."/>
    
    <property name="server.home" location="../.."/>
    <property name="test.webapp" location="${server.home}/webapp/webtest"/>
    <property name="test.results" location="${server.home}/test/webtest"/>
	<property name="test.temp" location="${server.home}/test/temp"/>
    <property name="test.results.html" location="${test.results}/html"/>

    <import file="${webtest.home}/classpath.xml"/>

    <available property="webtest.available"
        file="webtestTaskdefs.properties" filepath="${webtest.home}"/>
    
    <target name="all" depends="prepare,all-tests,style"/>

	<target name="all-tests" depends="post,modules,extension-modules,xmldb-module,xinclude"/>
	
    <target name="prepare" depends="start-jetty,clean,store,install-webtest">
        <fail unless="webtest.available">Failed to install webtest</fail>
        <taskdef resource="webtest.taskdef"
            loaderref="webtest.loader"
            classpathref="classpath.webtest"/>
        
        <mkdir dir="${test.results}"/>
    	
    	<path id="classpath.webtest">
	        <fileset dir="${webtest.home}/lib">
	            <include name="*.jar"/>
	        </fileset>
	        <fileset dir="${server.home}/lib/core">
	            <include name="*.jar"/>
	        </fileset>
	        <fileset dir="${server.home}">
	            <include name="*.jar"/>
	        </fileset>
	    </path>
    </target>
    
    <target name="modules">
        <webtest name="testModuleImports1">
            <config host="localhost" port="8080" 
                protocol="http" basepath="exist/webtest"
                summary="true" resultpath="${test.results}"
            	saveResponse="true" savePrefix="testModuleImports1"/>
            <steps>
                <invoke description="XQueryServlet: import module from relative path" 
                    url="test-modules1.xql"/>
                <verifyElementText type="H1" text="PASS"/>

                <invoke description="XQueryServlet: import module from database" 
                    url="test-modules2.xql"/>
                <verifyElementText type="H1" text="PASS"/>
                
                <invoke description="XQueryGenerator: import module from database" 
                    url="test-modules3.xq"/>
                <verifyElementText type="H1" text="PASS"/>
                
                <invoke description="XQueryGenerator: import module from relative path" 
                    url="test-modules4.xq"/>
                <verifyElementText type="H1" text="PASS"/>
            </steps>
        </webtest>
        
        <webtest name="testModuleImports2">
            <config host="localhost" port="8080" protocol="http" 
                basepath="exist/rest/db/webtest"
                summary="true" resultpath="${test.results}"
            	saveResponse="true" savePrefix="testModuleImports2"/>
            <steps>
                <invoke description="REST: import module from relative path"
                    url="test-modules1.xql"/>
                <verifyElementText type="H1" text="PASS"/>
                <invoke description="REST: import module from database"
                    url="test-modules2.xql"/>
                <verifyElementText type="H1" text="PASS"/>
            </steps>
        </webtest>
    </target>

    <target name="xinclude">
        <webtest name="testXInclude">
            <config host="localhost" port="8080" protocol="http" 
                basepath="exist/rest/db/webtest"
                summary="true" resultpath="${test.results}"
            	saveResponse="true" savePrefix="testXInclude"/>
            <steps>
                <invoke description="XInclude: character encoding test"
                    url="xinclude-test.html"/>
                <verifyXPath xpath="//div[@id = 'xpointer-simple']/text()" text="ä½›"/>
            </steps>
        </webtest>
    </target>
    
	<target name="xmldb-module">
		<mkdir dir="${test.temp}"/>
		<mkdir dir="${test.temp}/dir1"/>
		<mkdir dir="${test.temp}/dir1/dir2"/>
		<copy file="${server.home}/samples/shakespeare/hamlet.xml"
			todir="${test.temp}/dir1/dir2"/>
		<webtest name="testXmldbModule">
            <config host="localhost" port="8080" protocol="http" 
                basepath="exist/webtest"
                summary="true" resultpath="${test.results}"
            	saveResponse="true" savePrefix="testXmldbModule"/>
            <steps>
                <invoke description="XMLDB module: store-files-from-pattern test"
                    url="xmldb-module.xql"/>
            	<verifyTitle text="XML:DB module functions test"/>
                <verifyElementText htmlId="count" text="1"/>
            	<verifyElementText htmlId="stored" text="/db/webtest/dir1/dir2/hamlet.xml"/>
            </steps>
        </webtest>
	</target>

    <target name="extension-modules">
        <webtest name="testImageModule">
            <config host="localhost" port="8080" protocol="http" 
                basepath="exist/webtest"
                summary="true" resultpath="${test.results}"
            	saveResponse="true" savePrefix="testImageModule"/>
            <steps>
                <invoke description="Testing image manipulation module"
                    url="image-module.xql"/>
                <verifyTitle text="Testing image module functions"/>
                <verifyElementText htmlId="height" text="132"/>
                <verifyElementText htmlId="width" text="333"/>
                <verifyElementText htmlId="thumbs-count" text="4"/>
                <verifyImages/>
            </steps>
        </webtest>
    </target>
    
	 <target name="post" depends="prepare">
        <webtest name="testPostReceiver1">
            <config host="localhost" port="8080" protocol="http" basepath="exist/webtest" summary="true" resultpath="${test.results}" saveResponse="true" savePrefix="testPostReceiver1"/>
            <steps>
                <invoke description="Testing POST for postreceiver1.xql" url="postreceiver1.xql" method="POST" contentFile="${test.webapp}/postdata.txt"/>
                <verifyXPath xpath="//enquiry"/>
            	<verifyXPath xpath="//enquiry/name" text="Adam"/>
                <verifyXPath xpath="//enquiry/address" text="Virginia"/>
                <verifyXPath xpath="//enquiry/number" text="01404"/>
                <verifyXPath xpath="//enquiry/email" text="adam.retter@exist.dom"/>
                <verifyXPath xpath="//enquiry/message" text="test"/>
            </steps>
        </webtest>
        <webtest name="testPostReceiver2">
            <config host="localhost" port="8080" protocol="http" basepath="exist/webtest" summary="true" resultpath="${test.results}" saveResponse="true"  savePrefix="testPostReceiver2"/>
            <steps>
                <invoke description="Testing POST for postreceiver2.xql" url="postreceiver2.xql" method="POST" contentFile="${test.webapp}/postdata.txt"/>
               	<verifyXPath xpath="//data"/>
            	<verifyXPath xpath="//data/enquiry"/>
            	<verifyXPath xpath="//data/enquiry/name" text="Adam"/>
                <verifyXPath xpath="//data/enquiry/address" text="Virginia"/>
                <verifyXPath xpath="//data/enquiry/number" text="01404"/>
                <verifyXPath xpath="//data/enquiry/email" text="adam.retter@exist.dom"/>
                <verifyXPath xpath="//data/enquiry/message" text="test"/>
            </steps>
        </webtest>
    </target>

    <target name="install-webtest" unless="webtest.available">
        <echo>Installing Canoo Webtest</echo>
        <echo>-------------------------</echo>
        <echo>Downloading webtest: this may take a few minutes ...</echo>
        <get src="http://webtest.canoo.com/webtest/build.zip"
            dest="${webtest.home}/build.zip" verbose="false"/>
        <unzip src="${webtest.home}/build.zip" overwrite="true"
            dest="${webtest.home}"/>
        <delete file="${webtest.home}/build.zip"/>
        <available property="webtest.available"
            file="webtestTaskdefs.properties" filepath="${webtest.home}"/>
    </target>
    
    <target name="store" xmlns:xdb="http://exist-db.org/ant">
        <echo>Storing required files into the database</echo>
        <echo>---------------------------------------</echo>
        
        <xdb:store user="guest" password="guest"
            uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/webtest" createcollection="true"
            initdb="true">
            <fileset dir="${test.webapp}">
                <include name="testmod.xq"/>
                <include name="test-modules1.xql"/>
                <include name="test-modules2.xql"/>
                <include name="xinclude-test.html"/>
                <include name="included.xml"/>
            </fileset>
        </xdb:store>
    	<xdb:store user="guest" password="guest"
            uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/webtest/images" createcollection="true">
            <fileset dir="${test.webapp}/..">
    			<include name="logo.jpg"/>
        		<include name="resources/TOY2006s.jpg"/>
        	</fileset>
		</xdb:store>
    </target>
    
    <target name="style">
        <mkdir dir="${test.results.html}"/>
        <tstamp>
            <format property="now" pattern="dd.MM.yyyy HH:mm" locale="en"/>
        </tstamp>
        <style basedir="${test.results}"
            destdir="${test.results.html}"
            includes="results.xml"
            extension=".html"
            style="${webtest.home}/resources/WebTestReport.xsl"
            >
            <param name="reporttime" expression="${now}"/>
        </style>
        <copy todir="${test.results.html}" failonerror="false" overwrite="true">
            <fileset dir="${webtest.home}/resources">
                <include name="*.css"/>
                <include name="*.js"/>
            </fileset>
        </copy>
    </target>
    
    <target name="clean">
        <delete dir="${test.results}"/>
    </target>
    
    <target name="start-jetty">
        <echo message="---------------------------------------"/>
        <echo message="Starting Jetty server..."/>
        <echo message="---------------------------------------"/>
    	<echo message="exist.home=${server.home}"/>
        <java classname="org.exist.start.Main">
            <sysproperty key="exist.home" value="${server.home}" />
            <classpath refid="classpath.jetty"/>
            <arg value="jetty"/>
        </java>
        <echo>Server started.</echo>
    </target>
</project>