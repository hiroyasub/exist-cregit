begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|irc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletOutputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServlet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jibble
operator|.
name|pircbot
operator|.
name|IrcException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jibble
operator|.
name|pircbot
operator|.
name|NickAlreadyInUseException
import|;
end_import

begin_class
specifier|public
class|class
name|IRCProxy
extends|extends
name|HttpServlet
block|{
specifier|private
name|String
name|server
init|=
literal|"irc.freenode.net"
decl_stmt|;
specifier|private
name|String
name|channel
init|=
literal|"#testaabb"
decl_stmt|;
specifier|private
name|Map
name|channels
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
specifier|protected
name|void
name|doGet
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|ServletException
throws|,
name|IOException
block|{
name|String
name|sessionId
init|=
name|request
operator|.
name|getParameter
argument_list|(
literal|"session"
argument_list|)
decl_stmt|;
if|if
condition|(
name|sessionId
operator|==
literal|null
condition|)
block|{
name|response
operator|.
name|sendError
argument_list|(
name|HttpServletResponse
operator|.
name|SC_NOT_FOUND
argument_list|,
literal|"No session specified"
argument_list|)
expr_stmt|;
return|return;
block|}
name|IRCSession
name|session
init|=
operator|(
name|IRCSession
operator|)
name|channels
operator|.
name|get
argument_list|(
name|sessionId
argument_list|)
decl_stmt|;
if|if
condition|(
name|session
operator|==
literal|null
condition|)
block|{
name|response
operator|.
name|sendError
argument_list|(
name|HttpServletResponse
operator|.
name|SC_NOT_FOUND
argument_list|,
literal|"Session "
operator|+
name|sessionId
operator|+
literal|" not found"
argument_list|)
expr_stmt|;
return|return;
block|}
name|session
operator|.
name|run
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|doPost
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|ServletException
throws|,
name|IOException
block|{
name|String
name|sessionId
init|=
name|request
operator|.
name|getParameter
argument_list|(
literal|"session"
argument_list|)
decl_stmt|;
name|String
name|nick
init|=
name|request
operator|.
name|getParameter
argument_list|(
literal|"nick"
argument_list|)
decl_stmt|;
name|String
name|channelParam
init|=
name|request
operator|.
name|getParameter
argument_list|(
literal|"channel"
argument_list|)
decl_stmt|;
name|String
name|close
init|=
name|request
operator|.
name|getParameter
argument_list|(
literal|"close"
argument_list|)
decl_stmt|;
name|String
name|send
init|=
name|request
operator|.
name|getParameter
argument_list|(
literal|"send"
argument_list|)
decl_stmt|;
if|if
condition|(
name|sessionId
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|channelParam
operator|!=
literal|null
operator|&&
name|channelParam
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
name|channel
operator|=
name|channelParam
expr_stmt|;
try|try
block|{
name|IRCSession
name|session
init|=
operator|new
name|IRCSession
argument_list|(
name|server
argument_list|,
name|channel
argument_list|,
name|nick
argument_list|)
decl_stmt|;
name|sessionId
operator|=
name|session
operator|.
name|getSessionId
argument_list|()
expr_stmt|;
synchronized|synchronized
init|(
name|channels
init|)
block|{
name|channels
operator|.
name|put
argument_list|(
name|sessionId
argument_list|,
name|session
argument_list|)
expr_stmt|;
block|}
name|response
operator|.
name|setContentType
argument_list|(
literal|"text/text"
argument_list|)
expr_stmt|;
name|response
operator|.
name|setContentLength
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|response
operator|.
name|setHeader
argument_list|(
literal|"X-IRC-Session"
argument_list|,
name|sessionId
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NickAlreadyInUseException
name|e
parameter_list|)
block|{
name|response
operator|.
name|sendError
argument_list|(
name|HttpServletResponse
operator|.
name|SC_CONFLICT
argument_list|,
literal|"Nick is already in use"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|response
operator|.
name|sendError
argument_list|(
name|HttpServletResponse
operator|.
name|SC_INTERNAL_SERVER_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IrcException
name|e
parameter_list|)
block|{
name|response
operator|.
name|sendError
argument_list|(
name|HttpServletResponse
operator|.
name|SC_INTERNAL_SERVER_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|IRCSession
name|session
init|=
operator|(
name|IRCSession
operator|)
name|channels
operator|.
name|get
argument_list|(
name|sessionId
argument_list|)
decl_stmt|;
if|if
condition|(
name|session
operator|==
literal|null
condition|)
block|{
name|response
operator|.
name|sendError
argument_list|(
name|HttpServletResponse
operator|.
name|SC_NOT_FOUND
argument_list|,
literal|"Session "
operator|+
name|sessionId
operator|+
literal|" not found"
argument_list|)
expr_stmt|;
return|return;
block|}
if|if
condition|(
name|close
operator|!=
literal|null
condition|)
block|{
name|log
argument_list|(
literal|"Closing session "
operator|+
name|sessionId
argument_list|)
expr_stmt|;
name|session
operator|.
name|quit
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|send
operator|!=
literal|null
condition|)
block|{
name|log
argument_list|(
literal|"Sending message: "
operator|+
name|send
operator|+
literal|"; id: "
operator|+
name|sessionId
argument_list|)
expr_stmt|;
name|session
operator|.
name|send
argument_list|(
name|send
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|destroy
parameter_list|()
block|{
for|for
control|(
name|Iterator
name|i
init|=
name|channels
operator|.
name|values
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|IRCSession
name|session
init|=
operator|(
name|IRCSession
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|session
operator|.
name|quit
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

