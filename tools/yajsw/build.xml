<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id$ -->
<!-- ======================================================================= -->
<!-- Compile the wrapper class to start eXist as a service                   -->
<!-- ======================================================================= -->
<project basedir="." default="compile" name="eXistWrapper">

    <property name="jetty.dir" value="tools/jetty"/>
    <property name="server.dir" value="${basedir}/../.."/>
    <property name="wrapper.dir" value="${server.dir}/tools/yajsw"/>
    <property environment="env"/>

    <property file="${server.dir}/build.properties" />
    <property file="${server.dir}/vm.properties" />

    <property name="src" value="${wrapper.dir}/src"/>
    <property name="lib" value="${wrapper.dir}/lib"/>
    <property name="classes" value="${wrapper.dir}/classes"/>
    <property name="conf" value="${wrapper.dir}/conf"/>
    <property name="bin" value="${wrapper.dir}/bin"/>
    <property name="logs" value="${wrapper.dir}/logs"/>
    <property name="work" value="${wrapper.dir}/work"/>


    <property name="build.compiler" value="modern"/>
    
    <path id="classpath.wrapper">
        <pathelement path="wrapperApp.jar"/>
    	<pathelement path="${server.dir}/start.jar"/>
    	<pathelement path="${server.dir}/exist.jar"/>
    </path>
    
    <!-- =================================================================== -->
    <!-- Prepare the build                                                   -->
    <!-- =================================================================== -->
    <target name="prepare">
    	<echo message="--------------------------------------------------"/>
        <echo message="Setting up Java Service Wrapper"/>
        <echo message="--------------------------------------------------"/>
        
        <mkdir dir="${classes}"/>
	    <delete dir="${logs}"/>
		<mkdir dir="${logs}"/>
    	<delete dir="${work}"/>
    	<mkdir dir="${work}"/>
        <tstamp/>

        <filter token="app.name" value="eXist-db"/>
        <filter token="app.long.name" value="eXist-db Native XML Database"/>
        <filter token="app.description" value="eXist-db Database Server"/>
        <filter token="app.long.description" value="Start and stop the eXist-db Database Server wrapper"/>
        <filter token="jetty.dir" value="${jetty.dir}"/>
        <filter token="java.vm" value="${env.JAVA_HOME}/bin/java"/>
        <filter token="server.dir" value="${env.EXIST_HOME}"/>
        <filter token="memory.max" value="${memory.max}"/>
        <copy file="${conf}/wrapper.conf.in" tofile="${conf}/wrapper.conf" filtering="true" overwrite="true" />
        <filter token="java.vm" value="${JAVA_HOME}/bin/java"/>
        <filter token="server.dir" value="${INSTALL_PATH}"/>
        <filter token="memory.max" value="${MAX_MEMORY}"/>
        <copy file="${conf}/wrapper.conf.in" tofile="${conf}/wrapper.conf.install" filtering="true" overwrite="true"/>

        <!-- Create log4j config based on general config file -->
        <xslt in="${server.dir}/log4j2.xml" out="${conf}/log4j2.xml" style="${wrapper.dir}/wrapper-log4j.xsl"/>
    </target>

    <!-- =================================================================== -->
    <!-- Compiles the source code                                            -->
    <!-- =================================================================== -->
    <target depends="prepare" name="compile">
        <javac includeAntRuntime="false" debug="${build.debug}" deprecation="${build.deprecation}" 
			destdir="${classes}" encoding="UTF-8"
			optimize="${build.optimize}" srcdir="${src}" 
        	source="${build.compiler.source}" target="${build.compiler.target}">
            <classpath>
            	<path refid="classpath.wrapper"/>
            </classpath>
        </javac>
    </target>
	
	<target name="clean">
		<delete dir="${classes}"/>
        <delete file="${conf}/wrapper.conf"/>
        <delete file="${conf}/wrapper.conf.install"/>
	</target>
</project>
