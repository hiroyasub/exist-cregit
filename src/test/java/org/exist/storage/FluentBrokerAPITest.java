begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2017 The eXist Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public  * License along with this library; if not, write to the Free Software  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|storage
package|;
end_package

begin_import
import|import
name|com
operator|.
name|evolvedbinary
operator|.
name|j8fu
operator|.
name|tuple
operator|.
name|Tuple2
import|;
end_import

begin_import
import|import
name|com
operator|.
name|evolvedbinary
operator|.
name|j8fu
operator|.
name|tuple
operator|.
name|Tuple3
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|IMocksControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|EXistException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|CollectionMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|persistent
operator|.
name|DocumentImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|persistent
operator|.
name|DocumentMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|persistent
operator|.
name|LockedDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|PermissionDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|lock
operator|.
name|Lock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|LockException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|BiFunction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Function
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|createStrictControl
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|expect
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|FluentBrokerAPI
operator|.
name|uri
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|lock
operator|.
name|Lock
operator|.
name|LockMode
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
specifier|public
class|class
name|FluentBrokerAPITest
block|{
specifier|private
specifier|static
specifier|final
name|XmldbURI
name|TEST_COLLECTION_URI
init|=
name|uri
argument_list|(
literal|"/db/fluent-broker-api-test"
argument_list|)
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|all
parameter_list|()
throws|throws
name|PermissionDeniedException
throws|,
name|EXistException
throws|,
name|LockException
block|{
specifier|final
name|XmldbURI
name|docUri
init|=
name|uri
argument_list|(
literal|"all-test.xml"
argument_list|)
decl_stmt|;
specifier|final
name|long
name|collectionCreated
init|=
literal|1234
decl_stmt|;
specifier|final
name|long
name|docLastModified
init|=
literal|5678
decl_stmt|;
specifier|final
name|IMocksControl
name|ctrl
init|=
name|createStrictControl
argument_list|()
decl_stmt|;
name|ctrl
operator|.
name|checkOrder
argument_list|(
literal|true
argument_list|)
expr_stmt|;
specifier|final
name|BrokerPool
name|mockBrokerPool
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|BrokerPool
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|DBBroker
name|mockBroker
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|DBBroker
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|Collection
name|mockCollection
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|Collection
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|CollectionMetadata
name|mockCollectionMetadata
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|CollectionMetadata
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|LockedDocument
name|mockLockedDocument
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|LockedDocument
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|DocumentImpl
name|mockDocument
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|DocumentImpl
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|DocumentMetadata
name|mockDocumentMetadata
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|DocumentMetadata
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|mockBrokerPool
operator|.
name|getBroker
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockBroker
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockBroker
operator|.
name|openCollection
argument_list|(
name|TEST_COLLECTION_URI
argument_list|,
name|READ_LOCK
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockCollection
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockCollection
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockCollectionMetadata
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockCollectionMetadata
operator|.
name|getCreated
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|collectionCreated
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockCollection
operator|.
name|getDocumentWithLock
argument_list|(
name|mockBroker
argument_list|,
name|docUri
argument_list|,
name|READ_LOCK
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockLockedDocument
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockLockedDocument
operator|.
name|getDocument
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockDocument
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockCollection
operator|.
name|getURI
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|TEST_COLLECTION_URI
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockDocument
operator|.
name|getFileURI
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|docUri
argument_list|)
expr_stmt|;
name|mockCollection
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// NOTE: checks that Collection lock is release before Document lock
name|expect
argument_list|(
name|mockDocument
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockDocumentMetadata
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockDocumentMetadata
operator|.
name|getLastModified
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|docLastModified
argument_list|)
expr_stmt|;
name|mockLockedDocument
operator|.
name|close
argument_list|()
expr_stmt|;
name|mockBroker
operator|.
name|close
argument_list|()
expr_stmt|;
name|ctrl
operator|.
name|replay
argument_list|()
expr_stmt|;
specifier|final
name|Function
argument_list|<
name|Collection
argument_list|,
name|Long
argument_list|>
name|collectionOp
init|=
name|collection
lambda|->
name|collection
operator|.
name|getMetadata
argument_list|()
operator|.
name|getCreated
argument_list|()
decl_stmt|;
specifier|final
name|BiFunction
argument_list|<
name|Collection
argument_list|,
name|DocumentImpl
argument_list|,
name|String
argument_list|>
name|collectionDocOp
init|=
parameter_list|(
name|collection
parameter_list|,
name|doc
parameter_list|)
lambda|->
name|collection
operator|.
name|getURI
argument_list|()
operator|.
name|append
argument_list|(
name|doc
operator|.
name|getFileURI
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
specifier|final
name|Function
argument_list|<
name|DocumentImpl
argument_list|,
name|Long
argument_list|>
name|documentOp
init|=
name|document
lambda|->
name|document
operator|.
name|getMetadata
argument_list|()
operator|.
name|getLastModified
argument_list|()
decl_stmt|;
specifier|final
name|Tuple3
argument_list|<
name|Long
argument_list|,
name|String
argument_list|,
name|Long
argument_list|>
name|result
init|=
name|FluentBrokerAPI
operator|.
name|builder
argument_list|(
name|mockBrokerPool
argument_list|)
operator|.
name|withCollection
argument_list|(
name|TEST_COLLECTION_URI
argument_list|,
name|READ_LOCK
argument_list|)
operator|.
name|execute
argument_list|(
name|collectionOp
argument_list|)
operator|.
name|withDocument
argument_list|(
name|collection
lambda|->
operator|new
name|Tuple2
argument_list|<>
argument_list|(
name|docUri
argument_list|,
name|READ_LOCK
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|(
name|collectionDocOp
argument_list|)
operator|.
name|withoutCollection
argument_list|()
operator|.
name|execute
argument_list|(
name|documentOp
argument_list|)
operator|.
name|doAll
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|collectionCreated
argument_list|,
name|result
operator|.
name|_1
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_COLLECTION_URI
operator|.
name|append
argument_list|(
name|docUri
argument_list|)
argument_list|,
name|result
operator|.
name|_2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|docLastModified
argument_list|,
name|result
operator|.
name|_3
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|ctrl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|collectionOnly
parameter_list|()
throws|throws
name|PermissionDeniedException
throws|,
name|EXistException
throws|,
name|LockException
block|{
specifier|final
name|long
name|collectionCreated
init|=
literal|1234
decl_stmt|;
specifier|final
name|IMocksControl
name|ctrl
init|=
name|createStrictControl
argument_list|()
decl_stmt|;
name|ctrl
operator|.
name|checkOrder
argument_list|(
literal|true
argument_list|)
expr_stmt|;
specifier|final
name|BrokerPool
name|mockBrokerPool
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|BrokerPool
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|DBBroker
name|mockBroker
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|DBBroker
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|Collection
name|mockCollection
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|Collection
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|CollectionMetadata
name|mockCollectionMetadata
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|CollectionMetadata
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|mockBrokerPool
operator|.
name|getBroker
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockBroker
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockBroker
operator|.
name|openCollection
argument_list|(
name|TEST_COLLECTION_URI
argument_list|,
name|READ_LOCK
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockCollection
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockCollection
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockCollectionMetadata
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockCollectionMetadata
operator|.
name|getCreated
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|collectionCreated
argument_list|)
expr_stmt|;
name|mockCollection
operator|.
name|close
argument_list|()
expr_stmt|;
name|mockBroker
operator|.
name|close
argument_list|()
expr_stmt|;
name|ctrl
operator|.
name|replay
argument_list|()
expr_stmt|;
specifier|final
name|Function
argument_list|<
name|Collection
argument_list|,
name|Long
argument_list|>
name|collectionOp
init|=
name|collection
lambda|->
name|collection
operator|.
name|getMetadata
argument_list|()
operator|.
name|getCreated
argument_list|()
decl_stmt|;
specifier|final
name|long
name|result
init|=
name|FluentBrokerAPI
operator|.
name|builder
argument_list|(
name|mockBrokerPool
argument_list|)
operator|.
name|withCollection
argument_list|(
name|TEST_COLLECTION_URI
argument_list|,
name|READ_LOCK
argument_list|)
operator|.
name|execute
argument_list|(
name|collectionOp
argument_list|)
operator|.
name|doAll
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|collectionCreated
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|ctrl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|collectionAndDocOnly
parameter_list|()
throws|throws
name|PermissionDeniedException
throws|,
name|EXistException
throws|,
name|LockException
block|{
specifier|final
name|XmldbURI
name|docUri
init|=
name|uri
argument_list|(
literal|"all-test.xml"
argument_list|)
decl_stmt|;
specifier|final
name|IMocksControl
name|ctrl
init|=
name|createStrictControl
argument_list|()
decl_stmt|;
name|ctrl
operator|.
name|checkOrder
argument_list|(
literal|true
argument_list|)
expr_stmt|;
specifier|final
name|BrokerPool
name|mockBrokerPool
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|BrokerPool
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|DBBroker
name|mockBroker
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|DBBroker
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|Collection
name|mockCollection
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|Collection
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|LockedDocument
name|mockLockedDocument
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|LockedDocument
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|DocumentImpl
name|mockDocument
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|DocumentImpl
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|Lock
name|mockDocumentLock
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|Lock
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|mockBrokerPool
operator|.
name|getBroker
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockBroker
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockBroker
operator|.
name|openCollection
argument_list|(
name|TEST_COLLECTION_URI
argument_list|,
name|READ_LOCK
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockCollection
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockCollection
operator|.
name|getDocumentWithLock
argument_list|(
name|mockBroker
argument_list|,
name|docUri
argument_list|,
name|READ_LOCK
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockLockedDocument
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockLockedDocument
operator|.
name|getDocument
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockDocument
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockCollection
operator|.
name|getURI
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|TEST_COLLECTION_URI
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockDocument
operator|.
name|getFileURI
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|docUri
argument_list|)
expr_stmt|;
name|mockCollection
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// NOTE: checks that Collection lock is release before Document lock
name|mockLockedDocument
operator|.
name|close
argument_list|()
expr_stmt|;
name|mockBroker
operator|.
name|close
argument_list|()
expr_stmt|;
name|ctrl
operator|.
name|replay
argument_list|()
expr_stmt|;
specifier|final
name|BiFunction
argument_list|<
name|Collection
argument_list|,
name|DocumentImpl
argument_list|,
name|String
argument_list|>
name|collectionDocOp
init|=
parameter_list|(
name|collection
parameter_list|,
name|doc
parameter_list|)
lambda|->
name|collection
operator|.
name|getURI
argument_list|()
operator|.
name|append
argument_list|(
name|doc
operator|.
name|getFileURI
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
specifier|final
name|String
name|result
init|=
name|FluentBrokerAPI
operator|.
name|builder
argument_list|(
name|mockBrokerPool
argument_list|)
operator|.
name|withCollection
argument_list|(
name|TEST_COLLECTION_URI
argument_list|,
name|READ_LOCK
argument_list|)
operator|.
name|withDocument
argument_list|(
name|collection
lambda|->
operator|new
name|Tuple2
argument_list|<>
argument_list|(
name|docUri
argument_list|,
name|READ_LOCK
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|(
name|collectionDocOp
argument_list|)
operator|.
name|doAll
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|TEST_COLLECTION_URI
operator|.
name|append
argument_list|(
name|docUri
argument_list|)
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|ctrl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|docOnly
parameter_list|()
throws|throws
name|PermissionDeniedException
throws|,
name|EXistException
throws|,
name|LockException
block|{
specifier|final
name|XmldbURI
name|docUri
init|=
name|uri
argument_list|(
literal|"all-test.xml"
argument_list|)
decl_stmt|;
specifier|final
name|long
name|docLastModified
init|=
literal|5678
decl_stmt|;
specifier|final
name|IMocksControl
name|ctrl
init|=
name|createStrictControl
argument_list|()
decl_stmt|;
name|ctrl
operator|.
name|checkOrder
argument_list|(
literal|true
argument_list|)
expr_stmt|;
specifier|final
name|BrokerPool
name|mockBrokerPool
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|BrokerPool
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|DBBroker
name|mockBroker
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|DBBroker
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|Collection
name|mockCollection
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|Collection
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|LockedDocument
name|mockLockedDocument
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|LockedDocument
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|DocumentImpl
name|mockDocument
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|DocumentImpl
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|DocumentMetadata
name|mockDocumentMetadata
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|DocumentMetadata
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|mockBrokerPool
operator|.
name|getBroker
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockBroker
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockBroker
operator|.
name|openCollection
argument_list|(
name|TEST_COLLECTION_URI
argument_list|,
name|READ_LOCK
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockCollection
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockCollection
operator|.
name|getDocumentWithLock
argument_list|(
name|mockBroker
argument_list|,
name|docUri
argument_list|,
name|READ_LOCK
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockLockedDocument
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockLockedDocument
operator|.
name|getDocument
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockDocument
argument_list|)
expr_stmt|;
name|mockCollection
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// NOTE: checks that Collection lock is release before Document lock
name|expect
argument_list|(
name|mockDocument
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockDocumentMetadata
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockDocumentMetadata
operator|.
name|getLastModified
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|docLastModified
argument_list|)
expr_stmt|;
name|mockLockedDocument
operator|.
name|close
argument_list|()
expr_stmt|;
name|mockBroker
operator|.
name|close
argument_list|()
expr_stmt|;
name|ctrl
operator|.
name|replay
argument_list|()
expr_stmt|;
specifier|final
name|Function
argument_list|<
name|DocumentImpl
argument_list|,
name|Long
argument_list|>
name|documentOp
init|=
name|document
lambda|->
name|document
operator|.
name|getMetadata
argument_list|()
operator|.
name|getLastModified
argument_list|()
decl_stmt|;
specifier|final
name|long
name|result
init|=
name|FluentBrokerAPI
operator|.
name|builder
argument_list|(
name|mockBrokerPool
argument_list|)
operator|.
name|withCollection
argument_list|(
name|TEST_COLLECTION_URI
argument_list|,
name|READ_LOCK
argument_list|)
operator|.
name|withDocument
argument_list|(
name|collection
lambda|->
operator|new
name|Tuple2
argument_list|<>
argument_list|(
name|docUri
argument_list|,
name|READ_LOCK
argument_list|)
argument_list|)
operator|.
name|withoutCollection
argument_list|()
operator|.
name|execute
argument_list|(
name|documentOp
argument_list|)
operator|.
name|doAll
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|docLastModified
argument_list|,
name|result
argument_list|)
expr_stmt|;
name|ctrl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|collectionThenCollectionAndDoc
parameter_list|()
throws|throws
name|PermissionDeniedException
throws|,
name|EXistException
throws|,
name|LockException
block|{
specifier|final
name|XmldbURI
name|docUri
init|=
name|uri
argument_list|(
literal|"all-test.xml"
argument_list|)
decl_stmt|;
specifier|final
name|long
name|collectionCreated
init|=
literal|1234
decl_stmt|;
specifier|final
name|IMocksControl
name|ctrl
init|=
name|createStrictControl
argument_list|()
decl_stmt|;
name|ctrl
operator|.
name|checkOrder
argument_list|(
literal|true
argument_list|)
expr_stmt|;
specifier|final
name|BrokerPool
name|mockBrokerPool
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|BrokerPool
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|DBBroker
name|mockBroker
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|DBBroker
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|Collection
name|mockCollection
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|Collection
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|CollectionMetadata
name|mockCollectionMetadata
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|CollectionMetadata
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|LockedDocument
name|mockLockedDocument
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|LockedDocument
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|DocumentImpl
name|mockDocument
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|DocumentImpl
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|mockBrokerPool
operator|.
name|getBroker
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockBroker
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockBroker
operator|.
name|openCollection
argument_list|(
name|TEST_COLLECTION_URI
argument_list|,
name|READ_LOCK
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockCollection
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockCollection
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockCollectionMetadata
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockCollectionMetadata
operator|.
name|getCreated
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|collectionCreated
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockCollection
operator|.
name|getDocumentWithLock
argument_list|(
name|mockBroker
argument_list|,
name|docUri
argument_list|,
name|READ_LOCK
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockLockedDocument
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockLockedDocument
operator|.
name|getDocument
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockDocument
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockCollection
operator|.
name|getURI
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|TEST_COLLECTION_URI
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockDocument
operator|.
name|getFileURI
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|docUri
argument_list|)
expr_stmt|;
name|mockCollection
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// NOTE: checks that Collection lock is release before Document lock
name|mockLockedDocument
operator|.
name|close
argument_list|()
expr_stmt|;
name|mockBroker
operator|.
name|close
argument_list|()
expr_stmt|;
name|ctrl
operator|.
name|replay
argument_list|()
expr_stmt|;
specifier|final
name|Function
argument_list|<
name|Collection
argument_list|,
name|Long
argument_list|>
name|collectionOp
init|=
name|collection
lambda|->
name|collection
operator|.
name|getMetadata
argument_list|()
operator|.
name|getCreated
argument_list|()
decl_stmt|;
specifier|final
name|BiFunction
argument_list|<
name|Collection
argument_list|,
name|DocumentImpl
argument_list|,
name|String
argument_list|>
name|collectionDocOp
init|=
parameter_list|(
name|collection
parameter_list|,
name|doc
parameter_list|)
lambda|->
name|collection
operator|.
name|getURI
argument_list|()
operator|.
name|append
argument_list|(
name|doc
operator|.
name|getFileURI
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
specifier|final
name|Tuple2
argument_list|<
name|Long
argument_list|,
name|String
argument_list|>
name|result
init|=
name|FluentBrokerAPI
operator|.
name|builder
argument_list|(
name|mockBrokerPool
argument_list|)
operator|.
name|withCollection
argument_list|(
name|TEST_COLLECTION_URI
argument_list|,
name|READ_LOCK
argument_list|)
operator|.
name|execute
argument_list|(
name|collectionOp
argument_list|)
operator|.
name|withDocument
argument_list|(
name|collection
lambda|->
operator|new
name|Tuple2
argument_list|<>
argument_list|(
name|docUri
argument_list|,
name|READ_LOCK
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|(
name|collectionDocOp
argument_list|)
operator|.
name|doAll
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|collectionCreated
argument_list|,
name|result
operator|.
name|_1
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TEST_COLLECTION_URI
operator|.
name|append
argument_list|(
name|docUri
argument_list|)
argument_list|,
name|result
operator|.
name|_2
argument_list|)
expr_stmt|;
name|ctrl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|collectionThenDoc
parameter_list|()
throws|throws
name|PermissionDeniedException
throws|,
name|EXistException
throws|,
name|LockException
block|{
specifier|final
name|XmldbURI
name|docUri
init|=
name|uri
argument_list|(
literal|"all-test.xml"
argument_list|)
decl_stmt|;
specifier|final
name|long
name|collectionCreated
init|=
literal|1234
decl_stmt|;
specifier|final
name|long
name|docLastModified
init|=
literal|5678
decl_stmt|;
specifier|final
name|IMocksControl
name|ctrl
init|=
name|createStrictControl
argument_list|()
decl_stmt|;
name|ctrl
operator|.
name|checkOrder
argument_list|(
literal|true
argument_list|)
expr_stmt|;
specifier|final
name|BrokerPool
name|mockBrokerPool
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|BrokerPool
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|DBBroker
name|mockBroker
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|DBBroker
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|Collection
name|mockCollection
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|Collection
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|CollectionMetadata
name|mockCollectionMetadata
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|CollectionMetadata
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|LockedDocument
name|mockLockedDocument
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|LockedDocument
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|DocumentImpl
name|mockDocument
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|DocumentImpl
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|DocumentMetadata
name|mockDocumentMetadata
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|DocumentMetadata
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|mockBrokerPool
operator|.
name|getBroker
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockBroker
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockBroker
operator|.
name|openCollection
argument_list|(
name|TEST_COLLECTION_URI
argument_list|,
name|READ_LOCK
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockCollection
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockCollection
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockCollectionMetadata
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockCollectionMetadata
operator|.
name|getCreated
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|collectionCreated
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockCollection
operator|.
name|getDocumentWithLock
argument_list|(
name|mockBroker
argument_list|,
name|docUri
argument_list|,
name|READ_LOCK
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockLockedDocument
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockLockedDocument
operator|.
name|getDocument
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockDocument
argument_list|)
expr_stmt|;
name|mockCollection
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// NOTE: checks that Collection lock is release before Document lock
name|expect
argument_list|(
name|mockDocument
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockDocumentMetadata
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockDocumentMetadata
operator|.
name|getLastModified
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|docLastModified
argument_list|)
expr_stmt|;
name|mockLockedDocument
operator|.
name|close
argument_list|()
expr_stmt|;
name|mockBroker
operator|.
name|close
argument_list|()
expr_stmt|;
name|ctrl
operator|.
name|replay
argument_list|()
expr_stmt|;
specifier|final
name|Function
argument_list|<
name|Collection
argument_list|,
name|Long
argument_list|>
name|collectionOp
init|=
name|collection
lambda|->
name|collection
operator|.
name|getMetadata
argument_list|()
operator|.
name|getCreated
argument_list|()
decl_stmt|;
specifier|final
name|Function
argument_list|<
name|DocumentImpl
argument_list|,
name|Long
argument_list|>
name|documentOp
init|=
name|document
lambda|->
name|document
operator|.
name|getMetadata
argument_list|()
operator|.
name|getLastModified
argument_list|()
decl_stmt|;
specifier|final
name|Tuple2
argument_list|<
name|Long
argument_list|,
name|Long
argument_list|>
name|result
init|=
name|FluentBrokerAPI
operator|.
name|builder
argument_list|(
name|mockBrokerPool
argument_list|)
operator|.
name|withCollection
argument_list|(
name|TEST_COLLECTION_URI
argument_list|,
name|READ_LOCK
argument_list|)
operator|.
name|execute
argument_list|(
name|collectionOp
argument_list|)
operator|.
name|withDocument
argument_list|(
name|collection
lambda|->
operator|new
name|Tuple2
argument_list|<>
argument_list|(
name|docUri
argument_list|,
name|READ_LOCK
argument_list|)
argument_list|)
operator|.
name|withoutCollection
argument_list|()
operator|.
name|execute
argument_list|(
name|documentOp
argument_list|)
operator|.
name|doAll
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|collectionCreated
argument_list|,
name|result
operator|.
name|_1
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|docLastModified
argument_list|,
name|result
operator|.
name|_2
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|ctrl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|collectionAndDocThenDoc
parameter_list|()
throws|throws
name|PermissionDeniedException
throws|,
name|EXistException
throws|,
name|LockException
block|{
specifier|final
name|XmldbURI
name|docUri
init|=
name|uri
argument_list|(
literal|"all-test.xml"
argument_list|)
decl_stmt|;
specifier|final
name|long
name|docLastModified
init|=
literal|5678
decl_stmt|;
specifier|final
name|IMocksControl
name|ctrl
init|=
name|createStrictControl
argument_list|()
decl_stmt|;
name|ctrl
operator|.
name|checkOrder
argument_list|(
literal|true
argument_list|)
expr_stmt|;
specifier|final
name|BrokerPool
name|mockBrokerPool
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|BrokerPool
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|DBBroker
name|mockBroker
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|DBBroker
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|Collection
name|mockCollection
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|Collection
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|LockedDocument
name|mockLockedDocument
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|LockedDocument
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|DocumentImpl
name|mockDocument
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|DocumentImpl
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|DocumentMetadata
name|mockDocumentMetadata
init|=
name|ctrl
operator|.
name|createMock
argument_list|(
name|DocumentMetadata
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|mockBrokerPool
operator|.
name|getBroker
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockBroker
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockBroker
operator|.
name|openCollection
argument_list|(
name|TEST_COLLECTION_URI
argument_list|,
name|READ_LOCK
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockCollection
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockCollection
operator|.
name|getDocumentWithLock
argument_list|(
name|mockBroker
argument_list|,
name|docUri
argument_list|,
name|READ_LOCK
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockLockedDocument
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockLockedDocument
operator|.
name|getDocument
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockDocument
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockCollection
operator|.
name|getURI
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|TEST_COLLECTION_URI
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockDocument
operator|.
name|getFileURI
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|docUri
argument_list|)
expr_stmt|;
name|mockCollection
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// NOTE: checks that Collection lock is release before Document lock
name|expect
argument_list|(
name|mockDocument
operator|.
name|getMetadata
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|mockDocumentMetadata
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|mockDocumentMetadata
operator|.
name|getLastModified
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|docLastModified
argument_list|)
expr_stmt|;
name|mockLockedDocument
operator|.
name|close
argument_list|()
expr_stmt|;
name|mockBroker
operator|.
name|close
argument_list|()
expr_stmt|;
name|ctrl
operator|.
name|replay
argument_list|()
expr_stmt|;
specifier|final
name|BiFunction
argument_list|<
name|Collection
argument_list|,
name|DocumentImpl
argument_list|,
name|String
argument_list|>
name|collectionDocOp
init|=
parameter_list|(
name|collection
parameter_list|,
name|doc
parameter_list|)
lambda|->
name|collection
operator|.
name|getURI
argument_list|()
operator|.
name|append
argument_list|(
name|doc
operator|.
name|getFileURI
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
specifier|final
name|Function
argument_list|<
name|DocumentImpl
argument_list|,
name|Long
argument_list|>
name|documentOp
init|=
name|document
lambda|->
name|document
operator|.
name|getMetadata
argument_list|()
operator|.
name|getLastModified
argument_list|()
decl_stmt|;
specifier|final
name|Tuple2
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|result
init|=
name|FluentBrokerAPI
operator|.
name|builder
argument_list|(
name|mockBrokerPool
argument_list|)
operator|.
name|withCollection
argument_list|(
name|TEST_COLLECTION_URI
argument_list|,
name|READ_LOCK
argument_list|)
operator|.
name|withDocument
argument_list|(
name|collection
lambda|->
operator|new
name|Tuple2
argument_list|<>
argument_list|(
name|docUri
argument_list|,
name|READ_LOCK
argument_list|)
argument_list|)
operator|.
name|execute
argument_list|(
name|collectionDocOp
argument_list|)
operator|.
name|withoutCollection
argument_list|()
operator|.
name|execute
argument_list|(
name|documentOp
argument_list|)
operator|.
name|doAll
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|TEST_COLLECTION_URI
operator|.
name|append
argument_list|(
name|docUri
argument_list|)
argument_list|,
name|result
operator|.
name|_1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|docLastModified
argument_list|,
name|result
operator|.
name|_2
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
name|ctrl
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

