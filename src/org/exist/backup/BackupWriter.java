begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2006-2010 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|backup
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Closeable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_comment
comment|/**  * Helper interface for writing backups. Serves as an abstraction for writing to different targets like directories or zip files.  */
end_comment

begin_interface
specifier|public
interface|interface
name|BackupWriter
extends|extends
name|Closeable
block|{
name|Writer
name|newContents
parameter_list|()
throws|throws
name|IOException
function_decl|;
name|void
name|closeContents
parameter_list|()
throws|throws
name|IOException
function_decl|;
name|OutputStream
name|newEntry
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|IOException
function_decl|;
name|void
name|closeEntry
parameter_list|()
throws|throws
name|IOException
function_decl|;
name|void
name|newCollection
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|IOException
function_decl|;
name|void
name|closeCollection
parameter_list|()
function_decl|;
name|void
name|setProperties
parameter_list|(
name|Properties
name|properties
parameter_list|)
throws|throws
name|IOException
function_decl|;
specifier|public
name|void
name|addToRoot
parameter_list|(
name|String
name|name
parameter_list|,
name|Path
name|file
parameter_list|)
throws|throws
name|IOException
function_decl|;
block|}
end_interface

end_unit

