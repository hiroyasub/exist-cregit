begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|backup
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|GridBagLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|HeadlessException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Insets
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JButton
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComboBox
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JFileChooser
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JOptionPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|client
operator|.
name|ClientFrame
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|DatabaseManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_class
specifier|public
class|class
name|CreateBackupDialog
extends|extends
name|JPanel
block|{
name|JComboBox
name|collections
decl_stmt|;
name|JTextField
name|directory
decl_stmt|;
name|String
name|uri
decl_stmt|;
name|String
name|user
decl_stmt|;
name|String
name|passwd
decl_stmt|;
specifier|public
name|CreateBackupDialog
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|user
parameter_list|,
name|String
name|passwd
parameter_list|,
name|String
name|backupDir
parameter_list|)
throws|throws
name|HeadlessException
block|{
name|super
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|this
operator|.
name|uri
operator|=
name|uri
expr_stmt|;
name|this
operator|.
name|user
operator|=
name|user
expr_stmt|;
name|this
operator|.
name|passwd
operator|=
name|passwd
expr_stmt|;
name|setupComponents
argument_list|(
name|backupDir
argument_list|)
expr_stmt|;
name|setSize
argument_list|(
operator|new
name|Dimension
argument_list|(
literal|350
argument_list|,
literal|200
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|setupComponents
parameter_list|(
name|String
name|backupDir
parameter_list|)
block|{
name|GridBagLayout
name|grid
init|=
operator|new
name|GridBagLayout
argument_list|()
decl_stmt|;
name|setLayout
argument_list|(
name|grid
argument_list|)
expr_stmt|;
name|GridBagConstraints
name|c
init|=
operator|new
name|GridBagConstraints
argument_list|()
decl_stmt|;
name|c
operator|.
name|insets
operator|=
operator|new
name|Insets
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|JLabel
name|label
init|=
operator|new
name|JLabel
argument_list|(
literal|"Collection:"
argument_list|)
decl_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|NONE
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|label
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|Vector
name|v
init|=
name|getAllCollections
argument_list|()
decl_stmt|;
name|collections
operator|=
operator|new
name|JComboBox
argument_list|(
name|v
argument_list|)
expr_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|gridwidth
operator|=
literal|2
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|EAST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|HORIZONTAL
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|collections
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|collections
argument_list|)
expr_stmt|;
name|label
operator|=
operator|new
name|JLabel
argument_list|(
literal|"Target:"
argument_list|)
expr_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|gridwidth
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|NONE
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|label
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|directory
operator|=
operator|new
name|JTextField
argument_list|(
name|backupDir
argument_list|,
literal|40
argument_list|)
expr_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|EAST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|HORIZONTAL
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|directory
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|directory
argument_list|)
expr_stmt|;
name|JButton
name|select
init|=
operator|new
name|JButton
argument_list|(
literal|"Select"
argument_list|)
decl_stmt|;
name|select
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|actionSelect
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|2
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|EAST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|NONE
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|select
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|select
operator|.
name|setToolTipText
argument_list|(
literal|"Select ZIP file or directory."
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|select
argument_list|)
expr_stmt|;
block|}
specifier|public
class|class
name|MyBackupContentsFilter
extends|extends
name|javax
operator|.
name|swing
operator|.
name|filechooser
operator|.
name|FileFilter
block|{
specifier|public
name|boolean
name|accept
parameter_list|(
name|File
name|f
parameter_list|)
block|{
if|if
condition|(
name|f
operator|.
name|getName
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|.
name|equals
argument_list|(
literal|"__contents__.xml"
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|f
operator|.
name|isDirectory
argument_list|()
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
literal|"__contents__.xml files"
return|;
block|}
block|}
specifier|public
class|class
name|MyZipFilter
extends|extends
name|javax
operator|.
name|swing
operator|.
name|filechooser
operator|.
name|FileFilter
block|{
specifier|public
name|boolean
name|accept
parameter_list|(
name|File
name|f
parameter_list|)
block|{
if|if
condition|(
name|f
operator|.
name|getName
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|".zip"
argument_list|)
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|f
operator|.
name|isDirectory
argument_list|()
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
literal|"Zip files"
return|;
block|}
block|}
specifier|private
name|void
name|actionSelect
parameter_list|()
block|{
name|JFileChooser
name|chooser
init|=
operator|new
name|JFileChooser
argument_list|()
decl_stmt|;
name|chooser
operator|.
name|setMultiSelectionEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setFileSelectionMode
argument_list|(
name|JFileChooser
operator|.
name|FILES_AND_DIRECTORIES
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|addChoosableFileFilter
argument_list|(
operator|new
name|MyBackupContentsFilter
argument_list|()
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|addChoosableFileFilter
argument_list|(
operator|new
name|MyZipFilter
argument_list|()
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setSelectedFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"eXist-backup.zip"
argument_list|)
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setCurrentDirectory
argument_list|(
literal|null
argument_list|)
expr_stmt|;
if|if
condition|(
name|chooser
operator|.
name|showDialog
argument_list|(
name|this
argument_list|,
literal|"Select target for backup"
argument_list|)
operator|==
name|JFileChooser
operator|.
name|APPROVE_OPTION
condition|)
block|{
name|File
name|f
init|=
name|chooser
operator|.
name|getSelectedFile
argument_list|()
decl_stmt|;
if|if
condition|(
name|f
operator|.
name|exists
argument_list|()
condition|)
block|{
if|if
condition|(
name|JOptionPane
operator|.
name|showConfirmDialog
argument_list|(
name|this
argument_list|,
literal|"Target "
operator|+
name|f
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|" exists. OK to delete?"
argument_list|,
literal|"Confirm deletion"
argument_list|,
name|JOptionPane
operator|.
name|YES_NO_OPTION
argument_list|)
operator|==
name|JOptionPane
operator|.
name|NO_OPTION
condition|)
return|return;
block|}
name|directory
operator|.
name|setText
argument_list|(
name|f
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|Vector
name|getAllCollections
parameter_list|()
block|{
name|Vector
name|list
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
try|try
block|{
name|Collection
name|root
init|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|uri
operator|+
name|DBBroker
operator|.
name|ROOT_COLLECTION
argument_list|,
name|user
argument_list|,
name|passwd
argument_list|)
decl_stmt|;
name|getAllCollections
argument_list|(
name|root
argument_list|,
name|list
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
name|list
return|;
block|}
specifier|private
name|void
name|getAllCollections
parameter_list|(
name|Collection
name|collection
parameter_list|,
name|Vector
name|collections
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|collections
operator|.
name|add
argument_list|(
name|collection
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|String
index|[]
name|childCollections
init|=
name|collection
operator|.
name|listChildCollections
argument_list|()
decl_stmt|;
name|Collection
name|child
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|childCollections
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|child
operator|=
name|collection
operator|.
name|getChildCollection
argument_list|(
name|childCollections
index|[
name|i
index|]
argument_list|)
expr_stmt|;
name|getAllCollections
argument_list|(
name|child
argument_list|,
name|collections
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|getCollection
parameter_list|()
block|{
return|return
operator|(
name|String
operator|)
name|collections
operator|.
name|getSelectedItem
argument_list|()
return|;
block|}
specifier|public
name|String
name|getBackupDir
parameter_list|()
block|{
return|return
name|directory
operator|.
name|getText
argument_list|()
return|;
block|}
block|}
end_class

end_unit

