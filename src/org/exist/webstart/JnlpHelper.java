begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-2015 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|webstart
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|LogManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_comment
comment|/**  * Helper class for webstart.  *  * @author Dannes Wessels  */
end_comment

begin_class
specifier|public
class|class
name|JnlpHelper
block|{
specifier|private
specifier|final
specifier|static
name|String
name|LIB_CORE
init|=
literal|"../lib/core"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|LIB_EXIST
init|=
literal|".."
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|LIB_WEBINF
init|=
literal|"WEB-INF/lib/"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LogManager
operator|.
name|getLogger
argument_list|(
name|JnlpHelper
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|File
name|coreJarsFolder
init|=
literal|null
decl_stmt|;
specifier|private
name|File
name|existJarFolder
init|=
literal|null
decl_stmt|;
specifier|private
name|File
name|webappsFolder
init|=
literal|null
decl_stmt|;
specifier|private
name|boolean
name|isInWarFile
parameter_list|(
name|File
name|existHome
parameter_list|)
block|{
return|return
operator|!
operator|new
name|File
argument_list|(
name|existHome
argument_list|,
name|LIB_CORE
argument_list|)
operator|.
name|isDirectory
argument_list|()
return|;
block|}
comment|/**      * Creates a new instance of JnlpHelper      */
specifier|public
name|JnlpHelper
parameter_list|(
name|File
name|contextRoot
parameter_list|)
block|{
comment|// Setup path based on installation (in jetty, container)
if|if
condition|(
name|isInWarFile
argument_list|(
name|contextRoot
argument_list|)
condition|)
block|{
comment|// all files mixed in contextRoot/WEB-INF/lib
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"eXist is running in servlet container (.war)."
argument_list|)
expr_stmt|;
name|coreJarsFolder
operator|=
operator|new
name|File
argument_list|(
name|contextRoot
argument_list|,
name|LIB_WEBINF
argument_list|)
expr_stmt|;
name|existJarFolder
operator|=
name|coreJarsFolder
expr_stmt|;
name|webappsFolder
operator|=
name|contextRoot
expr_stmt|;
block|}
else|else
block|{
comment|//files located in contextRoot/lib/core and contextRoot
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"eXist is running private jetty server."
argument_list|)
expr_stmt|;
name|coreJarsFolder
operator|=
operator|new
name|File
argument_list|(
name|contextRoot
argument_list|,
name|LIB_CORE
argument_list|)
expr_stmt|;
name|existJarFolder
operator|=
operator|new
name|File
argument_list|(
name|contextRoot
argument_list|,
name|LIB_EXIST
argument_list|)
expr_stmt|;
name|webappsFolder
operator|=
name|contextRoot
expr_stmt|;
block|}
name|LOGGER
operator|.
name|debug
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"CORE jars location=%s"
argument_list|,
name|coreJarsFolder
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|LOGGER
operator|.
name|debug
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"EXIST jars location=%s"
argument_list|,
name|existJarFolder
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|LOGGER
operator|.
name|debug
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"WEBAPP location=%s"
argument_list|,
name|webappsFolder
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|File
name|getWebappFolder
parameter_list|()
block|{
return|return
name|webappsFolder
return|;
block|}
specifier|public
name|File
name|getCoreJarsFolder
parameter_list|()
block|{
return|return
name|coreJarsFolder
return|;
block|}
specifier|public
name|File
name|getExistJarFolder
parameter_list|()
block|{
return|return
name|existJarFolder
return|;
block|}
block|}
end_class

end_unit

