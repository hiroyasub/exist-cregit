begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-2012 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|MissingResourceException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ResourceBundle
import|;
end_import

begin_class
specifier|public
class|class
name|Messages
block|{
specifier|private
specifier|static
specifier|final
name|String
name|BUNDLE_NAME
init|=
literal|"org.exist.client.messages"
decl_stmt|;
comment|//$NON-NLS-1$
specifier|private
specifier|static
specifier|final
name|ResourceBundle
name|RESOURCE_BUNDLE
init|=
name|ResourceBundle
operator|.
name|getBundle
argument_list|(
name|BUNDLE_NAME
argument_list|)
decl_stmt|;
specifier|private
name|Messages
parameter_list|()
block|{
block|}
specifier|public
specifier|static
name|String
name|getString
parameter_list|(
name|String
name|key
parameter_list|)
block|{
try|try
block|{
return|return
name|RESOURCE_BUNDLE
operator|.
name|getString
argument_list|(
name|key
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
specifier|final
name|MissingResourceException
name|e
parameter_list|)
block|{
return|return
literal|'!'
operator|+
name|key
operator|+
literal|'!'
return|;
block|}
block|}
block|}
end_class

end_unit

