begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  *  * Copyright (C) 2001-06 Wolfgang M. Meier wolfgang@exist-db.org  *  * This program is free software; you can redistribute it and/or modify it  * under the terms of the GNU Lesser General Public License as published by the  * Free Software Foundation; either version 2 of the License, or (at your  * option) any later version.  *  * This program is distributed in the hope that it will be useful, but WITHOUT  * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or  * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License  * for more details.  *  * You should have received a copy of the GNU Lesser General Public License  * along with this program; if not, write to the Free Software Foundation,  * Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *  * $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Cursor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Font
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|HeadlessException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Insets
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|InputEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|KeyEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|KeyListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseAdapter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowAdapter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowFocusListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|BorderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ButtonGroup
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ImageIcon
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JButton
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JCheckBoxMenuItem
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JDialog
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JFileChooser
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JFrame
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JMenu
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JMenuBar
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JMenuItem
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JOptionPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPasswordField
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPopupMenu
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JRadioButtonMenuItem
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JSplitPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTable
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextArea
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JToolBar
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|KeyStroke
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ProgressMonitor
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|border
operator|.
name|BevelBorder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|filechooser
operator|.
name|FileFilter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|table
operator|.
name|AbstractTableModel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|table
operator|.
name|DefaultTableCellRenderer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|table
operator|.
name|TableCellRenderer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|BadLocationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|DefaultStyledDocument
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|SimpleAttributeSet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|StyleConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|OutputKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|backup
operator|.
name|Backup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|backup
operator|.
name|CreateBackupDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|backup
operator|.
name|Restore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Permission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|serializers
operator|.
name|EXistOutputKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|MimeTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|CollectionImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|CollectionManagementServiceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|EXistResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|IndexQueryService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|UserManagementService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|gnu
operator|.
name|readline
operator|.
name|Readline
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|CollectionManagementService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|XMLResource
import|;
end_import

begin_comment
comment|/** Main frame of the eXist GUI */
end_comment

begin_class
specifier|public
class|class
name|ClientFrame
extends|extends
name|JFrame
implements|implements
name|WindowFocusListener
implements|,
name|KeyListener
implements|,
name|ActionListener
implements|,
name|MouseListener
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|CUT
init|=
literal|"Cut"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|COPY
init|=
literal|"Copy"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|PASTE
init|=
literal|"Paste"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|MAX_DISPLAY_LENGTH
init|=
literal|512000
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|MAX_HISTORY
init|=
literal|50
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|SimpleAttributeSet
name|promptAttrs
init|=
operator|new
name|SimpleAttributeSet
argument_list|()
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|SimpleAttributeSet
name|defaultAttrs
init|=
operator|new
name|SimpleAttributeSet
argument_list|()
decl_stmt|;
block|{
name|StyleConstants
operator|.
name|setForeground
parameter_list|(
name|promptAttrs
parameter_list|,
name|Color
operator|.
name|blue
parameter_list|)
constructor_decl|;
name|StyleConstants
operator|.
name|setBold
argument_list|(
name|promptAttrs
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|StyleConstants
operator|.
name|setForeground
parameter_list|(
name|defaultAttrs
parameter_list|,
name|Color
operator|.
name|black
parameter_list|)
constructor_decl|;
block|}
specifier|private
name|int
name|commandStart
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|currentHistory
init|=
literal|0
decl_stmt|;
specifier|private
name|boolean
name|gotUp
init|=
literal|false
decl_stmt|;
specifier|private
name|DefaultStyledDocument
name|doc
decl_stmt|;
specifier|private
name|JLabel
name|statusbar
decl_stmt|;
specifier|private
name|JTable
name|fileman
decl_stmt|;
specifier|private
name|ResourceTableModel
name|resources
init|=
operator|new
name|ResourceTableModel
argument_list|()
decl_stmt|;
specifier|private
name|JTextPane
name|shell
decl_stmt|;
specifier|private
name|JPopupMenu
name|shellPopup
decl_stmt|;
specifier|private
name|InteractiveClient
name|client
decl_stmt|;
specifier|private
name|String
name|path
init|=
literal|null
decl_stmt|;
specifier|private
name|ProcessThread
name|process
init|=
operator|new
name|ProcessThread
argument_list|()
decl_stmt|;
specifier|private
name|Properties
name|properties
decl_stmt|;
comment|/**      * @throws java.awt.HeadlessException      */
specifier|public
name|ClientFrame
parameter_list|(
name|InteractiveClient
name|client
parameter_list|,
name|String
name|path
parameter_list|,
name|Properties
name|properties
parameter_list|)
throws|throws
name|HeadlessException
block|{
name|super
argument_list|(
literal|"eXist Admin Client"
argument_list|)
expr_stmt|;
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
name|this
operator|.
name|properties
operator|=
name|properties
expr_stmt|;
name|this
operator|.
name|client
operator|=
name|client
expr_stmt|;
name|setupComponents
argument_list|()
expr_stmt|;
name|addWindowListener
argument_list|(
operator|new
name|WindowAdapter
argument_list|()
block|{
specifier|public
name|void
name|windowClosing
parameter_list|(
name|WindowEvent
name|ev
parameter_list|)
block|{
name|close
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|pack
argument_list|()
expr_stmt|;
name|currentHistory
operator|=
name|Readline
operator|.
name|getHistorySize
argument_list|()
expr_stmt|;
name|process
operator|.
name|start
argument_list|()
expr_stmt|;
name|shell
operator|.
name|requestFocus
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|setupComponents
parameter_list|()
block|{
name|setJMenuBar
argument_list|(
name|createMenuBar
argument_list|()
argument_list|)
expr_stmt|;
comment|// create the toolbar
name|JToolBar
name|toolbar
init|=
operator|new
name|JToolBar
argument_list|()
decl_stmt|;
name|URL
name|url
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/Up24.gif"
argument_list|)
decl_stmt|;
name|JButton
name|button
init|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
decl_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
literal|"Go to parent collection"
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|goUpAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/Refresh24.gif"
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
literal|"Refresh collection view"
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
try|try
block|{
name|client
operator|.
name|reloadCollection
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e1
parameter_list|)
block|{
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|addSeparator
argument_list|()
expr_stmt|;
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/New24.gif"
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
literal|"Create new collection"
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|newCollectionAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/Add24.gif"
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
literal|"Stores one or more files to the database"
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|uploadAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/Delete24.gif"
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
literal|"Delete selected files or collections"
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|removeAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/Preferences24.gif"
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
literal|"Edit owners/permissions for selected resource"
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|setPermAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|addSeparator
argument_list|()
expr_stmt|;
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/Export24.gif"
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
literal|"Create backup"
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|backupAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/Import24.gif"
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
literal|"Restore files from backup"
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|restoreAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|addSeparator
argument_list|()
expr_stmt|;
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/keyring-small.png"
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
literal|"Manage users"
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|newUserAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/Find24.gif"
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
literal|"Query the database with XPath"
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|findAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
comment|// the split pane separates the resource view table from the shell
name|JSplitPane
name|split
init|=
operator|new
name|JSplitPane
argument_list|(
name|JSplitPane
operator|.
name|VERTICAL_SPLIT
argument_list|)
decl_stmt|;
name|split
operator|.
name|setResizeWeight
argument_list|(
literal|0.5
argument_list|)
expr_stmt|;
comment|// create table for resources and collections
name|fileman
operator|=
operator|new
name|JTable
argument_list|()
expr_stmt|;
name|fileman
operator|.
name|setModel
argument_list|(
name|resources
argument_list|)
expr_stmt|;
name|fileman
operator|.
name|addMouseListener
argument_list|(
operator|new
name|TableMouseListener
argument_list|()
argument_list|)
expr_stmt|;
name|ResourceTableCellRenderer
name|renderer
init|=
operator|new
name|ResourceTableCellRenderer
argument_list|()
decl_stmt|;
name|fileman
operator|.
name|setDefaultRenderer
argument_list|(
name|Object
operator|.
name|class
argument_list|,
name|renderer
argument_list|)
expr_stmt|;
name|JScrollPane
name|scroll
init|=
operator|new
name|JScrollPane
argument_list|(
name|fileman
argument_list|)
decl_stmt|;
name|scroll
operator|.
name|setMinimumSize
argument_list|(
operator|new
name|Dimension
argument_list|(
literal|300
argument_list|,
literal|150
argument_list|)
argument_list|)
expr_stmt|;
name|split
operator|.
name|setLeftComponent
argument_list|(
name|scroll
argument_list|)
expr_stmt|;
name|shellPopup
operator|=
operator|new
name|JPopupMenu
argument_list|(
literal|"Console Menu"
argument_list|)
expr_stmt|;
name|shellPopup
operator|.
name|add
argument_list|(
operator|new
name|JMenuItem
argument_list|(
name|CUT
argument_list|)
argument_list|)
operator|.
name|addActionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|shellPopup
operator|.
name|add
argument_list|(
operator|new
name|JMenuItem
argument_list|(
name|COPY
argument_list|)
argument_list|)
operator|.
name|addActionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|shellPopup
operator|.
name|add
argument_list|(
operator|new
name|JMenuItem
argument_list|(
name|PASTE
argument_list|)
argument_list|)
operator|.
name|addActionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
comment|// shell window
name|doc
operator|=
operator|new
name|DefaultStyledDocument
argument_list|()
expr_stmt|;
name|shell
operator|=
operator|new
name|JTextPane
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|shell
operator|.
name|setContentType
argument_list|(
literal|"text/plain; charset=UTF-8"
argument_list|)
expr_stmt|;
name|shell
operator|.
name|setFont
argument_list|(
operator|new
name|Font
argument_list|(
literal|"Monospaced"
argument_list|,
name|Font
operator|.
name|PLAIN
argument_list|,
literal|12
argument_list|)
argument_list|)
expr_stmt|;
name|shell
operator|.
name|setMargin
argument_list|(
operator|new
name|Insets
argument_list|(
literal|7
argument_list|,
literal|5
argument_list|,
literal|7
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|shell
operator|.
name|addKeyListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|shell
operator|.
name|addMouseListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|scroll
operator|=
operator|new
name|JScrollPane
argument_list|(
name|shell
argument_list|)
expr_stmt|;
name|split
operator|.
name|setRightComponent
argument_list|(
name|scroll
argument_list|)
expr_stmt|;
name|statusbar
operator|=
operator|new
name|JLabel
argument_list|(
literal|"eXist Admin Client connected - "
operator|+
name|properties
operator|.
name|getProperty
argument_list|(
literal|"user"
argument_list|)
operator|+
literal|"@"
operator|+
name|properties
operator|.
name|getProperty
argument_list|(
literal|"uri"
argument_list|)
argument_list|)
expr_stmt|;
name|statusbar
operator|.
name|setMinimumSize
argument_list|(
operator|new
name|Dimension
argument_list|(
literal|400
argument_list|,
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|statusbar
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createBevelBorder
argument_list|(
name|BevelBorder
operator|.
name|LOWERED
argument_list|)
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|split
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|toolbar
argument_list|,
name|BorderLayout
operator|.
name|NORTH
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|statusbar
argument_list|,
name|BorderLayout
operator|.
name|SOUTH
argument_list|)
expr_stmt|;
block|}
specifier|private
name|JMenuBar
name|createMenuBar
parameter_list|()
block|{
name|JMenuBar
name|menubar
init|=
operator|new
name|JMenuBar
argument_list|()
decl_stmt|;
name|JMenu
name|fileMenu
init|=
operator|new
name|JMenu
argument_list|(
literal|"File"
argument_list|)
decl_stmt|;
name|fileMenu
operator|.
name|setMnemonic
argument_list|(
name|KeyEvent
operator|.
name|VK_F
argument_list|)
expr_stmt|;
name|menubar
operator|.
name|add
argument_list|(
name|fileMenu
argument_list|)
expr_stmt|;
name|JMenuItem
name|item
init|=
operator|new
name|JMenuItem
argument_list|(
literal|"Store files/directories"
argument_list|,
name|KeyEvent
operator|.
name|VK_S
argument_list|)
decl_stmt|;
name|item
operator|.
name|setAccelerator
argument_list|(
name|KeyStroke
operator|.
name|getKeyStroke
argument_list|(
literal|"control S"
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|uploadAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|fileMenu
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|item
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"Create collection"
argument_list|,
name|KeyEvent
operator|.
name|VK_N
argument_list|)
expr_stmt|;
name|item
operator|.
name|setAccelerator
argument_list|(
name|KeyStroke
operator|.
name|getKeyStroke
argument_list|(
literal|"control N"
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|newCollectionAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|fileMenu
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|item
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"Create blank document"
argument_list|,
name|KeyEvent
operator|.
name|VK_B
argument_list|)
expr_stmt|;
name|item
operator|.
name|setAccelerator
argument_list|(
name|KeyStroke
operator|.
name|getKeyStroke
argument_list|(
literal|"control B"
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
comment|//FIXME: Prevent owerwrite. Security?
name|Collection
name|collection
init|=
name|client
operator|.
name|current
decl_stmt|;
name|XMLResource
name|result
init|=
literal|null
decl_stmt|;
name|String
name|nameres
init|=
name|JOptionPane
operator|.
name|showInputDialog
argument_list|(
literal|null
argument_list|,
literal|"Name of the XML resource (extension incluse)"
argument_list|)
decl_stmt|;
if|if
condition|(
name|nameres
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|result
operator|=
operator|(
name|XMLResource
operator|)
name|collection
operator|.
name|createResource
argument_list|(
name|nameres
argument_list|,
name|XMLResource
operator|.
name|RESOURCE_TYPE
argument_list|)
expr_stmt|;
name|result
operator|.
name|setContent
argument_list|(
literal|"<template></template>"
argument_list|)
expr_stmt|;
name|collection
operator|.
name|storeResource
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|collection
operator|.
name|close
argument_list|()
expr_stmt|;
name|client
operator|.
name|reloadCollection
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|ev
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
name|ev
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ev
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|fileMenu
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|fileMenu
operator|.
name|addSeparator
argument_list|()
expr_stmt|;
name|item
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"Remove"
argument_list|)
expr_stmt|;
name|item
operator|.
name|setAccelerator
argument_list|(
name|KeyStroke
operator|.
name|getKeyStroke
argument_list|(
literal|"control D"
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|removeAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|fileMenu
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|item
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"Copy"
argument_list|,
name|KeyEvent
operator|.
name|VK_C
argument_list|)
expr_stmt|;
name|item
operator|.
name|setAccelerator
argument_list|(
name|KeyStroke
operator|.
name|getKeyStroke
argument_list|(
literal|"control C"
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|copyAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|fileMenu
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|item
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"Move"
argument_list|,
name|KeyEvent
operator|.
name|VK_M
argument_list|)
expr_stmt|;
name|item
operator|.
name|setAccelerator
argument_list|(
name|KeyStroke
operator|.
name|getKeyStroke
argument_list|(
literal|"control M"
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|moveAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|fileMenu
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|item
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"Rename"
argument_list|,
name|KeyEvent
operator|.
name|VK_R
argument_list|)
expr_stmt|;
name|item
operator|.
name|setAccelerator
argument_list|(
name|KeyStroke
operator|.
name|getKeyStroke
argument_list|(
literal|"control R"
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|renameAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|fileMenu
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|fileMenu
operator|.
name|addSeparator
argument_list|()
expr_stmt|;
name|item
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"Reindex collection"
argument_list|,
name|KeyEvent
operator|.
name|VK_I
argument_list|)
expr_stmt|;
name|item
operator|.
name|setAccelerator
argument_list|(
name|KeyStroke
operator|.
name|getKeyStroke
argument_list|(
literal|"control I"
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|reindexAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|fileMenu
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|item
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"Resource properties"
argument_list|)
expr_stmt|;
name|item
operator|.
name|setAccelerator
argument_list|(
name|KeyStroke
operator|.
name|getKeyStroke
argument_list|(
literal|"control P"
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|setPermAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|fileMenu
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|fileMenu
operator|.
name|addSeparator
argument_list|()
expr_stmt|;
name|item
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"Quit"
argument_list|,
name|KeyEvent
operator|.
name|VK_Q
argument_list|)
expr_stmt|;
name|item
operator|.
name|setAccelerator
argument_list|(
name|KeyStroke
operator|.
name|getKeyStroke
argument_list|(
literal|"control Q"
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|close
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|fileMenu
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|JMenu
name|toolsMenu
init|=
operator|new
name|JMenu
argument_list|(
literal|"Tools"
argument_list|)
decl_stmt|;
name|toolsMenu
operator|.
name|setMnemonic
argument_list|(
name|KeyEvent
operator|.
name|VK_T
argument_list|)
expr_stmt|;
name|menubar
operator|.
name|add
argument_list|(
name|toolsMenu
argument_list|)
expr_stmt|;
name|item
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"Find"
argument_list|,
name|KeyEvent
operator|.
name|VK_F
argument_list|)
expr_stmt|;
name|item
operator|.
name|setAccelerator
argument_list|(
name|KeyStroke
operator|.
name|getKeyStroke
argument_list|(
literal|"control F"
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|findAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|toolsMenu
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|toolsMenu
operator|.
name|addSeparator
argument_list|()
expr_stmt|;
name|item
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"Edit users"
argument_list|,
name|KeyEvent
operator|.
name|VK_F
argument_list|)
expr_stmt|;
name|item
operator|.
name|setAccelerator
argument_list|(
name|KeyStroke
operator|.
name|getKeyStroke
argument_list|(
literal|"control U"
argument_list|)
argument_list|)
expr_stmt|;
name|item
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|newUserAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|toolsMenu
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|toolsMenu
operator|.
name|addSeparator
argument_list|()
expr_stmt|;
name|item
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"Backup"
argument_list|,
name|KeyEvent
operator|.
name|VK_B
argument_list|)
expr_stmt|;
name|item
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|backupAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|toolsMenu
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|item
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"Restore"
argument_list|,
name|KeyEvent
operator|.
name|VK_R
argument_list|)
expr_stmt|;
name|item
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|restoreAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|toolsMenu
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|JMenu
name|dbMenu
init|=
operator|new
name|JMenu
argument_list|(
literal|"Database"
argument_list|)
decl_stmt|;
name|dbMenu
operator|.
name|setMnemonic
argument_list|(
name|KeyEvent
operator|.
name|VK_D
argument_list|)
expr_stmt|;
name|menubar
operator|.
name|add
argument_list|(
name|dbMenu
argument_list|)
expr_stmt|;
name|item
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"Shutdown"
argument_list|,
name|KeyEvent
operator|.
name|VK_S
argument_list|)
expr_stmt|;
name|item
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|display
argument_list|(
literal|"shutdown\n"
argument_list|)
expr_stmt|;
name|process
operator|.
name|setAction
argument_list|(
literal|"shutdown"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|dbMenu
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|dbMenu
operator|.
name|addSeparator
argument_list|()
expr_stmt|;
name|ButtonGroup
name|group
init|=
operator|new
name|ButtonGroup
argument_list|()
decl_stmt|;
name|item
operator|=
operator|new
name|JRadioButtonMenuItem
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"uri"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|item
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|newServerURIAction
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"uri"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|dbMenu
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|group
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|String
name|next
decl_stmt|;
for|for
control|(
name|Enumeration
name|e
init|=
name|properties
operator|.
name|propertyNames
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|next
operator|=
operator|(
name|String
operator|)
name|e
operator|.
name|nextElement
argument_list|()
expr_stmt|;
if|if
condition|(
name|next
operator|.
name|startsWith
argument_list|(
literal|"alternate_uri_"
argument_list|)
condition|)
block|{
specifier|final
name|String
name|uri
init|=
name|properties
operator|.
name|getProperty
argument_list|(
name|next
argument_list|)
decl_stmt|;
if|if
condition|(
name|uri
operator|.
name|equals
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"uri"
argument_list|)
argument_list|)
condition|)
continue|continue;
name|item
operator|=
operator|new
name|JRadioButtonMenuItem
argument_list|(
name|uri
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|item
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|newServerURIAction
argument_list|(
name|uri
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|dbMenu
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|group
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
block|}
name|dbMenu
operator|.
name|addSeparator
argument_list|()
expr_stmt|;
name|item
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"Connect to alternate URI"
argument_list|,
name|KeyEvent
operator|.
name|VK_C
argument_list|)
expr_stmt|;
name|item
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|newServerURIAction
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|dbMenu
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|JMenu
name|optionsMenu
init|=
operator|new
name|JMenu
argument_list|(
literal|"Options"
argument_list|)
decl_stmt|;
name|optionsMenu
operator|.
name|setMnemonic
argument_list|(
name|KeyEvent
operator|.
name|VK_O
argument_list|)
expr_stmt|;
name|menubar
operator|.
name|add
argument_list|(
name|optionsMenu
argument_list|)
expr_stmt|;
name|JCheckBoxMenuItem
name|check
init|=
operator|new
name|JCheckBoxMenuItem
argument_list|(
literal|"Indent"
argument_list|,
name|properties
operator|.
name|getProperty
argument_list|(
name|OutputKeys
operator|.
name|INDENT
argument_list|)
operator|.
name|equals
argument_list|(
literal|"yes"
argument_list|)
argument_list|)
decl_stmt|;
name|check
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|properties
operator|.
name|setProperty
argument_list|(
name|OutputKeys
operator|.
name|INDENT
argument_list|,
operator|(
operator|(
name|JCheckBoxMenuItem
operator|)
name|e
operator|.
name|getSource
argument_list|()
operator|)
operator|.
name|isSelected
argument_list|()
condition|?
literal|"yes"
else|:
literal|"no"
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getResources
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e1
parameter_list|)
block|{
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|optionsMenu
operator|.
name|add
argument_list|(
name|check
argument_list|)
expr_stmt|;
name|check
operator|=
operator|new
name|JCheckBoxMenuItem
argument_list|(
literal|"Expand-XIncludes"
argument_list|,
name|properties
operator|.
name|getProperty
argument_list|(
name|EXistOutputKeys
operator|.
name|EXPAND_XINCLUDES
argument_list|)
operator|.
name|equals
argument_list|(
literal|"yes"
argument_list|)
argument_list|)
expr_stmt|;
name|check
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|properties
operator|.
name|setProperty
argument_list|(
name|EXistOutputKeys
operator|.
name|EXPAND_XINCLUDES
argument_list|,
operator|(
operator|(
name|JCheckBoxMenuItem
operator|)
name|e
operator|.
name|getSource
argument_list|()
operator|)
operator|.
name|isSelected
argument_list|()
condition|?
literal|"yes"
else|:
literal|"no"
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getResources
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e1
parameter_list|)
block|{
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|optionsMenu
operator|.
name|add
argument_list|(
name|check
argument_list|)
expr_stmt|;
name|optionsMenu
operator|.
name|addSeparator
argument_list|()
expr_stmt|;
name|item
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"Change User-Identity"
argument_list|,
name|KeyEvent
operator|.
name|VK_U
argument_list|)
expr_stmt|;
name|item
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|String
index|[]
name|loginData
init|=
name|getLoginData
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"user"
argument_list|)
argument_list|,
name|properties
operator|.
name|getProperty
argument_list|(
literal|"uri"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|loginData
operator|==
literal|null
condition|)
return|return;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"user"
argument_list|,
name|loginData
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"password"
argument_list|,
name|loginData
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"uri"
argument_list|,
name|loginData
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|statusbar
operator|.
name|setText
argument_list|(
literal|"eXist Admin Client connected - "
operator|+
name|properties
operator|.
name|getProperty
argument_list|(
literal|"user"
argument_list|)
operator|+
literal|"@"
operator|+
name|properties
operator|.
name|getProperty
argument_list|(
literal|"uri"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|reloadCollection
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e1
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
literal|"Login failed!"
argument_list|,
name|e1
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|optionsMenu
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
name|JMenu
name|HelpMenu
init|=
operator|new
name|JMenu
argument_list|(
literal|"Help"
argument_list|)
decl_stmt|;
name|HelpMenu
operator|.
name|setMnemonic
argument_list|(
name|KeyEvent
operator|.
name|VK_H
argument_list|)
expr_stmt|;
name|menubar
operator|.
name|add
argument_list|(
name|HelpMenu
argument_list|)
expr_stmt|;
name|item
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"About"
argument_list|,
name|KeyEvent
operator|.
name|VK_A
argument_list|)
expr_stmt|;
name|item
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|AboutAction
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|HelpMenu
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
return|return
name|menubar
return|;
block|}
specifier|public
name|void
name|setPath
parameter_list|(
name|String
name|currentPath
parameter_list|)
block|{
name|path
operator|=
name|currentPath
expr_stmt|;
block|}
specifier|protected
name|void
name|displayPrompt
parameter_list|()
block|{
try|try
block|{
name|commandStart
operator|=
name|doc
operator|.
name|getLength
argument_list|()
expr_stmt|;
name|doc
operator|.
name|insertString
argument_list|(
name|commandStart
argument_list|,
literal|"exist:"
argument_list|,
name|promptAttrs
argument_list|)
expr_stmt|;
name|commandStart
operator|+=
literal|6
expr_stmt|;
name|doc
operator|.
name|insertString
argument_list|(
name|commandStart
argument_list|,
name|path
operator|+
literal|'>'
argument_list|,
name|promptAttrs
argument_list|)
expr_stmt|;
name|commandStart
operator|+=
name|path
operator|.
name|length
argument_list|()
operator|+
literal|1
expr_stmt|;
name|doc
operator|.
name|insertString
argument_list|(
name|commandStart
operator|++
argument_list|,
literal|" "
argument_list|,
name|defaultAttrs
argument_list|)
expr_stmt|;
name|shell
operator|.
name|setCaretPosition
argument_list|(
name|commandStart
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BadLocationException
name|e
parameter_list|)
block|{
block|}
block|}
specifier|protected
name|void
name|display
parameter_list|(
name|String
name|message
parameter_list|)
block|{
try|try
block|{
name|commandStart
operator|=
name|doc
operator|.
name|getLength
argument_list|()
expr_stmt|;
if|if
condition|(
name|commandStart
operator|>
name|MAX_DISPLAY_LENGTH
condition|)
block|{
name|doc
operator|.
name|remove
argument_list|(
literal|0
argument_list|,
name|MAX_DISPLAY_LENGTH
argument_list|)
expr_stmt|;
name|commandStart
operator|=
name|doc
operator|.
name|getLength
argument_list|()
expr_stmt|;
block|}
name|doc
operator|.
name|insertString
argument_list|(
name|commandStart
argument_list|,
name|message
argument_list|,
name|defaultAttrs
argument_list|)
expr_stmt|;
name|commandStart
operator|=
name|doc
operator|.
name|getLength
argument_list|()
expr_stmt|;
name|shell
operator|.
name|setCaretPosition
argument_list|(
name|commandStart
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BadLocationException
name|e
parameter_list|)
block|{
block|}
block|}
specifier|protected
name|void
name|setResources
parameter_list|(
name|List
name|rows
parameter_list|)
block|{
name|resources
operator|.
name|setData
argument_list|(
name|rows
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|setStatus
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|statusbar
operator|.
name|setText
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|setEditable
parameter_list|(
name|boolean
name|enabled
parameter_list|)
block|{
name|shell
operator|.
name|setEditable
argument_list|(
name|enabled
argument_list|)
expr_stmt|;
name|shell
operator|.
name|setVisible
argument_list|(
name|enabled
argument_list|)
expr_stmt|;
block|}
comment|/** @see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent) */
specifier|public
name|void
name|keyPressed
parameter_list|(
name|KeyEvent
name|e
parameter_list|)
block|{
name|type
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|gotUp
operator|=
literal|false
expr_stmt|;
block|}
comment|/** @see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent) */
specifier|public
name|void
name|keyReleased
parameter_list|(
name|KeyEvent
name|e
parameter_list|)
block|{
name|gotUp
operator|=
literal|true
expr_stmt|;
name|type
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
comment|/*      * (non-Javadoc)      *      * @see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)      */
specifier|public
name|void
name|keyTyped
parameter_list|(
name|KeyEvent
name|e
parameter_list|)
block|{
name|type
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|synchronized
name|void
name|type
parameter_list|(
name|KeyEvent
name|e
parameter_list|)
block|{
switch|switch
condition|(
name|e
operator|.
name|getKeyCode
argument_list|()
condition|)
block|{
case|case
name|KeyEvent
operator|.
name|VK_ENTER
case|:
if|if
condition|(
name|e
operator|.
name|getID
argument_list|()
operator|==
name|KeyEvent
operator|.
name|KEY_PRESSED
operator|&&
name|gotUp
condition|)
block|{
name|enter
argument_list|()
expr_stmt|;
block|}
name|e
operator|.
name|consume
argument_list|()
expr_stmt|;
break|break;
case|case
name|KeyEvent
operator|.
name|VK_HOME
case|:
name|shell
operator|.
name|setCaretPosition
argument_list|(
name|commandStart
argument_list|)
expr_stmt|;
name|e
operator|.
name|consume
argument_list|()
expr_stmt|;
break|break;
case|case
name|KeyEvent
operator|.
name|VK_LEFT
case|:
case|case
name|KeyEvent
operator|.
name|VK_DELETE
case|:
case|case
name|KeyEvent
operator|.
name|VK_BACK_SPACE
case|:
if|if
condition|(
name|shell
operator|.
name|getCaretPosition
argument_list|()
operator|<=
name|commandStart
condition|)
name|e
operator|.
name|consume
argument_list|()
expr_stmt|;
break|break;
case|case
name|KeyEvent
operator|.
name|VK_UP
case|:
if|if
condition|(
name|e
operator|.
name|getID
argument_list|()
operator|==
name|KeyEvent
operator|.
name|KEY_PRESSED
condition|)
name|historyBack
argument_list|()
expr_stmt|;
name|e
operator|.
name|consume
argument_list|()
expr_stmt|;
break|break;
case|case
name|KeyEvent
operator|.
name|VK_DOWN
case|:
if|if
condition|(
name|e
operator|.
name|getID
argument_list|()
operator|==
name|KeyEvent
operator|.
name|KEY_PRESSED
condition|)
name|historyForward
argument_list|()
expr_stmt|;
name|e
operator|.
name|consume
argument_list|()
expr_stmt|;
break|break;
default|default :
if|if
condition|(
operator|(
name|e
operator|.
name|getModifiers
argument_list|()
operator|&
operator|(
name|InputEvent
operator|.
name|CTRL_MASK
operator||
name|InputEvent
operator|.
name|META_MASK
operator||
name|InputEvent
operator|.
name|ALT_MASK
operator|)
operator|)
operator|==
literal|0
condition|)
block|{
if|if
condition|(
name|shell
operator|.
name|getCaretPosition
argument_list|()
operator|<
name|commandStart
condition|)
name|shell
operator|.
name|setCaretPosition
argument_list|(
name|doc
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|e
operator|.
name|paramString
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"Backspace"
argument_list|)
operator|>
name|Constants
operator|.
name|STRING_NOT_FOUND
condition|)
block|{
if|if
condition|(
name|shell
operator|.
name|getCaretPosition
argument_list|()
operator|<=
name|commandStart
condition|)
name|e
operator|.
name|consume
argument_list|()
expr_stmt|;
block|}
break|break;
block|}
block|}
comment|/** @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent) */
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|String
name|cmd
init|=
name|e
operator|.
name|getActionCommand
argument_list|()
decl_stmt|;
if|if
condition|(
name|cmd
operator|.
name|equals
argument_list|(
name|CUT
argument_list|)
condition|)
name|shell
operator|.
name|cut
argument_list|()
expr_stmt|;
if|else if
condition|(
name|cmd
operator|.
name|equals
argument_list|(
name|COPY
argument_list|)
condition|)
name|shell
operator|.
name|copy
argument_list|()
expr_stmt|;
if|else if
condition|(
name|cmd
operator|.
name|equals
argument_list|(
name|PASTE
argument_list|)
condition|)
name|shell
operator|.
name|paste
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|goUpAction
parameter_list|(
name|ActionEvent
name|ev
parameter_list|)
block|{
name|display
argument_list|(
literal|"cd ..\n"
argument_list|)
expr_stmt|;
name|process
operator|.
name|setAction
argument_list|(
literal|"cd .."
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|newCollectionAction
parameter_list|(
name|ActionEvent
name|ev
parameter_list|)
block|{
name|String
name|newCol
init|=
name|JOptionPane
operator|.
name|showInputDialog
argument_list|(
name|this
argument_list|,
literal|"Please enter name of new collection"
argument_list|)
decl_stmt|;
if|if
condition|(
name|newCol
operator|!=
literal|null
condition|)
block|{
name|String
name|command
init|=
literal|"mkcol \""
operator|+
name|newCol
operator|+
literal|'"'
decl_stmt|;
name|display
argument_list|(
name|command
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
name|process
operator|.
name|setAction
argument_list|(
name|command
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|newServerURIAction
parameter_list|(
name|String
name|newURI
parameter_list|)
block|{
if|if
condition|(
name|newURI
operator|==
literal|null
condition|)
name|newURI
operator|=
name|JOptionPane
operator|.
name|showInputDialog
argument_list|(
name|this
argument_list|,
literal|"Please enter a valid XML:DB base URI (without "
operator|+
literal|"collection path)"
argument_list|)
expr_stmt|;
if|if
condition|(
name|newURI
operator|!=
literal|null
condition|)
block|{
name|properties
operator|.
name|setProperty
argument_list|(
literal|"uri"
argument_list|,
name|newURI
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|shutdown
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|client
operator|.
name|connect
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
literal|"Connection to "
operator|+
name|newURI
operator|+
literal|" failed!"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|/**      * Returns an array of user-selected resources.      */
specifier|private
name|ResourceDescriptor
index|[]
name|getSelectedResources
parameter_list|()
block|{
specifier|final
name|int
index|[]
name|selectedRows
init|=
name|fileman
operator|.
name|getSelectedRows
argument_list|()
decl_stmt|;
specifier|final
name|ResourceDescriptor
index|[]
name|res
init|=
operator|new
name|ResourceDescriptor
index|[
name|selectedRows
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|selectedRows
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|res
index|[
name|i
index|]
operator|=
name|resources
operator|.
name|getRow
argument_list|(
name|selectedRows
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
return|return
name|res
return|;
block|}
specifier|private
name|void
name|removeAction
parameter_list|(
name|ActionEvent
name|ev
parameter_list|)
block|{
specifier|final
name|ResourceDescriptor
index|[]
name|res
init|=
name|getSelectedResources
argument_list|()
decl_stmt|;
comment|// String cmd;
if|if
condition|(
name|JOptionPane
operator|.
name|showConfirmDialog
argument_list|(
name|this
argument_list|,
literal|"Are you sure you want to remove the selected "
operator|+
literal|"resources?"
argument_list|,
literal|"Confirm deletion"
argument_list|,
name|JOptionPane
operator|.
name|YES_NO_OPTION
argument_list|)
operator|==
name|JOptionPane
operator|.
name|YES_OPTION
condition|)
block|{
name|Runnable
name|removeTask
init|=
operator|new
name|Runnable
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
name|ProgressMonitor
name|monitor
init|=
operator|new
name|ProgressMonitor
argument_list|(
name|ClientFrame
operator|.
name|this
argument_list|,
literal|"Remove Progress"
argument_list|,
literal|""
argument_list|,
literal|1
argument_list|,
name|res
operator|.
name|length
argument_list|)
decl_stmt|;
name|monitor
operator|.
name|setMillisToDecideToPopup
argument_list|(
literal|500
argument_list|)
expr_stmt|;
name|monitor
operator|.
name|setMillisToPopup
argument_list|(
literal|500
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|res
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|ResourceDescriptor
name|resource
init|=
name|res
index|[
name|i
index|]
decl_stmt|;
if|if
condition|(
name|resource
operator|.
name|isCollection
argument_list|()
condition|)
block|{
try|try
block|{
name|CollectionManagementService
name|mgtService
init|=
operator|(
name|CollectionManagementService
operator|)
name|client
operator|.
name|current
operator|.
name|getService
argument_list|(
literal|"CollectionManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|mgtService
operator|.
name|removeCollection
argument_list|(
name|resource
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
try|try
block|{
name|Resource
name|res
init|=
name|client
operator|.
name|current
operator|.
name|getResource
argument_list|(
name|resource
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|current
operator|.
name|removeResource
argument_list|(
name|res
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
name|monitor
operator|.
name|setProgress
argument_list|(
name|i
operator|+
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|monitor
operator|.
name|isCanceled
argument_list|()
condition|)
return|return;
block|}
try|try
block|{
name|client
operator|.
name|getResources
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
decl_stmt|;
operator|new
name|Thread
argument_list|(
name|removeTask
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|moveAction
parameter_list|(
name|ActionEvent
name|ev
parameter_list|)
block|{
specifier|final
name|ResourceDescriptor
index|[]
name|res
init|=
name|getSelectedResources
argument_list|()
decl_stmt|;
name|String
index|[]
name|collections
init|=
literal|null
decl_stmt|;
try|try
block|{
name|Collection
name|root
init|=
name|client
operator|.
name|getCollection
argument_list|(
name|DBBroker
operator|.
name|ROOT_COLLECTION
argument_list|)
decl_stmt|;
name|Vector
name|collectionsVec
init|=
name|getCollections
argument_list|(
name|root
argument_list|,
operator|new
name|Vector
argument_list|()
argument_list|)
decl_stmt|;
name|collections
operator|=
operator|new
name|String
index|[
name|collectionsVec
operator|.
name|size
argument_list|()
index|]
expr_stmt|;
name|collectionsVec
operator|.
name|toArray
argument_list|(
name|collections
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return;
block|}
name|Object
name|val
init|=
name|JOptionPane
operator|.
name|showInputDialog
argument_list|(
name|this
argument_list|,
literal|"Select target collection"
argument_list|,
literal|"Move"
argument_list|,
name|JOptionPane
operator|.
name|QUESTION_MESSAGE
argument_list|,
literal|null
argument_list|,
name|collections
argument_list|,
name|collections
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
if|if
condition|(
name|val
operator|==
literal|null
condition|)
return|return;
specifier|final
name|String
name|destinationPath
init|=
operator|(
name|String
operator|)
name|val
decl_stmt|;
name|Runnable
name|moveTask
init|=
operator|new
name|Runnable
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
name|CollectionManagementServiceImpl
name|service
init|=
operator|(
name|CollectionManagementServiceImpl
operator|)
name|client
operator|.
name|current
operator|.
name|getService
argument_list|(
literal|"CollectionManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|res
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|setStatus
argument_list|(
literal|"Moving "
operator|+
name|res
index|[
name|i
index|]
operator|.
name|getName
argument_list|()
operator|+
literal|" to "
operator|+
name|destinationPath
operator|+
literal|"..."
argument_list|)
expr_stmt|;
if|if
condition|(
name|res
index|[
name|i
index|]
operator|.
name|isCollection
argument_list|()
condition|)
name|service
operator|.
name|move
argument_list|(
name|res
index|[
name|i
index|]
operator|.
name|getName
argument_list|()
argument_list|,
name|destinationPath
argument_list|,
literal|null
argument_list|)
expr_stmt|;
else|else
name|service
operator|.
name|moveResource
argument_list|(
name|res
index|[
name|i
index|]
operator|.
name|getName
argument_list|()
argument_list|,
name|destinationPath
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
name|client
operator|.
name|reloadCollection
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
name|setStatus
argument_list|(
literal|"Move completed."
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
operator|new
name|Thread
argument_list|(
name|moveTask
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|renameAction
parameter_list|(
name|ActionEvent
name|ev
parameter_list|)
block|{
specifier|final
name|ResourceDescriptor
index|[]
name|res
init|=
name|getSelectedResources
argument_list|()
decl_stmt|;
name|String
index|[]
name|collections
init|=
literal|null
decl_stmt|;
try|try
block|{
name|Collection
name|root
init|=
name|client
operator|.
name|getCollection
argument_list|(
name|DBBroker
operator|.
name|ROOT_COLLECTION
argument_list|)
decl_stmt|;
name|Vector
name|collectionsVec
init|=
name|getCollections
argument_list|(
name|root
argument_list|,
operator|new
name|Vector
argument_list|()
argument_list|)
decl_stmt|;
name|collections
operator|=
operator|new
name|String
index|[
name|collectionsVec
operator|.
name|size
argument_list|()
index|]
expr_stmt|;
name|collectionsVec
operator|.
name|toArray
argument_list|(
name|collections
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return;
block|}
name|Object
name|val
init|=
name|JOptionPane
operator|.
name|showInputDialog
argument_list|(
name|this
argument_list|,
literal|"Please enter a new filename"
argument_list|,
literal|"Rename"
argument_list|,
name|JOptionPane
operator|.
name|QUESTION_MESSAGE
argument_list|)
decl_stmt|;
if|if
condition|(
name|val
operator|==
literal|null
condition|)
return|return;
specifier|final
name|String
name|destinationFilename
init|=
operator|(
name|String
operator|)
name|val
decl_stmt|;
name|Runnable
name|renameTask
init|=
operator|new
name|Runnable
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
name|CollectionManagementServiceImpl
name|service
init|=
operator|(
name|CollectionManagementServiceImpl
operator|)
name|client
operator|.
name|current
operator|.
name|getService
argument_list|(
literal|"CollectionManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|res
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|setStatus
argument_list|(
literal|"Renaming "
operator|+
name|res
index|[
name|i
index|]
operator|.
name|getName
argument_list|()
operator|+
literal|" to "
operator|+
name|destinationFilename
operator|+
literal|"..."
argument_list|)
expr_stmt|;
if|if
condition|(
name|res
index|[
name|i
index|]
operator|.
name|isCollection
argument_list|()
condition|)
name|service
operator|.
name|move
argument_list|(
name|res
index|[
name|i
index|]
operator|.
name|getName
argument_list|()
argument_list|,
literal|null
argument_list|,
name|destinationFilename
argument_list|)
expr_stmt|;
else|else
name|service
operator|.
name|moveResource
argument_list|(
name|res
index|[
name|i
index|]
operator|.
name|getName
argument_list|()
argument_list|,
literal|null
argument_list|,
name|destinationFilename
argument_list|)
expr_stmt|;
block|}
name|client
operator|.
name|reloadCollection
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
name|setStatus
argument_list|(
literal|"Rename completed."
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
operator|new
name|Thread
argument_list|(
name|renameTask
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|copyAction
parameter_list|(
name|ActionEvent
name|ev
parameter_list|)
block|{
specifier|final
name|ResourceDescriptor
index|[]
name|res
init|=
name|getSelectedResources
argument_list|()
decl_stmt|;
name|String
index|[]
name|collections
init|=
literal|null
decl_stmt|;
try|try
block|{
name|Collection
name|root
init|=
name|client
operator|.
name|getCollection
argument_list|(
name|DBBroker
operator|.
name|ROOT_COLLECTION
argument_list|)
decl_stmt|;
name|Vector
name|collectionsVec
init|=
name|getCollections
argument_list|(
name|root
argument_list|,
operator|new
name|Vector
argument_list|()
argument_list|)
decl_stmt|;
name|collections
operator|=
operator|new
name|String
index|[
name|collectionsVec
operator|.
name|size
argument_list|()
index|]
expr_stmt|;
name|collectionsVec
operator|.
name|toArray
argument_list|(
name|collections
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return;
block|}
name|Object
name|val
init|=
name|JOptionPane
operator|.
name|showInputDialog
argument_list|(
name|this
argument_list|,
literal|"Select target collection"
argument_list|,
literal|"Move"
argument_list|,
name|JOptionPane
operator|.
name|QUESTION_MESSAGE
argument_list|,
literal|null
argument_list|,
name|collections
argument_list|,
name|collections
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
if|if
condition|(
name|val
operator|==
literal|null
condition|)
return|return;
specifier|final
name|String
name|destinationPath
init|=
operator|(
name|String
operator|)
name|val
decl_stmt|;
name|Runnable
name|moveTask
init|=
operator|new
name|Runnable
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
name|CollectionManagementServiceImpl
name|service
init|=
operator|(
name|CollectionManagementServiceImpl
operator|)
name|client
operator|.
name|current
operator|.
name|getService
argument_list|(
literal|"CollectionManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|res
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|setStatus
argument_list|(
literal|"Copying "
operator|+
name|res
index|[
name|i
index|]
operator|.
name|getName
argument_list|()
operator|+
literal|" to "
operator|+
name|destinationPath
operator|+
literal|"..."
argument_list|)
expr_stmt|;
if|if
condition|(
name|res
index|[
name|i
index|]
operator|.
name|isCollection
argument_list|()
condition|)
name|service
operator|.
name|copy
argument_list|(
name|res
index|[
name|i
index|]
operator|.
name|getName
argument_list|()
argument_list|,
name|destinationPath
argument_list|,
literal|null
argument_list|)
expr_stmt|;
else|else
name|service
operator|.
name|copyResource
argument_list|(
name|res
index|[
name|i
index|]
operator|.
name|getName
argument_list|()
argument_list|,
name|destinationPath
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
name|client
operator|.
name|reloadCollection
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
name|setStatus
argument_list|(
literal|"Copy completed."
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
operator|new
name|Thread
argument_list|(
name|moveTask
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Vector
name|getCollections
parameter_list|(
name|Collection
name|root
parameter_list|,
name|Vector
name|collectionsList
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|collectionsList
operator|.
name|addElement
argument_list|(
name|root
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|String
index|[]
name|childCollections
init|=
name|root
operator|.
name|listChildCollections
argument_list|()
decl_stmt|;
name|Collection
name|child
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|childCollections
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|child
operator|=
name|root
operator|.
name|getChildCollection
argument_list|(
name|childCollections
index|[
name|i
index|]
argument_list|)
expr_stmt|;
name|getCollections
argument_list|(
name|child
argument_list|,
name|collectionsList
argument_list|)
expr_stmt|;
block|}
return|return
name|collectionsList
return|;
block|}
specifier|private
name|void
name|reindexAction
parameter_list|(
name|ActionEvent
name|ev
parameter_list|)
block|{
specifier|final
name|int
index|[]
name|selRows
init|=
name|fileman
operator|.
name|getSelectedRows
argument_list|()
decl_stmt|;
name|ResourceDescriptor
index|[]
name|res
decl_stmt|;
if|if
condition|(
name|selRows
operator|.
name|length
operator|==
literal|0
condition|)
block|{
name|res
operator|=
operator|new
name|ResourceDescriptor
index|[
literal|1
index|]
expr_stmt|;
name|res
index|[
literal|0
index|]
operator|=
operator|new
name|ResourceDescriptor
operator|.
name|Collection
argument_list|(
name|client
operator|.
name|path
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|res
operator|=
operator|new
name|ResourceDescriptor
index|[
name|selRows
operator|.
name|length
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|selRows
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|res
index|[
name|i
index|]
operator|=
name|resources
operator|.
name|getRow
argument_list|(
name|selRows
index|[
name|i
index|]
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|(
name|res
index|[
name|i
index|]
operator|.
name|isCollection
argument_list|()
operator|)
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
literal|"Only collections can be reindexed."
argument_list|,
literal|"Error"
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
if|if
condition|(
name|JOptionPane
operator|.
name|showConfirmDialog
argument_list|(
name|this
argument_list|,
literal|"Are you sure you want to reindex the selected collections \nand all resources below them?"
argument_list|,
literal|"Confirm reindex"
argument_list|,
name|JOptionPane
operator|.
name|YES_NO_OPTION
argument_list|)
operator|==
name|JOptionPane
operator|.
name|YES_OPTION
condition|)
block|{
specifier|final
name|ResourceDescriptor
name|collections
index|[]
init|=
name|res
decl_stmt|;
name|Runnable
name|reindexThread
init|=
operator|new
name|Runnable
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
name|ClientFrame
operator|.
name|this
operator|.
name|setCursor
argument_list|(
name|Cursor
operator|.
name|getPredefinedCursor
argument_list|(
name|Cursor
operator|.
name|WAIT_CURSOR
argument_list|)
argument_list|)
expr_stmt|;
name|IndexQueryService
name|service
decl_stmt|;
try|try
block|{
name|service
operator|=
operator|(
name|IndexQueryService
operator|)
name|client
operator|.
name|current
operator|.
name|getService
argument_list|(
literal|"IndexQueryService"
argument_list|,
literal|"1.0"
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|collections
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|ResourceDescriptor
name|next
init|=
name|collections
index|[
name|i
index|]
decl_stmt|;
name|setStatus
argument_list|(
literal|"Reindexing collection "
operator|+
name|next
operator|+
literal|"..."
argument_list|)
expr_stmt|;
name|service
operator|.
name|reindexCollection
argument_list|(
name|next
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|setStatus
argument_list|(
literal|"Reindex completed."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
name|ClientFrame
operator|.
name|this
operator|.
name|setCursor
argument_list|(
name|Cursor
operator|.
name|getDefaultCursor
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
operator|new
name|Thread
argument_list|(
name|reindexThread
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|uploadAction
parameter_list|(
name|ActionEvent
name|ev
parameter_list|)
block|{
name|String
name|dir
init|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"working-dir"
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"exist.home"
argument_list|)
argument_list|)
decl_stmt|;
name|JFileChooser
name|chooser
init|=
operator|new
name|JFileChooser
argument_list|(
name|dir
argument_list|)
decl_stmt|;
name|chooser
operator|.
name|setMultiSelectionEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setFileSelectionMode
argument_list|(
name|JFileChooser
operator|.
name|FILES_AND_DIRECTORIES
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|addChoosableFileFilter
argument_list|(
operator|new
name|BinaryFileFilter
argument_list|()
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|addChoosableFileFilter
argument_list|(
operator|new
name|XMLFileFilter
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|chooser
operator|.
name|showDialog
argument_list|(
name|this
argument_list|,
literal|"Select files or directories to store"
argument_list|)
operator|==
name|JFileChooser
operator|.
name|APPROVE_OPTION
condition|)
block|{
specifier|final
name|File
index|[]
name|files
init|=
name|chooser
operator|.
name|getSelectedFiles
argument_list|()
decl_stmt|;
if|if
condition|(
name|files
operator|.
name|length
operator|>
literal|0
condition|)
block|{
operator|new
name|Thread
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
name|UploadDialog
name|upload
init|=
operator|new
name|UploadDialog
argument_list|()
decl_stmt|;
try|try
block|{
name|client
operator|.
name|parse
argument_list|(
name|files
argument_list|,
name|upload
argument_list|)
expr_stmt|;
name|client
operator|.
name|getResources
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
literal|"XMLDBException: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
name|File
name|selectedDir
init|=
name|chooser
operator|.
name|getCurrentDirectory
argument_list|()
decl_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"working-dir"
argument_list|,
name|selectedDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|backupAction
parameter_list|(
name|ActionEvent
name|ev
parameter_list|)
block|{
name|CreateBackupDialog
name|dialog
init|=
operator|new
name|CreateBackupDialog
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"uri"
argument_list|,
literal|"xmldb:exist://"
argument_list|)
argument_list|,
name|properties
operator|.
name|getProperty
argument_list|(
literal|"user"
argument_list|,
literal|"admin"
argument_list|)
argument_list|,
name|properties
operator|.
name|getProperty
argument_list|(
literal|"password"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|properties
operator|.
name|getProperty
argument_list|(
literal|"backup-dir"
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.home"
argument_list|)
operator|+
name|File
operator|.
name|separatorChar
operator|+
literal|"backup"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|JOptionPane
operator|.
name|showOptionDialog
argument_list|(
name|this
argument_list|,
name|dialog
argument_list|,
literal|"Create Backup"
argument_list|,
name|JOptionPane
operator|.
name|OK_CANCEL_OPTION
argument_list|,
name|JOptionPane
operator|.
name|QUESTION_MESSAGE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
operator|==
name|JOptionPane
operator|.
name|YES_OPTION
condition|)
block|{
name|String
name|collection
init|=
name|dialog
operator|.
name|getCollection
argument_list|()
decl_stmt|;
name|String
name|dir
init|=
name|dialog
operator|.
name|getBackupDir
argument_list|()
decl_stmt|;
name|Backup
name|backup
init|=
operator|new
name|Backup
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"user"
argument_list|,
literal|"admin"
argument_list|)
argument_list|,
name|properties
operator|.
name|getProperty
argument_list|(
literal|"password"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|dir
argument_list|,
comment|//TODO : use dedicated function in XmldbURI
name|properties
operator|.
name|getProperty
argument_list|(
literal|"uri"
argument_list|,
literal|"xmldb:exist://"
argument_list|)
operator|+
name|collection
argument_list|)
decl_stmt|;
try|try
block|{
name|backup
operator|.
name|backup
argument_list|(
literal|true
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
literal|"XMLDBException: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
literal|"IOException: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SAXException
name|e
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
literal|"SAXException: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|restoreAction
parameter_list|(
name|ActionEvent
name|ev
parameter_list|)
block|{
name|JFileChooser
name|chooser
init|=
operator|new
name|JFileChooser
argument_list|()
decl_stmt|;
name|chooser
operator|.
name|setMultiSelectionEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setFileSelectionMode
argument_list|(
name|JFileChooser
operator|.
name|FILES_ONLY
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setFileFilter
argument_list|(
operator|new
name|FileFilter
argument_list|()
block|{
specifier|public
name|boolean
name|accept
parameter_list|(
name|File
name|f
parameter_list|)
block|{
if|if
condition|(
name|f
operator|.
name|isDirectory
argument_list|()
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|f
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"__contents__.xml"
argument_list|)
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
literal|"__contents__.xml files"
return|;
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|chooser
operator|.
name|showDialog
argument_list|(
literal|null
argument_list|,
literal|"Select backup file for restore"
argument_list|)
operator|==
name|JFileChooser
operator|.
name|APPROVE_OPTION
condition|)
block|{
name|JPanel
name|askPass
init|=
operator|new
name|JPanel
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
decl_stmt|;
name|askPass
operator|.
name|add
argument_list|(
operator|new
name|JLabel
argument_list|(
literal|"dba/admin password to use for the restore process:"
argument_list|)
argument_list|,
name|BorderLayout
operator|.
name|NORTH
argument_list|)
expr_stmt|;
name|JPasswordField
name|passInput
init|=
operator|new
name|JPasswordField
argument_list|(
literal|25
argument_list|)
decl_stmt|;
name|askPass
operator|.
name|add
argument_list|(
name|passInput
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
if|if
condition|(
name|JOptionPane
operator|.
name|showOptionDialog
argument_list|(
name|this
argument_list|,
name|askPass
argument_list|,
literal|"Admin Password"
argument_list|,
name|JOptionPane
operator|.
name|OK_CANCEL_OPTION
argument_list|,
name|JOptionPane
operator|.
name|QUESTION_MESSAGE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
operator|==
name|JOptionPane
operator|.
name|YES_OPTION
condition|)
block|{
name|String
name|newDbaPass
init|=
name|passInput
operator|.
name|getPassword
argument_list|()
operator|.
name|length
operator|==
literal|0
condition|?
literal|null
else|:
operator|new
name|String
argument_list|(
name|passInput
operator|.
name|getPassword
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|f
init|=
name|chooser
operator|.
name|getSelectedFile
argument_list|()
decl_stmt|;
name|String
name|restoreFile
init|=
name|f
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
try|try
block|{
name|Restore
name|restore
init|=
operator|new
name|Restore
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"user"
argument_list|,
literal|"admin"
argument_list|)
argument_list|,
name|properties
operator|.
name|getProperty
argument_list|(
literal|"password"
argument_list|,
literal|null
argument_list|)
argument_list|,
name|newDbaPass
argument_list|,
operator|new
name|File
argument_list|(
name|restoreFile
argument_list|)
argument_list|,
name|properties
operator|.
name|getProperty
argument_list|(
literal|"uri"
argument_list|,
literal|"xmldb:exist://"
argument_list|)
argument_list|)
decl_stmt|;
name|restore
operator|.
name|restore
argument_list|(
literal|true
argument_list|,
name|this
argument_list|)
expr_stmt|;
if|if
condition|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"user"
argument_list|,
literal|"admin"
argument_list|)
operator|.
name|equals
argument_list|(
literal|"admin"
argument_list|)
operator|&&
name|newDbaPass
operator|!=
literal|null
condition|)
name|properties
operator|.
name|setProperty
argument_list|(
literal|"password"
argument_list|,
name|newDbaPass
argument_list|)
expr_stmt|;
name|client
operator|.
name|reloadCollection
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
literal|"Exception: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|private
name|void
name|newUserAction
parameter_list|(
name|ActionEvent
name|ev
parameter_list|)
block|{
try|try
block|{
name|Collection
name|collection
init|=
name|client
operator|.
name|getCollection
argument_list|()
decl_stmt|;
name|UserManagementService
name|service
init|=
operator|(
name|UserManagementService
operator|)
name|collection
operator|.
name|getService
argument_list|(
literal|"UserManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|UserDialog
name|dialog
init|=
operator|new
name|UserDialog
argument_list|(
name|service
argument_list|,
literal|"Edit Users"
argument_list|,
name|client
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
literal|"Failed to retrieve UserManagementService"
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|findAction
parameter_list|(
name|ActionEvent
name|ev
parameter_list|)
block|{
name|Collection
name|collection
init|=
name|client
operator|.
name|getCollection
argument_list|()
decl_stmt|;
name|QueryDialog
name|dialog
init|=
operator|new
name|QueryDialog
argument_list|(
name|client
argument_list|,
name|collection
argument_list|,
name|properties
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|setPermAction
parameter_list|(
name|ActionEvent
name|ev
parameter_list|)
block|{
if|if
condition|(
name|fileman
operator|.
name|getSelectedRowCount
argument_list|()
operator|==
literal|0
condition|)
return|return;
try|try
block|{
name|Collection
name|collection
init|=
name|client
operator|.
name|getCollection
argument_list|()
decl_stmt|;
name|UserManagementService
name|service
init|=
operator|(
name|UserManagementService
operator|)
name|collection
operator|.
name|getService
argument_list|(
literal|"UserManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|Permission
name|perm
init|=
literal|null
decl_stmt|;
name|String
name|name
decl_stmt|;
name|Date
name|created
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|Date
name|modified
init|=
literal|null
decl_stmt|;
name|String
name|mimeType
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|fileman
operator|.
name|getSelectedRowCount
argument_list|()
operator|==
literal|1
condition|)
block|{
name|int
name|row
init|=
name|fileman
operator|.
name|getSelectedRow
argument_list|()
decl_stmt|;
name|ResourceDescriptor
name|desc
init|=
name|resources
operator|.
name|getRow
argument_list|(
name|row
argument_list|)
decl_stmt|;
name|name
operator|=
name|desc
operator|.
name|getName
argument_list|()
expr_stmt|;
if|if
condition|(
name|desc
operator|.
name|isCollection
argument_list|()
condition|)
block|{
name|Collection
name|coll
init|=
name|collection
operator|.
name|getChildCollection
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|created
operator|=
operator|(
operator|(
name|CollectionImpl
operator|)
name|coll
operator|)
operator|.
name|getCreationTime
argument_list|()
expr_stmt|;
name|perm
operator|=
name|service
operator|.
name|getPermissions
argument_list|(
name|coll
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Resource
name|res
init|=
name|collection
operator|.
name|getResource
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|created
operator|=
operator|(
operator|(
name|EXistResource
operator|)
name|res
operator|)
operator|.
name|getCreationTime
argument_list|()
expr_stmt|;
name|modified
operator|=
operator|(
operator|(
name|EXistResource
operator|)
name|res
operator|)
operator|.
name|getLastModificationTime
argument_list|()
expr_stmt|;
name|mimeType
operator|=
operator|(
operator|(
name|EXistResource
operator|)
name|res
operator|)
operator|.
name|getMimeType
argument_list|()
expr_stmt|;
name|perm
operator|=
name|service
operator|.
name|getPermissions
argument_list|(
name|res
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|name
operator|=
literal|"..."
expr_stmt|;
name|perm
operator|=
operator|new
name|Permission
argument_list|(
literal|""
argument_list|,
literal|""
argument_list|,
name|Permission
operator|.
name|DEFAULT_PERM
argument_list|)
expr_stmt|;
block|}
name|ResourcePropertyDialog
name|dialog
init|=
operator|new
name|ResourcePropertyDialog
argument_list|(
name|this
argument_list|,
name|service
argument_list|,
name|name
argument_list|,
name|perm
argument_list|,
name|created
argument_list|,
name|modified
argument_list|,
name|mimeType
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|dialog
operator|.
name|getResult
argument_list|()
operator|==
name|ResourcePropertyDialog
operator|.
name|APPLY_OPTION
condition|)
block|{
name|int
name|rows
index|[]
init|=
name|fileman
operator|.
name|getSelectedRows
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|rows
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|ResourceDescriptor
name|desc
init|=
name|resources
operator|.
name|getRow
argument_list|(
name|rows
index|[
name|i
index|]
argument_list|)
decl_stmt|;
if|if
condition|(
name|desc
operator|.
name|isCollection
argument_list|()
condition|)
block|{
name|Collection
name|coll
init|=
name|collection
operator|.
name|getChildCollection
argument_list|(
name|desc
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|service
operator|.
name|setPermissions
argument_list|(
name|coll
argument_list|,
name|dialog
operator|.
name|permissions
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Resource
name|res
init|=
name|collection
operator|.
name|getResource
argument_list|(
name|desc
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|service
operator|.
name|setPermissions
argument_list|(
name|res
argument_list|,
name|dialog
operator|.
name|permissions
argument_list|)
expr_stmt|;
block|}
block|}
name|client
operator|.
name|reloadCollection
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
literal|"XMLDB Exception: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|enter
parameter_list|()
block|{
name|int
name|end
init|=
name|doc
operator|.
name|getLength
argument_list|()
decl_stmt|;
if|if
condition|(
name|end
operator|-
name|commandStart
operator|==
literal|0
condition|)
return|return;
try|try
block|{
name|String
name|command
init|=
name|doc
operator|.
name|getText
argument_list|(
name|commandStart
argument_list|,
name|end
operator|-
name|commandStart
argument_list|)
decl_stmt|;
name|commandStart
operator|=
name|end
expr_stmt|;
name|doc
operator|.
name|insertString
argument_list|(
name|commandStart
operator|++
argument_list|,
literal|"\n"
argument_list|,
name|defaultAttrs
argument_list|)
expr_stmt|;
if|if
condition|(
name|command
operator|!=
literal|null
condition|)
block|{
name|process
operator|.
name|setAction
argument_list|(
name|command
argument_list|)
expr_stmt|;
name|Readline
operator|.
name|addToHistory
argument_list|(
name|command
argument_list|)
expr_stmt|;
name|currentHistory
operator|=
name|Readline
operator|.
name|getHistorySize
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|BadLocationException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|historyBack
parameter_list|()
block|{
if|if
condition|(
name|currentHistory
operator|==
literal|0
condition|)
return|return;
name|String
name|item
init|=
name|Readline
operator|.
name|getHistoryLine
argument_list|(
operator|--
name|currentHistory
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|==
literal|null
condition|)
return|return;
try|try
block|{
if|if
condition|(
name|shell
operator|.
name|getCaretPosition
argument_list|()
operator|>
name|commandStart
condition|)
name|doc
operator|.
name|remove
argument_list|(
name|commandStart
argument_list|,
name|doc
operator|.
name|getLength
argument_list|()
operator|-
name|commandStart
argument_list|)
expr_stmt|;
name|doc
operator|.
name|insertString
argument_list|(
name|commandStart
argument_list|,
name|item
argument_list|,
name|defaultAttrs
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BadLocationException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|historyForward
parameter_list|()
block|{
if|if
condition|(
name|currentHistory
operator|+
literal|1
operator|==
name|Readline
operator|.
name|getHistorySize
argument_list|()
condition|)
return|return;
name|String
name|item
init|=
name|Readline
operator|.
name|getHistoryLine
argument_list|(
operator|++
name|currentHistory
argument_list|)
decl_stmt|;
try|try
block|{
if|if
condition|(
name|shell
operator|.
name|getCaretPosition
argument_list|()
operator|>
name|commandStart
condition|)
name|doc
operator|.
name|remove
argument_list|(
name|commandStart
argument_list|,
name|doc
operator|.
name|getLength
argument_list|()
operator|-
name|commandStart
argument_list|)
expr_stmt|;
name|doc
operator|.
name|insertString
argument_list|(
name|commandStart
argument_list|,
name|item
argument_list|,
name|defaultAttrs
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BadLocationException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|close
parameter_list|()
block|{
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|dispose
argument_list|()
expr_stmt|;
name|process
operator|.
name|terminate
argument_list|()
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|actionFinished
parameter_list|()
block|{
if|if
condition|(
operator|!
name|process
operator|.
name|getStatus
argument_list|()
condition|)
name|close
argument_list|()
expr_stmt|;
name|displayPrompt
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|AboutAction
parameter_list|()
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
literal|"eXist version 1.0, Copyright (C) 2004 Wolfgang Meier\n"
operator|+
literal|"eXist comes with ABSOLUTELY NO WARRANTY.\n"
operator|+
literal|"This is free software, and you are welcome to\n"
operator|+
literal|"redistribute it under certain conditions;\n"
operator|+
literal|"for details read the license file."
argument_list|)
expr_stmt|;
return|return;
block|}
class|class
name|TableMouseListener
extends|extends
name|MouseAdapter
block|{
specifier|public
name|void
name|mouseClicked
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getClickCount
argument_list|()
operator|==
literal|2
condition|)
block|{
name|int
name|row
init|=
name|fileman
operator|.
name|getSelectedRow
argument_list|()
decl_stmt|;
specifier|final
name|ResourceDescriptor
name|resource
init|=
name|resources
operator|.
name|getRow
argument_list|(
name|row
argument_list|)
decl_stmt|;
if|if
condition|(
name|resource
operator|.
name|isCollection
argument_list|()
condition|)
block|{
comment|// cd into collection
name|String
name|command
init|=
literal|"cd \""
operator|+
name|resource
operator|.
name|getName
argument_list|()
operator|+
literal|'"'
decl_stmt|;
name|display
argument_list|(
name|command
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
name|process
operator|.
name|setAction
argument_list|(
name|command
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// open a document for editing
name|ClientFrame
operator|.
name|this
operator|.
name|setCursor
argument_list|(
name|Cursor
operator|.
name|getPredefinedCursor
argument_list|(
name|Cursor
operator|.
name|WAIT_CURSOR
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|DocumentView
name|view
init|=
operator|new
name|DocumentView
argument_list|(
name|client
argument_list|,
name|resource
operator|.
name|getName
argument_list|()
argument_list|,
name|properties
argument_list|)
decl_stmt|;
name|view
operator|.
name|setSize
argument_list|(
operator|new
name|Dimension
argument_list|(
literal|640
argument_list|,
literal|400
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|viewDocument
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|ex
parameter_list|)
block|{
name|showErrorMessage
argument_list|(
literal|"XMLDB error: "
operator|+
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
name|ClientFrame
operator|.
name|this
operator|.
name|setCursor
argument_list|(
name|Cursor
operator|.
name|getDefaultCursor
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
comment|/**      * Compares resources according to their name, ensuring that collections      * always are before documents.      * @author gpothier      */
specifier|private
specifier|static
class|class
name|ResourceComparator
implements|implements
name|Comparator
block|{
specifier|public
name|int
name|compare
parameter_list|(
name|Object
name|aO1
parameter_list|,
name|Object
name|aO2
parameter_list|)
block|{
name|ResourceDescriptor
name|desc1
init|=
operator|(
name|ResourceDescriptor
operator|)
name|aO1
decl_stmt|;
name|ResourceDescriptor
name|desc2
init|=
operator|(
name|ResourceDescriptor
operator|)
name|aO2
decl_stmt|;
if|if
condition|(
name|desc1
operator|.
name|isCollection
argument_list|()
operator|!=
name|desc2
operator|.
name|isCollection
argument_list|()
condition|)
block|{
return|return
name|desc1
operator|.
name|isCollection
argument_list|()
condition|?
name|Constants
operator|.
name|INFERIOR
else|:
name|Constants
operator|.
name|SUPERIOR
return|;
block|}
else|else
return|return
name|desc1
operator|.
name|getName
argument_list|()
operator|.
name|compareTo
argument_list|(
name|desc2
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
block|}
class|class
name|ProcessThread
extends|extends
name|Thread
block|{
specifier|private
name|String
name|action
init|=
literal|null
decl_stmt|;
specifier|private
name|boolean
name|terminate
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|status
init|=
literal|false
decl_stmt|;
specifier|public
name|ProcessThread
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|synchronized
specifier|public
name|void
name|setAction
parameter_list|(
name|String
name|action
parameter_list|)
block|{
while|while
condition|(
name|this
operator|.
name|action
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|wait
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
block|}
block|}
name|this
operator|.
name|action
operator|=
name|action
expr_stmt|;
name|notify
argument_list|()
expr_stmt|;
block|}
specifier|synchronized
specifier|public
name|void
name|terminate
parameter_list|()
block|{
name|terminate
operator|=
literal|true
expr_stmt|;
name|notify
argument_list|()
expr_stmt|;
block|}
specifier|synchronized
specifier|public
name|boolean
name|getStatus
parameter_list|()
block|{
return|return
name|status
return|;
block|}
specifier|public
name|boolean
name|isReady
parameter_list|()
block|{
return|return
name|action
operator|==
literal|null
return|;
block|}
comment|/*          * (non-Javadoc)          *          * @see java.lang.Runnable#run()          */
specifier|public
name|void
name|run
parameter_list|()
block|{
while|while
condition|(
operator|!
name|terminate
condition|)
block|{
while|while
condition|(
name|action
operator|==
literal|null
condition|)
try|try
block|{
synchronized|synchronized
init|(
name|this
init|)
block|{
name|wait
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
block|}
name|status
operator|=
name|client
operator|.
name|process
argument_list|(
name|action
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|this
init|)
block|{
name|action
operator|=
literal|null
expr_stmt|;
name|actionFinished
argument_list|()
expr_stmt|;
name|notify
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
class|class
name|ResourceTableModel
extends|extends
name|AbstractTableModel
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
specifier|final
name|String
index|[]
name|columnNames
init|=
operator|new
name|String
index|[]
block|{
literal|"Permissions"
block|,
literal|"Owner"
block|,
literal|"Group"
block|,
literal|"Resource"
block|,
literal|"Date"
block|}
decl_stmt|;
specifier|private
name|List
name|rows
init|=
literal|null
decl_stmt|;
specifier|public
name|void
name|setData
parameter_list|(
name|List
name|rows
parameter_list|)
block|{
name|Collections
operator|.
name|sort
argument_list|(
name|rows
argument_list|,
operator|new
name|ResourceComparator
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|rows
operator|=
name|rows
expr_stmt|;
name|fireTableDataChanged
argument_list|()
expr_stmt|;
block|}
specifier|public
name|ResourceDescriptor
name|getRow
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
operator|(
name|ResourceDescriptor
operator|)
name|rows
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/*          * (non-Javadoc)          *          * @see javax.swing.table.TableModel#getColumnCount()          */
specifier|public
name|int
name|getColumnCount
parameter_list|()
block|{
return|return
name|columnNames
operator|.
name|length
return|;
block|}
comment|/*          * (non-Javadoc)          *          * @see javax.swing.table.TableModel#getColumnName(int)          */
specifier|public
name|String
name|getColumnName
parameter_list|(
name|int
name|column
parameter_list|)
block|{
return|return
name|columnNames
index|[
name|column
index|]
return|;
block|}
comment|/*          * (non-Javadoc)          *          * @see javax.swing.table.TableModel#getRowCount()          */
specifier|public
name|int
name|getRowCount
parameter_list|()
block|{
return|return
name|rows
operator|==
literal|null
condition|?
literal|0
else|:
name|rows
operator|.
name|size
argument_list|()
return|;
block|}
comment|/*          * (non-Javadoc)          *          * @see javax.swing.table.TableModel#getValueAt(int, int)          */
specifier|public
name|Object
name|getValueAt
parameter_list|(
name|int
name|rowIndex
parameter_list|,
name|int
name|columnIndex
parameter_list|)
block|{
name|ResourceDescriptor
name|row
init|=
name|getRow
argument_list|(
name|rowIndex
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|columnIndex
condition|)
block|{
case|case
literal|0
case|:
return|return
name|row
operator|.
name|getPermissions
argument_list|()
return|;
case|case
literal|1
case|:
return|return
name|row
operator|.
name|getOwner
argument_list|()
return|;
case|case
literal|2
case|:
return|return
name|row
operator|.
name|getGroup
argument_list|()
return|;
case|case
literal|3
case|:
return|return
name|row
operator|.
name|getName
argument_list|()
return|;
case|case
literal|4
case|:
return|return
name|row
operator|.
name|getDate
argument_list|()
return|;
default|default:
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Column does not eXist!"
argument_list|)
throw|;
block|}
block|}
block|}
specifier|protected
specifier|static
name|String
index|[]
name|getLoginData
parameter_list|(
name|String
name|defaultUser
parameter_list|,
name|String
name|uri
parameter_list|)
block|{
name|LoginPanel
name|login
init|=
operator|new
name|LoginPanel
argument_list|(
name|defaultUser
argument_list|,
name|uri
argument_list|)
decl_stmt|;
if|if
condition|(
name|JOptionPane
operator|.
name|showOptionDialog
argument_list|(
literal|null
argument_list|,
name|login
argument_list|,
literal|"eXist Database Login"
argument_list|,
name|JOptionPane
operator|.
name|OK_CANCEL_OPTION
argument_list|,
name|JOptionPane
operator|.
name|QUESTION_MESSAGE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
operator|==
name|JOptionPane
operator|.
name|OK_OPTION
condition|)
block|{
name|String
index|[]
name|ret
init|=
operator|new
name|String
index|[
literal|3
index|]
decl_stmt|;
name|ret
index|[
literal|0
index|]
operator|=
name|login
operator|.
name|getUsername
argument_list|()
expr_stmt|;
name|ret
index|[
literal|1
index|]
operator|=
name|login
operator|.
name|getPassword
argument_list|()
expr_stmt|;
name|ret
index|[
literal|2
index|]
operator|=
name|login
operator|.
name|getUri
argument_list|()
expr_stmt|;
return|return
name|ret
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
specifier|static
name|void
name|showErrorMessage
parameter_list|(
name|String
name|message
parameter_list|,
name|Throwable
name|t
parameter_list|)
block|{
name|JScrollPane
name|scroll
init|=
literal|null
decl_stmt|;
name|JTextArea
name|msgArea
init|=
operator|new
name|JTextArea
argument_list|(
name|message
argument_list|)
decl_stmt|;
name|msgArea
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createTitledBorder
argument_list|(
literal|"Message:"
argument_list|)
argument_list|)
expr_stmt|;
name|msgArea
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|msgArea
operator|.
name|setBackground
argument_list|(
literal|null
argument_list|)
expr_stmt|;
if|if
condition|(
name|t
operator|!=
literal|null
condition|)
block|{
name|StringWriter
name|out
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|PrintWriter
name|writer
init|=
operator|new
name|PrintWriter
argument_list|(
name|out
argument_list|)
decl_stmt|;
name|t
operator|.
name|printStackTrace
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|JTextArea
name|stacktrace
init|=
operator|new
name|JTextArea
argument_list|(
name|out
operator|.
name|toString
argument_list|()
argument_list|,
literal|20
argument_list|,
literal|50
argument_list|)
decl_stmt|;
name|stacktrace
operator|.
name|setBackground
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|stacktrace
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|scroll
operator|=
operator|new
name|JScrollPane
argument_list|(
name|stacktrace
argument_list|)
expr_stmt|;
name|scroll
operator|.
name|setPreferredSize
argument_list|(
operator|new
name|Dimension
argument_list|(
literal|250
argument_list|,
literal|300
argument_list|)
argument_list|)
expr_stmt|;
name|scroll
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createTitledBorder
argument_list|(
literal|"Exception Stacktrace:"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|JOptionPane
name|optionPane
init|=
operator|new
name|JOptionPane
argument_list|()
decl_stmt|;
name|optionPane
operator|.
name|setMessage
argument_list|(
operator|new
name|Object
index|[]
block|{
name|msgArea
block|,
name|scroll
block|}
argument_list|)
expr_stmt|;
name|optionPane
operator|.
name|setMessageType
argument_list|(
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
name|JDialog
name|dialog
init|=
name|optionPane
operator|.
name|createDialog
argument_list|(
literal|null
argument_list|,
literal|"Error"
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|setResizable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|pack
argument_list|()
expr_stmt|;
name|dialog
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return;
block|}
comment|/*      * (non-Javadoc)      *      * @see java.awt.event.WindowFocusListener#windowGainedFocus(java.awt.event.WindowEvent)      */
specifier|public
name|void
name|windowGainedFocus
parameter_list|(
name|WindowEvent
name|e
parameter_list|)
block|{
name|toFront
argument_list|()
expr_stmt|;
block|}
comment|/*      * (non-Javadoc)      *      * @see java.awt.event.WindowFocusListener#windowLostFocus(java.awt.event.WindowEvent)      */
specifier|public
name|void
name|windowLostFocus
parameter_list|(
name|WindowEvent
name|e
parameter_list|)
block|{
block|}
comment|/*      * (non-Javadoc)      *      * @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)      */
specifier|public
name|void
name|mouseClicked
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
block|}
comment|/*      * (non-Javadoc)      *      * @see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)      */
specifier|public
name|void
name|mouseEntered
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
block|}
comment|/*      * (non-Javadoc)      *      * @see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)      */
specifier|public
name|void
name|mouseExited
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
block|}
comment|/*      * (non-Javadoc)      *      * @see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)      */
specifier|public
name|void
name|mousePressed
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|isPopupTrigger
argument_list|()
condition|)
block|{
name|shellPopup
operator|.
name|show
argument_list|(
operator|(
name|Component
operator|)
name|e
operator|.
name|getSource
argument_list|()
argument_list|,
name|e
operator|.
name|getX
argument_list|()
argument_list|,
name|e
operator|.
name|getY
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|/*      * (non-Javadoc)      *      * @see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)      */
specifier|public
name|void
name|mouseReleased
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|isPopupTrigger
argument_list|()
condition|)
block|{
name|shellPopup
operator|.
name|show
argument_list|(
operator|(
name|Component
operator|)
name|e
operator|.
name|getSource
argument_list|()
argument_list|,
name|e
operator|.
name|getX
argument_list|()
argument_list|,
name|e
operator|.
name|getY
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
class|class
name|ResourceTableCellRenderer
implements|implements
name|TableCellRenderer
block|{
specifier|public
specifier|final
specifier|static
name|Color
name|collectionBackground
init|=
operator|new
name|Color
argument_list|(
literal|225
argument_list|,
literal|235
argument_list|,
literal|224
argument_list|)
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|Color
name|collectionForeground
init|=
name|Color
operator|.
name|black
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|Color
name|highBackground
init|=
operator|new
name|Color
argument_list|(
literal|115
argument_list|,
literal|130
argument_list|,
literal|189
argument_list|)
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|Color
name|highForeground
init|=
name|Color
operator|.
name|white
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|Color
name|altBackground
init|=
operator|new
name|Color
argument_list|(
literal|235
argument_list|,
literal|235
argument_list|,
literal|235
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|DefaultTableCellRenderer
name|DEFAULT_RENDERER
init|=
operator|new
name|DefaultTableCellRenderer
argument_list|()
decl_stmt|;
comment|/*          * (non-Javadoc)          *          * @see javax.swing.table.TableCellRenderer#getTableCellRendererComponent(javax.swing.JTable,          *           java.lang.Object, boolean, boolean, int, int)          */
specifier|public
name|Component
name|getTableCellRendererComponent
parameter_list|(
name|JTable
name|table
parameter_list|,
name|Object
name|value
parameter_list|,
name|boolean
name|isSelected
parameter_list|,
name|boolean
name|hasFocus
parameter_list|,
name|int
name|row
parameter_list|,
name|int
name|column
parameter_list|)
block|{
name|Component
name|renderer
init|=
name|DEFAULT_RENDERER
operator|.
name|getTableCellRendererComponent
argument_list|(
name|table
argument_list|,
name|value
argument_list|,
name|isSelected
argument_list|,
name|hasFocus
argument_list|,
name|row
argument_list|,
name|column
argument_list|)
decl_stmt|;
operator|(
operator|(
name|JLabel
operator|)
name|renderer
operator|)
operator|.
name|setOpaque
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Color
name|foreground
decl_stmt|,
name|background
decl_stmt|;
name|ResourceTableModel
name|resources
init|=
operator|(
name|ResourceTableModel
operator|)
name|table
operator|.
name|getModel
argument_list|()
decl_stmt|;
if|if
condition|(
name|isSelected
condition|)
block|{
name|foreground
operator|=
name|highForeground
expr_stmt|;
name|background
operator|=
name|highBackground
expr_stmt|;
block|}
if|else if
condition|(
name|resources
operator|.
name|getRow
argument_list|(
name|row
argument_list|)
operator|.
name|isCollection
argument_list|()
condition|)
block|{
name|foreground
operator|=
name|collectionForeground
expr_stmt|;
name|background
operator|=
name|collectionBackground
expr_stmt|;
block|}
if|else if
condition|(
name|row
operator|%
literal|2
operator|==
literal|0
condition|)
block|{
name|background
operator|=
name|altBackground
expr_stmt|;
name|foreground
operator|=
name|Color
operator|.
name|black
expr_stmt|;
block|}
else|else
block|{
name|foreground
operator|=
name|Color
operator|.
name|black
expr_stmt|;
name|background
operator|=
name|Color
operator|.
name|white
expr_stmt|;
block|}
name|renderer
operator|.
name|setForeground
argument_list|(
name|foreground
argument_list|)
expr_stmt|;
name|renderer
operator|.
name|setBackground
argument_list|(
name|background
argument_list|)
expr_stmt|;
return|return
name|renderer
return|;
block|}
block|}
class|class
name|BinaryFileFilter
extends|extends
name|FileFilter
block|{
comment|/* (non-Javadoc)          * @see javax.swing.filechooser.FileFilter#getDescription()          */
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
literal|"Binary resources"
return|;
block|}
comment|/* (non-Javadoc)          * @see javax.swing.filechooser.FileFilter#accept(java.io.File)          */
specifier|public
name|boolean
name|accept
parameter_list|(
name|File
name|f
parameter_list|)
block|{
if|if
condition|(
name|f
operator|.
name|isDirectory
argument_list|()
condition|)
return|return
literal|true
return|;
return|return
operator|!
name|MimeTable
operator|.
name|getInstance
argument_list|()
operator|.
name|isXMLContent
argument_list|(
name|f
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
block|}
class|class
name|XMLFileFilter
extends|extends
name|FileFilter
block|{
comment|/* (non-Javadoc)          * @see javax.swing.filechooser.FileFilter#getDescription()          */
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
literal|"XML files"
return|;
block|}
comment|/* (non-Javadoc)          * @see javax.swing.filechooser.FileFilter#accept(java.io.File)          */
specifier|public
name|boolean
name|accept
parameter_list|(
name|File
name|f
parameter_list|)
block|{
if|if
condition|(
name|f
operator|.
name|isDirectory
argument_list|()
condition|)
return|return
literal|true
return|;
return|return
name|MimeTable
operator|.
name|getInstance
argument_list|()
operator|.
name|isXMLContent
argument_list|(
name|f
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

