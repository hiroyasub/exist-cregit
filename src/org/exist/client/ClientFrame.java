begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * ClientFrame.java - Mar 31, 2003  *   * @author wolf  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|HeadlessException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ItemEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ItemListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|KeyEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowAdapter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|Box
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComboBox
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JFrame
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|KeyStroke
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|BadLocationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|DefaultStyledDocument
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|Keymap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|SimpleAttributeSet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|StyleConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|TextAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_class
specifier|public
class|class
name|ClientFrame
extends|extends
name|JFrame
block|{
specifier|public
specifier|final
specifier|static
name|int
name|MAX_DISPLAY_LENGTH
init|=
literal|512000
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|MAX_HISTORY
init|=
literal|50
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|SimpleAttributeSet
name|promptAttrs
init|=
operator|new
name|SimpleAttributeSet
argument_list|()
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|SimpleAttributeSet
name|defaultAttrs
init|=
operator|new
name|SimpleAttributeSet
argument_list|()
decl_stmt|;
block|{
name|StyleConstants
operator|.
name|setForeground
parameter_list|(
name|promptAttrs
parameter_list|,
name|Color
operator|.
name|blue
parameter_list|)
constructor_decl|;
name|StyleConstants
operator|.
name|setBold
argument_list|(
name|promptAttrs
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|StyleConstants
operator|.
name|setForeground
parameter_list|(
name|defaultAttrs
parameter_list|,
name|Color
operator|.
name|black
parameter_list|)
constructor_decl|;
block|}
specifier|private
name|int
name|lastPosition
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|currentHistory
init|=
literal|0
decl_stmt|;
specifier|private
name|DefaultStyledDocument
name|doc
decl_stmt|;
specifier|private
name|JTextPane
name|text
decl_stmt|;
specifier|private
name|JComboBox
name|historyCombo
decl_stmt|;
specifier|private
name|InteractiveClient
name|client
decl_stmt|;
specifier|private
name|String
name|path
init|=
literal|null
decl_stmt|;
specifier|private
name|ProcessThread
name|process
init|=
operator|new
name|ProcessThread
argument_list|()
decl_stmt|;
specifier|private
name|LinkedList
name|history
init|=
operator|new
name|LinkedList
argument_list|()
decl_stmt|;
specifier|private
name|TreeSet
name|historyItems
init|=
operator|new
name|TreeSet
argument_list|()
decl_stmt|;
specifier|private
name|PrettyPrinter
name|printer
decl_stmt|;
comment|/** 	 * @throws java.awt.HeadlessException 	 */
specifier|public
name|ClientFrame
parameter_list|(
name|InteractiveClient
name|client
parameter_list|,
name|String
name|path
parameter_list|)
throws|throws
name|HeadlessException
block|{
name|super
argument_list|(
literal|"eXist Client Shell"
argument_list|)
expr_stmt|;
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
name|this
operator|.
name|client
operator|=
name|client
expr_stmt|;
name|doc
operator|=
operator|new
name|DefaultStyledDocument
argument_list|()
expr_stmt|;
name|text
operator|=
operator|new
name|JTextPane
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|printer
operator|=
operator|new
name|PrettyPrinter
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|JScrollPane
name|scroll
init|=
operator|new
name|JScrollPane
argument_list|(
name|text
argument_list|)
decl_stmt|;
name|Box
name|hbox
init|=
name|Box
operator|.
name|createHorizontalBox
argument_list|()
decl_stmt|;
name|JLabel
name|histLabel
init|=
operator|new
name|JLabel
argument_list|(
literal|"History:"
argument_list|)
decl_stmt|;
name|hbox
operator|.
name|add
argument_list|(
name|histLabel
argument_list|)
expr_stmt|;
name|historyCombo
operator|=
operator|new
name|JComboBox
argument_list|()
expr_stmt|;
name|historyCombo
operator|.
name|addItemListener
argument_list|(
operator|new
name|HistorySelectedAction
argument_list|()
argument_list|)
expr_stmt|;
name|hbox
operator|.
name|add
argument_list|(
name|historyCombo
argument_list|)
expr_stmt|;
name|KeyStroke
name|enter
init|=
name|KeyStroke
operator|.
name|getKeyStroke
argument_list|(
name|KeyEvent
operator|.
name|VK_ENTER
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|KeyStroke
name|up
init|=
name|KeyStroke
operator|.
name|getKeyStroke
argument_list|(
name|KeyEvent
operator|.
name|VK_UP
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|KeyStroke
name|down
init|=
name|KeyStroke
operator|.
name|getKeyStroke
argument_list|(
name|KeyEvent
operator|.
name|VK_DOWN
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Keymap
name|map
init|=
name|text
operator|.
name|getKeymap
argument_list|()
decl_stmt|;
name|EnterAction
name|enterAction
init|=
operator|new
name|EnterAction
argument_list|(
literal|"enter"
argument_list|)
decl_stmt|;
name|BackHistoryAction
name|backAction
init|=
operator|new
name|BackHistoryAction
argument_list|(
literal|"back"
argument_list|)
decl_stmt|;
name|ForwardHistoryAction
name|forwardAction
init|=
operator|new
name|ForwardHistoryAction
argument_list|(
literal|"forward"
argument_list|)
decl_stmt|;
name|map
operator|.
name|addActionForKeyStroke
argument_list|(
name|enter
argument_list|,
name|enterAction
argument_list|)
expr_stmt|;
name|map
operator|.
name|addActionForKeyStroke
argument_list|(
name|up
argument_list|,
name|backAction
argument_list|)
expr_stmt|;
name|map
operator|.
name|addActionForKeyStroke
argument_list|(
name|down
argument_list|,
name|forwardAction
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|hbox
argument_list|,
name|BorderLayout
operator|.
name|NORTH
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|scroll
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
name|addWindowListener
argument_list|(
operator|new
name|WindowAdapter
argument_list|()
block|{
specifier|public
name|void
name|windowClosing
parameter_list|(
name|WindowEvent
name|ev
parameter_list|)
block|{
name|close
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|pack
argument_list|()
expr_stmt|;
name|process
operator|.
name|start
argument_list|()
expr_stmt|;
name|text
operator|.
name|requestFocus
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setPath
parameter_list|(
name|String
name|currentPath
parameter_list|)
block|{
name|path
operator|=
name|currentPath
expr_stmt|;
block|}
specifier|protected
name|void
name|displayPrompt
parameter_list|()
block|{
try|try
block|{
name|int
name|pos
init|=
name|doc
operator|.
name|getEndPosition
argument_list|()
operator|.
name|getOffset
argument_list|()
operator|-
literal|1
decl_stmt|;
name|doc
operator|.
name|insertString
argument_list|(
name|pos
argument_list|,
literal|"exist:"
argument_list|,
name|promptAttrs
argument_list|)
expr_stmt|;
name|pos
operator|+=
literal|6
expr_stmt|;
name|doc
operator|.
name|insertString
argument_list|(
name|pos
argument_list|,
name|path
operator|+
literal|'>'
argument_list|,
name|promptAttrs
argument_list|)
expr_stmt|;
name|pos
operator|+=
name|path
operator|.
name|length
argument_list|()
operator|+
literal|1
expr_stmt|;
name|doc
operator|.
name|insertString
argument_list|(
name|pos
operator|++
argument_list|,
literal|" "
argument_list|,
name|defaultAttrs
argument_list|)
expr_stmt|;
name|text
operator|.
name|setCaretPosition
argument_list|(
name|pos
argument_list|)
expr_stmt|;
name|lastPosition
operator|=
name|doc
operator|.
name|getEndPosition
argument_list|()
operator|.
name|getOffset
argument_list|()
operator|-
literal|1
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BadLocationException
name|e
parameter_list|)
block|{
block|}
block|}
specifier|protected
name|void
name|display
parameter_list|(
name|String
name|message
parameter_list|)
block|{
try|try
block|{
name|int
name|pos
init|=
name|doc
operator|.
name|getLength
argument_list|()
decl_stmt|;
if|if
condition|(
name|pos
operator|>
name|MAX_DISPLAY_LENGTH
condition|)
block|{
name|doc
operator|.
name|remove
argument_list|(
literal|0
argument_list|,
name|MAX_DISPLAY_LENGTH
argument_list|)
expr_stmt|;
name|pos
operator|=
name|doc
operator|.
name|getLength
argument_list|()
expr_stmt|;
block|}
name|doc
operator|.
name|insertString
argument_list|(
name|pos
argument_list|,
name|message
argument_list|,
name|defaultAttrs
argument_list|)
expr_stmt|;
name|text
operator|.
name|setCaretPosition
argument_list|(
name|doc
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|lastPosition
operator|=
name|doc
operator|.
name|getLength
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BadLocationException
name|e
parameter_list|)
block|{
block|}
block|}
specifier|protected
name|void
name|setEditable
parameter_list|(
name|boolean
name|enabled
parameter_list|)
block|{
name|text
operator|.
name|setEditable
argument_list|(
name|enabled
argument_list|)
expr_stmt|;
name|text
operator|.
name|setVisible
argument_list|(
name|enabled
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|close
parameter_list|()
block|{
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|dispose
argument_list|()
expr_stmt|;
name|process
operator|.
name|terminate
argument_list|()
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|actionFinished
parameter_list|()
block|{
if|if
condition|(
operator|!
name|process
operator|.
name|getStatus
argument_list|()
condition|)
name|close
argument_list|()
expr_stmt|;
name|displayPrompt
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|ContentHandler
name|getContentHandler
parameter_list|()
block|{
return|return
name|printer
return|;
block|}
class|class
name|EnterAction
extends|extends
name|TextAction
block|{
specifier|public
name|EnterAction
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|ev
parameter_list|)
block|{
name|int
name|end
init|=
name|doc
operator|.
name|getEndPosition
argument_list|()
operator|.
name|getOffset
argument_list|()
decl_stmt|;
try|try
block|{
name|String
name|command
init|=
name|doc
operator|.
name|getText
argument_list|(
name|lastPosition
argument_list|,
name|end
operator|-
name|lastPosition
operator|-
literal|1
argument_list|)
decl_stmt|;
name|doc
operator|.
name|insertString
argument_list|(
name|doc
operator|.
name|getEndPosition
argument_list|()
operator|.
name|getOffset
argument_list|()
operator|-
literal|1
argument_list|,
literal|"\n"
argument_list|,
name|defaultAttrs
argument_list|)
expr_stmt|;
name|process
operator|.
name|setAction
argument_list|(
name|command
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|historyItems
operator|.
name|contains
argument_list|(
name|command
argument_list|)
condition|)
block|{
name|historyCombo
operator|.
name|addItem
argument_list|(
name|command
argument_list|)
expr_stmt|;
name|historyItems
operator|.
name|add
argument_list|(
name|command
argument_list|)
expr_stmt|;
block|}
name|history
operator|.
name|addLast
argument_list|(
name|command
argument_list|)
expr_stmt|;
if|if
condition|(
name|history
operator|.
name|size
argument_list|()
operator|==
name|MAX_HISTORY
condition|)
name|history
operator|.
name|removeFirst
argument_list|()
expr_stmt|;
name|currentHistory
operator|=
name|history
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BadLocationException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
class|class
name|BackHistoryAction
extends|extends
name|TextAction
block|{
specifier|public
name|BackHistoryAction
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|history
operator|.
name|size
argument_list|()
operator|==
literal|0
operator|||
name|currentHistory
operator|==
literal|0
condition|)
return|return;
name|String
name|item
init|=
operator|(
name|String
operator|)
name|history
operator|.
name|get
argument_list|(
operator|--
name|currentHistory
argument_list|)
decl_stmt|;
try|try
block|{
if|if
condition|(
name|doc
operator|.
name|getEndPosition
argument_list|()
operator|.
name|getOffset
argument_list|()
operator|>
name|lastPosition
condition|)
name|doc
operator|.
name|remove
argument_list|(
name|lastPosition
argument_list|,
name|doc
operator|.
name|getEndPosition
argument_list|()
operator|.
name|getOffset
argument_list|()
operator|-
name|lastPosition
operator|-
literal|1
argument_list|)
expr_stmt|;
name|doc
operator|.
name|insertString
argument_list|(
name|lastPosition
argument_list|,
name|item
argument_list|,
name|defaultAttrs
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BadLocationException
name|e1
parameter_list|)
block|{
name|e1
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
class|class
name|ForwardHistoryAction
extends|extends
name|TextAction
block|{
specifier|public
name|ForwardHistoryAction
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|history
operator|.
name|size
argument_list|()
operator|==
literal|0
operator|||
name|currentHistory
operator|==
name|history
operator|.
name|size
argument_list|()
operator|-
literal|1
condition|)
return|return;
name|String
name|item
init|=
operator|(
name|String
operator|)
name|history
operator|.
name|get
argument_list|(
operator|++
name|currentHistory
argument_list|)
decl_stmt|;
try|try
block|{
if|if
condition|(
name|doc
operator|.
name|getEndPosition
argument_list|()
operator|.
name|getOffset
argument_list|()
operator|>
name|lastPosition
condition|)
name|doc
operator|.
name|remove
argument_list|(
name|lastPosition
argument_list|,
name|doc
operator|.
name|getEndPosition
argument_list|()
operator|.
name|getOffset
argument_list|()
operator|-
name|lastPosition
operator|-
literal|1
argument_list|)
expr_stmt|;
name|doc
operator|.
name|insertString
argument_list|(
name|lastPosition
argument_list|,
name|item
argument_list|,
name|defaultAttrs
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BadLocationException
name|e1
parameter_list|)
block|{
name|e1
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
class|class
name|HistorySelectedAction
implements|implements
name|ItemListener
block|{
specifier|public
name|void
name|itemStateChanged
parameter_list|(
name|ItemEvent
name|e
parameter_list|)
block|{
name|String
name|item
init|=
name|e
operator|.
name|getItem
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
try|try
block|{
if|if
condition|(
name|doc
operator|.
name|getEndPosition
argument_list|()
operator|.
name|getOffset
argument_list|()
operator|>
name|lastPosition
condition|)
name|doc
operator|.
name|remove
argument_list|(
name|lastPosition
argument_list|,
name|doc
operator|.
name|getEndPosition
argument_list|()
operator|.
name|getOffset
argument_list|()
operator|-
name|lastPosition
operator|-
literal|1
argument_list|)
expr_stmt|;
name|doc
operator|.
name|insertString
argument_list|(
name|lastPosition
argument_list|,
name|item
argument_list|,
name|defaultAttrs
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BadLocationException
name|e1
parameter_list|)
block|{
name|e1
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
name|text
operator|.
name|requestFocus
argument_list|()
expr_stmt|;
block|}
block|}
class|class
name|ProcessThread
extends|extends
name|Thread
block|{
specifier|private
name|String
name|action
init|=
literal|null
decl_stmt|;
specifier|private
name|boolean
name|terminate
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|status
init|=
literal|false
decl_stmt|;
specifier|public
name|ProcessThread
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|synchronized
specifier|public
name|void
name|setAction
parameter_list|(
name|String
name|action
parameter_list|)
block|{
while|while
condition|(
name|this
operator|.
name|action
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|wait
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
block|}
block|}
name|this
operator|.
name|action
operator|=
name|action
expr_stmt|;
name|notify
argument_list|()
expr_stmt|;
block|}
specifier|synchronized
specifier|public
name|void
name|terminate
parameter_list|()
block|{
name|terminate
operator|=
literal|true
expr_stmt|;
name|notify
argument_list|()
expr_stmt|;
block|}
specifier|synchronized
specifier|public
name|boolean
name|getStatus
parameter_list|()
block|{
return|return
name|status
return|;
block|}
specifier|public
name|boolean
name|isReady
parameter_list|()
block|{
return|return
name|action
operator|==
literal|null
return|;
block|}
comment|/* (non-Javadoc) 		 * @see java.lang.Runnable#run() 		 */
specifier|public
name|void
name|run
parameter_list|()
block|{
while|while
condition|(
operator|!
name|terminate
condition|)
block|{
while|while
condition|(
name|action
operator|==
literal|null
condition|)
try|try
block|{
synchronized|synchronized
init|(
name|this
init|)
block|{
name|wait
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
block|}
name|status
operator|=
name|client
operator|.
name|process
argument_list|(
name|action
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|this
init|)
block|{
name|action
operator|=
literal|null
expr_stmt|;
name|actionFinished
argument_list|()
expr_stmt|;
name|notify
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
end_class

end_unit

