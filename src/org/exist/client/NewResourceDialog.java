begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|GridBagLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Insets
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|BorderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JButton
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComboBox
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JFrame
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextField
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|border
operator|.
name|EtchedBorder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|EXistResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|util
operator|.
name|URIUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|BinaryResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|XMLResource
import|;
end_import

begin_comment
comment|/**  *  * @author Adam Retter<adam.retter@googlemail.com>  */
end_comment

begin_class
specifier|public
class|class
name|NewResourceDialog
extends|extends
name|JFrame
block|{
specifier|private
specifier|final
specifier|static
name|String
name|DEFAULT_FILENAME
init|=
literal|"new-resource"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|DEFAULT_MODULE_NS
init|=
literal|"http://module1"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|DEFAULT_MODULE_NS_PREFIX
init|=
literal|"mod1"
decl_stmt|;
specifier|private
specifier|final
name|InteractiveClient
name|client
decl_stmt|;
specifier|public
name|NewResourceDialog
parameter_list|(
specifier|final
name|InteractiveClient
name|client
parameter_list|)
block|{
name|super
argument_list|(
literal|"New Resource..."
argument_list|)
expr_stmt|;
name|setupComponents
argument_list|()
expr_stmt|;
name|this
operator|.
name|client
operator|=
name|client
expr_stmt|;
block|}
specifier|private
enum|enum
name|ResourceType
block|{
name|XML_DOCUMENT
argument_list|(
literal|"XML Document"
argument_list|,
literal|"xml"
argument_list|,
literal|"application/xml"
argument_list|,
literal|"xml-resource.tmpl"
argument_list|)
block|,
name|XQUERY_MAIN
argument_list|(
literal|"XQuery Main Module"
argument_list|,
literal|"xqy"
argument_list|,
literal|"application/xquery"
argument_list|,
literal|"xquery-resource.tmpl"
argument_list|)
block|,
name|XQUERY_LIBRARY
argument_list|(
literal|"XQuery Library Module"
argument_list|,
literal|"xqm"
argument_list|,
literal|"application/xquery"
argument_list|,
literal|"xquery-lib-resource.tmpl"
argument_list|)
block|;
specifier|private
specifier|final
name|String
name|label
decl_stmt|;
specifier|private
specifier|final
name|String
name|fileExtension
decl_stmt|;
specifier|private
specifier|final
name|String
name|mimeType
decl_stmt|;
specifier|private
specifier|final
name|String
name|templatePath
decl_stmt|;
name|ResourceType
parameter_list|(
specifier|final
name|String
name|label
parameter_list|,
specifier|final
name|String
name|fileExtension
parameter_list|,
specifier|final
name|String
name|mimeType
parameter_list|,
specifier|final
name|String
name|templatePath
parameter_list|)
block|{
name|this
operator|.
name|label
operator|=
name|label
expr_stmt|;
name|this
operator|.
name|fileExtension
operator|=
name|fileExtension
expr_stmt|;
name|this
operator|.
name|mimeType
operator|=
name|mimeType
expr_stmt|;
name|this
operator|.
name|templatePath
operator|=
name|templatePath
expr_stmt|;
block|}
specifier|public
name|String
name|getFileExtension
parameter_list|()
block|{
return|return
name|fileExtension
return|;
block|}
specifier|public
name|String
name|getMimeType
parameter_list|()
block|{
return|return
name|mimeType
return|;
block|}
specifier|public
name|String
name|getTemplatePath
parameter_list|()
block|{
return|return
name|templatePath
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|label
return|;
block|}
block|}
specifier|private
name|void
name|setupComponents
parameter_list|()
block|{
specifier|final
name|JLabel
name|lblLibModule
init|=
operator|new
name|JLabel
argument_list|(
literal|"Library Module"
argument_list|)
decl_stmt|;
specifier|final
name|JPanel
name|panLibModule
init|=
operator|new
name|JPanel
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|GridBagLayout
name|grid
init|=
operator|new
name|GridBagLayout
argument_list|()
decl_stmt|;
name|getContentPane
argument_list|()
operator|.
name|setLayout
argument_list|(
name|grid
argument_list|)
expr_stmt|;
specifier|final
name|GridBagConstraints
name|c
init|=
operator|new
name|GridBagConstraints
argument_list|()
decl_stmt|;
name|c
operator|.
name|insets
operator|=
operator|new
name|Insets
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
specifier|final
name|JLabel
name|lblResourceType
init|=
operator|new
name|JLabel
argument_list|(
literal|"Resource Type"
operator|+
literal|": "
argument_list|)
decl_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|gridwidth
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|NONE
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|lblResourceType
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|lblResourceType
argument_list|)
expr_stmt|;
specifier|final
name|JComboBox
name|cmbResourceTypes
init|=
operator|new
name|JComboBox
argument_list|<
name|ResourceType
argument_list|>
argument_list|(
name|ResourceType
operator|.
name|values
argument_list|()
argument_list|)
decl_stmt|;
name|cmbResourceTypes
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|cmbResourceTypes
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
specifier|final
name|ActionEvent
name|e
parameter_list|)
block|{
specifier|final
name|Object
name|src
init|=
name|e
operator|.
name|getSource
argument_list|()
decl_stmt|;
if|if
condition|(
name|src
operator|.
name|equals
argument_list|(
name|cmbResourceTypes
argument_list|)
condition|)
block|{
specifier|final
name|boolean
name|visible
decl_stmt|;
switch|switch
condition|(
operator|(
name|ResourceType
operator|)
name|cmbResourceTypes
operator|.
name|getSelectedItem
argument_list|()
condition|)
block|{
case|case
name|XQUERY_LIBRARY
case|:
name|visible
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
name|visible
operator|=
literal|false
expr_stmt|;
block|}
name|lblLibModule
operator|.
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
name|panLibModule
operator|.
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
name|pack
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|gridwidth
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|NONE
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|cmbResourceTypes
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|cmbResourceTypes
argument_list|)
expr_stmt|;
specifier|final
name|JLabel
name|lblFilename
init|=
operator|new
name|JLabel
argument_list|(
literal|"Filename (excluding extension)"
operator|+
literal|": "
argument_list|)
decl_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|2
expr_stmt|;
name|c
operator|.
name|gridwidth
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|NONE
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|lblFilename
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|lblFilename
argument_list|)
expr_stmt|;
specifier|final
name|JTextField
name|txtFilename
init|=
operator|new
name|JTextField
argument_list|(
literal|20
argument_list|)
decl_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|2
expr_stmt|;
name|c
operator|.
name|gridwidth
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|NONE
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|txtFilename
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|txtFilename
argument_list|)
expr_stmt|;
comment|//controls for library module parameters
comment|//lblLibModule
name|c
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|3
expr_stmt|;
name|c
operator|.
name|gridwidth
operator|=
name|GridBagConstraints
operator|.
name|REMAINDER
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|NONE
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|lblLibModule
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|lblLibModule
argument_list|)
expr_stmt|;
name|lblLibModule
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|//panLibModule
name|panLibModule
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEtchedBorder
argument_list|(
name|EtchedBorder
operator|.
name|LOWERED
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|GridBagLayout
name|panGrid
init|=
operator|new
name|GridBagLayout
argument_list|()
decl_stmt|;
name|panLibModule
operator|.
name|setLayout
argument_list|(
name|panGrid
argument_list|)
expr_stmt|;
specifier|final
name|GridBagConstraints
name|cPan
init|=
operator|new
name|GridBagConstraints
argument_list|()
decl_stmt|;
name|cPan
operator|.
name|insets
operator|=
operator|new
name|Insets
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
specifier|final
name|JLabel
name|lblLibModuleNamespace
init|=
operator|new
name|JLabel
argument_list|(
literal|"Namespace"
operator|+
literal|": "
argument_list|)
decl_stmt|;
name|cPan
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|cPan
operator|.
name|gridy
operator|=
literal|0
expr_stmt|;
name|cPan
operator|.
name|gridwidth
operator|=
literal|1
expr_stmt|;
name|cPan
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|cPan
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|NONE
expr_stmt|;
name|panGrid
operator|.
name|setConstraints
argument_list|(
name|lblLibModuleNamespace
argument_list|,
name|cPan
argument_list|)
expr_stmt|;
name|panLibModule
operator|.
name|add
argument_list|(
name|lblLibModuleNamespace
argument_list|)
expr_stmt|;
specifier|final
name|JTextField
name|txtLibModuleNamespace
init|=
operator|new
name|JTextField
argument_list|(
name|DEFAULT_MODULE_NS
argument_list|,
literal|50
argument_list|)
decl_stmt|;
name|cPan
operator|.
name|gridx
operator|=
literal|1
expr_stmt|;
name|cPan
operator|.
name|gridy
operator|=
literal|0
expr_stmt|;
name|cPan
operator|.
name|gridwidth
operator|=
literal|1
expr_stmt|;
name|cPan
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|cPan
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|NONE
expr_stmt|;
name|panGrid
operator|.
name|setConstraints
argument_list|(
name|txtLibModuleNamespace
argument_list|,
name|cPan
argument_list|)
expr_stmt|;
name|panLibModule
operator|.
name|add
argument_list|(
name|txtLibModuleNamespace
argument_list|)
expr_stmt|;
specifier|final
name|JLabel
name|lblLibModulePrefix
init|=
operator|new
name|JLabel
argument_list|(
literal|"Namespace prefix"
operator|+
literal|": "
argument_list|)
decl_stmt|;
name|cPan
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|cPan
operator|.
name|gridy
operator|=
literal|1
expr_stmt|;
name|cPan
operator|.
name|gridwidth
operator|=
literal|1
expr_stmt|;
name|cPan
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|cPan
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|NONE
expr_stmt|;
name|panGrid
operator|.
name|setConstraints
argument_list|(
name|lblLibModulePrefix
argument_list|,
name|cPan
argument_list|)
expr_stmt|;
name|panLibModule
operator|.
name|add
argument_list|(
name|lblLibModulePrefix
argument_list|)
expr_stmt|;
specifier|final
name|JTextField
name|txtLibModulePrefix
init|=
operator|new
name|JTextField
argument_list|(
name|DEFAULT_MODULE_NS_PREFIX
argument_list|,
literal|10
argument_list|)
decl_stmt|;
name|cPan
operator|.
name|gridx
operator|=
literal|1
expr_stmt|;
name|cPan
operator|.
name|gridy
operator|=
literal|1
expr_stmt|;
name|cPan
operator|.
name|gridwidth
operator|=
literal|1
expr_stmt|;
name|cPan
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|cPan
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|NONE
expr_stmt|;
name|panGrid
operator|.
name|setConstraints
argument_list|(
name|txtLibModulePrefix
argument_list|,
name|cPan
argument_list|)
expr_stmt|;
name|panLibModule
operator|.
name|add
argument_list|(
name|txtLibModulePrefix
argument_list|)
expr_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|4
expr_stmt|;
name|c
operator|.
name|gridwidth
operator|=
name|GridBagConstraints
operator|.
name|REMAINDER
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|NONE
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|panLibModule
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|panLibModule
argument_list|)
expr_stmt|;
name|panLibModule
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
specifier|final
name|JButton
name|btnCancel
init|=
operator|new
name|JButton
argument_list|(
literal|"Cancel"
argument_list|)
decl_stmt|;
name|btnCancel
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
specifier|final
name|ActionEvent
name|e
parameter_list|)
block|{
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|dispose
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|5
expr_stmt|;
name|c
operator|.
name|gridwidth
operator|=
name|GridBagConstraints
operator|.
name|RELATIVE
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|EAST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|NONE
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|btnCancel
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|btnCancel
argument_list|)
expr_stmt|;
specifier|final
name|JButton
name|btnCreate
init|=
operator|new
name|JButton
argument_list|(
literal|"Create Resource"
argument_list|)
decl_stmt|;
name|btnCreate
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
specifier|final
name|ActionEvent
name|e
parameter_list|)
block|{
name|createResource
argument_list|(
operator|(
name|ResourceType
operator|)
name|cmbResourceTypes
operator|.
name|getSelectedItem
argument_list|()
argument_list|,
name|txtFilename
operator|.
name|getText
argument_list|()
argument_list|,
name|txtLibModuleNamespace
operator|.
name|getText
argument_list|()
argument_list|,
name|txtLibModulePrefix
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|dispose
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|5
expr_stmt|;
name|c
operator|.
name|gridwidth
operator|=
name|GridBagConstraints
operator|.
name|REMAINDER
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|EAST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|NONE
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|btnCreate
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|btnCreate
argument_list|)
expr_stmt|;
name|pack
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|createResource
parameter_list|(
specifier|final
name|ResourceType
name|resourceType
parameter_list|,
specifier|final
name|String
name|filename
parameter_list|,
specifier|final
name|String
name|moduleNamespace
parameter_list|,
specifier|final
name|String
name|moduleNamespacePrefix
parameter_list|)
block|{
specifier|final
name|StringBuilder
name|resourceContentBuilder
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|Reader
name|reader
init|=
literal|null
decl_stmt|;
try|try
block|{
specifier|final
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|resourceType
operator|.
name|getTemplatePath
argument_list|()
argument_list|)
decl_stmt|;
name|reader
operator|=
operator|new
name|InputStreamReader
argument_list|(
name|is
argument_list|)
expr_stmt|;
specifier|final
name|char
name|buf
index|[]
init|=
operator|new
name|char
index|[
literal|1024
index|]
decl_stmt|;
name|int
name|read
init|=
operator|-
literal|1
decl_stmt|;
while|while
condition|(
operator|(
name|read
operator|=
name|reader
operator|.
name|read
argument_list|(
name|buf
argument_list|)
operator|)
operator|>
operator|-
literal|1
condition|)
block|{
name|resourceContentBuilder
operator|.
name|append
argument_list|(
name|buf
argument_list|,
literal|0
argument_list|,
name|read
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
specifier|final
name|IOException
name|ioe
parameter_list|)
block|{
name|ClientFrame
operator|.
name|showErrorMessage
argument_list|(
name|ioe
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ioe
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|reader
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IOException
name|ioe
parameter_list|)
block|{
name|ClientFrame
operator|.
name|showErrorMessage
argument_list|(
name|ioe
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ioe
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|final
name|String
name|resourceContent
decl_stmt|;
if|if
condition|(
name|resourceType
operator|==
name|ResourceType
operator|.
name|XQUERY_LIBRARY
condition|)
block|{
name|resourceContent
operator|=
name|resourceContentBuilder
operator|.
name|toString
argument_list|()
operator|.
name|replaceAll
argument_list|(
literal|"\\$NS"
argument_list|,
name|moduleNamespace
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|"\\$PREFIX"
argument_list|,
name|moduleNamespacePrefix
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|resourceContent
operator|=
name|resourceContentBuilder
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
try|try
block|{
specifier|final
name|String
name|resName
init|=
name|URIUtils
operator|.
name|urlEncodeUtf8
argument_list|(
operator|(
name|isNullOrEmpty
argument_list|(
name|filename
argument_list|)
condition|?
name|DEFAULT_FILENAME
else|:
name|filename
operator|)
operator|+
literal|"."
operator|+
name|resourceType
operator|.
name|getFileExtension
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|String
name|resType
init|=
name|resourceType
operator|==
name|ResourceType
operator|.
name|XML_DOCUMENT
condition|?
name|XMLResource
operator|.
name|RESOURCE_TYPE
else|:
name|BinaryResource
operator|.
name|RESOURCE_TYPE
decl_stmt|;
specifier|final
name|Collection
name|collection
init|=
name|client
operator|.
name|current
decl_stmt|;
specifier|final
name|Resource
name|resource
init|=
name|collection
operator|.
name|createResource
argument_list|(
name|resName
argument_list|,
name|resType
argument_list|)
decl_stmt|;
name|resource
operator|.
name|setContent
argument_list|(
name|resourceContent
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|EXistResource
operator|)
name|resource
operator|)
operator|.
name|setMimeType
argument_list|(
name|resourceType
operator|.
name|getMimeType
argument_list|()
argument_list|)
expr_stmt|;
name|collection
operator|.
name|storeResource
argument_list|(
name|resource
argument_list|)
expr_stmt|;
name|collection
operator|.
name|close
argument_list|()
expr_stmt|;
name|client
operator|.
name|reloadCollection
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
name|ClientFrame
operator|.
name|showErrorMessage
argument_list|(
name|xmldbe
operator|.
name|getMessage
argument_list|()
argument_list|,
name|xmldbe
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|boolean
name|isNullOrEmpty
parameter_list|(
name|String
name|str
parameter_list|)
block|{
return|return
name|str
operator|==
literal|null
operator|||
name|str
operator|.
name|isEmpty
argument_list|()
return|;
block|}
block|}
end_class

end_unit

