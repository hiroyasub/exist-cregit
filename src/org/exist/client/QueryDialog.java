begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-2015 The eXist-db Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Cursor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowAdapter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|BorderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|Box
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|DefaultComboBoxModel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ImageIcon
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JButton
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComboBox
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComponent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JFileChooser
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JFrame
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JOptionPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JProgressBar
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JSpinner
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JSplitPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTabbedPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextField
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JToolBar
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|SpinnerNumberModel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|border
operator|.
name|BevelBorder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|OutputKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|PermissionDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|EXistXQueryService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|LocalCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|UserManagementService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|CompiledXQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|XQueryContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|XQueryWatchDog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fife
operator|.
name|ui
operator|.
name|rsyntaxtextarea
operator|.
name|RSyntaxTextArea
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fife
operator|.
name|ui
operator|.
name|rsyntaxtextarea
operator|.
name|SyntaxConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fife
operator|.
name|ui
operator|.
name|rtextarea
operator|.
name|RTextScrollPane
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|CompiledExpression
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|ResourceIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|ResourceSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|XMLResource
import|;
end_import

begin_class
specifier|public
class|class
name|QueryDialog
extends|extends
name|JFrame
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|InteractiveClient
name|client
decl_stmt|;
specifier|private
name|Collection
name|collection
decl_stmt|;
specifier|private
name|Properties
name|properties
decl_stmt|;
specifier|private
name|RSyntaxTextArea
name|query
decl_stmt|;
specifier|private
name|RTextScrollPane
name|queryScrollPane
decl_stmt|;
specifier|private
name|JTabbedPane
name|resultTabs
decl_stmt|;
specifier|private
name|RSyntaxTextArea
name|resultDisplay
decl_stmt|;
specifier|private
name|RTextScrollPane
name|resultDisplayScrollPane
decl_stmt|;
specifier|private
name|RSyntaxTextArea
name|exprDisplay
decl_stmt|;
specifier|private
name|RTextScrollPane
name|exprDisplayScrollPane
decl_stmt|;
specifier|private
name|JComboBox
name|collections
init|=
literal|null
decl_stmt|;
specifier|private
name|SpinnerNumberModel
name|count
decl_stmt|;
specifier|private
name|DefaultComboBoxModel
name|history
init|=
operator|new
name|DefaultComboBoxModel
argument_list|()
decl_stmt|;
specifier|private
name|JTextField
name|statusMessage
decl_stmt|;
specifier|private
name|JTextField
name|queryPositionDisplay
decl_stmt|;
specifier|private
name|JProgressBar
name|progress
decl_stmt|;
specifier|private
name|JButton
name|submitButton
decl_stmt|;
specifier|private
name|JButton
name|killButton
decl_stmt|;
specifier|private
name|QueryThread
name|q
init|=
literal|null
decl_stmt|;
specifier|private
name|Resource
name|resource
init|=
literal|null
decl_stmt|;
specifier|private
name|QueryDialog
parameter_list|(
specifier|final
name|InteractiveClient
name|client
parameter_list|,
specifier|final
name|Collection
name|collection
parameter_list|,
specifier|final
name|Properties
name|properties
parameter_list|,
name|boolean
name|loadedFromDb
parameter_list|)
block|{
name|super
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.0"
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|collection
operator|=
name|collection
expr_stmt|;
name|this
operator|.
name|properties
operator|=
name|properties
expr_stmt|;
name|this
operator|.
name|client
operator|=
name|client
expr_stmt|;
name|this
operator|.
name|setIconImage
argument_list|(
name|InteractiveClient
operator|.
name|getExistIcon
argument_list|(
name|getClass
argument_list|()
argument_list|)
operator|.
name|getImage
argument_list|()
argument_list|)
expr_stmt|;
name|setupComponents
argument_list|(
name|loadedFromDb
argument_list|)
expr_stmt|;
name|pack
argument_list|()
expr_stmt|;
block|}
specifier|public
name|QueryDialog
parameter_list|(
specifier|final
name|InteractiveClient
name|client
parameter_list|,
specifier|final
name|Collection
name|collection
parameter_list|,
specifier|final
name|Properties
name|properties
parameter_list|)
block|{
name|this
argument_list|(
name|client
argument_list|,
name|collection
argument_list|,
name|properties
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
name|QueryDialog
parameter_list|(
specifier|final
name|InteractiveClient
name|client
parameter_list|,
specifier|final
name|Collection
name|collection
parameter_list|,
specifier|final
name|Resource
name|resource
parameter_list|,
specifier|final
name|Properties
name|properties
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|this
argument_list|(
name|client
argument_list|,
name|collection
argument_list|,
name|properties
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|resource
operator|=
name|resource
expr_stmt|;
name|addWindowListener
argument_list|(
operator|new
name|WindowAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|windowClosing
parameter_list|(
name|WindowEvent
name|ev
parameter_list|)
block|{
try|try
block|{
specifier|final
name|UserManagementService
name|service
init|=
operator|(
name|UserManagementService
operator|)
name|collection
operator|.
name|getService
argument_list|(
literal|"UserManagementService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
comment|//$NON-NLS-1$ //$NON-NLS-2$
name|service
operator|.
name|unlockResource
argument_list|(
name|resource
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
comment|//set the content of the query
name|query
operator|.
name|setText
argument_list|(
operator|new
name|String
argument_list|(
operator|(
name|byte
index|[]
operator|)
name|resource
operator|.
name|getContent
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//set title
name|setTitle
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.0"
argument_list|)
operator|+
literal|": "
operator|+
name|resource
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|saveToDb
parameter_list|(
specifier|final
name|String
name|queryText
parameter_list|)
block|{
try|try
block|{
name|resource
operator|.
name|setContent
argument_list|(
name|queryText
argument_list|)
expr_stmt|;
name|collection
operator|.
name|storeResource
argument_list|(
name|resource
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
name|ClientFrame
operator|.
name|showErrorMessage
argument_list|(
name|xmldbe
operator|.
name|getMessage
argument_list|()
argument_list|,
name|xmldbe
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|setupComponents
parameter_list|(
name|boolean
name|loadedFromDb
parameter_list|)
block|{
name|getContentPane
argument_list|()
operator|.
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|JToolBar
name|toolbar
init|=
operator|new
name|JToolBar
argument_list|()
decl_stmt|;
name|URL
name|url
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/Open24.gif"
argument_list|)
decl_stmt|;
name|JButton
name|button
init|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
decl_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.opentooltip"
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
name|e
lambda|->
name|open
argument_list|()
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
if|if
condition|(
name|loadedFromDb
condition|)
block|{
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/SaveAs23.gif"
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
literal|"Save to database"
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
name|e
lambda|->
name|saveToDb
argument_list|(
name|query
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
block|}
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/SaveAs24.gif"
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.saveastooltip"
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
name|e
lambda|->
name|save
argument_list|(
name|query
operator|.
name|getText
argument_list|()
argument_list|,
literal|"query"
argument_list|)
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/SaveAs25.gif"
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.saveresultstooltip"
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
name|e
lambda|->
name|save
argument_list|(
name|resultDisplay
operator|.
name|getText
argument_list|()
argument_list|,
literal|"result"
argument_list|)
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|addSeparator
argument_list|()
expr_stmt|;
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/Copy24.gif"
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.copytooltip"
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
name|e
lambda|->
name|query
operator|.
name|copy
argument_list|()
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/Cut24.gif"
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.cuttooltip"
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
name|e
lambda|->
name|query
operator|.
name|cut
argument_list|()
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/Paste24.gif"
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.pastetooltip"
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
name|e
lambda|->
name|query
operator|.
name|paste
argument_list|()
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|addSeparator
argument_list|()
expr_stmt|;
comment|//TODO: change icon
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/Find24.gif"
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.compiletooltip"
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
name|e
lambda|->
name|compileQuery
argument_list|()
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|addSeparator
argument_list|()
expr_stmt|;
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/Find24.gif"
argument_list|)
expr_stmt|;
name|submitButton
operator|=
operator|new
name|JButton
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.submitbutton"
argument_list|)
argument_list|,
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|submitButton
operator|.
name|setToolTipText
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.submittooltip"
argument_list|)
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|add
argument_list|(
name|submitButton
argument_list|)
expr_stmt|;
name|submitButton
operator|.
name|addActionListener
argument_list|(
name|e
lambda|->
block|{
name|submitButton
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|collection
operator|instanceof
name|LocalCollection
condition|)
block|{
name|killButton
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|q
operator|=
name|doQuery
argument_list|()
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|addSeparator
argument_list|()
expr_stmt|;
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/Delete24.gif"
argument_list|)
expr_stmt|;
name|killButton
operator|=
operator|new
name|JButton
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.killbutton"
argument_list|)
argument_list|,
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|killButton
operator|.
name|setToolTipText
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.killtooltip"
argument_list|)
argument_list|)
expr_stmt|;
name|toolbar
operator|.
name|add
argument_list|(
name|killButton
argument_list|)
expr_stmt|;
name|killButton
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|killButton
operator|.
name|addActionListener
argument_list|(
name|e
lambda|->
block|{
if|if
condition|(
name|q
operator|!=
literal|null
condition|)
block|{
name|q
operator|.
name|killQuery
argument_list|()
expr_stmt|;
name|killButton
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|q
operator|=
literal|null
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
specifier|final
name|JSplitPane
name|split
init|=
operator|new
name|JSplitPane
argument_list|(
name|JSplitPane
operator|.
name|VERTICAL_SPLIT
argument_list|)
decl_stmt|;
name|split
operator|.
name|setResizeWeight
argument_list|(
literal|0.6
argument_list|)
expr_stmt|;
specifier|final
name|JComponent
name|qbox
init|=
name|createQueryBox
argument_list|()
decl_stmt|;
name|split
operator|.
name|setTopComponent
argument_list|(
name|qbox
argument_list|)
expr_stmt|;
specifier|final
name|JPanel
name|vbox
init|=
operator|new
name|JPanel
argument_list|()
decl_stmt|;
name|vbox
operator|.
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|JLabel
name|label
init|=
operator|new
name|JLabel
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.resultslabel"
argument_list|)
argument_list|)
decl_stmt|;
name|vbox
operator|.
name|add
argument_list|(
name|label
argument_list|,
name|BorderLayout
operator|.
name|NORTH
argument_list|)
expr_stmt|;
name|resultTabs
operator|=
operator|new
name|JTabbedPane
argument_list|()
expr_stmt|;
name|resultDisplay
operator|=
operator|new
name|RSyntaxTextArea
argument_list|(
literal|14
argument_list|,
literal|80
argument_list|)
expr_stmt|;
name|resultDisplay
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|resultDisplay
operator|.
name|getPopupMenu
argument_list|()
operator|.
name|remove
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|//remove undo
name|resultDisplay
operator|.
name|getPopupMenu
argument_list|()
operator|.
name|remove
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|//remove redo
name|resultDisplay
operator|.
name|getPopupMenu
argument_list|()
operator|.
name|remove
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|//remove undo/redo splitter
name|resultDisplay
operator|.
name|setSyntaxEditingStyle
argument_list|(
name|SyntaxConstants
operator|.
name|SYNTAX_STYLE_XML
argument_list|)
expr_stmt|;
name|resultDisplay
operator|.
name|setCodeFoldingEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|resultDisplayScrollPane
operator|=
operator|new
name|RTextScrollPane
argument_list|(
name|resultDisplay
argument_list|)
expr_stmt|;
name|resultTabs
operator|.
name|add
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.XMLtab"
argument_list|)
argument_list|,
name|resultDisplayScrollPane
argument_list|)
expr_stmt|;
name|exprDisplay
operator|=
operator|new
name|RSyntaxTextArea
argument_list|(
literal|14
argument_list|,
literal|80
argument_list|)
expr_stmt|;
name|exprDisplay
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|exprDisplay
operator|.
name|getPopupMenu
argument_list|()
operator|.
name|remove
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|//remove undo
name|exprDisplay
operator|.
name|getPopupMenu
argument_list|()
operator|.
name|remove
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|//remove redo
name|exprDisplay
operator|.
name|getPopupMenu
argument_list|()
operator|.
name|remove
argument_list|(
literal|0
argument_list|)
expr_stmt|;
comment|//remove undo/redo splitter
name|exprDisplayScrollPane
operator|=
operator|new
name|RTextScrollPane
argument_list|(
name|exprDisplay
argument_list|)
expr_stmt|;
name|resultTabs
operator|.
name|add
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.tracetab"
argument_list|)
argument_list|,
name|exprDisplayScrollPane
argument_list|)
expr_stmt|;
name|vbox
operator|.
name|add
argument_list|(
name|resultTabs
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
specifier|final
name|Box
name|statusbar
init|=
name|Box
operator|.
name|createHorizontalBox
argument_list|()
decl_stmt|;
name|statusbar
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createBevelBorder
argument_list|(
name|BevelBorder
operator|.
name|LOWERED
argument_list|)
argument_list|)
expr_stmt|;
name|statusMessage
operator|=
operator|new
name|JTextField
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|statusMessage
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|statusMessage
operator|.
name|setFocusable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|statusbar
operator|.
name|add
argument_list|(
name|statusMessage
argument_list|)
expr_stmt|;
name|queryPositionDisplay
operator|=
operator|new
name|JTextField
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|queryPositionDisplay
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|queryPositionDisplay
operator|.
name|setFocusable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|statusbar
operator|.
name|add
argument_list|(
name|queryPositionDisplay
argument_list|)
expr_stmt|;
name|query
operator|.
name|addCaretListener
argument_list|(
name|e
lambda|->
block|{
specifier|final
name|RSyntaxTextArea
name|txt
init|=
operator|(
name|RSyntaxTextArea
operator|)
name|e
operator|.
name|getSource
argument_list|()
decl_stmt|;
name|queryPositionDisplay
operator|.
name|setText
argument_list|(
literal|"Line: "
operator|+
operator|(
name|txt
operator|.
name|getCaretLineNumber
argument_list|()
operator|+
literal|1
operator|)
operator|+
literal|" Column:"
operator|+
operator|(
name|txt
operator|.
name|getCaretOffsetFromLineStart
argument_list|()
operator|+
literal|1
operator|)
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|progress
operator|=
operator|new
name|JProgressBar
argument_list|()
expr_stmt|;
name|progress
operator|.
name|setPreferredSize
argument_list|(
operator|new
name|Dimension
argument_list|(
literal|200
argument_list|,
name|statusbar
operator|.
name|getHeight
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|progress
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|statusbar
operator|.
name|add
argument_list|(
name|progress
argument_list|)
expr_stmt|;
name|vbox
operator|.
name|add
argument_list|(
name|statusbar
argument_list|,
name|BorderLayout
operator|.
name|SOUTH
argument_list|)
expr_stmt|;
name|split
operator|.
name|setBottomComponent
argument_list|(
name|vbox
argument_list|)
expr_stmt|;
name|split
operator|.
name|setDividerLocation
argument_list|(
literal|0.6
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|toolbar
argument_list|,
name|BorderLayout
operator|.
name|NORTH
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|split
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
block|}
specifier|private
name|JComponent
name|createQueryBox
parameter_list|()
block|{
specifier|final
name|JTabbedPane
name|tabs
init|=
operator|new
name|JTabbedPane
argument_list|()
decl_stmt|;
specifier|final
name|JPanel
name|inputVBox
init|=
operator|new
name|JPanel
argument_list|()
decl_stmt|;
name|inputVBox
operator|.
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
name|tabs
operator|.
name|add
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.inputtab"
argument_list|)
argument_list|,
name|inputVBox
argument_list|)
expr_stmt|;
specifier|final
name|Box
name|historyBox
init|=
name|Box
operator|.
name|createHorizontalBox
argument_list|()
decl_stmt|;
name|JLabel
name|label
init|=
operator|new
name|JLabel
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.historylabel"
argument_list|)
argument_list|)
decl_stmt|;
name|historyBox
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
specifier|final
name|JComboBox
name|historyList
init|=
operator|new
name|JComboBox
argument_list|(
name|history
argument_list|)
decl_stmt|;
for|for
control|(
specifier|final
name|String
name|query
range|:
name|client
operator|.
name|queryHistory
control|)
block|{
name|addQuery
argument_list|(
name|query
argument_list|)
expr_stmt|;
block|}
name|historyList
operator|.
name|addActionListener
argument_list|(
name|e
lambda|->
block|{
specifier|final
name|String
name|item
init|=
operator|(
name|String
operator|)
name|client
operator|.
name|queryHistory
operator|.
name|get
argument_list|(
name|historyList
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
decl_stmt|;
name|query
operator|.
name|setText
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|historyBox
operator|.
name|add
argument_list|(
name|historyList
argument_list|)
expr_stmt|;
name|inputVBox
operator|.
name|add
argument_list|(
name|historyBox
argument_list|,
name|BorderLayout
operator|.
name|NORTH
argument_list|)
expr_stmt|;
name|query
operator|=
operator|new
name|RSyntaxTextArea
argument_list|(
literal|14
argument_list|,
literal|80
argument_list|)
expr_stmt|;
name|query
operator|.
name|setSyntaxEditingStyle
argument_list|(
name|SyntaxConstants
operator|.
name|SYNTAX_STYLE_XML
argument_list|)
expr_stmt|;
name|query
operator|.
name|setCodeFoldingEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|queryScrollPane
operator|=
operator|new
name|RTextScrollPane
argument_list|(
name|query
argument_list|)
expr_stmt|;
name|inputVBox
operator|.
name|add
argument_list|(
name|queryScrollPane
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
specifier|final
name|Box
name|optionsPanel
init|=
name|Box
operator|.
name|createHorizontalBox
argument_list|()
decl_stmt|;
name|label
operator|=
operator|new
name|JLabel
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.contextlabel"
argument_list|)
argument_list|)
expr_stmt|;
name|optionsPanel
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|data
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
try|try
block|{
specifier|final
name|Collection
name|root
init|=
name|client
operator|.
name|getCollection
argument_list|(
name|XmldbURI
operator|.
name|ROOT_COLLECTION
argument_list|)
decl_stmt|;
name|data
operator|.
name|add
argument_list|(
name|collection
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|getCollections
argument_list|(
name|root
argument_list|,
name|collection
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|e
parameter_list|)
block|{
name|ClientFrame
operator|.
name|showErrorMessage
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.collectionretrievalerrormessage"
argument_list|)
operator|+
literal|"."
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
name|collections
operator|=
operator|new
name|JComboBox
argument_list|(
operator|new
name|java
operator|.
name|util
operator|.
name|Vector
argument_list|(
name|data
argument_list|)
argument_list|)
expr_stmt|;
name|collections
operator|.
name|addActionListener
argument_list|(
name|e
lambda|->
block|{
specifier|final
name|int
name|p
init|=
name|collections
operator|.
name|getSelectedIndex
argument_list|()
decl_stmt|;
specifier|final
name|String
name|context
init|=
name|data
operator|.
name|get
argument_list|(
name|p
argument_list|)
decl_stmt|;
try|try
block|{
name|collection
operator|=
name|client
operator|.
name|getCollection
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|e1
parameter_list|)
block|{
block|}
block|}
argument_list|)
expr_stmt|;
name|optionsPanel
operator|.
name|add
argument_list|(
name|collections
argument_list|)
expr_stmt|;
name|label
operator|=
operator|new
name|JLabel
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.maxlabel"
argument_list|)
argument_list|)
expr_stmt|;
name|optionsPanel
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|count
operator|=
operator|new
name|SpinnerNumberModel
argument_list|(
literal|100
argument_list|,
literal|1
argument_list|,
literal|10000
argument_list|,
literal|50
argument_list|)
expr_stmt|;
specifier|final
name|JSpinner
name|spinner
init|=
operator|new
name|JSpinner
argument_list|(
name|count
argument_list|)
decl_stmt|;
name|spinner
operator|.
name|setMaximumSize
argument_list|(
operator|new
name|Dimension
argument_list|(
literal|400
argument_list|,
literal|100
argument_list|)
argument_list|)
expr_stmt|;
name|optionsPanel
operator|.
name|add
argument_list|(
name|spinner
argument_list|)
expr_stmt|;
name|inputVBox
operator|.
name|add
argument_list|(
name|optionsPanel
argument_list|,
name|BorderLayout
operator|.
name|SOUTH
argument_list|)
expr_stmt|;
return|return
name|tabs
return|;
block|}
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|getCollections
parameter_list|(
specifier|final
name|Collection
name|root
parameter_list|,
specifier|final
name|Collection
name|collection
parameter_list|,
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|collectionsList
parameter_list|)
throws|throws
name|XMLDBException
block|{
if|if
condition|(
operator|!
name|collection
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|root
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|collectionsList
operator|.
name|add
argument_list|(
name|root
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|final
name|String
index|[]
name|childCollections
init|=
name|root
operator|.
name|listChildCollections
argument_list|()
decl_stmt|;
name|Collection
name|child
init|=
literal|null
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|childCollections
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
try|try
block|{
name|child
operator|=
name|root
operator|.
name|getChildCollection
argument_list|(
name|childCollections
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
if|if
condition|(
name|xmldbe
operator|.
name|getCause
argument_list|()
operator|instanceof
name|PermissionDeniedException
condition|)
block|{
continue|continue;
block|}
else|else
block|{
throw|throw
name|xmldbe
throw|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|npe
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Corrupted resource/collection skipped: "
operator|+
name|child
operator|!=
literal|null
condition|?
name|child
operator|.
name|getName
argument_list|()
operator|!=
literal|null
condition|?
name|child
operator|.
name|getName
argument_list|()
else|:
literal|"unknown"
else|:
literal|"unknown"
argument_list|)
expr_stmt|;
continue|continue;
block|}
try|try
block|{
name|getCollections
argument_list|(
name|child
argument_list|,
name|collection
argument_list|,
name|collectionsList
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ee
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Corrupted resource/collection skipped: "
operator|+
name|child
operator|!=
literal|null
condition|?
name|child
operator|.
name|getName
argument_list|()
operator|!=
literal|null
condition|?
name|child
operator|.
name|getName
argument_list|()
else|:
literal|"unknown"
else|:
literal|"unknown"
argument_list|)
expr_stmt|;
continue|continue;
block|}
block|}
return|return
name|collectionsList
return|;
block|}
specifier|private
name|void
name|open
parameter_list|()
block|{
specifier|final
name|String
name|workDir
init|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"working-dir"
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.dir"
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|JFileChooser
name|chooser
init|=
operator|new
name|JFileChooser
argument_list|()
decl_stmt|;
name|chooser
operator|.
name|setCurrentDirectory
argument_list|(
name|Paths
operator|.
name|get
argument_list|(
name|workDir
argument_list|)
operator|.
name|toFile
argument_list|()
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setMultiSelectionEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setFileSelectionMode
argument_list|(
name|JFileChooser
operator|.
name|FILES_ONLY
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|addChoosableFileFilter
argument_list|(
operator|new
name|MimeTypeFileFilter
argument_list|(
literal|"application/xquery"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|chooser
operator|.
name|showDialog
argument_list|(
name|this
argument_list|,
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.opendialog"
argument_list|)
argument_list|)
operator|==
name|JFileChooser
operator|.
name|APPROVE_OPTION
condition|)
block|{
specifier|final
name|Path
name|selectedDir
init|=
name|chooser
operator|.
name|getCurrentDirectory
argument_list|()
operator|.
name|toPath
argument_list|()
decl_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"working-dir"
argument_list|,
name|selectedDir
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Path
name|file
init|=
name|chooser
operator|.
name|getSelectedFile
argument_list|()
operator|.
name|toPath
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|Files
operator|.
name|isReadable
argument_list|(
name|file
argument_list|)
condition|)
block|{
name|JOptionPane
operator|.
name|showInternalMessageDialog
argument_list|(
name|this
argument_list|,
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.cannotreadmessage"
argument_list|)
operator|+
literal|" "
operator|+
name|file
operator|.
name|toAbsolutePath
argument_list|()
argument_list|,
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.Error"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
try|try
init|(
specifier|final
name|BufferedReader
name|reader
init|=
name|Files
operator|.
name|newBufferedReader
argument_list|(
name|file
argument_list|)
init|)
block|{
specifier|final
name|StringBuilder
name|buf
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|String
name|line
decl_stmt|;
while|while
condition|(
operator|(
name|line
operator|=
name|reader
operator|.
name|readLine
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|buf
operator|.
name|append
argument_list|(
name|line
argument_list|)
expr_stmt|;
name|buf
operator|.
name|append
argument_list|(
literal|'\n'
argument_list|)
expr_stmt|;
block|}
name|query
operator|.
name|setText
argument_list|(
name|buf
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IOException
name|e
parameter_list|)
block|{
name|ClientFrame
operator|.
name|showErrorMessage
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|save
parameter_list|(
name|String
name|stringToSave
parameter_list|,
name|String
name|fileCategory
parameter_list|)
block|{
if|if
condition|(
name|stringToSave
operator|==
literal|null
operator|||
literal|""
operator|.
name|equals
argument_list|(
name|stringToSave
argument_list|)
condition|)
block|{
return|return;
block|}
specifier|final
name|String
name|workDir
init|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"working-dir"
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.dir"
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|JFileChooser
name|chooser
init|=
operator|new
name|JFileChooser
argument_list|()
decl_stmt|;
name|chooser
operator|.
name|setMultiSelectionEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setCurrentDirectory
argument_list|(
name|Paths
operator|.
name|get
argument_list|(
name|workDir
argument_list|)
operator|.
name|toFile
argument_list|()
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setFileSelectionMode
argument_list|(
name|JFileChooser
operator|.
name|FILES_ONLY
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"result"
operator|.
name|equals
argument_list|(
name|fileCategory
argument_list|)
condition|)
block|{
name|chooser
operator|.
name|addChoosableFileFilter
argument_list|(
operator|new
name|MimeTypeFileFilter
argument_list|(
literal|"application/xhtml+xml"
argument_list|)
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|addChoosableFileFilter
argument_list|(
operator|new
name|MimeTypeFileFilter
argument_list|(
literal|"application/xml"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|chooser
operator|.
name|addChoosableFileFilter
argument_list|(
operator|new
name|MimeTypeFileFilter
argument_list|(
literal|"application/xquery"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|chooser
operator|.
name|showDialog
argument_list|(
name|this
argument_list|,
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.savedialogpre"
argument_list|)
operator|+
literal|" "
operator|+
name|fileCategory
operator|+
literal|" "
operator|+
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.savedialogpost"
argument_list|)
argument_list|)
operator|==
name|JFileChooser
operator|.
name|APPROVE_OPTION
condition|)
block|{
specifier|final
name|Path
name|selectedDir
init|=
name|chooser
operator|.
name|getCurrentDirectory
argument_list|()
operator|.
name|toPath
argument_list|()
decl_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"working-dir"
argument_list|,
name|selectedDir
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Path
name|file
init|=
name|chooser
operator|.
name|getSelectedFile
argument_list|()
operator|.
name|toPath
argument_list|()
decl_stmt|;
if|if
condition|(
name|Files
operator|.
name|exists
argument_list|(
name|file
argument_list|)
operator|&&
operator|(
operator|!
name|Files
operator|.
name|isWritable
argument_list|(
name|file
argument_list|)
operator|)
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.cannotsavemessagepre"
argument_list|)
operator|+
literal|" "
operator|+
name|fileCategory
operator|+
literal|" "
operator|+
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.cannotsavemessageinf"
argument_list|)
operator|+
literal|" "
operator|+
name|file
operator|.
name|toAbsolutePath
argument_list|()
argument_list|,
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.Error"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|Files
operator|.
name|exists
argument_list|(
name|file
argument_list|)
operator|&&
name|JOptionPane
operator|.
name|showConfirmDialog
argument_list|(
name|this
argument_list|,
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.savedialogconfirm"
argument_list|)
argument_list|,
literal|"Overwrite?"
argument_list|,
name|JOptionPane
operator|.
name|YES_NO_OPTION
argument_list|)
operator|==
name|JOptionPane
operator|.
name|NO_OPTION
condition|)
block|{
return|return;
block|}
try|try
init|(
specifier|final
name|Writer
name|writer
init|=
name|Files
operator|.
name|newBufferedWriter
argument_list|(
name|file
argument_list|)
init|)
block|{
name|writer
operator|.
name|write
argument_list|(
name|stringToSave
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IOException
name|e
parameter_list|)
block|{
name|ClientFrame
operator|.
name|showErrorMessage
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|QueryThread
name|doQuery
parameter_list|()
block|{
specifier|final
name|String
name|xpath
init|=
name|query
operator|.
name|getText
argument_list|()
decl_stmt|;
if|if
condition|(
name|xpath
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return
literal|null
return|;
block|}
name|resultDisplay
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
specifier|final
name|QueryThread
name|q
init|=
operator|new
name|QueryThread
argument_list|(
name|xpath
argument_list|)
decl_stmt|;
name|q
operator|.
name|start
argument_list|()
expr_stmt|;
return|return
name|q
return|;
block|}
specifier|private
name|void
name|compileQuery
parameter_list|()
block|{
specifier|final
name|String
name|xpath
init|=
operator|(
name|String
operator|)
name|query
operator|.
name|getText
argument_list|()
decl_stmt|;
if|if
condition|(
name|xpath
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return;
block|}
name|resultDisplay
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|{
name|statusMessage
operator|.
name|setText
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.compilemessage"
argument_list|)
argument_list|)
expr_stmt|;
name|setCursor
argument_list|(
name|Cursor
operator|.
name|getPredefinedCursor
argument_list|(
name|Cursor
operator|.
name|WAIT_CURSOR
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|long
name|tResult
init|=
literal|0
decl_stmt|;
name|long
name|tCompiled
init|=
literal|0
decl_stmt|;
try|try
block|{
specifier|final
name|EXistXQueryService
name|service
init|=
operator|(
name|EXistXQueryService
operator|)
name|collection
operator|.
name|getService
argument_list|(
literal|"XQueryService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|service
operator|.
name|setProperty
argument_list|(
name|OutputKeys
operator|.
name|INDENT
argument_list|,
name|properties
operator|.
name|getProperty
argument_list|(
name|OutputKeys
operator|.
name|INDENT
argument_list|,
literal|"yes"
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|long
name|t0
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
specifier|final
name|CompiledExpression
name|compiled
init|=
name|service
operator|.
name|compile
argument_list|(
name|xpath
argument_list|)
decl_stmt|;
specifier|final
name|long
name|t1
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|tCompiled
operator|=
name|t1
operator|-
name|t0
expr_stmt|;
comment|// In this way we can see the parsed structure meanwhile the query is
specifier|final
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|service
operator|.
name|dump
argument_list|(
name|compiled
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|exprDisplay
operator|.
name|setText
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|resultTabs
operator|.
name|setSelectedComponent
argument_list|(
name|exprDisplayScrollPane
argument_list|)
expr_stmt|;
name|statusMessage
operator|.
name|setText
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.Compilation"
argument_list|)
operator|+
literal|": "
operator|+
name|tCompiled
operator|+
literal|"ms"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|Throwable
name|e
parameter_list|)
block|{
name|statusMessage
operator|.
name|setText
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.Error"
argument_list|)
operator|+
literal|": "
operator|+
name|InteractiveClient
operator|.
name|getExceptionMessage
argument_list|(
name|e
argument_list|)
operator|+
literal|". "
operator|+
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.Compilation"
argument_list|)
operator|+
literal|": "
operator|+
name|tCompiled
operator|+
literal|"ms, "
operator|+
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.Execution"
argument_list|)
operator|+
literal|": "
operator|+
name|tResult
operator|+
literal|"ms"
argument_list|)
expr_stmt|;
name|ClientFrame
operator|.
name|showErrorMessageQuery
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.compilationerrormessage"
argument_list|)
operator|+
literal|": "
operator|+
name|InteractiveClient
operator|.
name|getExceptionMessage
argument_list|(
name|e
argument_list|)
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
name|setCursor
argument_list|(
name|Cursor
operator|.
name|getDefaultCursor
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|AtomicInteger
name|queryThreadId
init|=
operator|new
name|AtomicInteger
argument_list|()
decl_stmt|;
specifier|private
class|class
name|QueryThread
extends|extends
name|Thread
block|{
specifier|private
specifier|final
name|String
name|xpath
decl_stmt|;
specifier|private
name|XQueryContext
name|context
decl_stmt|;
specifier|public
name|QueryThread
parameter_list|(
specifier|final
name|String
name|query
parameter_list|)
block|{
name|super
argument_list|(
literal|"exist-queryThread-"
operator|+
name|queryThreadId
operator|.
name|getAndIncrement
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|xpath
operator|=
name|query
expr_stmt|;
name|this
operator|.
name|context
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|boolean
name|killQuery
parameter_list|()
block|{
if|if
condition|(
name|context
operator|!=
literal|null
condition|)
block|{
specifier|final
name|XQueryWatchDog
name|xwd
init|=
name|context
operator|.
name|getWatchDog
argument_list|()
decl_stmt|;
specifier|final
name|boolean
name|retval
init|=
operator|!
name|xwd
operator|.
name|isTerminating
argument_list|()
decl_stmt|;
if|if
condition|(
name|retval
condition|)
block|{
name|xwd
operator|.
name|kill
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
name|context
operator|=
literal|null
expr_stmt|;
return|return
name|retval
return|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|statusMessage
operator|.
name|setText
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.processingquerymessage"
argument_list|)
argument_list|)
expr_stmt|;
name|progress
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|progress
operator|.
name|setIndeterminate
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setCursor
argument_list|(
name|Cursor
operator|.
name|getPredefinedCursor
argument_list|(
name|Cursor
operator|.
name|WAIT_CURSOR
argument_list|)
argument_list|)
expr_stmt|;
name|long
name|tResult
init|=
literal|0
decl_stmt|;
name|long
name|tCompiled
init|=
literal|0
decl_stmt|;
name|ResourceSet
name|result
init|=
literal|null
decl_stmt|;
try|try
block|{
specifier|final
name|EXistXQueryService
name|service
init|=
operator|(
name|EXistXQueryService
operator|)
name|collection
operator|.
name|getService
argument_list|(
literal|"XQueryService"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|service
operator|.
name|setProperty
argument_list|(
name|OutputKeys
operator|.
name|INDENT
argument_list|,
name|properties
operator|.
name|getProperty
argument_list|(
name|OutputKeys
operator|.
name|INDENT
argument_list|,
literal|"yes"
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|long
name|t0
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
if|if
condition|(
name|resource
operator|!=
literal|null
condition|)
block|{
name|service
operator|.
name|setModuleLoadPath
argument_list|(
name|XmldbURI
operator|.
name|EMBEDDED_SERVER_URI_PREFIX
operator|+
name|resource
operator|.
name|getParentCollection
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|final
name|CompiledExpression
name|compiled
init|=
name|service
operator|.
name|compile
argument_list|(
name|xpath
argument_list|)
decl_stmt|;
specifier|final
name|long
name|t1
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
comment|// Check could also be collection instanceof LocalCollection
if|if
condition|(
name|compiled
operator|instanceof
name|CompiledXQuery
condition|)
block|{
name|context
operator|=
operator|(
operator|(
name|CompiledXQuery
operator|)
name|compiled
operator|)
operator|.
name|getContext
argument_list|()
expr_stmt|;
block|}
name|tCompiled
operator|=
name|t1
operator|-
name|t0
expr_stmt|;
comment|// In this way we can see the parsed structure meanwhile the query is
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|service
operator|.
name|dump
argument_list|(
name|compiled
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|exprDisplay
operator|.
name|setText
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|service
operator|.
name|execute
argument_list|(
name|compiled
argument_list|)
expr_stmt|;
name|context
operator|=
literal|null
expr_stmt|;
name|tResult
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|t1
expr_stmt|;
comment|// jmfg: Is this still needed? I don't think so
name|writer
operator|=
operator|new
name|StringWriter
argument_list|()
expr_stmt|;
name|service
operator|.
name|dump
argument_list|(
name|compiled
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|exprDisplay
operator|.
name|setText
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|statusMessage
operator|.
name|setText
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.retrievingmessage"
argument_list|)
argument_list|)
expr_stmt|;
name|XMLResource
name|resource
decl_stmt|;
specifier|final
name|int
name|howmany
init|=
name|count
operator|.
name|getNumber
argument_list|()
operator|.
name|intValue
argument_list|()
decl_stmt|;
name|progress
operator|.
name|setIndeterminate
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|progress
operator|.
name|setMinimum
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|progress
operator|.
name|setMaximum
argument_list|(
name|howmany
argument_list|)
expr_stmt|;
name|int
name|j
init|=
literal|0
decl_stmt|;
name|int
name|select
init|=
operator|-
literal|1
decl_stmt|;
specifier|final
name|StringBuilder
name|contents
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
specifier|final
name|ResourceIterator
name|i
init|=
name|result
operator|.
name|getIterator
argument_list|()
init|;
name|i
operator|.
name|hasMoreResources
argument_list|()
operator|&&
name|j
operator|<
name|howmany
condition|;
name|j
operator|++
control|)
block|{
name|resource
operator|=
operator|(
name|XMLResource
operator|)
name|i
operator|.
name|nextResource
argument_list|()
expr_stmt|;
name|progress
operator|.
name|setValue
argument_list|(
name|j
argument_list|)
expr_stmt|;
try|try
block|{
name|contents
operator|.
name|append
argument_list|(
operator|(
name|String
operator|)
name|resource
operator|.
name|getContent
argument_list|()
argument_list|)
expr_stmt|;
name|contents
operator|.
name|append
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|e
parameter_list|)
block|{
name|select
operator|=
name|ClientFrame
operator|.
name|showErrorMessageQuery
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.retrievalerrormessage"
argument_list|)
operator|+
literal|": "
operator|+
name|InteractiveClient
operator|.
name|getExceptionMessage
argument_list|(
name|e
argument_list|)
argument_list|,
name|e
argument_list|)
expr_stmt|;
if|if
condition|(
name|select
operator|==
literal|3
condition|)
block|{
break|break;
block|}
block|}
block|}
name|resultTabs
operator|.
name|setSelectedComponent
argument_list|(
name|resultDisplayScrollPane
argument_list|)
expr_stmt|;
name|resultDisplay
operator|.
name|setText
argument_list|(
name|contents
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|resultDisplay
operator|.
name|setCaretPosition
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|statusMessage
operator|.
name|setText
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.Found"
argument_list|)
operator|+
literal|" "
operator|+
name|result
operator|.
name|getSize
argument_list|()
operator|+
literal|" "
operator|+
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.items"
argument_list|)
operator|+
literal|"."
operator|+
literal|" "
operator|+
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.Compilation"
argument_list|)
operator|+
literal|": "
operator|+
name|tCompiled
operator|+
literal|"ms, "
operator|+
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.Execution"
argument_list|)
operator|+
literal|": "
operator|+
name|tResult
operator|+
literal|"ms"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|Throwable
name|e
parameter_list|)
block|{
name|statusMessage
operator|.
name|setText
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.Error"
argument_list|)
operator|+
literal|": "
operator|+
name|InteractiveClient
operator|.
name|getExceptionMessage
argument_list|(
name|e
argument_list|)
operator|+
literal|". "
operator|+
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.Compilation"
argument_list|)
operator|+
literal|": "
operator|+
name|tCompiled
operator|+
literal|"ms, "
operator|+
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.Execution"
argument_list|)
operator|+
literal|": "
operator|+
name|tResult
operator|+
literal|"ms"
argument_list|)
expr_stmt|;
name|progress
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|ClientFrame
operator|.
name|showErrorMessageQuery
argument_list|(
name|Messages
operator|.
name|getString
argument_list|(
literal|"QueryDialog.queryrunerrormessage"
argument_list|)
operator|+
literal|": "
operator|+
name|InteractiveClient
operator|.
name|getExceptionMessage
argument_list|(
name|e
argument_list|)
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|context
operator|!=
literal|null
condition|)
block|{
name|context
operator|.
name|runCleanupTasks
argument_list|()
expr_stmt|;
block|}
name|context
operator|=
literal|null
expr_stmt|;
if|if
condition|(
name|result
operator|!=
literal|null
condition|)
try|try
block|{
name|result
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|e
parameter_list|)
block|{
block|}
block|}
if|if
condition|(
name|client
operator|.
name|queryHistory
operator|.
name|isEmpty
argument_list|()
operator|||
operator|!
operator|(
operator|(
name|String
operator|)
name|client
operator|.
name|queryHistory
operator|.
name|getLast
argument_list|()
operator|)
operator|.
name|equals
argument_list|(
name|xpath
argument_list|)
condition|)
block|{
name|client
operator|.
name|addToHistory
argument_list|(
name|xpath
argument_list|)
expr_stmt|;
name|client
operator|.
name|writeQueryHistory
argument_list|()
expr_stmt|;
name|addQuery
argument_list|(
name|xpath
argument_list|)
expr_stmt|;
block|}
name|setCursor
argument_list|(
name|Cursor
operator|.
name|getDefaultCursor
argument_list|()
argument_list|)
expr_stmt|;
name|progress
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|killButton
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|submitButton
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|addQuery
parameter_list|(
name|String
name|query
parameter_list|)
block|{
if|if
condition|(
name|query
operator|.
name|length
argument_list|()
operator|>
literal|40
condition|)
block|{
name|query
operator|=
name|query
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|40
argument_list|)
expr_stmt|;
block|}
name|history
operator|.
name|addElement
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|history
operator|.
name|getSize
argument_list|()
operator|+
literal|1
argument_list|)
operator|+
literal|". "
operator|+
name|query
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

