begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * UserDialog.java - Jun 16, 2003  *   * @author wolf  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|GridBagLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Insets
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseAdapter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|BorderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|Box
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|BoxLayout
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|DefaultListModel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ImageIcon
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JButton
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComponent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JFrame
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JList
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JOptionPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPasswordField
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTable
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextField
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ListSelectionModel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|border
operator|.
name|EtchedBorder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|table
operator|.
name|AbstractTableModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|internal
operator|.
name|aider
operator|.
name|UserAider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|UserManagementService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_class
class|class
name|UserDialog
extends|extends
name|JFrame
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
name|UserManagementService
name|service
decl_stmt|;
name|JTextField
name|username
decl_stmt|;
name|JPasswordField
name|password1
decl_stmt|;
name|JPasswordField
name|password2
decl_stmt|;
name|JTextField
name|homedir
decl_stmt|;
name|JList
name|groups
decl_stmt|;
name|JList
name|allGroups
decl_stmt|;
name|DefaultListModel
name|groupsModel
decl_stmt|;
name|DefaultListModel
name|allGroupsModel
decl_stmt|;
name|JTable
name|users
decl_stmt|;
name|UserTableModel
name|userModel
decl_stmt|;
name|InteractiveClient
name|client
decl_stmt|;
specifier|public
name|UserDialog
parameter_list|(
name|UserManagementService
name|service
parameter_list|,
name|String
name|title
parameter_list|,
name|InteractiveClient
name|client
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|super
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|this
operator|.
name|service
operator|=
name|service
expr_stmt|;
name|this
operator|.
name|client
operator|=
name|client
expr_stmt|;
name|setupComponents
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|setupComponents
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|GridBagLayout
name|grid
init|=
operator|new
name|GridBagLayout
argument_list|()
decl_stmt|;
name|getContentPane
argument_list|()
operator|.
name|setLayout
argument_list|(
name|grid
argument_list|)
expr_stmt|;
name|GridBagConstraints
name|c
init|=
operator|new
name|GridBagConstraints
argument_list|()
decl_stmt|;
name|c
operator|.
name|insets
operator|=
operator|new
name|Insets
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|userModel
operator|=
operator|new
name|UserTableModel
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|users
operator|=
operator|new
name|JTable
argument_list|(
name|userModel
argument_list|)
expr_stmt|;
name|users
operator|.
name|setSelectionMode
argument_list|(
name|ListSelectionModel
operator|.
name|SINGLE_SELECTION
argument_list|)
expr_stmt|;
name|users
operator|.
name|addMouseListener
argument_list|(
operator|new
name|MouseAdapter
argument_list|()
block|{
specifier|public
name|void
name|mouseClicked
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getClickCount
argument_list|()
operator|==
literal|1
condition|)
name|tableSelectAction
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|JScrollPane
name|scroll
init|=
operator|new
name|JScrollPane
argument_list|(
name|users
argument_list|)
decl_stmt|;
name|scroll
operator|.
name|setPreferredSize
argument_list|(
operator|new
name|Dimension
argument_list|(
literal|250
argument_list|,
literal|150
argument_list|)
argument_list|)
expr_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|gridwidth
operator|=
literal|2
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|CENTER
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|BOTH
expr_stmt|;
name|c
operator|.
name|weightx
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|weighty
operator|=
literal|0.5
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|scroll
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|scroll
argument_list|)
expr_stmt|;
name|JComponent
name|toolbar
init|=
name|getToolbar
argument_list|()
decl_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|gridwidth
operator|=
literal|2
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|CENTER
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|BOTH
expr_stmt|;
name|c
operator|.
name|weightx
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|weighty
operator|=
literal|0
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|toolbar
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|toolbar
argument_list|)
expr_stmt|;
name|JLabel
name|label
init|=
operator|new
name|JLabel
argument_list|(
literal|"Username"
argument_list|)
decl_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|2
expr_stmt|;
name|c
operator|.
name|gridwidth
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|NONE
expr_stmt|;
name|c
operator|.
name|weightx
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|weighty
operator|=
literal|0
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|label
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|username
operator|=
operator|new
name|JTextField
argument_list|(
literal|15
argument_list|)
expr_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|2
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|EAST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|HORIZONTAL
expr_stmt|;
name|c
operator|.
name|weightx
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|weighty
operator|=
literal|0
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|username
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|username
argument_list|)
expr_stmt|;
name|label
operator|=
operator|new
name|JLabel
argument_list|(
literal|"Password"
argument_list|)
expr_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|3
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|NONE
expr_stmt|;
name|c
operator|.
name|weightx
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|weighty
operator|=
literal|0
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|label
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|password1
operator|=
operator|new
name|JPasswordField
argument_list|(
literal|15
argument_list|)
expr_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|3
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|EAST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|HORIZONTAL
expr_stmt|;
name|c
operator|.
name|weightx
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|weighty
operator|=
literal|0
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|password1
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|password1
argument_list|)
expr_stmt|;
name|label
operator|=
operator|new
name|JLabel
argument_list|(
literal|"Password (repeat)"
argument_list|)
expr_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|4
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|NONE
expr_stmt|;
name|c
operator|.
name|weightx
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|weighty
operator|=
literal|0
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|label
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|password2
operator|=
operator|new
name|JPasswordField
argument_list|(
literal|15
argument_list|)
expr_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|4
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|EAST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|HORIZONTAL
expr_stmt|;
name|c
operator|.
name|weightx
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|weighty
operator|=
literal|0
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|password2
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|password2
argument_list|)
expr_stmt|;
name|label
operator|=
operator|new
name|JLabel
argument_list|(
literal|"Home-Collection"
argument_list|)
expr_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|5
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|NONE
expr_stmt|;
name|c
operator|.
name|weightx
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|weighty
operator|=
literal|0
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|label
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|homedir
operator|=
operator|new
name|JTextField
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|5
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|EAST
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|HORIZONTAL
expr_stmt|;
name|c
operator|.
name|weightx
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|weighty
operator|=
literal|0
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|homedir
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|homedir
argument_list|)
expr_stmt|;
name|JPanel
name|groupsPanel
init|=
name|getGroupsPanel
argument_list|()
decl_stmt|;
name|c
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|c
operator|.
name|gridy
operator|=
literal|6
expr_stmt|;
name|c
operator|.
name|gridwidth
operator|=
literal|2
expr_stmt|;
name|c
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|CENTER
expr_stmt|;
name|c
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|BOTH
expr_stmt|;
name|c
operator|.
name|weightx
operator|=
literal|1
expr_stmt|;
name|c
operator|.
name|weighty
operator|=
literal|1
expr_stmt|;
name|grid
operator|.
name|setConstraints
argument_list|(
name|groupsPanel
argument_list|,
name|c
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|groupsPanel
argument_list|)
expr_stmt|;
name|pack
argument_list|()
expr_stmt|;
block|}
specifier|private
name|JComponent
name|getToolbar
parameter_list|()
block|{
name|Box
name|box
init|=
name|Box
operator|.
name|createHorizontalBox
argument_list|()
decl_stmt|;
name|JButton
name|button
init|=
operator|new
name|JButton
argument_list|(
literal|"Create User"
argument_list|)
decl_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|actionCreateUser
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|box
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
literal|"Modify User"
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|actionModify
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|box
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
literal|"Remove"
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|actionRemove
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|box
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
literal|"Reset"
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|actionClear
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|box
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
return|return
name|box
return|;
block|}
specifier|private
name|JPanel
name|getGroupsPanel
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|JPanel
name|panel
init|=
operator|new
name|JPanel
argument_list|(
literal|false
argument_list|)
decl_stmt|;
name|panel
operator|.
name|setLayout
argument_list|(
operator|new
name|BoxLayout
argument_list|(
name|panel
argument_list|,
name|BoxLayout
operator|.
name|X_AXIS
argument_list|)
argument_list|)
expr_stmt|;
name|panel
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createTitledBorder
argument_list|(
name|BorderFactory
operator|.
name|createEtchedBorder
argument_list|(
name|EtchedBorder
operator|.
name|RAISED
argument_list|)
argument_list|,
literal|"Groups"
argument_list|)
argument_list|)
expr_stmt|;
name|groupsModel
operator|=
operator|new
name|DefaultListModel
argument_list|()
expr_stmt|;
name|groups
operator|=
operator|new
name|JList
argument_list|(
name|groupsModel
argument_list|)
expr_stmt|;
name|JScrollPane
name|scroll
init|=
operator|new
name|JScrollPane
argument_list|(
name|groups
argument_list|)
decl_stmt|;
name|scroll
operator|.
name|setPreferredSize
argument_list|(
operator|new
name|Dimension
argument_list|(
literal|150
argument_list|,
literal|150
argument_list|)
argument_list|)
expr_stmt|;
name|scroll
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createTitledBorder
argument_list|(
name|BorderFactory
operator|.
name|createEtchedBorder
argument_list|(
name|EtchedBorder
operator|.
name|RAISED
argument_list|)
argument_list|,
literal|"Assigned"
argument_list|)
argument_list|)
expr_stmt|;
name|panel
operator|.
name|add
argument_list|(
name|scroll
argument_list|)
expr_stmt|;
name|Box
name|box
init|=
name|Box
operator|.
name|createVerticalBox
argument_list|()
decl_stmt|;
name|URL
name|url
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/Back16.gif"
argument_list|)
decl_stmt|;
name|JButton
name|button
init|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
decl_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|actionAssignGroup
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
literal|"Assign group"
argument_list|)
expr_stmt|;
name|box
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/Forward16.gif"
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
literal|"Remove group"
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|actionRemoveGroup
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|box
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|url
operator|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"icons/New16.gif"
argument_list|)
expr_stmt|;
name|button
operator|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
name|button
operator|.
name|setToolTipText
argument_list|(
literal|"Create new group"
argument_list|)
expr_stmt|;
name|button
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|actionNewGroup
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|box
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
name|panel
operator|.
name|add
argument_list|(
name|box
argument_list|)
expr_stmt|;
name|allGroupsModel
operator|=
operator|new
name|DefaultListModel
argument_list|()
expr_stmt|;
name|updateGroups
argument_list|()
expr_stmt|;
name|allGroups
operator|=
operator|new
name|JList
argument_list|(
name|allGroupsModel
argument_list|)
expr_stmt|;
name|scroll
operator|=
operator|new
name|JScrollPane
argument_list|(
name|allGroups
argument_list|)
expr_stmt|;
name|scroll
operator|.
name|setPreferredSize
argument_list|(
operator|new
name|Dimension
argument_list|(
literal|150
argument_list|,
literal|150
argument_list|)
argument_list|)
expr_stmt|;
name|scroll
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createTitledBorder
argument_list|(
name|BorderFactory
operator|.
name|createEtchedBorder
argument_list|(
name|EtchedBorder
operator|.
name|RAISED
argument_list|)
argument_list|,
literal|"All"
argument_list|)
argument_list|)
expr_stmt|;
name|panel
operator|.
name|add
argument_list|(
name|scroll
argument_list|)
expr_stmt|;
return|return
name|panel
return|;
block|}
specifier|private
name|void
name|updateGroups
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|String
index|[]
name|gl
init|=
name|service
operator|.
name|getGroups
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|gl
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|allGroupsModel
operator|.
name|addElement
argument_list|(
name|gl
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|actionAssignGroup
parameter_list|()
block|{
name|Object
index|[]
name|selected
init|=
name|allGroups
operator|.
name|getSelectedValues
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|selected
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|groupsModel
operator|.
name|contains
argument_list|(
name|selected
index|[
name|i
index|]
argument_list|)
condition|)
name|groupsModel
operator|.
name|addElement
argument_list|(
name|selected
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|actionRemoveGroup
parameter_list|()
block|{
name|int
index|[]
name|selected
init|=
name|groups
operator|.
name|getSelectedIndices
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|selected
operator|.
name|length
condition|;
name|i
operator|++
control|)
name|groupsModel
operator|.
name|remove
argument_list|(
name|selected
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|actionNewGroup
parameter_list|()
block|{
name|String
name|newGroup
init|=
name|JOptionPane
operator|.
name|showInputDialog
argument_list|(
name|this
argument_list|,
literal|"Please enter a name for the new group"
argument_list|,
literal|"New Group"
argument_list|,
name|JOptionPane
operator|.
name|QUESTION_MESSAGE
argument_list|)
decl_stmt|;
name|groupsModel
operator|.
name|addElement
argument_list|(
name|newGroup
argument_list|)
expr_stmt|;
name|allGroupsModel
operator|.
name|addElement
argument_list|(
name|newGroup
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|actionCreateUser
parameter_list|()
block|{
name|String
name|name
init|=
name|username
operator|.
name|getText
argument_list|()
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
return|return;
name|UserAider
name|user
init|=
operator|new
name|UserAider
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|String
name|pass1
init|=
operator|new
name|String
argument_list|(
name|password1
operator|.
name|getPassword
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|pass2
init|=
operator|new
name|String
argument_list|(
name|password2
operator|.
name|getPassword
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|pass1
operator|.
name|equals
argument_list|(
name|pass2
argument_list|)
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
literal|"Different passwords. Please check."
argument_list|)
expr_stmt|;
return|return;
block|}
name|user
operator|.
name|setPassword
argument_list|(
name|pass1
argument_list|)
expr_stmt|;
try|try
block|{
name|user
operator|.
name|setHome
argument_list|(
name|XmldbURI
operator|.
name|xmldbUriFor
argument_list|(
name|homedir
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
if|if
condition|(
name|groupsModel
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
literal|"Please assign a group to the new user"
argument_list|)
expr_stmt|;
return|return;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|groupsModel
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
name|user
operator|.
name|addGroup
argument_list|(
operator|(
name|String
operator|)
name|groupsModel
operator|.
name|elementAt
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|service
operator|.
name|addUser
argument_list|(
name|user
argument_list|)
expr_stmt|;
name|client
operator|.
name|reloadCollection
argument_list|()
expr_stmt|;
name|userModel
operator|.
name|reload
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|actionModify
parameter_list|()
block|{
name|String
name|name
init|=
name|username
operator|.
name|getText
argument_list|()
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
return|return;
name|UserAider
name|user
init|=
operator|new
name|UserAider
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|String
name|pass1
init|=
operator|new
name|String
argument_list|(
name|password1
operator|.
name|getPassword
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|pass2
init|=
operator|new
name|String
argument_list|(
name|password2
operator|.
name|getPassword
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|pass1
operator|.
name|length
argument_list|()
operator|==
literal|0
operator|&&
name|JOptionPane
operator|.
name|showConfirmDialog
argument_list|(
name|this
argument_list|,
literal|"No password set. Are you sure?"
argument_list|,
literal|"Password missing"
argument_list|,
name|JOptionPane
operator|.
name|YES_NO_OPTION
argument_list|)
operator|==
name|JOptionPane
operator|.
name|NO_OPTION
condition|)
return|return;
if|if
condition|(
operator|!
name|pass1
operator|.
name|equals
argument_list|(
name|pass2
argument_list|)
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
literal|"Different passwords. Please check."
argument_list|)
expr_stmt|;
return|return;
block|}
name|user
operator|.
name|setPassword
argument_list|(
name|pass1
argument_list|)
expr_stmt|;
try|try
block|{
name|user
operator|.
name|setHome
argument_list|(
name|XmldbURI
operator|.
name|xmldbUriFor
argument_list|(
name|homedir
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|groupsModel
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
name|user
operator|.
name|addGroup
argument_list|(
operator|(
name|String
operator|)
name|groupsModel
operator|.
name|elementAt
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|service
operator|.
name|updateUser
argument_list|(
name|user
argument_list|)
expr_stmt|;
name|String
name|myUser
init|=
name|client
operator|.
name|properties
operator|.
name|getProperty
argument_list|(
literal|"user"
argument_list|,
literal|"admin"
argument_list|)
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
name|myUser
argument_list|)
condition|)
block|{
name|client
operator|.
name|properties
operator|.
name|setProperty
argument_list|(
literal|"password"
argument_list|,
name|pass1
argument_list|)
expr_stmt|;
name|client
operator|.
name|reloadCollection
argument_list|()
expr_stmt|;
block|}
name|userModel
operator|.
name|reload
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|actionRemove
parameter_list|()
block|{
name|int
index|[]
name|selected
init|=
name|users
operator|.
name|getSelectedRows
argument_list|()
decl_stmt|;
if|if
condition|(
name|selected
operator|.
name|length
operator|==
literal|0
condition|)
return|return;
if|if
condition|(
name|JOptionPane
operator|.
name|showConfirmDialog
argument_list|(
name|this
argument_list|,
literal|"Are you sure you want to remove the selected users?"
argument_list|,
literal|"Remove users"
argument_list|,
name|JOptionPane
operator|.
name|YES_NO_OPTION
argument_list|)
operator|==
name|JOptionPane
operator|.
name|NO_OPTION
condition|)
return|return;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|selected
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|Account
name|user
init|=
name|userModel
operator|.
name|users
index|[
name|selected
index|[
name|i
index|]
index|]
decl_stmt|;
try|try
block|{
name|service
operator|.
name|removeUser
argument_list|(
name|user
argument_list|)
expr_stmt|;
name|client
operator|.
name|reloadCollection
argument_list|()
expr_stmt|;
name|userModel
operator|.
name|reload
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|actionClear
parameter_list|()
block|{
name|groupsModel
operator|.
name|clear
argument_list|()
expr_stmt|;
name|username
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|password1
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|password2
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|homedir
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|tableSelectAction
parameter_list|(
name|MouseEvent
name|ev
parameter_list|)
block|{
name|int
name|row
init|=
name|users
operator|.
name|rowAtPoint
argument_list|(
name|ev
operator|.
name|getPoint
argument_list|()
argument_list|)
decl_stmt|;
name|Account
name|user
init|=
name|userModel
operator|.
name|users
index|[
name|row
index|]
decl_stmt|;
name|username
operator|.
name|setText
argument_list|(
name|user
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|groupsModel
operator|.
name|clear
argument_list|()
expr_stmt|;
name|password1
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|password2
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
if|if
condition|(
name|user
operator|.
name|getHome
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|homedir
operator|.
name|setText
argument_list|(
name|user
operator|.
name|getHome
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|homedir
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
name|String
index|[]
name|groups
init|=
name|user
operator|.
name|getGroups
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|groups
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|groupsModel
operator|.
name|addElement
argument_list|(
name|groups
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
class|class
name|UserTableModel
extends|extends
name|AbstractTableModel
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
specifier|final
name|String
index|[]
name|columnNames
init|=
operator|new
name|String
index|[]
block|{
literal|"UID"
block|,
literal|"User"
block|,
literal|"Groups"
block|,
literal|"Home"
block|}
decl_stmt|;
specifier|private
name|Account
name|users
index|[]
init|=
literal|null
decl_stmt|;
specifier|public
name|UserTableModel
parameter_list|(
name|UserManagementService
name|service
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|super
argument_list|()
expr_stmt|;
name|reload
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|reload
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|users
operator|=
name|service
operator|.
name|getUsers
argument_list|()
expr_stmt|;
name|fireTableDataChanged
argument_list|()
expr_stmt|;
block|}
comment|/* (non-Javadoc) 		* @see javax.swing.table.TableModel#getColumnCount() 		*/
specifier|public
name|int
name|getColumnCount
parameter_list|()
block|{
return|return
name|columnNames
operator|.
name|length
return|;
block|}
comment|/* (non-Javadoc) 		 * @see javax.swing.table.TableModel#getColumnName(int) 		 */
specifier|public
name|String
name|getColumnName
parameter_list|(
name|int
name|column
parameter_list|)
block|{
return|return
name|columnNames
index|[
name|column
index|]
return|;
block|}
comment|/* (non-Javadoc) 		 * @see javax.swing.table.TableModel#getRowCount() 		 */
specifier|public
name|int
name|getRowCount
parameter_list|()
block|{
return|return
name|users
operator|==
literal|null
condition|?
literal|0
else|:
name|users
operator|.
name|length
return|;
block|}
comment|/* (non-Javadoc) 		 * @see javax.swing.table.TableModel#getValueAt(int, int) 		 */
specifier|public
name|Object
name|getValueAt
parameter_list|(
name|int
name|rowIndex
parameter_list|,
name|int
name|columnIndex
parameter_list|)
block|{
switch|switch
condition|(
name|columnIndex
condition|)
block|{
case|case
literal|0
case|:
return|return
operator|new
name|Integer
argument_list|(
name|users
index|[
name|rowIndex
index|]
operator|.
name|getId
argument_list|()
argument_list|)
return|;
case|case
literal|1
case|:
return|return
name|users
index|[
name|rowIndex
index|]
operator|.
name|getName
argument_list|()
return|;
case|case
literal|2
case|:
name|StringBuilder
name|buf
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|String
index|[]
name|groups
init|=
name|users
index|[
name|rowIndex
index|]
operator|.
name|getGroups
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|groups
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|buf
operator|.
name|append
argument_list|(
name|groups
index|[
name|i
index|]
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|+
literal|1
operator|<
name|groups
operator|.
name|length
condition|)
name|buf
operator|.
name|append
argument_list|(
literal|';'
argument_list|)
expr_stmt|;
block|}
return|return
name|buf
operator|.
name|toString
argument_list|()
return|;
case|case
literal|3
case|:
return|return
name|users
index|[
name|rowIndex
index|]
operator|.
name|getHome
argument_list|()
return|;
default|default :
return|return
literal|null
return|;
block|}
block|}
block|}
block|}
end_class

end_unit

