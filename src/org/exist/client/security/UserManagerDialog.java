begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|client
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowAdapter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JOptionPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|table
operator|.
name|DefaultTableModel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|table
operator|.
name|TableModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|client
operator|.
name|HighlightedTableCellRenderer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|AXSchemaType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|AccountComparator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|EXistSchemaType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Group
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|UserManagementService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_comment
comment|/**  *  * @author Adam Retter<adam.retter@googlemail.com>  */
end_comment

begin_class
specifier|public
class|class
name|UserManagerDialog
extends|extends
name|javax
operator|.
name|swing
operator|.
name|JFrame
block|{
specifier|private
specifier|final
name|UserManagementService
name|userManagementService
decl_stmt|;
specifier|private
specifier|final
name|String
name|currentUser
decl_stmt|;
specifier|private
name|DefaultTableModel
name|usersTableModel
init|=
literal|null
decl_stmt|;
specifier|private
name|DefaultTableModel
name|groupsTableModel
init|=
literal|null
decl_stmt|;
comment|/**      * Creates new form UserManagerDialog      */
specifier|public
name|UserManagerDialog
parameter_list|(
specifier|final
name|UserManagementService
name|userManagementService
parameter_list|,
specifier|final
name|String
name|currentUser
parameter_list|)
block|{
name|this
operator|.
name|userManagementService
operator|=
name|userManagementService
expr_stmt|;
name|this
operator|.
name|currentUser
operator|=
name|currentUser
expr_stmt|;
name|initComponents
argument_list|()
expr_stmt|;
name|tblUsers
operator|.
name|setDefaultRenderer
argument_list|(
name|Object
operator|.
name|class
argument_list|,
operator|new
name|HighlightedTableCellRenderer
argument_list|()
argument_list|)
expr_stmt|;
name|tblGroups
operator|.
name|setDefaultRenderer
argument_list|(
name|Object
operator|.
name|class
argument_list|,
operator|new
name|HighlightedTableCellRenderer
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|TableModel
name|getUsersTableModel
parameter_list|()
block|{
if|if
condition|(
name|usersTableModel
operator|==
literal|null
condition|)
block|{
try|try
block|{
specifier|final
name|Account
name|accounts
index|[]
init|=
name|userManagementService
operator|.
name|getAccounts
argument_list|()
decl_stmt|;
name|Arrays
operator|.
name|sort
argument_list|(
name|accounts
argument_list|,
operator|new
name|AccountComparator
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|String
name|tableData
index|[]
index|[]
init|=
operator|new
name|String
index|[
name|accounts
operator|.
name|length
index|]
index|[
literal|3
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|accounts
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|tableData
index|[
name|i
index|]
index|[
literal|0
index|]
operator|=
name|accounts
index|[
name|i
index|]
operator|.
name|getName
argument_list|()
expr_stmt|;
name|tableData
index|[
name|i
index|]
index|[
literal|1
index|]
operator|=
name|accounts
index|[
name|i
index|]
operator|.
name|getMetadataValue
argument_list|(
name|AXSchemaType
operator|.
name|FULLNAME
argument_list|)
expr_stmt|;
name|tableData
index|[
name|i
index|]
index|[
literal|1
index|]
operator|=
name|accounts
index|[
name|i
index|]
operator|.
name|getMetadataValue
argument_list|(
name|EXistSchemaType
operator|.
name|DESCRIPTION
argument_list|)
expr_stmt|;
block|}
name|usersTableModel
operator|=
operator|new
name|ReadOnlyDefaultTableModel
argument_list|(
name|tableData
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"User"
block|,
literal|"Full Name"
block|,
literal|"Description"
block|}
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
literal|"Could not get users list: "
operator|+
name|xmldbe
operator|.
name|getMessage
argument_list|()
argument_list|,
literal|"User Manager Error"
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|usersTableModel
return|;
block|}
specifier|private
name|TableModel
name|getGroupsTableModel
parameter_list|()
block|{
if|if
condition|(
name|groupsTableModel
operator|==
literal|null
condition|)
block|{
try|try
block|{
specifier|final
name|String
name|groupNames
index|[]
init|=
name|userManagementService
operator|.
name|getGroups
argument_list|()
decl_stmt|;
name|Arrays
operator|.
name|sort
argument_list|(
name|groupNames
argument_list|)
expr_stmt|;
specifier|final
name|String
name|tableData
index|[]
index|[]
init|=
operator|new
name|String
index|[
name|groupNames
operator|.
name|length
index|]
index|[
literal|2
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|groupNames
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|tableData
index|[
name|i
index|]
index|[
literal|0
index|]
operator|=
name|groupNames
index|[
name|i
index|]
expr_stmt|;
name|tableData
index|[
name|i
index|]
index|[
literal|1
index|]
operator|=
name|userManagementService
operator|.
name|getGroup
argument_list|(
name|groupNames
index|[
name|i
index|]
argument_list|)
operator|.
name|getMetadataValue
argument_list|(
name|EXistSchemaType
operator|.
name|DESCRIPTION
argument_list|)
expr_stmt|;
block|}
name|groupsTableModel
operator|=
operator|new
name|ReadOnlyDefaultTableModel
argument_list|(
name|tableData
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"Group"
block|,
literal|"Description"
block|}
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
literal|"Could not get groups list: "
operator|+
name|xmldbe
operator|.
name|getMessage
argument_list|()
argument_list|,
literal|"User Manager Error"
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|groupsTableModel
return|;
block|}
specifier|public
name|void
name|refreshUsersTableModel
parameter_list|()
block|{
specifier|final
name|int
name|rowCount
init|=
name|usersTableModel
operator|.
name|getRowCount
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|rowCount
condition|;
name|i
operator|++
control|)
block|{
name|usersTableModel
operator|.
name|removeRow
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
try|try
block|{
specifier|final
name|Account
name|accounts
index|[]
init|=
name|userManagementService
operator|.
name|getAccounts
argument_list|()
decl_stmt|;
name|Arrays
operator|.
name|sort
argument_list|(
name|accounts
argument_list|,
operator|new
name|AccountComparator
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|accounts
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|usersTableModel
operator|.
name|addRow
argument_list|(
operator|new
name|String
index|[]
block|{
name|accounts
index|[
name|i
index|]
operator|.
name|getName
argument_list|()
block|,
name|accounts
index|[
name|i
index|]
operator|.
name|getMetadataValue
argument_list|(
name|AXSchemaType
operator|.
name|FULLNAME
argument_list|)
block|,
name|accounts
index|[
name|i
index|]
operator|.
name|getMetadataValue
argument_list|(
name|EXistSchemaType
operator|.
name|DESCRIPTION
argument_list|)
block|}
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
literal|"Could not get users list: "
operator|+
name|xmldbe
operator|.
name|getMessage
argument_list|()
argument_list|,
literal|"User Manager Error"
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|refreshGroupsTableModel
parameter_list|()
block|{
specifier|final
name|int
name|rowCount
init|=
name|groupsTableModel
operator|.
name|getRowCount
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|rowCount
condition|;
name|i
operator|++
control|)
block|{
name|groupsTableModel
operator|.
name|removeRow
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
try|try
block|{
specifier|final
name|String
name|groupNames
index|[]
init|=
name|userManagementService
operator|.
name|getGroups
argument_list|()
decl_stmt|;
name|Arrays
operator|.
name|sort
argument_list|(
name|groupNames
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|groupNames
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|groupsTableModel
operator|.
name|addRow
argument_list|(
operator|new
name|String
index|[]
block|{
name|groupNames
index|[
name|i
index|]
block|,
name|userManagementService
operator|.
name|getGroup
argument_list|(
name|groupNames
index|[
name|i
index|]
argument_list|)
operator|.
name|getMetadataValue
argument_list|(
name|EXistSchemaType
operator|.
name|DESCRIPTION
argument_list|)
block|}
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
literal|"Could not get groups list: "
operator|+
name|xmldbe
operator|.
name|getMessage
argument_list|()
argument_list|,
literal|"User Manager Error"
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|showUserDialog
parameter_list|()
block|{
specifier|final
name|UserDialog
name|userDialog
init|=
operator|new
name|UserDialog
argument_list|(
name|userManagementService
argument_list|)
decl_stmt|;
name|userDialog
operator|.
name|addWindowListener
argument_list|(
operator|new
name|WindowAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|windowClosed
parameter_list|(
specifier|final
name|WindowEvent
name|e
parameter_list|)
block|{
name|refreshUsersTableModel
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|userDialog
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|showGroupDialog
parameter_list|()
block|{
specifier|final
name|GroupDialog
name|groupDialog
init|=
operator|new
name|GroupDialog
argument_list|(
name|userManagementService
argument_list|)
decl_stmt|;
name|groupDialog
operator|.
name|addWindowListener
argument_list|(
operator|new
name|WindowAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|windowClosed
parameter_list|(
specifier|final
name|WindowEvent
name|e
parameter_list|)
block|{
name|refreshGroupsTableModel
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|groupDialog
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
comment|/**      * This method is called from within the constructor to initialize the form.      * WARNING: Do NOT modify this code. The content of this method is always      * regenerated by the Form Editor.      */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
comment|//<editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
specifier|private
name|void
name|initComponents
parameter_list|()
block|{
name|pmUsers
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JPopupMenu
argument_list|()
expr_stmt|;
name|miNewUser
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JMenuItem
argument_list|()
expr_stmt|;
name|miEditUser
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JMenuItem
argument_list|()
expr_stmt|;
name|miRemoveUser
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JMenuItem
argument_list|()
expr_stmt|;
name|pmGroups
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JPopupMenu
argument_list|()
expr_stmt|;
name|miNewGroup
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JMenuItem
argument_list|()
expr_stmt|;
name|miEditGroup
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JMenuItem
argument_list|()
expr_stmt|;
name|miRemoveGroup
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JMenuItem
argument_list|()
expr_stmt|;
name|tpUserManager
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JTabbedPane
argument_list|()
expr_stmt|;
name|spUsers
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
argument_list|()
expr_stmt|;
name|tblUsers
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JTable
argument_list|()
expr_stmt|;
name|spGroups
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
argument_list|()
expr_stmt|;
name|tblGroups
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JTable
argument_list|()
expr_stmt|;
name|jSeparator1
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JSeparator
argument_list|()
expr_stmt|;
name|btnCreate
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JButton
argument_list|()
expr_stmt|;
name|btnClose
operator|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|JButton
argument_list|()
expr_stmt|;
name|miNewUser
operator|.
name|setText
argument_list|(
literal|"New User..."
argument_list|)
expr_stmt|;
name|miNewUser
operator|.
name|addActionListener
argument_list|(
operator|new
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
name|miNewUserActionPerformed
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|pmUsers
operator|.
name|add
argument_list|(
name|miNewUser
argument_list|)
expr_stmt|;
name|miNewUser
operator|.
name|getAccessibleContext
argument_list|()
operator|.
name|setAccessibleName
argument_list|(
literal|"New User"
argument_list|)
expr_stmt|;
name|miEditUser
operator|.
name|setText
argument_list|(
literal|"Edit User..."
argument_list|)
expr_stmt|;
name|miEditUser
operator|.
name|addActionListener
argument_list|(
operator|new
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
name|miEditUserActionPerformed
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|pmUsers
operator|.
name|add
argument_list|(
name|miEditUser
argument_list|)
expr_stmt|;
name|miEditUser
operator|.
name|getAccessibleContext
argument_list|()
operator|.
name|setAccessibleName
argument_list|(
literal|"Edit User"
argument_list|)
expr_stmt|;
name|miRemoveUser
operator|.
name|setText
argument_list|(
literal|"Remove User"
argument_list|)
expr_stmt|;
name|miRemoveUser
operator|.
name|addActionListener
argument_list|(
operator|new
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
name|miRemoveUserActionPerformed
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|pmUsers
operator|.
name|add
argument_list|(
name|miRemoveUser
argument_list|)
expr_stmt|;
name|miNewGroup
operator|.
name|setText
argument_list|(
literal|"New Group..."
argument_list|)
expr_stmt|;
name|miNewGroup
operator|.
name|addActionListener
argument_list|(
operator|new
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
name|miNewGroupActionPerformed
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|pmGroups
operator|.
name|add
argument_list|(
name|miNewGroup
argument_list|)
expr_stmt|;
name|miNewGroup
operator|.
name|getAccessibleContext
argument_list|()
operator|.
name|setAccessibleName
argument_list|(
literal|"New Group"
argument_list|)
expr_stmt|;
name|miEditGroup
operator|.
name|setText
argument_list|(
literal|"Edit Group..."
argument_list|)
expr_stmt|;
name|miEditGroup
operator|.
name|addActionListener
argument_list|(
operator|new
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
name|miEditGroupActionPerformed
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|pmGroups
operator|.
name|add
argument_list|(
name|miEditGroup
argument_list|)
expr_stmt|;
name|miEditGroup
operator|.
name|getAccessibleContext
argument_list|()
operator|.
name|setAccessibleName
argument_list|(
literal|"Edit Group"
argument_list|)
expr_stmt|;
name|miRemoveGroup
operator|.
name|setText
argument_list|(
literal|"Remove Group"
argument_list|)
expr_stmt|;
name|miRemoveGroup
operator|.
name|addActionListener
argument_list|(
operator|new
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
name|miRemoveGroupActionPerformed
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|pmGroups
operator|.
name|add
argument_list|(
name|miRemoveGroup
argument_list|)
expr_stmt|;
name|setDefaultCloseOperation
argument_list|(
name|javax
operator|.
name|swing
operator|.
name|WindowConstants
operator|.
name|DISPOSE_ON_CLOSE
argument_list|)
expr_stmt|;
name|setTitle
argument_list|(
literal|"User Manager"
argument_list|)
expr_stmt|;
name|tblUsers
operator|.
name|setModel
argument_list|(
name|getUsersTableModel
argument_list|()
argument_list|)
expr_stmt|;
name|tblUsers
operator|.
name|setAutoCreateRowSorter
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|tblUsers
operator|.
name|setComponentPopupMenu
argument_list|(
name|pmUsers
argument_list|)
expr_stmt|;
name|tblUsers
operator|.
name|setShowGrid
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|tblUsers
operator|.
name|addMouseListener
argument_list|(
operator|new
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseAdapter
argument_list|()
block|{
specifier|public
name|void
name|mouseClicked
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseEvent
name|evt
parameter_list|)
block|{
name|tblUsersMouseClicked
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|spUsers
operator|.
name|setViewportView
argument_list|(
name|tblUsers
argument_list|)
expr_stmt|;
name|tpUserManager
operator|.
name|addTab
argument_list|(
literal|"Users"
argument_list|,
name|spUsers
argument_list|)
expr_stmt|;
name|tblGroups
operator|.
name|setModel
argument_list|(
name|getGroupsTableModel
argument_list|()
argument_list|)
expr_stmt|;
name|tblGroups
operator|.
name|setAutoCreateRowSorter
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|tblGroups
operator|.
name|setComponentPopupMenu
argument_list|(
name|pmGroups
argument_list|)
expr_stmt|;
name|tblGroups
operator|.
name|setShowGrid
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|tblGroups
operator|.
name|addMouseListener
argument_list|(
operator|new
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseAdapter
argument_list|()
block|{
specifier|public
name|void
name|mouseClicked
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseEvent
name|evt
parameter_list|)
block|{
name|tblGroupsMouseClicked
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|spGroups
operator|.
name|setViewportView
argument_list|(
name|tblGroups
argument_list|)
expr_stmt|;
name|tpUserManager
operator|.
name|addTab
argument_list|(
literal|"Groups"
argument_list|,
name|spGroups
argument_list|)
expr_stmt|;
name|spGroups
operator|.
name|getAccessibleContext
argument_list|()
operator|.
name|setAccessibleName
argument_list|(
literal|"Groups"
argument_list|)
expr_stmt|;
name|btnCreate
operator|.
name|setText
argument_list|(
literal|"Create"
argument_list|)
expr_stmt|;
name|btnCreate
operator|.
name|addActionListener
argument_list|(
operator|new
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
name|btnCreateActionPerformed
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|btnClose
operator|.
name|setText
argument_list|(
literal|"Close"
argument_list|)
expr_stmt|;
name|btnClose
operator|.
name|addActionListener
argument_list|(
operator|new
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
name|btnCloseActionPerformed
argument_list|(
name|evt
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|javax
operator|.
name|swing
operator|.
name|GroupLayout
name|layout
init|=
operator|new
name|javax
operator|.
name|swing
operator|.
name|GroupLayout
argument_list|(
name|getContentPane
argument_list|()
argument_list|)
decl_stmt|;
name|getContentPane
argument_list|()
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|layout
operator|.
name|setHorizontalGroup
argument_list|(
name|layout
operator|.
name|createParallelGroup
argument_list|(
name|javax
operator|.
name|swing
operator|.
name|GroupLayout
operator|.
name|Alignment
operator|.
name|LEADING
argument_list|)
operator|.
name|addGroup
argument_list|(
name|javax
operator|.
name|swing
operator|.
name|GroupLayout
operator|.
name|Alignment
operator|.
name|TRAILING
argument_list|,
name|layout
operator|.
name|createSequentialGroup
argument_list|()
operator|.
name|addContainerGap
argument_list|(
literal|250
argument_list|,
name|Short
operator|.
name|MAX_VALUE
argument_list|)
operator|.
name|addComponent
argument_list|(
name|btnClose
argument_list|)
operator|.
name|addPreferredGap
argument_list|(
name|javax
operator|.
name|swing
operator|.
name|LayoutStyle
operator|.
name|ComponentPlacement
operator|.
name|RELATED
argument_list|)
operator|.
name|addComponent
argument_list|(
name|btnCreate
argument_list|)
operator|.
name|addGap
argument_list|(
literal|20
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|)
argument_list|)
operator|.
name|addGroup
argument_list|(
name|layout
operator|.
name|createSequentialGroup
argument_list|()
operator|.
name|addContainerGap
argument_list|()
operator|.
name|addComponent
argument_list|(
name|jSeparator1
argument_list|)
operator|.
name|addContainerGap
argument_list|()
argument_list|)
operator|.
name|addGroup
argument_list|(
name|layout
operator|.
name|createParallelGroup
argument_list|(
name|javax
operator|.
name|swing
operator|.
name|GroupLayout
operator|.
name|Alignment
operator|.
name|LEADING
argument_list|)
operator|.
name|addComponent
argument_list|(
name|tpUserManager
argument_list|,
name|javax
operator|.
name|swing
operator|.
name|GroupLayout
operator|.
name|DEFAULT_SIZE
argument_list|,
literal|439
argument_list|,
name|Short
operator|.
name|MAX_VALUE
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|.
name|setVerticalGroup
argument_list|(
name|layout
operator|.
name|createParallelGroup
argument_list|(
name|javax
operator|.
name|swing
operator|.
name|GroupLayout
operator|.
name|Alignment
operator|.
name|LEADING
argument_list|)
operator|.
name|addGroup
argument_list|(
name|javax
operator|.
name|swing
operator|.
name|GroupLayout
operator|.
name|Alignment
operator|.
name|TRAILING
argument_list|,
name|layout
operator|.
name|createSequentialGroup
argument_list|()
operator|.
name|addGap
argument_list|(
literal|0
argument_list|,
literal|291
argument_list|,
name|Short
operator|.
name|MAX_VALUE
argument_list|)
operator|.
name|addComponent
argument_list|(
name|jSeparator1
argument_list|,
name|javax
operator|.
name|swing
operator|.
name|GroupLayout
operator|.
name|PREFERRED_SIZE
argument_list|,
literal|10
argument_list|,
name|javax
operator|.
name|swing
operator|.
name|GroupLayout
operator|.
name|PREFERRED_SIZE
argument_list|)
operator|.
name|addPreferredGap
argument_list|(
name|javax
operator|.
name|swing
operator|.
name|LayoutStyle
operator|.
name|ComponentPlacement
operator|.
name|RELATED
argument_list|)
operator|.
name|addGroup
argument_list|(
name|layout
operator|.
name|createParallelGroup
argument_list|(
name|javax
operator|.
name|swing
operator|.
name|GroupLayout
operator|.
name|Alignment
operator|.
name|LEADING
argument_list|)
operator|.
name|addComponent
argument_list|(
name|btnCreate
argument_list|)
operator|.
name|addGroup
argument_list|(
name|javax
operator|.
name|swing
operator|.
name|GroupLayout
operator|.
name|Alignment
operator|.
name|TRAILING
argument_list|,
name|layout
operator|.
name|createSequentialGroup
argument_list|()
operator|.
name|addComponent
argument_list|(
name|btnClose
argument_list|)
operator|.
name|addContainerGap
argument_list|()
argument_list|)
argument_list|)
argument_list|)
operator|.
name|addGroup
argument_list|(
name|layout
operator|.
name|createParallelGroup
argument_list|(
name|javax
operator|.
name|swing
operator|.
name|GroupLayout
operator|.
name|Alignment
operator|.
name|LEADING
argument_list|)
operator|.
name|addGroup
argument_list|(
name|layout
operator|.
name|createSequentialGroup
argument_list|()
operator|.
name|addComponent
argument_list|(
name|tpUserManager
argument_list|,
name|javax
operator|.
name|swing
operator|.
name|GroupLayout
operator|.
name|PREFERRED_SIZE
argument_list|,
literal|291
argument_list|,
name|javax
operator|.
name|swing
operator|.
name|GroupLayout
operator|.
name|PREFERRED_SIZE
argument_list|)
operator|.
name|addGap
argument_list|(
literal|0
argument_list|,
literal|51
argument_list|,
name|Short
operator|.
name|MAX_VALUE
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|tpUserManager
operator|.
name|getAccessibleContext
argument_list|()
operator|.
name|setAccessibleName
argument_list|(
literal|"Users"
argument_list|)
expr_stmt|;
name|pack
argument_list|()
expr_stmt|;
block|}
comment|//</editor-fold>//GEN-END:initComponents
specifier|private
name|void
name|miNewUserActionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
comment|//GEN-FIRST:event_miNewUserActionPerformed
name|showUserDialog
argument_list|()
expr_stmt|;
block|}
comment|//GEN-LAST:event_miNewUserActionPerformed
specifier|private
name|void
name|btnCloseActionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
comment|//GEN-FIRST:event_btnCloseActionPerformed
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|dispose
argument_list|()
expr_stmt|;
block|}
comment|//GEN-LAST:event_btnCloseActionPerformed
specifier|private
name|String
name|getSelectedUsername
parameter_list|()
block|{
return|return
operator|(
name|String
operator|)
name|tblUsers
operator|.
name|getValueAt
argument_list|(
name|tblUsers
operator|.
name|getSelectedRow
argument_list|()
argument_list|,
literal|0
argument_list|)
return|;
block|}
specifier|private
name|String
name|getSelectedGroup
parameter_list|()
block|{
return|return
operator|(
name|String
operator|)
name|tblGroups
operator|.
name|getValueAt
argument_list|(
name|tblGroups
operator|.
name|getSelectedRow
argument_list|()
argument_list|,
literal|0
argument_list|)
return|;
block|}
specifier|private
name|void
name|miRemoveUserActionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
comment|//GEN-FIRST:event_miRemoveUserActionPerformed
specifier|final
name|String
name|selectedUsername
init|=
name|getSelectedUsername
argument_list|()
decl_stmt|;
try|try
block|{
specifier|final
name|Account
name|account
init|=
name|userManagementService
operator|.
name|getAccount
argument_list|(
name|selectedUsername
argument_list|)
decl_stmt|;
name|userManagementService
operator|.
name|removeAccount
argument_list|(
name|account
argument_list|)
expr_stmt|;
name|usersTableModel
operator|.
name|removeRow
argument_list|(
name|tblUsers
operator|.
name|getSelectedRow
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
literal|"Could not remove user '"
operator|+
name|selectedUsername
operator|+
literal|"': "
operator|+
name|xmldbe
operator|.
name|getMessage
argument_list|()
argument_list|,
literal|"User Manager Error"
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
block|}
comment|//GEN-LAST:event_miRemoveUserActionPerformed
specifier|private
name|void
name|miEditUserActionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
comment|//GEN-FIRST:event_miEditUserActionPerformed
specifier|final
name|String
name|selectedUsername
init|=
name|getSelectedUsername
argument_list|()
decl_stmt|;
try|try
block|{
specifier|final
name|Account
name|account
init|=
name|userManagementService
operator|.
name|getAccount
argument_list|(
name|selectedUsername
argument_list|)
decl_stmt|;
name|showEditUserDialog
argument_list|(
name|account
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
literal|"Could not edit user '"
operator|+
name|selectedUsername
operator|+
literal|"': "
operator|+
name|xmldbe
operator|.
name|getMessage
argument_list|()
argument_list|,
literal|"User Manager Error"
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
block|}
comment|//GEN-LAST:event_miEditUserActionPerformed
specifier|private
name|void
name|showEditUserDialog
parameter_list|(
specifier|final
name|Account
name|account
parameter_list|)
block|{
specifier|final
name|EditUserDialog
name|userDialog
init|=
operator|new
name|EditUserDialog
argument_list|(
name|userManagementService
argument_list|,
name|account
argument_list|)
decl_stmt|;
name|userDialog
operator|.
name|addWindowListener
argument_list|(
operator|new
name|WindowAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|windowClosed
parameter_list|(
specifier|final
name|WindowEvent
name|e
parameter_list|)
block|{
name|refreshUsersTableModel
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|userDialog
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|showEditGroupDialog
parameter_list|(
specifier|final
name|Group
name|group
parameter_list|)
block|{
specifier|final
name|EditGroupDialog
name|groupDialog
init|=
operator|new
name|EditGroupDialog
argument_list|(
name|userManagementService
argument_list|,
name|currentUser
argument_list|,
name|group
argument_list|)
decl_stmt|;
name|groupDialog
operator|.
name|addWindowListener
argument_list|(
operator|new
name|WindowAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|windowClosed
parameter_list|(
specifier|final
name|WindowEvent
name|e
parameter_list|)
block|{
name|refreshGroupsTableModel
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|groupDialog
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|btnCreateActionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
comment|//GEN-FIRST:event_btnCreateActionPerformed
switch|switch
condition|(
name|tpUserManager
operator|.
name|getSelectedIndex
argument_list|()
condition|)
block|{
case|case
literal|0
case|:
name|showUserDialog
argument_list|()
expr_stmt|;
break|break;
case|case
literal|1
case|:
name|showGroupDialog
argument_list|()
expr_stmt|;
break|break;
default|default:
return|return;
block|}
block|}
comment|//GEN-LAST:event_btnCreateActionPerformed
specifier|private
name|void
name|tblUsersMouseClicked
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseEvent
name|evt
parameter_list|)
block|{
comment|//GEN-FIRST:event_tblUsersMouseClicked
specifier|final
name|boolean
name|userSelected
init|=
name|tblUsers
operator|.
name|getSelectedRow
argument_list|()
operator|>
operator|-
literal|1
decl_stmt|;
specifier|final
name|String
name|selectedUsername
init|=
name|getSelectedUsername
argument_list|()
decl_stmt|;
name|boolean
name|canModify
init|=
name|userSelected
operator|&&
operator|!
operator|(
name|selectedUsername
operator|.
name|equals
argument_list|(
literal|"SYSTEM"
argument_list|)
operator|||
name|selectedUsername
operator|.
name|equals
argument_list|(
literal|"admin"
argument_list|)
operator|||
name|selectedUsername
operator|.
name|equals
argument_list|(
literal|"guest"
argument_list|)
operator|)
decl_stmt|;
name|miEditUser
operator|.
name|setEnabled
argument_list|(
name|canModify
argument_list|)
expr_stmt|;
name|miRemoveUser
operator|.
name|setEnabled
argument_list|(
name|canModify
argument_list|)
expr_stmt|;
if|if
condition|(
name|evt
operator|.
name|getClickCount
argument_list|()
operator|==
literal|2
condition|)
block|{
try|try
block|{
specifier|final
name|Account
name|account
init|=
name|userManagementService
operator|.
name|getAccount
argument_list|(
name|selectedUsername
argument_list|)
decl_stmt|;
name|showEditUserDialog
argument_list|(
name|account
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
literal|"Could not edit user '"
operator|+
name|selectedUsername
operator|+
literal|"': "
operator|+
name|xmldbe
operator|.
name|getMessage
argument_list|()
argument_list|,
literal|"User Manager Error"
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|//GEN-LAST:event_tblUsersMouseClicked
specifier|private
name|void
name|miEditGroupActionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
comment|//GEN-FIRST:event_miEditGroupActionPerformed
specifier|final
name|String
name|selectedGroup
init|=
name|getSelectedGroup
argument_list|()
decl_stmt|;
try|try
block|{
specifier|final
name|Group
name|group
init|=
name|userManagementService
operator|.
name|getGroup
argument_list|(
name|selectedGroup
argument_list|)
decl_stmt|;
name|showEditGroupDialog
argument_list|(
name|group
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
literal|"Could not edit group '"
operator|+
name|selectedGroup
operator|+
literal|"': "
operator|+
name|xmldbe
operator|.
name|getMessage
argument_list|()
argument_list|,
literal|"User Manager Error"
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
block|}
comment|//GEN-LAST:event_miEditGroupActionPerformed
specifier|private
name|void
name|miRemoveGroupActionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
comment|//GEN-FIRST:event_miRemoveGroupActionPerformed
specifier|final
name|String
name|selectedGroup
init|=
name|getSelectedGroup
argument_list|()
decl_stmt|;
try|try
block|{
specifier|final
name|Group
name|group
init|=
name|userManagementService
operator|.
name|getGroup
argument_list|(
name|selectedGroup
argument_list|)
decl_stmt|;
name|userManagementService
operator|.
name|removeGroup
argument_list|(
name|group
argument_list|)
expr_stmt|;
name|groupsTableModel
operator|.
name|removeRow
argument_list|(
name|tblGroups
operator|.
name|getSelectedRow
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
literal|"Could not remove group '"
operator|+
name|selectedGroup
operator|+
literal|"': "
operator|+
name|xmldbe
operator|.
name|getMessage
argument_list|()
argument_list|,
literal|"User Manager Error"
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
block|}
comment|//GEN-LAST:event_miRemoveGroupActionPerformed
specifier|private
name|void
name|tblGroupsMouseClicked
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseEvent
name|evt
parameter_list|)
block|{
comment|//GEN-FIRST:event_tblGroupsMouseClicked
specifier|final
name|boolean
name|groupSelected
init|=
name|tblGroups
operator|.
name|getSelectedRow
argument_list|()
operator|>
operator|-
literal|1
decl_stmt|;
specifier|final
name|String
name|selectedGroup
init|=
name|getSelectedGroup
argument_list|()
decl_stmt|;
name|boolean
name|canModify
init|=
name|groupSelected
operator|&&
operator|!
operator|(
name|selectedGroup
operator|.
name|equals
argument_list|(
literal|"dba"
argument_list|)
operator|||
name|selectedGroup
operator|.
name|equals
argument_list|(
literal|"guest"
argument_list|)
operator|)
decl_stmt|;
name|miEditGroup
operator|.
name|setEnabled
argument_list|(
name|canModify
argument_list|)
expr_stmt|;
name|miRemoveGroup
operator|.
name|setEnabled
argument_list|(
name|canModify
argument_list|)
expr_stmt|;
if|if
condition|(
name|evt
operator|.
name|getClickCount
argument_list|()
operator|==
literal|2
condition|)
block|{
try|try
block|{
specifier|final
name|Group
name|group
init|=
name|userManagementService
operator|.
name|getGroup
argument_list|(
name|selectedGroup
argument_list|)
decl_stmt|;
name|showEditGroupDialog
argument_list|(
name|group
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|xmldbe
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
literal|"Could not edit group '"
operator|+
name|selectedGroup
operator|+
literal|"': "
operator|+
name|xmldbe
operator|.
name|getMessage
argument_list|()
argument_list|,
literal|"User Manager Error"
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|//GEN-LAST:event_tblGroupsMouseClicked
specifier|private
name|void
name|miNewGroupActionPerformed
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
name|evt
parameter_list|)
block|{
comment|//GEN-FIRST:event_miNewGroupActionPerformed
name|showGroupDialog
argument_list|()
expr_stmt|;
block|}
comment|//GEN-LAST:event_miNewGroupActionPerformed
comment|// Variables declaration - do not modify//GEN-BEGIN:variables
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JButton
name|btnClose
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JButton
name|btnCreate
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JSeparator
name|jSeparator1
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JMenuItem
name|miEditGroup
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JMenuItem
name|miEditUser
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JMenuItem
name|miNewGroup
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JMenuItem
name|miNewUser
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JMenuItem
name|miRemoveGroup
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JMenuItem
name|miRemoveUser
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JPopupMenu
name|pmGroups
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JPopupMenu
name|pmUsers
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
name|spGroups
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
name|spUsers
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JTable
name|tblGroups
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JTable
name|tblUsers
decl_stmt|;
specifier|private
name|javax
operator|.
name|swing
operator|.
name|JTabbedPane
name|tpUserManager
decl_stmt|;
comment|// End of variables declaration//GEN-END:variables
block|}
end_class

end_unit

