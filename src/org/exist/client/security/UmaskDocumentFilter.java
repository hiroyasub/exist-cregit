begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|client
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Matcher
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|AttributeSet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|BadLocationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|DocumentFilter
import|;
end_import

begin_comment
comment|/**  *  * @author Adam Retter<adam.retter@googlemail.com>  */
end_comment

begin_class
specifier|public
class|class
name|UmaskDocumentFilter
extends|extends
name|DocumentFilter
block|{
specifier|final
specifier|static
name|Pattern
name|ptnUmask
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"0?[0-7]{1,3}"
argument_list|)
decl_stmt|;
specifier|final
name|Matcher
name|mtcUmask
init|=
name|ptnUmask
operator|.
name|matcher
argument_list|(
literal|""
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|remove
parameter_list|(
name|FilterBypass
name|fb
parameter_list|,
name|int
name|offset
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|BadLocationException
block|{
specifier|final
name|Document
name|doc
init|=
name|fb
operator|.
name|getDocument
argument_list|()
decl_stmt|;
specifier|final
name|String
name|original
init|=
name|doc
operator|.
name|getText
argument_list|(
literal|0
argument_list|,
name|doc
operator|.
name|getLength
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|isValidUmask
argument_list|(
name|removeFromString
argument_list|(
name|original
argument_list|,
name|offset
argument_list|,
name|length
argument_list|)
argument_list|)
condition|)
block|{
name|super
operator|.
name|remove
argument_list|(
name|fb
argument_list|,
name|offset
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|insertString
parameter_list|(
name|FilterBypass
name|fb
parameter_list|,
name|int
name|offset
parameter_list|,
name|String
name|text
parameter_list|,
name|AttributeSet
name|attr
parameter_list|)
throws|throws
name|BadLocationException
block|{
specifier|final
name|Document
name|doc
init|=
name|fb
operator|.
name|getDocument
argument_list|()
decl_stmt|;
specifier|final
name|String
name|original
init|=
name|doc
operator|.
name|getText
argument_list|(
literal|0
argument_list|,
name|doc
operator|.
name|getLength
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|isValidUmask
argument_list|(
name|insertIntoString
argument_list|(
name|original
argument_list|,
name|text
argument_list|,
name|offset
argument_list|)
argument_list|)
condition|)
block|{
name|super
operator|.
name|insertString
argument_list|(
name|fb
argument_list|,
name|offset
argument_list|,
name|text
argument_list|,
name|attr
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|String
name|removeFromString
parameter_list|(
specifier|final
name|String
name|original
parameter_list|,
specifier|final
name|int
name|offset
parameter_list|,
specifier|final
name|int
name|length
parameter_list|)
block|{
name|String
name|newString
decl_stmt|;
if|if
condition|(
name|offset
operator|>
literal|0
condition|)
block|{
name|newString
operator|=
name|original
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|offset
operator|+
name|length
operator|-
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|offset
operator|+
name|length
operator|<
name|original
operator|.
name|length
argument_list|()
condition|)
block|{
name|newString
operator|+=
name|original
operator|.
name|substring
argument_list|(
name|offset
operator|+
name|length
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|newString
operator|=
name|original
operator|.
name|substring
argument_list|(
name|offset
operator|+
name|length
argument_list|)
expr_stmt|;
block|}
return|return
name|newString
return|;
block|}
specifier|private
name|String
name|insertIntoString
parameter_list|(
specifier|final
name|String
name|original
parameter_list|,
specifier|final
name|String
name|toInsert
parameter_list|,
specifier|final
name|int
name|offset
parameter_list|)
block|{
name|String
name|newString
decl_stmt|;
if|if
condition|(
name|offset
operator|>
literal|0
condition|)
block|{
name|newString
operator|=
name|original
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|offset
argument_list|)
expr_stmt|;
name|newString
operator|+=
name|toInsert
expr_stmt|;
if|if
condition|(
name|offset
operator|<
name|original
operator|.
name|length
argument_list|()
condition|)
block|{
name|newString
operator|+=
name|original
operator|.
name|substring
argument_list|(
name|offset
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|newString
operator|=
name|toInsert
operator|+
name|original
expr_stmt|;
block|}
return|return
name|newString
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|replace
parameter_list|(
name|FilterBypass
name|fb
parameter_list|,
name|int
name|offset
parameter_list|,
name|int
name|length
parameter_list|,
name|String
name|text
parameter_list|,
name|AttributeSet
name|attrs
parameter_list|)
throws|throws
name|BadLocationException
block|{
specifier|final
name|Document
name|doc
init|=
name|fb
operator|.
name|getDocument
argument_list|()
decl_stmt|;
specifier|final
name|String
name|original
init|=
name|doc
operator|.
name|getText
argument_list|(
literal|0
argument_list|,
name|doc
operator|.
name|getLength
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|str
decl_stmt|;
if|if
condition|(
name|length
operator|>
literal|0
condition|)
block|{
name|str
operator|=
name|removeFromString
argument_list|(
name|original
argument_list|,
name|offset
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|str
operator|=
name|original
expr_stmt|;
block|}
name|str
operator|=
name|insertIntoString
argument_list|(
name|str
argument_list|,
name|text
argument_list|,
name|offset
argument_list|)
expr_stmt|;
if|if
condition|(
name|isValidUmask
argument_list|(
name|str
argument_list|)
condition|)
block|{
name|super
operator|.
name|replace
argument_list|(
name|fb
argument_list|,
name|offset
argument_list|,
name|length
argument_list|,
name|text
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|boolean
name|isValidUmask
parameter_list|(
name|String
name|str
parameter_list|)
block|{
name|mtcUmask
operator|.
name|reset
argument_list|(
name|str
argument_list|)
expr_stmt|;
return|return
name|mtcUmask
operator|.
name|matches
argument_list|()
return|;
block|}
block|}
end_class

end_unit

