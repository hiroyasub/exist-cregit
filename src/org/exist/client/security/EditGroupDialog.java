begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|client
operator|.
name|security
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|EXistSchemaType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Group
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|UserManagementService
import|;
end_import

begin_comment
comment|/**  *  * @author Adam Retter<adam.retter@googlemail.com>  */
end_comment

begin_class
specifier|public
class|class
name|EditGroupDialog
extends|extends
name|GroupDialog
block|{
specifier|private
specifier|final
name|Group
name|group
decl_stmt|;
specifier|public
name|EditGroupDialog
parameter_list|(
specifier|final
name|UserManagementService
name|userManagementService
parameter_list|,
specifier|final
name|Group
name|group
parameter_list|)
block|{
name|super
argument_list|(
name|userManagementService
argument_list|)
expr_stmt|;
name|this
operator|.
name|group
operator|=
name|group
expr_stmt|;
name|setFormPropertiesFromGroup
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|setFormPropertiesFromGroup
parameter_list|()
block|{
name|setTitle
argument_list|(
literal|"Edit Group: "
operator|+
name|getGroup
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|btnCreate
operator|.
name|setText
argument_list|(
literal|"Save"
argument_list|)
expr_stmt|;
name|txtGroupName
operator|.
name|setText
argument_list|(
name|getGroup
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|txtGroupName
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|txtDescription
operator|.
name|setText
argument_list|(
name|getGroup
argument_list|()
operator|.
name|getMetadataValue
argument_list|(
name|EXistSchemaType
operator|.
name|DESCRIPTION
argument_list|)
argument_list|)
expr_stmt|;
comment|//TODO display existing members and managers.
block|}
annotation|@
name|Override
specifier|protected
name|void
name|createGroup
parameter_list|()
block|{
comment|//dont create a group update instead!
name|updateGroup
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|updateGroup
parameter_list|()
block|{
comment|/*try {             setAccountFromFormProperties();             getUserManagementService().updateAccount(getAccount());         } catch(PermissionDeniedException pde) {             JOptionPane.showMessageDialog(this, "Could not update user '" + txtUsername.getText() + "': " + pde.getMessage(), "Edit User Error", JOptionPane.ERROR_MESSAGE);         } catch(final XMLDBException xmldbe) {             JOptionPane.showMessageDialog(this, "Could not update user '" + txtUsername.getText() + "': " + xmldbe.getMessage(), "Edit User Error", JOptionPane.ERROR_MESSAGE);         }*/
block|}
specifier|protected
name|Group
name|getGroup
parameter_list|()
block|{
return|return
name|group
return|;
block|}
block|}
end_class

end_unit

