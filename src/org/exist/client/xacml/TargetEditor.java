begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|client
operator|.
name|xacml
package|;
end_package

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|Target
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|attr
operator|.
name|AttributeDesignator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|attr
operator|.
name|AttributeValue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|BorderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComponent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTabbedPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTable
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ListSelectionModel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ChangeListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ListSelectionEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ListSelectionListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|SecurityManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|BrokerPool
import|;
end_import

begin_class
specifier|public
class|class
name|TargetEditor
extends|extends
name|AbstractNodeEditor
implements|implements
name|ChangeListener
implements|,
name|ListSelectionListener
block|{
specifier|private
name|Abbreviator
name|abbrev
decl_stmt|;
specifier|private
name|JTabbedPane
name|tabbed
decl_stmt|;
specifier|private
name|JTable
name|subjectTargetTable
decl_stmt|;
specifier|private
name|JTable
name|actionTargetTable
decl_stmt|;
comment|//XACML 2.0:
comment|//private JTable environmentTargetModel;
specifier|private
name|JTable
name|resourceTargetTable
decl_stmt|;
specifier|private
name|MatchEditor
name|matchEditor
decl_stmt|;
specifier|private
name|JPanel
name|comp
decl_stmt|;
specifier|private
name|TargetNode
name|node
decl_stmt|;
specifier|private
name|TargetEditor
parameter_list|()
block|{
block|}
specifier|public
name|TargetEditor
parameter_list|(
name|BrokerPool
name|pool
parameter_list|)
block|{
name|abbrev
operator|=
operator|new
name|Abbreviator
argument_list|()
expr_stmt|;
name|setup
argument_list|(
name|pool
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|setup
parameter_list|(
name|BrokerPool
name|pool
parameter_list|)
block|{
name|comp
operator|=
operator|new
name|JPanel
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
name|comp
operator|.
name|setOpaque
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|comp
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|6
argument_list|,
literal|6
argument_list|,
literal|6
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|matchEditor
operator|=
operator|new
name|MatchEditor
argument_list|(
name|abbrev
argument_list|)
expr_stmt|;
name|matchEditor
operator|.
name|addChangeListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|comp
operator|.
name|add
argument_list|(
name|matchEditor
argument_list|,
name|BorderLayout
operator|.
name|NORTH
argument_list|)
expr_stmt|;
name|setupHandlers
argument_list|(
name|matchEditor
argument_list|,
name|pool
argument_list|)
expr_stmt|;
name|tabbed
operator|=
operator|new
name|JTabbedPane
argument_list|(
name|JTabbedPane
operator|.
name|TOP
argument_list|,
name|JTabbedPane
operator|.
name|SCROLL_TAB_LAYOUT
argument_list|)
expr_stmt|;
name|comp
operator|.
name|add
argument_list|(
name|tabbed
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
name|subjectTargetTable
operator|=
name|createTargetPanel
argument_list|(
name|AttributeDesignator
operator|.
name|SUBJECT_TARGET
argument_list|,
name|tabbed
argument_list|)
expr_stmt|;
comment|//XACML 2.0:
comment|//environmentTargetTable = createTargetPanel(AttributeDesignator.ENVIRONMENT_TARGET, tabbed);
name|resourceTargetTable
operator|=
name|createTargetPanel
argument_list|(
name|AttributeDesignator
operator|.
name|RESOURCE_TARGET
argument_list|,
name|tabbed
argument_list|)
expr_stmt|;
name|actionTargetTable
operator|=
name|createTargetPanel
argument_list|(
name|AttributeDesignator
operator|.
name|ACTION_TARGET
argument_list|,
name|tabbed
argument_list|)
expr_stmt|;
name|comp
operator|.
name|add
argument_list|(
name|tabbed
argument_list|)
expr_stmt|;
block|}
specifier|public
name|JComponent
name|getComponent
parameter_list|()
block|{
return|return
name|comp
return|;
block|}
specifier|private
name|void
name|setupHandlers
parameter_list|(
name|MatchEditor
name|matchEditor
parameter_list|,
name|BrokerPool
name|pool
parameter_list|)
block|{
name|SecurityManager
name|manager
init|=
name|pool
operator|.
name|getSecurityManager
argument_list|()
decl_stmt|;
name|matchEditor
operator|.
name|addAttributeHandler
argument_list|(
operator|new
name|UserAttributeHandler
argument_list|(
name|manager
argument_list|)
argument_list|)
expr_stmt|;
name|matchEditor
operator|.
name|addAttributeHandler
argument_list|(
operator|new
name|ActionAttributeHandler
argument_list|()
argument_list|)
expr_stmt|;
name|matchEditor
operator|.
name|addAttributeHandler
argument_list|(
operator|new
name|ResourceCategoryAttributeHandler
argument_list|()
argument_list|)
expr_stmt|;
name|matchEditor
operator|.
name|addAttributeHandler
argument_list|(
operator|new
name|ModuleAttributeHandler
argument_list|(
name|pool
operator|.
name|getConfiguration
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|JTable
name|createTargetPanel
parameter_list|(
name|int
name|type
parameter_list|,
name|JTabbedPane
name|tabbed
parameter_list|)
block|{
name|TargetTableModel
name|tm
init|=
operator|new
name|TargetTableModel
argument_list|(
name|type
argument_list|,
name|abbrev
argument_list|)
decl_stmt|;
name|JTable
name|table
init|=
operator|new
name|ResizingTable
argument_list|(
name|tm
argument_list|)
decl_stmt|;
name|table
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|addListSelectionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|table
operator|.
name|getColumnModel
argument_list|()
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|addListSelectionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|table
operator|.
name|setMinimumSize
argument_list|(
operator|new
name|Dimension
argument_list|(
literal|300
argument_list|,
literal|150
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|setMaximumSize
argument_list|(
operator|new
name|Dimension
argument_list|(
literal|600
argument_list|,
literal|500
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|setCellSelectionEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|table
operator|.
name|setSelectionMode
argument_list|(
name|ListSelectionModel
operator|.
name|SINGLE_SELECTION
argument_list|)
expr_stmt|;
name|JScrollPane
name|scroll
init|=
operator|new
name|JScrollPane
argument_list|(
name|table
argument_list|)
decl_stmt|;
name|tabbed
operator|.
name|add
argument_list|(
name|getLabel
argument_list|(
name|type
argument_list|)
argument_list|,
name|scroll
argument_list|)
expr_stmt|;
return|return
name|table
return|;
block|}
specifier|private
specifier|static
name|String
name|getLabel
parameter_list|(
name|int
name|type
parameter_list|)
block|{
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|AttributeDesignator
operator|.
name|ACTION_TARGET
case|:
return|return
literal|"Action"
return|;
case|case
name|AttributeDesignator
operator|.
name|RESOURCE_TARGET
case|:
return|return
literal|"Resource"
return|;
case|case
name|AttributeDesignator
operator|.
name|SUBJECT_TARGET
case|:
return|return
literal|"Subject"
return|;
comment|//XACML 2.0:
comment|//case AttributeDesignator.ENVIRONMENT_TARGET:
comment|//	return "Environment";
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Invalid target type"
argument_list|)
throw|;
block|}
block|}
specifier|public
name|void
name|setNode
parameter_list|(
name|XACMLTreeNode
name|treeNode
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|treeNode
operator|instanceof
name|TargetNode
operator|)
condition|)
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"TargetEditor can only edit TargetNodes"
argument_list|)
throw|;
name|this
operator|.
name|node
operator|=
operator|(
name|TargetNode
operator|)
name|treeNode
expr_stmt|;
name|Target
name|target
init|=
name|node
operator|.
name|getTarget
argument_list|()
decl_stmt|;
operator|(
operator|(
name|TargetTableModel
operator|)
name|subjectTargetTable
operator|.
name|getModel
argument_list|()
operator|)
operator|.
name|setTarget
argument_list|(
name|target
operator|==
literal|null
condition|?
literal|null
else|:
name|target
operator|.
name|getSubjects
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|TargetTableModel
operator|)
name|actionTargetTable
operator|.
name|getModel
argument_list|()
operator|)
operator|.
name|setTarget
argument_list|(
name|target
operator|==
literal|null
condition|?
literal|null
else|:
name|target
operator|.
name|getActions
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|TargetTableModel
operator|)
name|resourceTargetTable
operator|.
name|getModel
argument_list|()
operator|)
operator|.
name|setTarget
argument_list|(
name|target
operator|==
literal|null
condition|?
literal|null
else|:
name|target
operator|.
name|getResources
argument_list|()
argument_list|)
expr_stmt|;
comment|//XACML 2.0:
comment|//environmentTargetModel.setTarget(target.getEnvironment());
block|}
specifier|public
name|void
name|pushChanges
parameter_list|()
block|{
if|if
condition|(
operator|!
name|node
operator|.
name|isModified
argument_list|(
literal|false
argument_list|)
condition|)
return|return;
name|List
name|subjects
init|=
operator|(
operator|(
name|TargetTableModel
operator|)
name|subjectTargetTable
operator|.
name|getModel
argument_list|()
operator|)
operator|.
name|createTarget
argument_list|()
decl_stmt|;
name|List
name|resources
init|=
operator|(
operator|(
name|TargetTableModel
operator|)
name|resourceTargetTable
operator|.
name|getModel
argument_list|()
operator|)
operator|.
name|createTarget
argument_list|()
decl_stmt|;
name|List
name|actions
init|=
operator|(
operator|(
name|TargetTableModel
operator|)
name|actionTargetTable
operator|.
name|getModel
argument_list|()
operator|)
operator|.
name|createTarget
argument_list|()
decl_stmt|;
comment|//XACML 2.0:
comment|//List environments = ((TargetTableModel)environmentTargetTable.getModel()).createTarget();
name|Target
name|target
init|=
operator|new
name|Target
argument_list|(
name|subjects
argument_list|,
name|resources
argument_list|,
name|actions
argument_list|)
decl_stmt|;
name|node
operator|.
name|setTarget
argument_list|(
name|target
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|valueChanged
parameter_list|(
name|ListSelectionEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|event
operator|.
name|getValueIsAdjusting
argument_list|()
condition|)
return|return;
name|JTable
name|table
init|=
name|getCurrentTargetTable
argument_list|()
decl_stmt|;
if|if
condition|(
name|table
operator|==
literal|null
condition|)
block|{
name|matchEditor
operator|.
name|setMatch
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
return|return;
block|}
name|int
name|selectedRow
init|=
name|table
operator|.
name|getSelectedRow
argument_list|()
decl_stmt|;
name|int
name|selectedColumn
init|=
name|table
operator|.
name|getSelectedColumn
argument_list|()
decl_stmt|;
if|if
condition|(
name|selectedRow
operator|<
literal|0
operator|||
name|selectedColumn
operator|<
literal|0
condition|)
block|{
name|matchEditor
operator|.
name|setMatch
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
return|return;
block|}
name|TargetTableModel
name|model
init|=
operator|(
name|TargetTableModel
operator|)
name|table
operator|.
name|getModel
argument_list|()
decl_stmt|;
name|AttributeDesignator
name|attribute
init|=
name|model
operator|.
name|getAttribute
argument_list|(
name|selectedColumn
argument_list|)
decl_stmt|;
name|URI
name|functionId
init|=
name|model
operator|.
name|getFunctionId
argument_list|(
name|selectedRow
argument_list|,
name|selectedColumn
argument_list|)
decl_stmt|;
name|AttributeValue
name|value
init|=
name|model
operator|.
name|getValue
argument_list|(
name|selectedRow
argument_list|,
name|selectedColumn
argument_list|)
decl_stmt|;
name|matchEditor
operator|.
name|setMatch
argument_list|(
name|attribute
argument_list|,
name|functionId
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|private
name|JTable
name|getCurrentTargetTable
parameter_list|()
block|{
name|int
name|currentTab
init|=
name|tabbed
operator|.
name|getSelectedIndex
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|currentTab
condition|)
block|{
case|case
literal|0
case|:
return|return
name|subjectTargetTable
return|;
case|case
literal|1
case|:
return|return
name|resourceTargetTable
return|;
case|case
literal|2
case|:
return|return
name|actionTargetTable
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
name|void
name|stateChanged
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|JTable
name|table
init|=
name|getCurrentTargetTable
argument_list|()
decl_stmt|;
if|if
condition|(
name|table
operator|==
literal|null
condition|)
block|{
name|matchEditor
operator|.
name|setMatch
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
return|return;
block|}
name|int
name|selectedRow
init|=
name|table
operator|.
name|getSelectedRow
argument_list|()
decl_stmt|;
name|int
name|selectedColumn
init|=
name|table
operator|.
name|getSelectedColumn
argument_list|()
decl_stmt|;
if|if
condition|(
name|selectedRow
operator|<
literal|0
operator|||
name|selectedColumn
operator|<
literal|0
condition|)
block|{
name|matchEditor
operator|.
name|setMatch
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
return|return;
block|}
name|URI
name|functionId
init|=
name|matchEditor
operator|.
name|getFunctionId
argument_list|()
decl_stmt|;
name|AttributeValue
name|value
init|=
name|matchEditor
operator|.
name|getValue
argument_list|()
decl_stmt|;
operator|(
operator|(
name|TargetTableModel
operator|)
name|table
operator|.
name|getModel
argument_list|()
operator|)
operator|.
name|setValue
argument_list|(
name|functionId
argument_list|,
name|value
argument_list|,
name|selectedRow
argument_list|,
name|selectedColumn
argument_list|)
expr_stmt|;
name|node
operator|.
name|setModified
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

