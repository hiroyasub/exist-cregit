begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|client
operator|.
name|xacml
package|;
end_package

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|ParsingException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|UnknownIdentifierException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|attr
operator|.
name|AttributeDesignator
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|attr
operator|.
name|AttributeFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|attr
operator|.
name|AttributeValue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|DefaultComboBoxModel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComboBox
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|Spring
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|SpringLayout
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ChangeListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|DocumentEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|DocumentListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|JTextComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|client
operator|.
name|ClientFrame
import|;
end_import

begin_class
specifier|public
class|class
name|MatchEditor
extends|extends
name|JPanel
implements|implements
name|ActionListener
implements|,
name|DocumentListener
block|{
specifier|private
specifier|static
specifier|final
name|String
name|EMPTY_TEXT
init|=
literal|"Select an attribute to edit"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|MAXIMUM_BOX_WIDTH
init|=
literal|450
decl_stmt|;
specifier|private
name|AttributeDesignator
name|attribute
decl_stmt|;
specifier|private
name|JLabel
name|label
decl_stmt|;
specifier|private
name|JComboBox
name|functionBox
decl_stmt|;
specifier|private
name|JComboBox
name|valueBox
decl_stmt|;
specifier|private
name|Abbreviator
name|abbrev
decl_stmt|;
specifier|private
name|List
name|listeners
init|=
operator|new
name|ArrayList
argument_list|(
literal|2
argument_list|)
decl_stmt|;
specifier|private
name|List
name|attributeHandlers
init|=
operator|new
name|ArrayList
argument_list|(
literal|2
argument_list|)
decl_stmt|;
specifier|private
name|boolean
name|tempIgnoreChanges
init|=
literal|false
decl_stmt|;
specifier|private
name|MatchEditor
parameter_list|()
block|{
block|}
specifier|public
name|MatchEditor
parameter_list|(
name|Abbreviator
name|abbrev
parameter_list|)
block|{
name|this
operator|.
name|abbrev
operator|=
name|abbrev
expr_stmt|;
name|setup
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|setup
parameter_list|()
block|{
name|SpringLayout
name|layout
init|=
operator|new
name|SpringLayout
argument_list|()
decl_stmt|;
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|setOpaque
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|label
operator|=
operator|new
name|JLabel
argument_list|(
name|EMPTY_TEXT
argument_list|)
expr_stmt|;
name|functionBox
operator|=
operator|new
name|JComboBox
argument_list|()
expr_stmt|;
name|functionBox
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|functionBox
operator|.
name|setMaximumSize
argument_list|(
name|restrictWidth
argument_list|(
name|functionBox
operator|.
name|getMaximumSize
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|valueBox
operator|=
operator|new
name|JComboBox
argument_list|()
expr_stmt|;
name|valueBox
operator|.
name|setEditable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|valueBox
operator|.
name|setMaximumSize
argument_list|(
name|restrictWidth
argument_list|(
name|functionBox
operator|.
name|getMaximumSize
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Component
name|comp
init|=
name|valueBox
operator|.
name|getEditor
argument_list|()
operator|.
name|getEditorComponent
argument_list|()
decl_stmt|;
if|if
condition|(
name|comp
operator|instanceof
name|JTextComponent
condition|)
operator|(
operator|(
name|JTextComponent
operator|)
name|comp
operator|)
operator|.
name|getDocument
argument_list|()
operator|.
name|addDocumentListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|setBoxesVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|functionBox
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|valueBox
argument_list|)
expr_stmt|;
name|Spring
name|constant6
init|=
name|Spring
operator|.
name|constant
argument_list|(
literal|6
argument_list|)
decl_stmt|;
name|layout
operator|.
name|putConstraint
argument_list|(
name|SpringLayout
operator|.
name|NORTH
argument_list|,
name|label
argument_list|,
name|constant6
argument_list|,
name|SpringLayout
operator|.
name|NORTH
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|layout
operator|.
name|putConstraint
argument_list|(
name|SpringLayout
operator|.
name|NORTH
argument_list|,
name|functionBox
argument_list|,
name|constant6
argument_list|,
name|SpringLayout
operator|.
name|NORTH
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|layout
operator|.
name|putConstraint
argument_list|(
name|SpringLayout
operator|.
name|NORTH
argument_list|,
name|valueBox
argument_list|,
name|constant6
argument_list|,
name|SpringLayout
operator|.
name|NORTH
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|Spring
name|bottom
init|=
name|layout
operator|.
name|getConstraint
argument_list|(
name|SpringLayout
operator|.
name|SOUTH
argument_list|,
name|label
argument_list|)
decl_stmt|;
name|bottom
operator|=
name|Spring
operator|.
name|max
argument_list|(
name|bottom
argument_list|,
name|layout
operator|.
name|getConstraint
argument_list|(
name|SpringLayout
operator|.
name|SOUTH
argument_list|,
name|functionBox
argument_list|)
argument_list|)
expr_stmt|;
name|bottom
operator|=
name|Spring
operator|.
name|max
argument_list|(
name|bottom
argument_list|,
name|layout
operator|.
name|getConstraint
argument_list|(
name|SpringLayout
operator|.
name|SOUTH
argument_list|,
name|valueBox
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|.
name|putConstraint
argument_list|(
name|SpringLayout
operator|.
name|SOUTH
argument_list|,
name|this
argument_list|,
name|bottom
argument_list|,
name|SpringLayout
operator|.
name|NORTH
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|layout
operator|.
name|putConstraint
argument_list|(
name|SpringLayout
operator|.
name|WEST
argument_list|,
name|functionBox
argument_list|,
name|constant6
argument_list|,
name|SpringLayout
operator|.
name|EAST
argument_list|,
name|label
argument_list|)
expr_stmt|;
name|layout
operator|.
name|putConstraint
argument_list|(
name|SpringLayout
operator|.
name|WEST
argument_list|,
name|valueBox
argument_list|,
name|constant6
argument_list|,
name|SpringLayout
operator|.
name|EAST
argument_list|,
name|functionBox
argument_list|)
expr_stmt|;
name|layout
operator|.
name|putConstraint
argument_list|(
name|SpringLayout
operator|.
name|EAST
argument_list|,
name|this
argument_list|,
name|Spring
operator|.
name|constant
argument_list|(
literal|6
argument_list|,
literal|6
argument_list|,
name|Short
operator|.
name|MAX_VALUE
argument_list|)
argument_list|,
name|SpringLayout
operator|.
name|EAST
argument_list|,
name|valueBox
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setMatch
parameter_list|(
name|AttributeDesignator
name|attribute
parameter_list|,
name|URI
name|functionId
parameter_list|,
name|AttributeValue
name|value
parameter_list|)
block|{
name|tempIgnoreChanges
operator|=
literal|true
expr_stmt|;
name|commitEdit
argument_list|()
expr_stmt|;
name|valueBox
operator|.
name|removeActionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|functionBox
operator|.
name|removeActionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|this
operator|.
name|attribute
operator|=
name|attribute
expr_stmt|;
if|if
condition|(
name|attribute
operator|==
literal|null
condition|)
block|{
name|label
operator|.
name|setText
argument_list|(
name|EMPTY_TEXT
argument_list|)
expr_stmt|;
name|setBoxesVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|tempIgnoreChanges
operator|=
literal|false
expr_stmt|;
return|return;
block|}
name|URI
name|dataType
init|=
name|attribute
operator|.
name|getType
argument_list|()
decl_stmt|;
name|label
operator|.
name|setText
argument_list|(
name|abbrev
operator|.
name|getAbbreviatedId
argument_list|(
name|attribute
operator|.
name|getId
argument_list|()
argument_list|)
operator|+
literal|" ("
operator|+
name|abbrev
operator|.
name|getAbbreviatedType
argument_list|(
name|dataType
argument_list|)
operator|+
literal|")"
argument_list|)
expr_stmt|;
name|Set
name|targetFunctions
init|=
name|abbrev
operator|.
name|getAbbreviatedTargetFunctions
argument_list|(
name|dataType
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|it
init|=
name|attributeHandlers
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
operator|(
operator|(
name|AttributeHandler
operator|)
name|it
operator|.
name|next
argument_list|()
operator|)
operator|.
name|filterFunctions
argument_list|(
name|targetFunctions
argument_list|,
name|attribute
argument_list|)
expr_stmt|;
name|functionBox
operator|.
name|setModel
argument_list|(
operator|new
name|DefaultComboBoxModel
argument_list|(
name|targetFunctions
operator|.
name|toArray
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|functionId
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|functionBox
operator|.
name|getItemCount
argument_list|()
operator|>
literal|0
condition|)
name|functionBox
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
name|functionBox
operator|.
name|setSelectedItem
argument_list|(
name|abbrev
operator|.
name|getAbbreviatedTargetFunctionId
argument_list|(
name|functionId
argument_list|,
name|dataType
argument_list|)
argument_list|)
expr_stmt|;
name|functionBox
operator|.
name|setMaximumSize
argument_list|(
name|restrictWidth
argument_list|(
name|functionBox
operator|.
name|getPreferredSize
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|valueBox
operator|.
name|setEditable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Set
name|allowedValues
init|=
operator|new
name|TreeSet
argument_list|()
decl_stmt|;
for|for
control|(
name|Iterator
name|it
init|=
name|attributeHandlers
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|AttributeHandler
operator|)
name|it
operator|.
name|next
argument_list|()
operator|)
operator|.
name|getAllowedValues
argument_list|(
name|allowedValues
argument_list|,
name|attribute
argument_list|)
condition|)
block|{
name|valueBox
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
name|valueBox
operator|.
name|setModel
argument_list|(
operator|new
name|DefaultComboBoxModel
argument_list|(
name|allowedValues
operator|.
name|toArray
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|valueBox
operator|.
name|isEditable
argument_list|()
condition|)
block|{
name|Dimension
name|max
init|=
name|valueBox
operator|.
name|getMaximumSize
argument_list|()
decl_stmt|;
name|max
operator|.
name|width
operator|=
name|MAXIMUM_BOX_WIDTH
expr_stmt|;
name|valueBox
operator|.
name|setMaximumSize
argument_list|(
name|max
argument_list|)
expr_stmt|;
block|}
else|else
name|valueBox
operator|.
name|setMaximumSize
argument_list|(
name|restrictWidth
argument_list|(
name|valueBox
operator|.
name|getMaximumSize
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|valueBox
operator|.
name|setSelectedItem
argument_list|(
operator|(
name|value
operator|==
literal|null
operator|)
condition|?
literal|null
else|:
name|value
operator|.
name|encode
argument_list|()
argument_list|)
expr_stmt|;
name|setBoxesVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|valueBox
operator|.
name|addActionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|functionBox
operator|.
name|addActionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|tempIgnoreChanges
operator|=
literal|false
expr_stmt|;
block|}
specifier|private
name|Dimension
name|restrictWidth
parameter_list|(
name|Dimension
name|size
parameter_list|)
block|{
if|if
condition|(
name|size
operator|.
name|width
operator|>
name|MAXIMUM_BOX_WIDTH
condition|)
name|size
operator|.
name|width
operator|=
name|MAXIMUM_BOX_WIDTH
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
name|void
name|setBoxesVisible
parameter_list|(
name|boolean
name|b
parameter_list|)
block|{
name|functionBox
operator|.
name|setVisible
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|valueBox
operator|.
name|setVisible
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
specifier|public
name|URI
name|getFunctionId
parameter_list|()
block|{
return|return
name|abbrev
operator|.
name|getFullFunctionId
argument_list|(
operator|(
name|String
operator|)
name|functionBox
operator|.
name|getSelectedItem
argument_list|()
argument_list|,
name|attribute
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|AttributeValue
name|getValue
parameter_list|()
block|{
if|if
condition|(
name|attribute
operator|==
literal|null
condition|)
return|return
literal|null
return|;
name|commitEdit
argument_list|()
expr_stmt|;
name|Object
name|item
init|=
name|valueBox
operator|.
name|getSelectedItem
argument_list|()
decl_stmt|;
if|if
condition|(
name|item
operator|==
literal|null
condition|)
return|return
literal|null
return|;
name|AttributeFactory
name|factory
init|=
name|AttributeFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
try|try
block|{
name|AttributeValue
name|value
init|=
name|factory
operator|.
name|createValue
argument_list|(
name|attribute
operator|.
name|getType
argument_list|()
argument_list|,
name|item
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|it
init|=
name|attributeHandlers
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
operator|(
operator|(
name|AttributeHandler
operator|)
name|it
operator|.
name|next
argument_list|()
operator|)
operator|.
name|checkUserValue
argument_list|(
name|value
argument_list|,
name|attribute
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
catch|catch
parameter_list|(
name|UnknownIdentifierException
name|e
parameter_list|)
block|{
name|ClientFrame
operator|.
name|showErrorMessage
argument_list|(
literal|"Invalid attribute type '"
operator|+
name|attribute
operator|.
name|getType
argument_list|()
operator|+
literal|"'"
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|ParsingException
name|e
parameter_list|)
block|{
name|ClientFrame
operator|.
name|showErrorMessage
argument_list|(
literal|"Invalid value '"
operator|+
name|item
operator|+
literal|"'"
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
specifier|public
name|void
name|commitEdit
parameter_list|()
block|{
name|functionBox
operator|.
name|setSelectedItem
argument_list|(
name|functionBox
operator|.
name|getEditor
argument_list|()
operator|.
name|getItem
argument_list|()
argument_list|)
expr_stmt|;
name|valueBox
operator|.
name|setSelectedItem
argument_list|(
name|valueBox
operator|.
name|getEditor
argument_list|()
operator|.
name|getItem
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|AttributeDesignator
name|getAttribute
parameter_list|()
block|{
return|return
name|attribute
return|;
block|}
specifier|public
name|void
name|addAttributeHandler
parameter_list|(
name|AttributeHandler
name|ah
parameter_list|)
block|{
if|if
condition|(
name|ah
operator|==
literal|null
condition|)
return|return;
if|if
condition|(
name|attributeHandlers
operator|==
literal|null
condition|)
name|attributeHandlers
operator|=
operator|new
name|ArrayList
argument_list|()
expr_stmt|;
name|attributeHandlers
operator|.
name|add
argument_list|(
name|ah
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeAttributeHandler
parameter_list|(
name|AttributeHandler
name|ah
parameter_list|)
block|{
if|if
condition|(
name|ah
operator|==
literal|null
operator|||
name|attributeHandlers
operator|==
literal|null
condition|)
return|return;
name|attributeHandlers
operator|.
name|remove
argument_list|(
name|ah
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|event
parameter_list|)
block|{
name|fireChanged
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|fireChanged
parameter_list|()
block|{
if|if
condition|(
name|tempIgnoreChanges
condition|)
return|return;
name|ChangeEvent
name|event
init|=
operator|new
name|ChangeEvent
argument_list|(
name|this
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|it
init|=
name|listeners
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
operator|(
operator|(
name|ChangeListener
operator|)
name|it
operator|.
name|next
argument_list|()
operator|)
operator|.
name|stateChanged
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addChangeListener
parameter_list|(
name|ChangeListener
name|listener
parameter_list|)
block|{
if|if
condition|(
name|listener
operator|!=
literal|null
condition|)
name|listeners
operator|.
name|add
argument_list|(
name|listener
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeChangeListener
parameter_list|(
name|ChangeListener
name|listener
parameter_list|)
block|{
if|if
condition|(
name|listeners
operator|!=
literal|null
condition|)
name|listeners
operator|.
name|remove
argument_list|(
name|listeners
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|changedUpdate
parameter_list|(
name|DocumentEvent
name|event
parameter_list|)
block|{
name|fireChanged
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|insertUpdate
parameter_list|(
name|DocumentEvent
name|event
parameter_list|)
block|{
name|fireChanged
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|removeUpdate
parameter_list|(
name|DocumentEvent
name|event
parameter_list|)
block|{
name|fireChanged
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

