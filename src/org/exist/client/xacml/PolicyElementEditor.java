begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|client
operator|.
name|xacml
package|;
end_package

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|UnknownIdentifierException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|combine
operator|.
name|CombiningAlgorithm
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|combine
operator|.
name|StandardCombiningAlgFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|BorderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ComboBoxModel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComboBox
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComponent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextArea
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextField
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|Spring
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|SpringLayout
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|DocumentEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|DocumentListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|client
operator|.
name|ClientFrame
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|PolicyElementEditor
extends|extends
name|AbstractNodeEditor
implements|implements
name|ActionListener
implements|,
name|DocumentListener
block|{
specifier|protected
name|Abbreviator
name|abbrev
decl_stmt|;
specifier|protected
name|PolicyElementNode
name|node
decl_stmt|;
specifier|private
name|JTextField
name|idText
decl_stmt|;
specifier|private
name|JLabel
name|invalidLabel
decl_stmt|;
specifier|private
name|JTextArea
name|descriptionArea
decl_stmt|;
specifier|private
name|JLabel
name|comboLabel
decl_stmt|;
specifier|private
name|JComboBox
name|comboBox
decl_stmt|;
specifier|private
name|JPanel
name|comp
decl_stmt|;
specifier|public
name|PolicyElementEditor
parameter_list|()
block|{
name|abbrev
operator|=
operator|new
name|Abbreviator
argument_list|()
expr_stmt|;
name|setup
argument_list|()
expr_stmt|;
block|}
specifier|public
name|JComponent
name|getComponent
parameter_list|()
block|{
return|return
name|comp
return|;
block|}
specifier|private
name|void
name|setup
parameter_list|()
block|{
name|SpringLayout
name|layout
init|=
operator|new
name|SpringLayout
argument_list|()
decl_stmt|;
name|comp
operator|=
operator|new
name|JPanel
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|comp
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|6
argument_list|,
literal|6
argument_list|,
literal|6
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|comp
operator|.
name|setOpaque
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Spring
name|constant6
init|=
name|Spring
operator|.
name|constant
argument_list|(
literal|6
argument_list|)
decl_stmt|;
name|Spring
name|constant0
init|=
name|Spring
operator|.
name|constant
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Spring
name|glue12
init|=
name|Spring
operator|.
name|constant
argument_list|(
literal|12
argument_list|,
literal|12
argument_list|,
name|Short
operator|.
name|MAX_VALUE
argument_list|)
decl_stmt|;
name|JLabel
name|label
init|=
operator|new
name|JLabel
argument_list|(
literal|"ID: "
argument_list|)
decl_stmt|;
name|invalidLabel
operator|=
operator|new
name|JLabel
argument_list|(
literal|"Invalid URI"
argument_list|)
expr_stmt|;
name|invalidLabel
operator|.
name|setForeground
argument_list|(
operator|new
name|Color
argument_list|(
literal|225
argument_list|,
literal|25
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|idText
operator|=
operator|new
name|JTextField
argument_list|(
literal|19
argument_list|)
expr_stmt|;
name|idText
operator|.
name|getDocument
argument_list|()
operator|.
name|addDocumentListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|idText
operator|.
name|setMaximumSize
argument_list|(
operator|new
name|Dimension
argument_list|(
name|Short
operator|.
name|MAX_VALUE
argument_list|,
name|idText
operator|.
name|getPreferredSize
argument_list|()
operator|.
name|height
argument_list|)
argument_list|)
expr_stmt|;
name|comp
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|comp
operator|.
name|add
argument_list|(
name|idText
argument_list|)
expr_stmt|;
name|comp
operator|.
name|add
argument_list|(
name|invalidLabel
argument_list|)
expr_stmt|;
name|layout
operator|.
name|putConstraint
argument_list|(
name|SpringLayout
operator|.
name|WEST
argument_list|,
name|idText
argument_list|,
name|constant6
argument_list|,
name|SpringLayout
operator|.
name|EAST
argument_list|,
name|label
argument_list|)
expr_stmt|;
name|layout
operator|.
name|putConstraint
argument_list|(
name|SpringLayout
operator|.
name|WEST
argument_list|,
name|invalidLabel
argument_list|,
name|constant6
argument_list|,
name|SpringLayout
operator|.
name|EAST
argument_list|,
name|idText
argument_list|)
expr_stmt|;
name|Spring
name|nextY
init|=
name|Spring
operator|.
name|max
argument_list|(
name|layout
operator|.
name|getConstraint
argument_list|(
name|SpringLayout
operator|.
name|SOUTH
argument_list|,
name|idText
argument_list|)
argument_list|,
name|layout
operator|.
name|getConstraint
argument_list|(
name|SpringLayout
operator|.
name|SOUTH
argument_list|,
name|label
argument_list|)
argument_list|)
decl_stmt|;
name|nextY
operator|=
name|Spring
operator|.
name|sum
argument_list|(
name|nextY
argument_list|,
name|constant6
argument_list|)
expr_stmt|;
name|comboLabel
operator|=
operator|new
name|JLabel
argument_list|()
expr_stmt|;
name|comboBox
operator|=
operator|new
name|JComboBox
argument_list|()
expr_stmt|;
name|comboBox
operator|.
name|addActionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|comboBox
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|comp
operator|.
name|add
argument_list|(
name|comboLabel
argument_list|)
expr_stmt|;
name|comp
operator|.
name|add
argument_list|(
name|comboBox
argument_list|)
expr_stmt|;
name|SpringLayout
operator|.
name|Constraints
name|constraints
init|=
name|layout
operator|.
name|getConstraints
argument_list|(
name|comboLabel
argument_list|)
decl_stmt|;
name|constraints
operator|.
name|setHeight
argument_list|(
name|Spring
operator|.
name|max
argument_list|(
name|constraints
operator|.
name|getHeight
argument_list|()
argument_list|,
name|layout
operator|.
name|getConstraints
argument_list|(
name|comboBox
argument_list|)
operator|.
name|getHeight
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|.
name|putConstraint
argument_list|(
name|SpringLayout
operator|.
name|NORTH
argument_list|,
name|comboBox
argument_list|,
name|constant0
argument_list|,
name|SpringLayout
operator|.
name|NORTH
argument_list|,
name|comboLabel
argument_list|)
expr_stmt|;
name|layout
operator|.
name|putConstraint
argument_list|(
name|SpringLayout
operator|.
name|NORTH
argument_list|,
name|comboLabel
argument_list|,
name|nextY
argument_list|,
name|SpringLayout
operator|.
name|NORTH
argument_list|,
name|comp
argument_list|)
expr_stmt|;
name|layout
operator|.
name|putConstraint
argument_list|(
name|SpringLayout
operator|.
name|WEST
argument_list|,
name|comboBox
argument_list|,
name|constant6
argument_list|,
name|SpringLayout
operator|.
name|EAST
argument_list|,
name|comboLabel
argument_list|)
expr_stmt|;
name|nextY
operator|=
name|layout
operator|.
name|getConstraint
argument_list|(
name|SpringLayout
operator|.
name|SOUTH
argument_list|,
name|comboBox
argument_list|)
expr_stmt|;
name|nextY
operator|=
name|Spring
operator|.
name|max
argument_list|(
name|nextY
argument_list|,
name|layout
operator|.
name|getConstraint
argument_list|(
name|SpringLayout
operator|.
name|SOUTH
argument_list|,
name|comboLabel
argument_list|)
argument_list|)
expr_stmt|;
name|nextY
operator|=
name|Spring
operator|.
name|sum
argument_list|(
name|nextY
argument_list|,
name|constant6
argument_list|)
expr_stmt|;
name|Spring
name|right
init|=
name|layout
operator|.
name|getConstraint
argument_list|(
name|SpringLayout
operator|.
name|EAST
argument_list|,
name|comboBox
argument_list|)
decl_stmt|;
name|JLabel
name|descriptionLabel
init|=
operator|new
name|JLabel
argument_list|(
literal|"Description"
argument_list|)
decl_stmt|;
name|descriptionArea
operator|=
operator|new
name|JTextArea
argument_list|(
literal|4
argument_list|,
literal|35
argument_list|)
expr_stmt|;
name|descriptionArea
operator|.
name|setWrapStyleWord
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|descriptionArea
operator|.
name|setLineWrap
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|descriptionArea
operator|.
name|getDocument
argument_list|()
operator|.
name|addDocumentListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|JScrollPane
name|scroll
init|=
operator|new
name|JScrollPane
argument_list|(
name|descriptionArea
argument_list|)
decl_stmt|;
name|comp
operator|.
name|add
argument_list|(
name|descriptionLabel
argument_list|)
expr_stmt|;
name|comp
operator|.
name|add
argument_list|(
name|scroll
argument_list|)
expr_stmt|;
name|layout
operator|.
name|putConstraint
argument_list|(
name|SpringLayout
operator|.
name|NORTH
argument_list|,
name|descriptionLabel
argument_list|,
name|nextY
argument_list|,
name|SpringLayout
operator|.
name|NORTH
argument_list|,
name|comp
argument_list|)
expr_stmt|;
name|layout
operator|.
name|putConstraint
argument_list|(
name|SpringLayout
operator|.
name|WEST
argument_list|,
name|scroll
argument_list|,
name|constant0
argument_list|,
name|SpringLayout
operator|.
name|WEST
argument_list|,
name|idText
argument_list|)
expr_stmt|;
name|Spring
name|idTextWidth
init|=
name|layout
operator|.
name|getConstraints
argument_list|(
name|idText
argument_list|)
operator|.
name|getWidth
argument_list|()
decl_stmt|;
name|layout
operator|.
name|getConstraints
argument_list|(
name|scroll
argument_list|)
operator|.
name|setWidth
argument_list|(
name|Spring
operator|.
name|sum
argument_list|(
name|idTextWidth
argument_list|,
name|idTextWidth
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|.
name|putConstraint
argument_list|(
name|SpringLayout
operator|.
name|NORTH
argument_list|,
name|scroll
argument_list|,
name|constant6
argument_list|,
name|SpringLayout
operator|.
name|SOUTH
argument_list|,
name|descriptionLabel
argument_list|)
expr_stmt|;
name|right
operator|=
name|Spring
operator|.
name|max
argument_list|(
name|right
argument_list|,
name|layout
operator|.
name|getConstraint
argument_list|(
name|SpringLayout
operator|.
name|EAST
argument_list|,
name|scroll
argument_list|)
argument_list|)
expr_stmt|;
name|nextY
operator|=
name|Spring
operator|.
name|sum
argument_list|(
name|layout
operator|.
name|getConstraint
argument_list|(
name|SpringLayout
operator|.
name|SOUTH
argument_list|,
name|scroll
argument_list|)
argument_list|,
name|glue12
argument_list|)
expr_stmt|;
name|right
operator|=
name|Spring
operator|.
name|sum
argument_list|(
name|constant6
argument_list|,
name|right
argument_list|)
expr_stmt|;
name|layout
operator|.
name|putConstraint
argument_list|(
name|SpringLayout
operator|.
name|SOUTH
argument_list|,
name|comp
argument_list|,
name|nextY
argument_list|,
name|SpringLayout
operator|.
name|NORTH
argument_list|,
name|comp
argument_list|)
expr_stmt|;
name|layout
operator|.
name|putConstraint
argument_list|(
name|SpringLayout
operator|.
name|EAST
argument_list|,
name|comp
argument_list|,
name|right
argument_list|,
name|SpringLayout
operator|.
name|WEST
argument_list|,
name|comp
argument_list|)
expr_stmt|;
block|}
specifier|protected
specifier|abstract
name|String
name|getComboLabel
parameter_list|()
function_decl|;
specifier|protected
specifier|abstract
name|ComboBoxModel
name|getComboModel
parameter_list|()
function_decl|;
specifier|protected
specifier|abstract
name|Object
name|getComboPrototype
parameter_list|()
function_decl|;
specifier|protected
name|void
name|setSelectedItem
parameter_list|(
name|Object
name|value
parameter_list|)
block|{
name|comboBox
operator|.
name|setSelectedItem
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|Object
name|getSelectedItem
parameter_list|()
block|{
return|return
name|comboBox
operator|.
name|getSelectedItem
argument_list|()
return|;
block|}
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
name|descriptionArea
operator|.
name|getText
argument_list|()
return|;
block|}
specifier|public
name|String
name|getIDString
parameter_list|()
block|{
return|return
name|idText
operator|.
name|getText
argument_list|()
return|;
block|}
specifier|public
name|URI
name|getID
parameter_list|()
block|{
name|String
name|IDStr
init|=
name|getIDString
argument_list|()
decl_stmt|;
if|if
condition|(
name|IDStr
operator|==
literal|null
condition|)
return|return
literal|null
return|;
try|try
block|{
return|return
operator|new
name|URI
argument_list|(
name|IDStr
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
name|ClientFrame
operator|.
name|showErrorMessage
argument_list|(
literal|"Invalid policy ID '"
operator|+
name|IDStr
operator|+
literal|"'"
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
specifier|public
name|CombiningAlgorithm
name|getAlgorithm
parameter_list|()
block|{
name|URI
name|algURI
init|=
name|abbrev
operator|.
name|getFullCombiningURI
argument_list|(
operator|(
name|String
operator|)
name|comboBox
operator|.
name|getSelectedItem
argument_list|()
argument_list|,
operator|(
name|node
operator|instanceof
name|PolicyNode
operator|)
argument_list|)
decl_stmt|;
try|try
block|{
return|return
name|StandardCombiningAlgFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|createAlgorithm
argument_list|(
name|algURI
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|UnknownIdentifierException
name|e
parameter_list|)
block|{
name|ClientFrame
operator|.
name|showErrorMessage
argument_list|(
literal|"Invalid rule combining algorithm '"
operator|+
name|algURI
operator|+
literal|"'"
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
specifier|public
name|void
name|setNode
parameter_list|(
name|XACMLTreeNode
name|treeNode
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|treeNode
operator|instanceof
name|PolicyElementNode
operator|)
condition|)
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"PolicyElementEditor can only edit PolicyElementNodes"
argument_list|)
throw|;
name|this
operator|.
name|node
operator|=
operator|(
name|PolicyElementNode
operator|)
name|treeNode
expr_stmt|;
if|if
condition|(
name|node
operator|==
literal|null
condition|)
name|setValues
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
else|else
name|setValues
argument_list|(
name|node
operator|.
name|getId
argument_list|()
argument_list|,
name|node
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
name|setupCombo
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|setupCombo
parameter_list|()
block|{
name|comboLabel
operator|.
name|setText
argument_list|(
name|getComboLabel
argument_list|()
argument_list|)
expr_stmt|;
name|comboBox
operator|.
name|setModel
argument_list|(
name|getComboModel
argument_list|()
argument_list|)
expr_stmt|;
name|comboBox
operator|.
name|setPrototypeDisplayValue
argument_list|(
name|getComboPrototype
argument_list|()
argument_list|)
expr_stmt|;
name|comboBox
operator|.
name|setMaximumSize
argument_list|(
name|comboBox
operator|.
name|getPreferredSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|setValues
parameter_list|(
name|URI
name|id
parameter_list|,
name|String
name|description
parameter_list|)
block|{
name|idText
operator|.
name|setText
argument_list|(
operator|(
name|id
operator|==
literal|null
operator|)
condition|?
literal|""
else|:
name|id
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|descriptionArea
operator|.
name|setText
argument_list|(
operator|(
name|description
operator|==
literal|null
operator|)
condition|?
literal|""
else|:
name|description
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|pushChanges
parameter_list|()
block|{
name|String
name|description
init|=
name|descriptionArea
operator|.
name|getText
argument_list|()
decl_stmt|;
name|node
operator|.
name|setDescription
argument_list|(
operator|(
name|description
operator|.
name|length
argument_list|()
operator|==
literal|0
operator|)
condition|?
literal|null
else|:
name|description
argument_list|)
expr_stmt|;
name|URI
name|id
init|=
name|getId
argument_list|()
decl_stmt|;
if|if
condition|(
name|id
operator|!=
literal|null
condition|)
name|node
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
specifier|public
name|URI
name|getId
parameter_list|()
block|{
try|try
block|{
return|return
operator|new
name|URI
argument_list|(
name|idText
operator|.
name|getText
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
specifier|public
name|void
name|changedUpdate
parameter_list|(
name|DocumentEvent
name|event
parameter_list|)
block|{
name|documentUpdated
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|insertUpdate
parameter_list|(
name|DocumentEvent
name|event
parameter_list|)
block|{
name|documentUpdated
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeUpdate
parameter_list|(
name|DocumentEvent
name|event
parameter_list|)
block|{
name|documentUpdated
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|documentUpdated
parameter_list|(
name|DocumentEvent
name|event
parameter_list|)
block|{
name|URI
name|id
init|=
name|getId
argument_list|()
decl_stmt|;
if|if
condition|(
name|id
operator|==
literal|null
condition|)
block|{
name|idText
operator|.
name|setForeground
argument_list|(
name|Color
operator|.
name|red
argument_list|)
expr_stmt|;
name|invalidLabel
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|idText
operator|.
name|setForeground
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|invalidLabel
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|node
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
name|fireChanged
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|event
parameter_list|)
block|{
name|fireChanged
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

