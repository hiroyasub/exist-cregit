begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|client
operator|.
name|xacml
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|BorderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|Icon
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ImageIcon
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTree
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|UIManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|border
operator|.
name|Border
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|tree
operator|.
name|DefaultTreeCellRenderer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|client
operator|.
name|ClientFrame
import|;
end_import

begin_class
specifier|public
class|class
name|CustomRenderer
extends|extends
name|DefaultTreeCellRenderer
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|1610799020547073755L
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Icon
name|targetIcon
init|=
name|getIcon
argument_list|(
literal|"icons/Target.png"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Icon
name|qmarkIcon
init|=
name|getIcon
argument_list|(
literal|"icons/Condition.png"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Icon
name|policyIcon
init|=
name|getIcon
argument_list|(
literal|"icons/Policy.png"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Icon
name|policySetIcon
init|=
name|getIcon
argument_list|(
literal|"icons/PolicySet.png"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Icon
name|ruleIcon
init|=
name|getIcon
argument_list|(
literal|"icons/Rule.png"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Color
name|BORDER_COLOR
init|=
name|UIManager
operator|.
name|getColor
argument_list|(
literal|"Tree.selectionBorderColor"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|Icon
name|getIcon
parameter_list|(
name|String
name|location
parameter_list|)
block|{
specifier|final
name|URL
name|url
init|=
name|ClientFrame
operator|.
name|class
operator|.
name|getResource
argument_list|(
name|location
argument_list|)
decl_stmt|;
return|return
operator|(
name|url
operator|==
literal|null
operator|)
condition|?
literal|null
else|:
operator|new
name|ImageIcon
argument_list|(
name|url
argument_list|)
return|;
block|}
specifier|private
name|boolean
name|currentModified
init|=
literal|false
decl_stmt|;
specifier|private
name|TreeMutator
name|mutator
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|private
name|CustomRenderer
parameter_list|()
block|{
block|}
specifier|public
name|CustomRenderer
parameter_list|(
name|TreeMutator
name|mutator
parameter_list|)
block|{
name|this
operator|.
name|mutator
operator|=
name|mutator
expr_stmt|;
block|}
specifier|public
name|Component
name|getTreeCellRendererComponent
parameter_list|(
name|JTree
name|tree
parameter_list|,
name|Object
name|value
parameter_list|,
name|boolean
name|selected
parameter_list|,
name|boolean
name|expanded
parameter_list|,
name|boolean
name|leaf
parameter_list|,
name|int
name|row
parameter_list|,
name|boolean
name|hasFocus
parameter_list|)
block|{
specifier|final
name|XACMLTreeNode
name|node
init|=
operator|(
name|XACMLTreeNode
operator|)
name|value
decl_stmt|;
name|currentModified
operator|=
name|node
operator|.
name|isModified
argument_list|(
literal|false
argument_list|)
expr_stmt|;
specifier|final
name|JLabel
name|comp
init|=
operator|(
name|JLabel
operator|)
name|super
operator|.
name|getTreeCellRendererComponent
argument_list|(
name|tree
argument_list|,
name|value
argument_list|,
name|selected
argument_list|,
name|expanded
argument_list|,
name|leaf
argument_list|,
name|row
argument_list|,
name|hasFocus
argument_list|)
decl_stmt|;
name|Border
name|border
init|=
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
specifier|final
name|int
name|bias
init|=
name|mutator
operator|.
name|getDestinationBias
argument_list|(
name|node
argument_list|)
decl_stmt|;
if|if
condition|(
name|selected
operator|||
name|bias
operator|==
name|TreeMutator
operator|.
name|BIAS_CURRENT
condition|)
block|{
name|border
operator|=
name|BorderFactory
operator|.
name|createCompoundBorder
argument_list|(
name|BorderFactory
operator|.
name|createLineBorder
argument_list|(
name|BORDER_COLOR
argument_list|)
argument_list|,
name|border
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|bias
operator|==
name|TreeMutator
operator|.
name|BIAS_AFTER
condition|)
block|{
name|border
operator|=
name|BorderFactory
operator|.
name|createCompoundBorder
argument_list|(
name|BorderFactory
operator|.
name|createMatteBorder
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
name|BORDER_COLOR
argument_list|)
argument_list|,
name|border
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|bias
operator|==
name|TreeMutator
operator|.
name|BIAS_BEFORE
condition|)
block|{
name|border
operator|=
name|BorderFactory
operator|.
name|createCompoundBorder
argument_list|(
name|BorderFactory
operator|.
name|createMatteBorder
argument_list|(
literal|1
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|BORDER_COLOR
argument_list|)
argument_list|,
name|border
argument_list|)
expr_stmt|;
block|}
name|comp
operator|.
name|setBorder
argument_list|(
name|border
argument_list|)
expr_stmt|;
if|if
condition|(
name|value
operator|instanceof
name|RuleNode
condition|)
block|{
name|comp
operator|.
name|setIcon
argument_list|(
name|ruleIcon
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|value
operator|instanceof
name|TargetNode
condition|)
block|{
name|comp
operator|.
name|setIcon
argument_list|(
name|targetIcon
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|value
operator|instanceof
name|ConditionNode
condition|)
block|{
name|comp
operator|.
name|setIcon
argument_list|(
name|qmarkIcon
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|value
operator|instanceof
name|PolicyNode
condition|)
block|{
name|comp
operator|.
name|setIcon
argument_list|(
name|policyIcon
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|value
operator|instanceof
name|PolicySetNode
condition|)
block|{
name|comp
operator|.
name|setIcon
argument_list|(
name|policySetIcon
argument_list|)
expr_stmt|;
block|}
return|return
name|comp
return|;
block|}
specifier|private
name|Color
name|getModifiedColor
parameter_list|(
name|Color
name|color
parameter_list|)
block|{
if|if
condition|(
operator|!
name|currentModified
condition|)
block|{
return|return
name|color
return|;
block|}
if|if
condition|(
name|color
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
specifier|final
name|float
index|[]
name|hsb
init|=
name|Color
operator|.
name|RGBtoHSB
argument_list|(
name|color
operator|.
name|getRed
argument_list|()
argument_list|,
name|color
operator|.
name|getGreen
argument_list|()
argument_list|,
name|color
operator|.
name|getBlue
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
return|return
operator|(
name|hsb
index|[
literal|2
index|]
operator|<
literal|0.5f
operator|)
condition|?
name|color
operator|.
name|brighter
argument_list|()
else|:
name|color
operator|.
name|darker
argument_list|()
return|;
block|}
specifier|public
name|Color
name|getBackgroundNonSelectionColor
parameter_list|()
block|{
return|return
name|getModifiedColor
argument_list|(
name|super
operator|.
name|getBackgroundNonSelectionColor
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|Color
name|getBackgroundSelectionColor
parameter_list|()
block|{
return|return
name|getModifiedColor
argument_list|(
name|super
operator|.
name|getBackgroundSelectionColor
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

