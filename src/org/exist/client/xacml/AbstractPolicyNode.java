begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|client
operator|.
name|xacml
package|;
end_package

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|AbstractPolicy
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|combine
operator|.
name|CombiningAlgorithm
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractPolicyNode
extends|extends
name|PolicyElementNode
implements|implements
name|PolicyElementContainer
block|{
specifier|private
name|String
name|documentName
decl_stmt|;
specifier|private
name|CombiningAlgorithm
name|originalAlgorithm
decl_stmt|;
specifier|private
name|CombiningAlgorithm
name|algorithm
decl_stmt|;
specifier|public
name|AbstractPolicyNode
parameter_list|(
name|NodeContainer
name|parent
parameter_list|,
name|AbstractPolicy
name|policy
parameter_list|)
block|{
name|this
argument_list|(
name|parent
argument_list|,
literal|null
argument_list|,
name|policy
argument_list|)
expr_stmt|;
block|}
specifier|public
name|AbstractPolicyNode
parameter_list|(
name|NodeContainer
name|parent
parameter_list|,
name|String
name|documentName
parameter_list|,
name|AbstractPolicy
name|policy
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|,
name|policy
argument_list|)
expr_stmt|;
name|this
operator|.
name|documentName
operator|=
name|documentName
expr_stmt|;
name|this
operator|.
name|algorithm
operator|=
name|policy
operator|.
name|getCombiningAlg
argument_list|()
expr_stmt|;
name|this
operator|.
name|originalAlgorithm
operator|=
name|this
operator|.
name|algorithm
expr_stmt|;
block|}
comment|/** 	 * Returns the name of the document represented by this 	 * element if it is the top-level policy element of the 	 * document. 	 *  	 * @return The document name, or null if this element 	 *  is not a top-level element 	 */
specifier|public
name|String
name|getDocumentName
parameter_list|()
block|{
return|return
name|documentName
return|;
block|}
specifier|public
name|CombiningAlgorithm
name|getCombiningAlgorithm
parameter_list|()
block|{
return|return
name|algorithm
return|;
block|}
specifier|public
name|void
name|setCombiningAlgorithm
parameter_list|(
name|CombiningAlgorithm
name|algorithm
parameter_list|)
block|{
if|if
condition|(
name|algorithm
operator|==
literal|null
condition|)
throw|throw
operator|new
name|NullPointerException
argument_list|(
literal|"Combining algorithm cannot be null"
argument_list|)
throw|;
name|this
operator|.
name|algorithm
operator|=
name|algorithm
expr_stmt|;
name|fireChanged
argument_list|()
expr_stmt|;
block|}
specifier|public
name|boolean
name|isModified
parameter_list|(
name|boolean
name|deep
parameter_list|)
block|{
return|return
name|super
operator|.
name|isModified
argument_list|(
name|deep
argument_list|)
operator|||
name|isAlgorithmModified
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isAlgorithmModified
parameter_list|()
block|{
return|return
operator|!
name|algorithm
operator|.
name|getIdentifier
argument_list|()
operator|.
name|equals
argument_list|(
name|originalAlgorithm
operator|.
name|getIdentifier
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|void
name|commit
parameter_list|(
name|boolean
name|deep
parameter_list|)
block|{
name|originalAlgorithm
operator|=
name|algorithm
expr_stmt|;
name|super
operator|.
name|commit
argument_list|(
name|deep
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|revert
parameter_list|(
name|boolean
name|deep
parameter_list|)
block|{
name|algorithm
operator|=
name|originalAlgorithm
expr_stmt|;
name|super
operator|.
name|revert
argument_list|(
name|deep
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setDocumentName
parameter_list|(
name|String
name|documentName
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|documentName
operator|==
literal|null
condition|)
name|this
operator|.
name|documentName
operator|=
name|documentName
expr_stmt|;
else|else
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Document name has already been set"
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

