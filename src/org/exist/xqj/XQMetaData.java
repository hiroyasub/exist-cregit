begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xqj
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xquery
operator|.
name|XQException
import|;
end_import

begin_comment
comment|/**  * @author Adam Retter<adam.retter@devon.gov.uk>  *  */
end_comment

begin_class
specifier|public
class|class
name|XQMetaData
implements|implements
name|javax
operator|.
name|xml
operator|.
name|xquery
operator|.
name|XQMetaData
block|{
specifier|private
specifier|final
specifier|static
name|boolean
name|EXIST_COLLECTION_NESTING_SUPPORTED
init|=
literal|true
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|boolean
name|EXIST_FULLAXIS_SUPPORTED
init|=
literal|true
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|boolean
name|EXIST_XQUERY_MODULE_SUPPORTED
init|=
literal|true
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|boolean
name|EXIST_SCHEMA_IMPORT_SUPPORTED
init|=
literal|true
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|boolean
name|EXIST_SCHEMA_VALIDATION_SUPPORTED
init|=
literal|true
decl_stmt|;
name|XQConnection
name|connection
decl_stmt|;
specifier|public
name|XQMetaData
parameter_list|()
block|{
name|connection
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|XQMetaData
parameter_list|(
name|XQConnection
name|connection
parameter_list|)
block|{
name|this
operator|.
name|connection
operator|=
name|connection
expr_stmt|;
block|}
specifier|public
name|int
name|getMaxExpressionLength
parameter_list|()
throws|throws
name|XQException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getMaxUserNameLength
parameter_list|()
throws|throws
name|XQException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getProductMajorVersion
parameter_list|()
throws|throws
name|XQException
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getProductMinorVersion
parameter_list|()
throws|throws
name|XQException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|0
return|;
block|}
specifier|public
name|String
name|getProductName
parameter_list|()
throws|throws
name|XQException
block|{
name|throwIfClosed
argument_list|()
expr_stmt|;
return|return
literal|"eXist"
return|;
block|}
specifier|public
name|String
name|getProductVersion
parameter_list|()
throws|throws
name|XQException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getUserName
parameter_list|()
throws|throws
name|XQException
block|{
name|throwIfClosed
argument_list|()
expr_stmt|;
return|return
name|connection
operator|.
name|getBroker
argument_list|()
operator|.
name|getUser
argument_list|()
operator|.
name|getName
argument_list|()
return|;
block|}
specifier|public
name|int
name|getXQJMajorVersion
parameter_list|()
throws|throws
name|XQException
block|{
name|throwIfClosed
argument_list|()
expr_stmt|;
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getXQJMinorVersion
parameter_list|()
throws|throws
name|XQException
block|{
name|throwIfClosed
argument_list|()
expr_stmt|;
return|return
literal|2
return|;
block|}
specifier|public
name|String
name|getXQJVersion
parameter_list|()
throws|throws
name|XQException
block|{
name|throwIfClosed
argument_list|()
expr_stmt|;
return|return
literal|"XQuery API for Java Version 0.5.0 (EDR)"
return|;
block|}
specifier|public
name|boolean
name|isCollectionNestingSupported
parameter_list|()
throws|throws
name|XQException
block|{
name|throwIfClosed
argument_list|()
expr_stmt|;
return|return
name|EXIST_COLLECTION_NESTING_SUPPORTED
return|;
block|}
specifier|public
name|boolean
name|isFullAxisFeatureSupported
parameter_list|()
throws|throws
name|XQException
block|{
name|throwIfClosed
argument_list|()
expr_stmt|;
return|return
name|EXIST_FULLAXIS_SUPPORTED
return|;
block|}
specifier|public
name|boolean
name|isModuleFeatureSupported
parameter_list|()
throws|throws
name|XQException
block|{
name|throwIfClosed
argument_list|()
expr_stmt|;
return|return
name|EXIST_XQUERY_MODULE_SUPPORTED
return|;
block|}
specifier|public
name|boolean
name|isReadOnly
parameter_list|()
throws|throws
name|XQException
block|{
name|throwIfClosed
argument_list|()
expr_stmt|;
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isSchemaImportFeatureSupported
parameter_list|()
throws|throws
name|XQException
block|{
name|throwIfClosed
argument_list|()
expr_stmt|;
return|return
name|EXIST_SCHEMA_IMPORT_SUPPORTED
return|;
block|}
specifier|public
name|boolean
name|isSchemaValidationFeatureSupported
parameter_list|()
throws|throws
name|XQException
block|{
name|throwIfClosed
argument_list|()
expr_stmt|;
return|return
name|EXIST_SCHEMA_VALIDATION_SUPPORTED
return|;
block|}
specifier|public
name|boolean
name|isSerializationFeatureSupported
parameter_list|()
throws|throws
name|XQException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isStaticTypingExtensionsSupported
parameter_list|()
throws|throws
name|XQException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isStaticTypingFeatureSupported
parameter_list|()
throws|throws
name|XQException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isTransactionSupported
parameter_list|()
throws|throws
name|XQException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isXQueryXSupported
parameter_list|()
throws|throws
name|XQException
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|wasCreatedFromJDBCConnection
parameter_list|()
throws|throws
name|XQException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|false
return|;
block|}
specifier|private
name|void
name|throwIfClosed
parameter_list|()
throws|throws
name|XQException
block|{
if|if
condition|(
name|connection
operator|.
name|isClosed
argument_list|()
condition|)
throw|throw
operator|new
name|XQException
argument_list|(
literal|"Connection is closed"
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

