begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* eXist xml document repository and xpath implementation  * Copyright (C) 2001,  Wolfgang Meier (meier@ifs.tu-darmstadt.de)  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *  * You should have received a copy of the GNU Library General Public License  * along with this program; if not, write to the Free Software  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xpath
package|;
end_package

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|ValueBoolean
extends|extends
name|Value
block|{
specifier|protected
name|boolean
name|booleanValue
init|=
literal|false
decl_stmt|;
specifier|public
name|ValueBoolean
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|super
argument_list|(
name|Value
operator|.
name|isBoolean
argument_list|)
expr_stmt|;
name|booleanValue
operator|=
name|value
expr_stmt|;
block|}
specifier|public
name|NodeList
name|getNodeList
parameter_list|()
block|{
return|return
operator|new
name|ArraySet
argument_list|(
literal|1
argument_list|)
return|;
block|}
specifier|public
name|String
name|getStringValue
parameter_list|()
block|{
return|return
operator|(
name|booleanValue
operator|)
condition|?
literal|"true"
else|:
literal|"false"
return|;
block|}
specifier|public
name|double
name|getNumericValue
parameter_list|()
block|{
return|return
operator|(
name|booleanValue
operator|)
condition|?
literal|1
else|:
literal|0
return|;
block|}
specifier|public
name|boolean
name|getBooleanValue
parameter_list|()
block|{
return|return
name|booleanValue
return|;
block|}
block|}
end_class

end_unit

