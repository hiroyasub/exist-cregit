begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-2014 The eXist Project  *  http://exist-db.org  *  http://exist.sourceforge.net  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *  *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|persistent
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|ManagedLocks
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|lock
operator|.
name|ManagedDocumentLock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|LockException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_interface
specifier|public
interface|interface
name|DocumentSet
block|{
name|DocumentSet
name|EMPTY_DOCUMENT_SET
init|=
operator|new
name|EmptyDocumentSet
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|DocumentImpl
argument_list|>
name|getDocumentIterator
parameter_list|()
function_decl|;
name|Iterator
argument_list|<
name|Collection
argument_list|>
name|getCollectionIterator
parameter_list|()
function_decl|;
name|int
name|getDocumentCount
parameter_list|()
function_decl|;
name|DocumentImpl
name|getDoc
parameter_list|(
name|int
name|docId
parameter_list|)
function_decl|;
name|XmldbURI
index|[]
name|getNames
parameter_list|()
function_decl|;
name|DocumentSet
name|intersection
parameter_list|(
name|DocumentSet
name|other
parameter_list|)
function_decl|;
name|boolean
name|contains
parameter_list|(
name|DocumentSet
name|other
parameter_list|)
function_decl|;
name|boolean
name|contains
parameter_list|(
name|int
name|id
parameter_list|)
function_decl|;
name|NodeSet
name|docsToNodeSet
parameter_list|()
function_decl|;
comment|/**      * Locks all of the documents currently in the document set.      *      * @param exclusive true if a WRITE_LOCK is required, false if a READ_LOCK is required      * @return The locks      * @throws LockException if locking any document fails, when thrown no locks will be held on any documents in the set      */
name|ManagedLocks
argument_list|<
name|ManagedDocumentLock
argument_list|>
name|lock
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|boolean
name|exclusive
parameter_list|)
throws|throws
name|LockException
function_decl|;
name|boolean
name|equalDocs
parameter_list|(
name|DocumentSet
name|other
parameter_list|)
function_decl|;
block|}
end_interface

end_unit

