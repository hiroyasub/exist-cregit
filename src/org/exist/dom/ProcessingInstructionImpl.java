begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|dom
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|Signatures
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|ByteConversion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|ProcessingInstruction
import|;
end_import

begin_comment
comment|/**  * Persistent implementation of a DOM processing-instruction node.  *   * @author wolf  */
end_comment

begin_class
specifier|public
class|class
name|ProcessingInstructionImpl
extends|extends
name|StoredNode
implements|implements
name|ProcessingInstruction
block|{
specifier|protected
name|String
name|target
init|=
literal|null
decl_stmt|;
specifier|protected
name|String
name|data
init|=
literal|null
decl_stmt|;
specifier|public
name|ProcessingInstructionImpl
parameter_list|()
block|{
name|super
argument_list|(
name|Node
operator|.
name|PROCESSING_INSTRUCTION_NODE
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ProcessingInstructionImpl
parameter_list|(
name|long
name|gid
parameter_list|)
block|{
name|super
argument_list|(
name|Node
operator|.
name|PROCESSING_INSTRUCTION_NODE
argument_list|,
name|gid
argument_list|)
expr_stmt|;
block|}
comment|/**      *  Constructor for the ProcessingInstructionImpl object      *      *@param  gid     Description of the Parameter      *@param  target  Description of the Parameter      *@param  data    Description of the Parameter      */
specifier|public
name|ProcessingInstructionImpl
parameter_list|(
name|long
name|gid
parameter_list|,
name|String
name|target
parameter_list|,
name|String
name|data
parameter_list|)
block|{
name|super
argument_list|(
name|Node
operator|.
name|PROCESSING_INSTRUCTION_NODE
argument_list|,
name|gid
argument_list|)
expr_stmt|;
name|this
operator|.
name|target
operator|=
name|target
expr_stmt|;
name|this
operator|.
name|data
operator|=
name|data
expr_stmt|;
block|}
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|target
operator|=
literal|null
expr_stmt|;
name|data
operator|=
literal|null
expr_stmt|;
block|}
comment|/**      *  Gets the target attribute of the ProcessingInstructionImpl object      *      *@return    The target value      */
specifier|public
name|String
name|getTarget
parameter_list|()
block|{
return|return
name|target
return|;
block|}
comment|/**      *  Sets the target attribute of the ProcessingInstructionImpl object      *      *@param  target  The new target value      */
specifier|public
name|void
name|setTarget
parameter_list|(
name|String
name|target
parameter_list|)
block|{
name|this
operator|.
name|target
operator|=
name|target
expr_stmt|;
block|}
comment|/* (non-Javadoc) 	 * @see org.w3c.dom.Node#getNodeName() 	 */
specifier|public
name|String
name|getNodeName
parameter_list|()
block|{
return|return
name|target
return|;
block|}
comment|/**      *  Gets the data attribute of the ProcessingInstructionImpl object      *      *@return    The data value      */
specifier|public
name|String
name|getData
parameter_list|()
block|{
return|return
name|data
return|;
block|}
comment|/**      *  Sets the data attribute of the ProcessingInstructionImpl object      *      *@param  data  The new data value      */
specifier|public
name|void
name|setData
parameter_list|(
name|String
name|data
parameter_list|)
block|{
name|this
operator|.
name|data
operator|=
name|data
expr_stmt|;
block|}
comment|/**      *  Description of the Method      *      *@return    Description of the Return Value      */
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuffer
name|buf
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|buf
operator|.
name|append
argument_list|(
literal|"<?"
argument_list|)
expr_stmt|;
name|buf
operator|.
name|append
argument_list|(
name|target
argument_list|)
expr_stmt|;
name|buf
operator|.
name|append
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
name|buf
operator|.
name|append
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|buf
operator|.
name|append
argument_list|(
literal|" ?>"
argument_list|)
expr_stmt|;
return|return
name|buf
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**      *  Description of the Method      *      *@return    Description of the Return Value      */
specifier|public
name|byte
index|[]
name|serialize
parameter_list|()
block|{
name|byte
index|[]
name|td
decl_stmt|;
name|byte
index|[]
name|dd
decl_stmt|;
try|try
block|{
name|td
operator|=
name|target
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
expr_stmt|;
name|dd
operator|=
name|data
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedEncodingException
name|uee
parameter_list|)
block|{
name|td
operator|=
name|target
operator|.
name|getBytes
argument_list|()
expr_stmt|;
name|dd
operator|=
name|data
operator|.
name|getBytes
argument_list|()
expr_stmt|;
block|}
name|byte
index|[]
name|d
init|=
operator|new
name|byte
index|[
name|td
operator|.
name|length
operator|+
name|dd
operator|.
name|length
operator|+
literal|5
index|]
decl_stmt|;
name|d
index|[
literal|0
index|]
operator|=
operator|(
name|byte
operator|)
operator|(
name|Signatures
operator|.
name|Proc
operator|<<
literal|0x5
operator|)
expr_stmt|;
name|ByteConversion
operator|.
name|intToByte
argument_list|(
name|td
operator|.
name|length
argument_list|,
name|d
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|td
argument_list|,
literal|0
argument_list|,
name|d
argument_list|,
literal|5
argument_list|,
name|td
operator|.
name|length
argument_list|)
expr_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|dd
argument_list|,
literal|0
argument_list|,
name|d
argument_list|,
literal|5
operator|+
name|td
operator|.
name|length
argument_list|,
name|dd
operator|.
name|length
argument_list|)
expr_stmt|;
return|return
name|d
return|;
block|}
specifier|public
specifier|static
name|StoredNode
name|deserialize
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|len
parameter_list|,
name|boolean
name|pooled
parameter_list|)
block|{
name|int
name|l
init|=
name|ByteConversion
operator|.
name|byteToInt
argument_list|(
name|data
argument_list|,
name|start
operator|+
literal|1
argument_list|)
decl_stmt|;
name|String
name|target
decl_stmt|;
name|String
name|cdata
decl_stmt|;
try|try
block|{
name|target
operator|=
operator|new
name|String
argument_list|(
name|data
argument_list|,
name|start
operator|+
literal|5
argument_list|,
name|l
argument_list|,
literal|"UTF-8"
argument_list|)
expr_stmt|;
name|cdata
operator|=
operator|new
name|String
argument_list|(
name|data
argument_list|,
name|start
operator|+
literal|5
operator|+
name|l
argument_list|,
name|len
operator|-
literal|5
operator|-
name|l
argument_list|,
literal|"UTF-8"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedEncodingException
name|uee
parameter_list|)
block|{
name|target
operator|=
operator|new
name|String
argument_list|(
name|data
argument_list|,
name|start
operator|+
literal|5
argument_list|,
name|l
argument_list|)
expr_stmt|;
name|cdata
operator|=
operator|new
name|String
argument_list|(
name|data
argument_list|,
name|start
operator|+
literal|5
operator|+
name|l
argument_list|,
name|len
operator|-
literal|5
operator|-
name|l
argument_list|)
expr_stmt|;
block|}
name|ProcessingInstructionImpl
name|pi
decl_stmt|;
if|if
condition|(
name|pooled
condition|)
name|pi
operator|=
operator|(
name|ProcessingInstructionImpl
operator|)
name|NodeObjectPool
operator|.
name|getInstance
argument_list|()
operator|.
name|borrowNode
argument_list|(
name|ProcessingInstructionImpl
operator|.
name|class
argument_list|)
expr_stmt|;
else|else
name|pi
operator|=
operator|new
name|ProcessingInstructionImpl
argument_list|()
expr_stmt|;
name|pi
operator|.
name|target
operator|=
name|target
expr_stmt|;
name|pi
operator|.
name|data
operator|=
name|cdata
expr_stmt|;
return|return
name|pi
return|;
block|}
specifier|public
name|boolean
name|hasChildNodes
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|Node
name|getFirstChild
parameter_list|()
block|{
comment|//bad implementations don't call hasChildNodes before
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

