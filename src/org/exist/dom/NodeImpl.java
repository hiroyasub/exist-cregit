begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|dom
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|Txn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|DOMException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NamedNodeMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|UserDataHandler
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|NodeImpl
implements|implements
name|Node
implements|,
name|QNameable
block|{
specifier|public
specifier|final
specifier|static
name|int
name|UNKNOWN_NODE_IMPL_GID
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|UNKNOWN_NODE_IMPL_ADDRESS
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|short
name|UNKNOWN_NODE_IMPL_NODE_TYPE
init|=
operator|-
literal|1
decl_stmt|;
specifier|protected
specifier|final
specifier|static
name|Logger
name|LOG
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|NodeImpl
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/** 	 * @see org.w3c.dom.Node#appendChild(org.w3c.dom.Node) 	 */
specifier|public
name|Node
name|appendChild
parameter_list|(
name|Node
name|child
parameter_list|)
throws|throws
name|DOMException
block|{
throw|throw
operator|new
name|DOMException
argument_list|(
name|DOMException
operator|.
name|NOT_SUPPORTED_ERR
argument_list|,
literal|"not implemented on class "
operator|+
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
throw|;
block|}
specifier|public
name|void
name|appendChildren
parameter_list|(
name|Txn
name|transaction
parameter_list|,
name|NodeList
name|nodes
parameter_list|,
name|int
name|child
parameter_list|)
throws|throws
name|DOMException
block|{
throw|throw
operator|new
name|DOMException
argument_list|(
name|DOMException
operator|.
name|NOT_SUPPORTED_ERR
argument_list|,
literal|"Cannot append children to a node of type "
operator|+
name|getNodeType
argument_list|()
argument_list|)
throw|;
block|}
comment|/** 	 * @see org.w3c.dom.Node#cloneNode(boolean) 	 */
specifier|public
name|Node
name|cloneNode
parameter_list|(
name|boolean
name|deep
parameter_list|)
block|{
return|return
name|this
return|;
block|}
specifier|public
name|long
name|firstChildID
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
comment|/** 	 * @see org.w3c.dom.Node#getAttributes() 	 */
specifier|public
name|NamedNodeMap
name|getAttributes
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|short
name|getAttributesCount
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|int
name|getChildCount
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|NodeList
name|getChildNodes
parameter_list|()
block|{
return|return
operator|(
name|NodeList
operator|)
operator|new
name|NodeListImpl
argument_list|()
return|;
block|}
comment|/** 	 * @see org.w3c.dom.Node#getFirstChild() 	 */
specifier|public
name|Node
name|getFirstChild
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
comment|/** 	 * @see org.w3c.dom.Node#getLastChild() 	 */
specifier|public
name|Node
name|getLastChild
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
comment|/** 	 * Return the broker instance used to create this node. 	 *  	 * @return 	 */
specifier|public
specifier|abstract
name|DBBroker
name|getBroker
parameter_list|()
function_decl|;
comment|/** 	 *  Get the unique identifier assigned to this node. 	 * 	 *@return 	 */
specifier|public
specifier|abstract
name|long
name|getGID
parameter_list|()
function_decl|;
comment|/** 	 *  Set the unique node identifier of this node. 	 * 	 *@param  gid  The new gID value 	 */
specifier|public
specifier|abstract
name|void
name|setGID
parameter_list|(
name|long
name|gid
parameter_list|)
function_decl|;
comment|/** 	 *  Set the internal storage address of this node. 	 * 	 *@param  address  The new internalAddress value 	 */
specifier|public
specifier|abstract
name|void
name|setInternalAddress
parameter_list|(
name|long
name|address
parameter_list|)
function_decl|;
comment|/** 	 *  Get the internal storage address of this node 	 * 	 *@return    The internalAddress value 	 */
specifier|public
specifier|abstract
name|long
name|getInternalAddress
parameter_list|()
function_decl|;
comment|/** 	 *  Get the unique node identifier of this node's parent node. 	 * 	 *@return    The parentGID value 	 */
specifier|public
specifier|abstract
name|long
name|getParentGID
parameter_list|()
function_decl|;
comment|/** 	 *  Set the owner document. 	 * 	 *@param  doc  The new ownerDocument value 	 */
specifier|public
specifier|abstract
name|void
name|setOwnerDocument
parameter_list|(
name|Document
name|doc
parameter_list|)
function_decl|;
specifier|public
specifier|abstract
name|QName
name|getQName
parameter_list|()
function_decl|;
comment|/** 	 * Release all memory resources hold by this node.  	 */
specifier|public
specifier|abstract
name|void
name|release
parameter_list|()
function_decl|;
comment|/** 	 * @see org.w3c.dom.Node#getLocalName() 	 */
specifier|public
name|String
name|getLocalName
parameter_list|()
block|{
name|QName
name|nodeName
init|=
name|getQName
argument_list|()
decl_stmt|;
if|if
condition|(
name|nodeName
operator|!=
literal|null
condition|)
return|return
name|nodeName
operator|.
name|getLocalName
argument_list|()
return|;
return|return
literal|""
return|;
block|}
comment|/** 	 * @see org.w3c.dom.Node#getNamespaceURI() 	 */
specifier|public
name|String
name|getNamespaceURI
parameter_list|()
block|{
name|QName
name|nodeName
init|=
name|getQName
argument_list|()
decl_stmt|;
if|if
condition|(
name|nodeName
operator|!=
literal|null
condition|)
return|return
name|nodeName
operator|.
name|getNamespaceURI
argument_list|()
return|;
return|return
literal|""
return|;
block|}
comment|/** 	 * @see org.w3c.dom.Node#getNodeName() 	 */
specifier|public
name|String
name|getNodeName
parameter_list|()
block|{
name|QName
name|nodeName
init|=
name|getQName
argument_list|()
decl_stmt|;
if|if
condition|(
name|nodeName
operator|!=
literal|null
condition|)
return|return
name|nodeName
operator|.
name|toString
argument_list|()
return|;
return|return
literal|""
return|;
block|}
comment|/** 	 * @see org.w3c.dom.Node#getNodeValue() 	 */
specifier|public
name|String
name|getNodeValue
parameter_list|()
throws|throws
name|DOMException
block|{
return|return
literal|""
return|;
block|}
comment|/** 	 * @see org.w3c.dom.Node#getPrefix() 	 */
specifier|public
name|String
name|getPrefix
parameter_list|()
block|{
name|QName
name|nodeName
init|=
name|getQName
argument_list|()
decl_stmt|;
if|if
condition|(
name|nodeName
operator|!=
literal|null
condition|)
block|{
specifier|final
name|String
name|prefix
init|=
name|nodeName
operator|.
name|getPrefix
argument_list|()
decl_stmt|;
return|return
name|prefix
operator|==
literal|null
condition|?
literal|""
else|:
name|prefix
return|;
block|}
return|return
literal|""
return|;
block|}
comment|/** 	 * @see org.w3c.dom.Node#hasAttributes() 	 */
specifier|public
name|boolean
name|hasAttributes
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
comment|/** 	 * @see org.w3c.dom.Node#hasChildNodes() 	 */
specifier|public
name|boolean
name|hasChildNodes
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
comment|/** 	 * @see org.w3c.dom.Node#insertBefore(org.w3c.dom.Node, org.w3c.dom.Node) 	 */
specifier|public
name|Node
name|insertBefore
parameter_list|(
name|Node
name|newChild
parameter_list|,
name|Node
name|refChild
parameter_list|)
throws|throws
name|DOMException
block|{
throw|throw
operator|new
name|DOMException
argument_list|(
name|DOMException
operator|.
name|NOT_SUPPORTED_ERR
argument_list|,
literal|"not implemented"
argument_list|)
throw|;
block|}
specifier|public
name|Node
name|insertAfter
parameter_list|(
name|Node
name|newChild
parameter_list|,
name|Node
name|refChild
parameter_list|)
throws|throws
name|DOMException
block|{
throw|throw
operator|new
name|DOMException
argument_list|(
name|DOMException
operator|.
name|NOT_SUPPORTED_ERR
argument_list|,
literal|"not implemented"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|insertAfter
parameter_list|(
name|Txn
name|transaction
parameter_list|,
name|NodeList
name|nodes
parameter_list|,
name|Node
name|refChild
parameter_list|)
throws|throws
name|DOMException
block|{
throw|throw
operator|new
name|DOMException
argument_list|(
name|DOMException
operator|.
name|NOT_SUPPORTED_ERR
argument_list|,
literal|"not implemented"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|insertBefore
parameter_list|(
name|Txn
name|transaction
parameter_list|,
name|NodeList
name|nodes
parameter_list|,
name|Node
name|refChild
parameter_list|)
throws|throws
name|DOMException
block|{
throw|throw
operator|new
name|DOMException
argument_list|(
name|DOMException
operator|.
name|NOT_SUPPORTED_ERR
argument_list|,
literal|"not implemented"
argument_list|)
throw|;
block|}
comment|/** 	 * @see org.w3c.dom.Node#isSupported(java.lang.String, java.lang.String) 	 */
specifier|public
name|boolean
name|isSupported
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
comment|/** 	 *  Get the unique node identifier of the last child of this node. 	 * 	 *@return    Description of the Return Value 	 */
specifier|public
name|long
name|lastChildID
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
comment|/** 	 * @see org.w3c.dom.Node#normalize() 	 */
specifier|public
name|void
name|normalize
parameter_list|()
block|{
return|return;
block|}
specifier|protected
name|StoredNode
name|getLastNode
parameter_list|(
name|StoredNode
name|node
parameter_list|)
block|{
specifier|final
name|DocumentImpl
name|owner
init|=
operator|(
name|DocumentImpl
operator|)
name|getOwnerDocument
argument_list|()
decl_stmt|;
specifier|final
name|NodeProxy
name|p
init|=
operator|new
name|NodeProxy
argument_list|(
name|owner
argument_list|,
name|node
operator|.
name|gid
argument_list|,
name|node
operator|.
name|internalAddress
argument_list|)
decl_stmt|;
name|Iterator
name|iterator
init|=
name|owner
operator|.
name|getBroker
argument_list|()
operator|.
name|getNodeIterator
argument_list|(
name|p
argument_list|)
decl_stmt|;
name|iterator
operator|.
name|next
argument_list|()
expr_stmt|;
return|return
name|getLastNode
argument_list|(
name|iterator
argument_list|,
name|node
argument_list|)
return|;
block|}
specifier|protected
name|StoredNode
name|getLastNode
parameter_list|(
name|Iterator
name|iterator
parameter_list|,
name|StoredNode
name|node
parameter_list|)
block|{
if|if
condition|(
name|node
operator|.
name|hasChildNodes
argument_list|()
condition|)
block|{
specifier|final
name|long
name|firstChild
init|=
name|node
operator|.
name|firstChildID
argument_list|()
decl_stmt|;
specifier|final
name|long
name|lastChild
init|=
name|firstChild
operator|+
name|node
operator|.
name|getChildCount
argument_list|()
decl_stmt|;
name|StoredNode
name|next
init|=
literal|null
decl_stmt|;
for|for
control|(
name|long
name|gid
init|=
name|firstChild
init|;
name|gid
operator|<
name|lastChild
condition|;
name|gid
operator|++
control|)
block|{
name|next
operator|=
operator|(
name|StoredNode
operator|)
name|iterator
operator|.
name|next
argument_list|()
expr_stmt|;
name|next
operator|.
name|setGID
argument_list|(
name|gid
argument_list|)
expr_stmt|;
name|next
operator|=
name|getLastNode
argument_list|(
name|iterator
argument_list|,
name|next
argument_list|)
expr_stmt|;
block|}
return|return
name|next
return|;
block|}
else|else
return|return
name|node
return|;
block|}
specifier|public
name|Node
name|removeChild
parameter_list|(
name|Node
name|oldChild
parameter_list|)
throws|throws
name|DOMException
block|{
throw|throw
operator|new
name|DOMException
argument_list|(
name|DOMException
operator|.
name|NOT_SUPPORTED_ERR
argument_list|,
literal|"remove child is not supported. Use XUpdate instead."
argument_list|)
throw|;
block|}
specifier|public
name|Node
name|removeChild
parameter_list|(
name|Txn
name|transaction
parameter_list|,
name|Node
name|oldChild
parameter_list|)
throws|throws
name|DOMException
block|{
return|return
literal|null
return|;
block|}
comment|/** 	 * @see org.w3c.dom.Node#replaceChild(org.w3c.dom.Node, org.w3c.dom.Node) 	 */
specifier|public
name|Node
name|replaceChild
parameter_list|(
name|Node
name|newChild
parameter_list|,
name|Node
name|oldChild
parameter_list|)
throws|throws
name|DOMException
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Node
name|replaceChild
parameter_list|(
name|Txn
name|transaction
parameter_list|,
name|Node
name|newChild
parameter_list|,
name|Node
name|oldChild
parameter_list|)
throws|throws
name|DOMException
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|byte
index|[]
name|serialize
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
comment|/** 	 *  Set the attributes that belong to this node. 	 * 	 *@param  attribNum  The new attributes value 	 */
specifier|public
name|void
name|setAttributes
parameter_list|(
name|short
name|attribNum
parameter_list|)
block|{
block|}
comment|/** 	 *  Set the number of children. 	 * 	 *@param  count  The new childCount value 	 */
specifier|protected
name|void
name|setChildCount
parameter_list|(
name|int
name|count
parameter_list|)
block|{
block|}
comment|/** 	 *  Set the node name. 	 * 	 *@param  name  The new nodeName value 	 */
specifier|public
name|void
name|setNodeName
parameter_list|(
name|QName
name|name
parameter_list|)
block|{
block|}
comment|/** 	 *  Set the node value. 	 * 	 *@param  value             The new nodeValue value 	 *@exception  DOMException  Description of the Exception 	 */
specifier|public
name|void
name|setNodeValue
parameter_list|(
name|String
name|value
parameter_list|)
throws|throws
name|DOMException
block|{
block|}
comment|/** 	 *  Sets the prefix attribute of the NodeImpl object 	 * 	 *@param  prefix            The new prefix value 	 *@exception  DOMException  Description of the Exception 	 */
specifier|public
name|void
name|setPrefix
parameter_list|(
name|String
name|prefix
parameter_list|)
throws|throws
name|DOMException
block|{
name|QName
name|nodeName
init|=
name|getQName
argument_list|()
decl_stmt|;
if|if
condition|(
name|nodeName
operator|!=
literal|null
condition|)
name|nodeName
operator|.
name|setPrefix
argument_list|(
name|prefix
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Method supports. 	 * @param feature 	 * @param version 	 * @return boolean 	 */
specifier|public
name|boolean
name|supports
parameter_list|(
name|String
name|feature
parameter_list|,
name|String
name|version
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
comment|/** 	 * Update a child node. This method will only update the child node 	 * but not its potential descendant nodes. 	 *  	 * @param oldChild 	 * @param newChild 	 * @throws DOMException 	 */
specifier|public
name|void
name|updateChild
parameter_list|(
name|Txn
name|transaction
parameter_list|,
name|Node
name|oldChild
parameter_list|,
name|Node
name|newChild
parameter_list|)
throws|throws
name|DOMException
block|{
throw|throw
operator|new
name|DOMException
argument_list|(
name|DOMException
operator|.
name|NO_MODIFICATION_ALLOWED_ERR
argument_list|,
literal|"method not allowed on this node type"
argument_list|)
throw|;
block|}
comment|/** ? @see org.w3c.dom.Node#getBaseURI() 	 */
specifier|public
name|String
name|getBaseURI
parameter_list|()
block|{
comment|// maybe TODO - new DOM interfaces - Java 5.0
return|return
literal|null
return|;
block|}
comment|/** ? @see org.w3c.dom.Node#compareDocumentPosition(org.w3c.dom.Node) 	 */
specifier|public
name|short
name|compareDocumentPosition
parameter_list|(
name|Node
name|other
parameter_list|)
throws|throws
name|DOMException
block|{
comment|// maybe TODO - new DOM interfaces - Java 5.0
return|return
literal|0
return|;
block|}
comment|/** ? @see org.w3c.dom.Node#getTextContent() 	 */
specifier|public
name|String
name|getTextContent
parameter_list|()
throws|throws
name|DOMException
block|{
comment|// maybe TODO - new DOM interfaces - Java 5.0
return|return
literal|null
return|;
block|}
comment|/** ? @see org.w3c.dom.Node#setTextContent(java.lang.String) 	 */
specifier|public
name|void
name|setTextContent
parameter_list|(
name|String
name|textContent
parameter_list|)
throws|throws
name|DOMException
block|{
comment|// maybe TODO - new DOM interfaces - Java 5.0
block|}
comment|/** ? @see org.w3c.dom.Node#isSameNode(org.w3c.dom.Node) 	 */
specifier|public
name|boolean
name|isSameNode
parameter_list|(
name|Node
name|other
parameter_list|)
block|{
comment|// maybe TODO - new DOM interfaces - Java 5.0
return|return
literal|false
return|;
block|}
comment|/** ? @see org.w3c.dom.Node#lookupPrefix(java.lang.String) 	 */
specifier|public
name|String
name|lookupPrefix
parameter_list|(
name|String
name|namespaceURI
parameter_list|)
block|{
comment|// maybe TODO - new DOM interfaces - Java 5.0
return|return
literal|null
return|;
block|}
comment|/** ? @see org.w3c.dom.Node#isDefaultNamespace(java.lang.String) 	 */
specifier|public
name|boolean
name|isDefaultNamespace
parameter_list|(
name|String
name|namespaceURI
parameter_list|)
block|{
comment|// maybe TODO - new DOM interfaces - Java 5.0
return|return
literal|false
return|;
block|}
comment|/** ? @see org.w3c.dom.Node#lookupNamespaceURI(java.lang.String) 	 */
specifier|public
name|String
name|lookupNamespaceURI
parameter_list|(
name|String
name|prefix
parameter_list|)
block|{
comment|// maybe TODO - new DOM interfaces - Java 5.0
return|return
literal|null
return|;
block|}
comment|/** ? @see org.w3c.dom.Node#isEqualNode(org.w3c.dom.Node) 	 */
specifier|public
name|boolean
name|isEqualNode
parameter_list|(
name|Node
name|arg
parameter_list|)
block|{
comment|// maybe TODO - new DOM interfaces - Java 5.0
return|return
literal|false
return|;
block|}
comment|/** ? @see org.w3c.dom.Node#getFeature(java.lang.String, java.lang.String) 	 */
specifier|public
name|Object
name|getFeature
parameter_list|(
name|String
name|feature
parameter_list|,
name|String
name|version
parameter_list|)
block|{
comment|// maybe TODO - new DOM interfaces - Java 5.0
return|return
literal|null
return|;
block|}
comment|/** ? @see org.w3c.dom.Node#setUserData(java.lang.String, java.lang.Object, org.w3c.dom.UserDataHandler) 	 */
specifier|public
name|Object
name|setUserData
parameter_list|(
name|String
name|key
parameter_list|,
name|Object
name|data
parameter_list|,
name|UserDataHandler
name|handler
parameter_list|)
block|{
comment|// maybe TODO - new DOM interfaces - Java 5.0
return|return
literal|null
return|;
block|}
comment|/** ? @see org.w3c.dom.Node#getUserData(java.lang.String) 	 */
specifier|public
name|Object
name|getUserData
parameter_list|(
name|String
name|key
parameter_list|)
block|{
comment|// maybe TODO - new DOM interfaces - Java 5.0
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

