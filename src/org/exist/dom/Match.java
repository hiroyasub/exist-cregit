begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Match.java - Mar 20, 2003  *   * @author wolf  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|dom
package|;
end_package

begin_class
specifier|public
class|class
name|Match
implements|implements
name|Comparable
block|{
specifier|private
name|String
name|matchTerm
decl_stmt|;
specifier|private
name|long
name|nodeId
decl_stmt|;
specifier|public
name|Match
parameter_list|(
name|String
name|matchTerm
parameter_list|,
name|long
name|nodeId
parameter_list|)
block|{
name|this
operator|.
name|matchTerm
operator|=
name|matchTerm
expr_stmt|;
name|this
operator|.
name|nodeId
operator|=
name|nodeId
expr_stmt|;
block|}
specifier|public
name|String
name|getMatchingTerm
parameter_list|()
block|{
return|return
name|matchTerm
return|;
block|}
specifier|public
name|long
name|getNodeId
parameter_list|()
block|{
return|return
name|nodeId
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|other
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|other
operator|instanceof
name|Match
operator|)
condition|)
return|return
literal|false
return|;
return|return
operator|(
operator|(
name|Match
operator|)
name|other
operator|)
operator|.
name|matchTerm
operator|.
name|equals
argument_list|(
name|matchTerm
argument_list|)
operator|&&
operator|(
operator|(
name|Match
operator|)
name|other
operator|)
operator|.
name|nodeId
operator|==
name|nodeId
return|;
block|}
comment|/** 	 * Used to sort matches. Terms are compared by their string  	 * length to have the longest string first. 	 *  	 * @see java.lang.Comparable#compareTo(java.lang.Object) 	 */
specifier|public
name|int
name|compareTo
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
name|Match
name|other
init|=
operator|(
name|Match
operator|)
name|o
decl_stmt|;
specifier|final
name|int
name|l
init|=
name|matchTerm
operator|.
name|length
argument_list|()
decl_stmt|;
specifier|final
name|int
name|ol
init|=
name|other
operator|.
name|matchTerm
operator|.
name|length
argument_list|()
decl_stmt|;
if|if
condition|(
name|l
operator|>
name|ol
condition|)
return|return
operator|-
literal|1
return|;
if|else if
condition|(
name|l
operator|<
name|ol
condition|)
return|return
literal|1
return|;
else|else
return|return
literal|0
return|;
block|}
block|}
end_class

end_unit

