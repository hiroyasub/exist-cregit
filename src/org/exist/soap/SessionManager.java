begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|soap
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Subject
import|;
end_import

begin_class
specifier|public
class|class
name|SessionManager
block|{
specifier|private
specifier|static
name|long
name|TIMEOUT
init|=
literal|3600000
decl_stmt|;
specifier|private
specifier|static
specifier|volatile
name|SessionManager
name|instance
init|=
literal|null
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|SessionManager
name|getInstance
parameter_list|()
block|{
if|if
condition|(
name|instance
operator|==
literal|null
condition|)
block|{
name|instance
operator|=
operator|new
name|SessionManager
argument_list|()
expr_stmt|;
block|}
return|return
name|instance
return|;
block|}
specifier|public
specifier|static
name|long
name|getTimeout
parameter_list|()
block|{
return|return
name|TIMEOUT
return|;
block|}
specifier|public
specifier|static
name|void
name|setTimeout
parameter_list|(
name|long
name|timeout
parameter_list|)
block|{
name|TIMEOUT
operator|=
name|timeout
expr_stmt|;
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|Session
argument_list|>
name|sessions
init|=
operator|new
name|TreeMap
argument_list|<
name|String
argument_list|,
name|Session
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
specifier|synchronized
name|String
name|createSession
parameter_list|(
name|Subject
name|user
parameter_list|)
block|{
specifier|final
name|Session
name|session
init|=
operator|new
name|Session
argument_list|(
name|user
argument_list|)
decl_stmt|;
specifier|final
name|String
name|id
init|=
name|String
operator|.
name|valueOf
argument_list|(
name|session
operator|.
name|hashCode
argument_list|()
argument_list|)
decl_stmt|;
name|sessions
operator|.
name|put
argument_list|(
name|id
argument_list|,
name|session
argument_list|)
expr_stmt|;
return|return
name|id
return|;
block|}
specifier|public
specifier|synchronized
name|Session
name|getSession
parameter_list|(
name|String
name|id
parameter_list|)
block|{
if|if
condition|(
name|id
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
specifier|final
name|Session
name|session
init|=
operator|(
name|Session
operator|)
name|sessions
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|session
operator|!=
literal|null
condition|)
block|{
name|session
operator|.
name|updateLastAccessTime
argument_list|()
expr_stmt|;
block|}
return|return
name|session
return|;
block|}
specifier|public
specifier|synchronized
name|void
name|disconnect
parameter_list|(
name|String
name|id
parameter_list|)
block|{
specifier|final
name|Session
name|session
init|=
name|sessions
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|session
operator|.
name|cleanupContexts
argument_list|()
expr_stmt|;
name|sessions
operator|.
name|remove
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|private
name|void
name|checkResultSets
parameter_list|()
block|{
for|for
control|(
specifier|final
name|Iterator
name|i
init|=
name|sessions
operator|.
name|values
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
specifier|final
name|Session
name|session
init|=
operator|(
name|Session
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|session
operator|.
name|getLastAccessTime
argument_list|()
operator|>
name|TIMEOUT
condition|)
block|{
name|i
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

