begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xmldb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlrpc
operator|.
name|XmlRpcException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Group
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Permission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Account
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|internal
operator|.
name|aider
operator|.
name|GroupAider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|internal
operator|.
name|aider
operator|.
name|UserAider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|ErrorCodes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|ACLPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|AXSchemaType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|EXistSchemaType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|PermissionDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|SchemaType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|internal
operator|.
name|aider
operator|.
name|ACEAider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|internal
operator|.
name|aider
operator|.
name|PermissionAiderFactory
import|;
end_import

begin_comment
comment|/*************************************************  * Modified by {Marco.Tampucci, Massimo.Martinelli} @isti.cnr.it **************************************/
end_comment

begin_class
specifier|public
class|class
name|RemoteUserManagementService
implements|implements
name|UserManagementService
block|{
specifier|private
name|RemoteCollection
name|parent
decl_stmt|;
specifier|public
name|RemoteUserManagementService
parameter_list|(
name|RemoteCollection
name|collection
parameter_list|)
block|{
name|parent
operator|=
name|collection
expr_stmt|;
block|}
comment|/** 	 *  Add a new user account 	 * 	 *@param  user                The user to be added 	 *@exception  XMLDBException  Description of the Exception 	 */
annotation|@
name|Override
specifier|public
name|void
name|addAccount
parameter_list|(
specifier|final
name|Account
name|user
parameter_list|)
throws|throws
name|XMLDBException
block|{
try|try
block|{
specifier|final
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|12
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|user
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|user
operator|.
name|getPassword
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|user
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|user
operator|.
name|getDigestPassword
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|user
operator|.
name|getDigestPassword
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|String
index|[]
name|gl
init|=
name|user
operator|.
name|getGroups
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|gl
argument_list|)
expr_stmt|;
if|if
condition|(
name|user
operator|.
name|getHome
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|add
argument_list|(
name|user
operator|.
name|getHome
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|params
operator|.
name|add
argument_list|(
name|user
operator|.
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|metadata
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
specifier|final
name|SchemaType
name|key
range|:
name|user
operator|.
name|getMetadataKeys
argument_list|()
control|)
block|{
name|metadata
operator|.
name|put
argument_list|(
name|key
operator|.
name|getNamespace
argument_list|()
argument_list|,
name|user
operator|.
name|getMetadataValue
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|params
operator|.
name|add
argument_list|(
name|metadata
argument_list|)
expr_stmt|;
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"addAccount"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|addGroup
parameter_list|(
specifier|final
name|Group
name|role
parameter_list|)
throws|throws
name|XMLDBException
block|{
try|try
block|{
specifier|final
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|12
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|role
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|//TODO what about group managers?
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|metadata
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
specifier|final
name|SchemaType
name|key
range|:
name|role
operator|.
name|getMetadataKeys
argument_list|()
control|)
block|{
name|metadata
operator|.
name|put
argument_list|(
name|key
operator|.
name|getNamespace
argument_list|()
argument_list|,
name|role
operator|.
name|getMetadataValue
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|params
operator|.
name|add
argument_list|(
name|metadata
argument_list|)
expr_stmt|;
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"addGroup"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
name|List
argument_list|<
name|ACEAider
argument_list|>
name|getACEs
parameter_list|(
name|Permission
name|perm
parameter_list|)
block|{
specifier|final
name|List
argument_list|<
name|ACEAider
argument_list|>
name|aces
init|=
operator|new
name|ArrayList
argument_list|<
name|ACEAider
argument_list|>
argument_list|()
decl_stmt|;
specifier|final
name|ACLPermission
name|aclPermission
init|=
operator|(
name|ACLPermission
operator|)
name|perm
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|aclPermission
operator|.
name|getACECount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|aces
operator|.
name|add
argument_list|(
operator|new
name|ACEAider
argument_list|(
name|aclPermission
operator|.
name|getACEAccessType
argument_list|(
name|i
argument_list|)
argument_list|,
name|aclPermission
operator|.
name|getACETarget
argument_list|(
name|i
argument_list|)
argument_list|,
name|aclPermission
operator|.
name|getACEWho
argument_list|(
name|i
argument_list|)
argument_list|,
name|aclPermission
operator|.
name|getACEMode
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|aces
return|;
block|}
comment|/**      * Change permissions for a resource.      */
annotation|@
name|Override
specifier|public
name|void
name|setPermissions
parameter_list|(
name|Resource
name|res
parameter_list|,
name|Permission
name|perm
parameter_list|)
throws|throws
name|XMLDBException
block|{
comment|//TODO : use dedicated function in XmldbURI
name|String
name|path
init|=
operator|(
operator|(
name|RemoteCollection
operator|)
name|res
operator|.
name|getParentCollection
argument_list|()
operator|)
operator|.
name|getPath
argument_list|()
operator|+
literal|"/"
operator|+
name|res
operator|.
name|getId
argument_list|()
decl_stmt|;
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|5
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|perm
operator|.
name|getOwner
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|perm
operator|.
name|getGroup
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
operator|new
name|Integer
argument_list|(
name|perm
operator|.
name|getMode
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|perm
operator|instanceof
name|ACLPermission
condition|)
block|{
name|params
operator|.
name|add
argument_list|(
name|getACEs
argument_list|(
name|perm
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"setPermissions"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
comment|/**      * Change permissions for a resource.      */
annotation|@
name|Override
specifier|public
name|void
name|setPermissions
parameter_list|(
name|Collection
name|child
parameter_list|,
name|Permission
name|perm
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|String
name|path
init|=
operator|(
operator|(
name|RemoteCollection
operator|)
name|child
operator|)
operator|.
name|getPath
argument_list|()
decl_stmt|;
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|5
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|perm
operator|.
name|getOwner
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|perm
operator|.
name|getGroup
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
operator|new
name|Integer
argument_list|(
name|perm
operator|.
name|getMode
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|perm
operator|instanceof
name|ACLPermission
condition|)
block|{
name|params
operator|.
name|add
argument_list|(
name|getACEs
argument_list|(
name|perm
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"setPermissions"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setPermissions
parameter_list|(
name|Collection
name|child
parameter_list|,
name|String
name|owner
parameter_list|,
name|String
name|group
parameter_list|,
name|int
name|mode
parameter_list|,
name|List
argument_list|<
name|ACEAider
argument_list|>
name|aces
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|String
name|path
init|=
operator|(
operator|(
name|RemoteCollection
operator|)
name|child
operator|)
operator|.
name|getPath
argument_list|()
decl_stmt|;
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|5
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|owner
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|group
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
operator|new
name|Integer
argument_list|(
name|mode
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|aces
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|add
argument_list|(
name|aces
argument_list|)
expr_stmt|;
block|}
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"setPermissions"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setPermissions
parameter_list|(
name|Resource
name|res
parameter_list|,
name|String
name|owner
parameter_list|,
name|String
name|group
parameter_list|,
name|int
name|mode
parameter_list|,
name|List
argument_list|<
name|ACEAider
argument_list|>
name|aces
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|String
name|path
init|=
operator|(
operator|(
name|RemoteCollection
operator|)
name|res
operator|.
name|getParentCollection
argument_list|()
operator|)
operator|.
name|getPath
argument_list|()
operator|+
literal|"/"
operator|+
name|res
operator|.
name|getId
argument_list|()
decl_stmt|;
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|5
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|owner
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|group
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
operator|new
name|Integer
argument_list|(
name|mode
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|aces
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|add
argument_list|(
name|aces
argument_list|)
expr_stmt|;
block|}
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"setPermissions"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
comment|/** 	 *  Change access mode of a resource 	 * 	 *@param  mode                Access mode 	 *@param  res                 Description of the Parameter 	 *@exception  XMLDBException  Description of the Exception 	 */
specifier|public
name|void
name|chmod
parameter_list|(
name|Resource
name|res
parameter_list|,
name|String
name|mode
parameter_list|)
throws|throws
name|XMLDBException
block|{
comment|//TODO : use dedicated function in XmldbURI
name|String
name|path
init|=
operator|(
operator|(
name|RemoteCollection
operator|)
name|res
operator|.
name|getParentCollection
argument_list|()
operator|)
operator|.
name|getPath
argument_list|()
operator|+
literal|"/"
operator|+
name|res
operator|.
name|getId
argument_list|()
decl_stmt|;
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|mode
argument_list|)
expr_stmt|;
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"setPermissions"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
comment|/** 	 * @see org.exist.xmldb.UserManagementService#chmod(org.xmldb.api.base.Resource, int) 	 */
specifier|public
name|void
name|chmod
parameter_list|(
name|Resource
name|res
parameter_list|,
name|int
name|mode
parameter_list|)
throws|throws
name|XMLDBException
block|{
comment|//TODO : use dedicated function in XmldbURI
name|String
name|path
init|=
operator|(
operator|(
name|RemoteCollection
operator|)
name|res
operator|.
name|getParentCollection
argument_list|()
operator|)
operator|.
name|getPath
argument_list|()
operator|+
literal|"/"
operator|+
name|res
operator|.
name|getId
argument_list|()
decl_stmt|;
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
operator|new
name|Integer
argument_list|(
name|mode
argument_list|)
argument_list|)
expr_stmt|;
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"setPermissions"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
comment|/** 	 *  Change access mode of the current collection 	 * 	 *@param  mode                Access mode 	 *@exception  XMLDBException  Description of the Exception 	 */
annotation|@
name|Override
specifier|public
name|void
name|chmod
parameter_list|(
name|String
name|mode
parameter_list|)
throws|throws
name|XMLDBException
block|{
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|parent
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|mode
argument_list|)
expr_stmt|;
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"setPermissions"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
comment|/** 	 * @see org.exist.xmldb.UserManagementService#chmod(int) 	 */
annotation|@
name|Override
specifier|public
name|void
name|chmod
parameter_list|(
name|int
name|mode
parameter_list|)
throws|throws
name|XMLDBException
block|{
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|parent
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
operator|new
name|Integer
argument_list|(
name|mode
argument_list|)
argument_list|)
expr_stmt|;
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"setPermissions"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc) 	 * @see org.exist.xmldb.UserManagementService#lockResource(org.xmldb.api.base.Resource, org.exist.security.User) 	 */
specifier|public
name|void
name|lockResource
parameter_list|(
name|Resource
name|res
parameter_list|,
name|Account
name|u
parameter_list|)
throws|throws
name|XMLDBException
block|{
comment|//TODO : use dedicated function in XmldbURI
name|String
name|path
init|=
operator|(
operator|(
name|RemoteCollection
operator|)
name|res
operator|.
name|getParentCollection
argument_list|()
operator|)
operator|.
name|getPath
argument_list|()
operator|+
literal|"/"
operator|+
name|res
operator|.
name|getId
argument_list|()
decl_stmt|;
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|u
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"lockResource"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc) 	 * @see org.exist.xmldb.UserManagementService#hasUserLock(org.xmldb.api.base.Resource) 	 */
specifier|public
name|String
name|hasUserLock
parameter_list|(
name|Resource
name|res
parameter_list|)
throws|throws
name|XMLDBException
block|{
comment|//TODO : use dedicated function in XmldbURI
name|String
name|path
init|=
operator|(
operator|(
name|RemoteCollection
operator|)
name|res
operator|.
name|getParentCollection
argument_list|()
operator|)
operator|.
name|getPath
argument_list|()
operator|+
literal|"/"
operator|+
name|res
operator|.
name|getId
argument_list|()
decl_stmt|;
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|String
name|userName
init|=
operator|(
name|String
operator|)
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"hasUserLock"
argument_list|,
name|params
argument_list|)
decl_stmt|;
return|return
name|userName
operator|!=
literal|null
operator|&&
name|userName
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|?
name|userName
else|:
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc) 	 * @see org.exist.xmldb.UserManagementService#unlockResource(org.xmldb.api.base.Resource) 	 */
specifier|public
name|void
name|unlockResource
parameter_list|(
name|Resource
name|res
parameter_list|)
throws|throws
name|XMLDBException
block|{
comment|//TODO : use dedicated function in XmldbURI
name|String
name|path
init|=
operator|(
operator|(
name|RemoteCollection
operator|)
name|res
operator|.
name|getParentCollection
argument_list|()
operator|)
operator|.
name|getPath
argument_list|()
operator|+
literal|"/"
operator|+
name|res
operator|.
name|getId
argument_list|()
decl_stmt|;
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"unlockResource"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
comment|/** 	 *  Change the owner of the current collection 	 * 	 *@param  u                   Description of the Parameter 	 *@param  group               Description of the Parameter 	 *@exception  XMLDBException  Description of the Exception 	 */
annotation|@
name|Override
specifier|public
name|void
name|chown
parameter_list|(
name|Account
name|u
parameter_list|,
name|String
name|group
parameter_list|)
throws|throws
name|XMLDBException
block|{
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|4
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|parent
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|u
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|group
argument_list|)
expr_stmt|;
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"setPermissions"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
comment|/**      *  Change the owner of a resource      *      *@param  res                 Resource      *@param  u                   The new owner of the resource      *@param  group               The owner group      *@exception  XMLDBException  Description of the Exception      */
annotation|@
name|Override
specifier|public
name|void
name|chown
parameter_list|(
name|Resource
name|res
parameter_list|,
name|Account
name|u
parameter_list|,
name|String
name|group
parameter_list|)
throws|throws
name|XMLDBException
block|{
comment|//TODO : use dedicated function in XmldbURI
name|String
name|path
init|=
operator|(
operator|(
name|RemoteCollection
operator|)
name|res
operator|.
name|getParentCollection
argument_list|()
operator|)
operator|.
name|getPath
argument_list|()
operator|+
literal|"/"
operator|+
name|res
operator|.
name|getId
argument_list|()
decl_stmt|;
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|4
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|u
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|group
argument_list|)
expr_stmt|;
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"setPermissions"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
comment|/** 	 *  Gets the name attribute of the UserManagementServiceImpl object 	 * 	 *@return    The name value 	 */
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"UserManagementService"
return|;
block|}
annotation|@
name|Override
specifier|public
name|Date
name|getSubCollectionCreationTime
parameter_list|(
name|Collection
name|cParent
parameter_list|,
name|String
name|name
parameter_list|)
throws|throws
name|XMLDBException
block|{
if|if
condition|(
name|parent
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_RESOURCE
argument_list|,
literal|"collection is null"
argument_list|)
throw|;
block|}
name|Long
name|creationTime
decl_stmt|;
try|try
block|{
name|creationTime
operator|=
operator|(
operator|(
name|RemoteCollection
operator|)
name|cParent
operator|)
operator|.
name|getSubCollectionCreationTime
argument_list|(
name|name
argument_list|)
expr_stmt|;
if|if
condition|(
name|creationTime
operator|==
literal|null
condition|)
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
operator|(
operator|(
name|RemoteCollection
operator|)
name|cParent
operator|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|creationTime
operator|=
operator|(
operator|(
name|Long
operator|)
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"getSubCollectionCreationTime"
argument_list|,
name|params
argument_list|)
operator|)
operator|.
name|longValue
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
return|return
operator|new
name|Date
argument_list|(
name|creationTime
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Permission
name|getSubCollectionPermissions
parameter_list|(
name|Collection
name|cParent
parameter_list|,
name|String
name|name
parameter_list|)
throws|throws
name|XMLDBException
block|{
if|if
condition|(
name|parent
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_RESOURCE
argument_list|,
literal|"collection is null"
argument_list|)
throw|;
block|}
name|Permission
name|perm
init|=
literal|null
decl_stmt|;
try|try
block|{
name|perm
operator|=
operator|(
operator|(
name|RemoteCollection
operator|)
name|cParent
operator|)
operator|.
name|getSubCollectionPermissions
argument_list|(
name|name
argument_list|)
expr_stmt|;
if|if
condition|(
name|perm
operator|==
literal|null
condition|)
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
operator|(
operator|(
name|RemoteCollection
operator|)
name|cParent
operator|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|HashMap
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|result
init|=
operator|(
name|HashMap
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
operator|)
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"getSubCollectionPermissions"
argument_list|,
name|params
argument_list|)
decl_stmt|;
specifier|final
name|String
name|owner
init|=
operator|(
name|String
operator|)
name|result
operator|.
name|get
argument_list|(
literal|"owner"
argument_list|)
decl_stmt|;
specifier|final
name|String
name|group
init|=
operator|(
name|String
operator|)
name|result
operator|.
name|get
argument_list|(
literal|"group"
argument_list|)
decl_stmt|;
specifier|final
name|int
name|mode
init|=
operator|(
operator|(
name|Integer
operator|)
name|result
operator|.
name|get
argument_list|(
literal|"permissions"
argument_list|)
operator|)
operator|.
name|intValue
argument_list|()
decl_stmt|;
specifier|final
name|Object
index|[]
name|acl
init|=
operator|(
name|Object
index|[]
operator|)
name|result
operator|.
name|get
argument_list|(
literal|"acl"
argument_list|)
decl_stmt|;
name|List
name|aces
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|acl
operator|!=
literal|null
condition|)
name|aces
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
name|acl
argument_list|)
expr_stmt|;
name|perm
operator|=
name|getPermission
argument_list|(
name|owner
argument_list|,
name|group
argument_list|,
name|mode
argument_list|,
operator|(
name|List
argument_list|<
name|ACEAider
argument_list|>
operator|)
name|aces
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|PermissionDeniedException
name|pde
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|PERMISSION_DENIED
argument_list|,
name|pde
operator|.
name|getMessage
argument_list|()
argument_list|,
name|pde
argument_list|)
throw|;
block|}
return|return
name|perm
return|;
block|}
annotation|@
name|Override
specifier|public
name|Permission
name|getSubResourcePermissions
parameter_list|(
name|Collection
name|cParent
parameter_list|,
name|String
name|name
parameter_list|)
throws|throws
name|XMLDBException
block|{
if|if
condition|(
name|parent
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_RESOURCE
argument_list|,
literal|"collection is null"
argument_list|)
throw|;
block|}
name|Permission
name|perm
init|=
literal|null
decl_stmt|;
try|try
block|{
name|perm
operator|=
operator|(
operator|(
name|RemoteCollection
operator|)
name|cParent
operator|)
operator|.
name|getSubCollectionPermissions
argument_list|(
name|name
argument_list|)
expr_stmt|;
if|if
condition|(
name|perm
operator|==
literal|null
condition|)
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
operator|(
operator|(
name|RemoteCollection
operator|)
name|cParent
operator|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|HashMap
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|result
init|=
operator|(
name|HashMap
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
operator|)
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"getSubResourcePermissions"
argument_list|,
name|params
argument_list|)
decl_stmt|;
specifier|final
name|String
name|owner
init|=
operator|(
name|String
operator|)
name|result
operator|.
name|get
argument_list|(
literal|"owner"
argument_list|)
decl_stmt|;
specifier|final
name|String
name|group
init|=
operator|(
name|String
operator|)
name|result
operator|.
name|get
argument_list|(
literal|"group"
argument_list|)
decl_stmt|;
specifier|final
name|int
name|mode
init|=
operator|(
operator|(
name|Integer
operator|)
name|result
operator|.
name|get
argument_list|(
literal|"permissions"
argument_list|)
operator|)
operator|.
name|intValue
argument_list|()
decl_stmt|;
specifier|final
name|Object
index|[]
name|acl
init|=
operator|(
name|Object
index|[]
operator|)
name|result
operator|.
name|get
argument_list|(
literal|"acl"
argument_list|)
decl_stmt|;
name|List
name|aces
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|acl
operator|!=
literal|null
condition|)
name|aces
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
name|acl
argument_list|)
expr_stmt|;
name|perm
operator|=
name|getPermission
argument_list|(
name|owner
argument_list|,
name|group
argument_list|,
name|mode
argument_list|,
operator|(
name|List
argument_list|<
name|ACEAider
argument_list|>
operator|)
name|aces
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|PermissionDeniedException
name|pde
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|PERMISSION_DENIED
argument_list|,
name|pde
operator|.
name|getMessage
argument_list|()
argument_list|,
name|pde
argument_list|)
throw|;
block|}
return|return
name|perm
return|;
block|}
comment|/**      *  Get current permissions for a collection      *      *@param  coll                Collection      *@return                     The permissions value      *@exception  XMLDBException  Description of the Exception      */
annotation|@
name|Override
specifier|public
name|Permission
name|getPermissions
parameter_list|(
name|Collection
name|coll
parameter_list|)
throws|throws
name|XMLDBException
block|{
if|if
condition|(
name|coll
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_RESOURCE
argument_list|,
literal|"collection is null"
argument_list|)
throw|;
block|}
name|Permission
name|perm
init|=
operator|(
operator|(
name|RemoteCollection
operator|)
name|coll
operator|)
operator|.
name|getPermissions
argument_list|()
decl_stmt|;
if|if
condition|(
name|perm
operator|==
literal|null
condition|)
block|{
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
operator|(
operator|(
name|RemoteCollection
operator|)
name|coll
operator|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|HashMap
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|result
init|=
operator|(
name|HashMap
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
operator|)
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"getPermissions"
argument_list|,
name|params
argument_list|)
decl_stmt|;
specifier|final
name|String
name|owner
init|=
operator|(
name|String
operator|)
name|result
operator|.
name|get
argument_list|(
literal|"owner"
argument_list|)
decl_stmt|;
specifier|final
name|String
name|group
init|=
operator|(
name|String
operator|)
name|result
operator|.
name|get
argument_list|(
literal|"group"
argument_list|)
decl_stmt|;
specifier|final
name|int
name|mode
init|=
operator|(
operator|(
name|Integer
operator|)
name|result
operator|.
name|get
argument_list|(
literal|"permissions"
argument_list|)
operator|)
operator|.
name|intValue
argument_list|()
decl_stmt|;
specifier|final
name|Object
index|[]
name|acl
init|=
operator|(
name|Object
index|[]
operator|)
name|result
operator|.
name|get
argument_list|(
literal|"acl"
argument_list|)
decl_stmt|;
name|List
name|aces
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|acl
operator|!=
literal|null
condition|)
name|aces
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
name|acl
argument_list|)
expr_stmt|;
name|perm
operator|=
name|getPermission
argument_list|(
name|owner
argument_list|,
name|group
argument_list|,
name|mode
argument_list|,
operator|(
name|List
argument_list|<
name|ACEAider
argument_list|>
operator|)
name|aces
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|PermissionDeniedException
name|pde
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|PERMISSION_DENIED
argument_list|,
name|pde
operator|.
name|getMessage
argument_list|()
argument_list|,
name|pde
argument_list|)
throw|;
block|}
block|}
return|return
name|perm
return|;
block|}
specifier|private
name|Permission
name|getPermission
parameter_list|(
name|String
name|owner
parameter_list|,
name|String
name|group
parameter_list|,
name|int
name|mode
parameter_list|,
name|List
name|listOfAces
parameter_list|)
throws|throws
name|PermissionDeniedException
block|{
name|Permission
name|perm
init|=
name|PermissionAiderFactory
operator|.
name|getPermission
argument_list|(
name|owner
argument_list|,
name|group
argument_list|,
name|mode
argument_list|)
decl_stmt|;
if|if
condition|(
name|perm
operator|instanceof
name|ACLPermission
operator|&&
name|listOfAces
operator|!=
literal|null
operator|&&
operator|!
name|listOfAces
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|ACLPermission
name|aclPermission
init|=
operator|(
name|ACLPermission
operator|)
name|perm
decl_stmt|;
for|for
control|(
name|Object
name|listOfAcesItem
range|:
name|listOfAces
control|)
block|{
if|if
condition|(
name|listOfAcesItem
operator|instanceof
name|ACEAider
condition|)
block|{
name|ACEAider
name|ace
init|=
operator|(
name|ACEAider
operator|)
name|listOfAcesItem
decl_stmt|;
name|aclPermission
operator|.
name|addACE
argument_list|(
name|ace
operator|.
name|getAccessType
argument_list|()
argument_list|,
name|ace
operator|.
name|getTarget
argument_list|()
argument_list|,
name|ace
operator|.
name|getWho
argument_list|()
argument_list|,
name|ace
operator|.
name|getMode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|return
name|perm
return|;
block|}
comment|/**      *  Get current permissions for a resource      *      *@param  res                 Description of the Parameter      *@return                     The permissions value      *@exception  XMLDBException  Description of the Exception      */
annotation|@
name|Override
specifier|public
name|Permission
name|getPermissions
parameter_list|(
name|Resource
name|res
parameter_list|)
throws|throws
name|XMLDBException
block|{
if|if
condition|(
name|res
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_RESOURCE
argument_list|,
literal|"resource is null"
argument_list|)
throw|;
block|}
name|Permission
name|perm
init|=
operator|(
operator|(
name|EXistResource
operator|)
name|res
operator|)
operator|.
name|getPermissions
argument_list|()
decl_stmt|;
if|if
condition|(
name|perm
operator|==
literal|null
condition|)
block|{
comment|//TODO : use dedicated function in XmldbURI
name|String
name|path
init|=
operator|(
operator|(
name|RemoteCollection
operator|)
name|res
operator|.
name|getParentCollection
argument_list|()
operator|)
operator|.
name|getPath
argument_list|()
operator|+
literal|"/"
operator|+
name|res
operator|.
name|getId
argument_list|()
decl_stmt|;
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|HashMap
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|result
init|=
operator|(
name|HashMap
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
operator|)
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"getPermissions"
argument_list|,
name|params
argument_list|)
decl_stmt|;
specifier|final
name|String
name|owner
init|=
operator|(
name|String
operator|)
name|result
operator|.
name|get
argument_list|(
literal|"owner"
argument_list|)
decl_stmt|;
specifier|final
name|String
name|group
init|=
operator|(
name|String
operator|)
name|result
operator|.
name|get
argument_list|(
literal|"group"
argument_list|)
decl_stmt|;
specifier|final
name|int
name|mode
init|=
operator|(
operator|(
name|Integer
operator|)
name|result
operator|.
name|get
argument_list|(
literal|"permissions"
argument_list|)
operator|)
operator|.
name|intValue
argument_list|()
decl_stmt|;
specifier|final
name|Object
index|[]
name|acl
init|=
operator|(
name|Object
index|[]
operator|)
name|result
operator|.
name|get
argument_list|(
literal|"acl"
argument_list|)
decl_stmt|;
name|List
name|aces
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|acl
operator|!=
literal|null
condition|)
name|aces
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
name|acl
argument_list|)
expr_stmt|;
name|perm
operator|=
name|getPermission
argument_list|(
name|owner
argument_list|,
name|group
argument_list|,
name|mode
argument_list|,
operator|(
name|List
argument_list|<
name|ACEAider
argument_list|>
operator|)
name|aces
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|PermissionDeniedException
name|pde
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|PERMISSION_DENIED
argument_list|,
name|pde
operator|.
name|getMessage
argument_list|()
argument_list|,
name|pde
argument_list|)
throw|;
block|}
block|}
return|return
name|perm
return|;
block|}
annotation|@
name|Override
specifier|public
name|Permission
index|[]
name|listResourcePermissions
parameter_list|()
throws|throws
name|XMLDBException
block|{
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|parent
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|HashMap
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|result
init|=
operator|(
name|HashMap
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
operator|)
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"listDocumentPermissions"
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|Permission
name|perm
index|[]
init|=
operator|new
name|Permission
index|[
name|result
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|String
index|[]
name|resources
init|=
name|parent
operator|.
name|listResources
argument_list|()
decl_stmt|;
name|Object
index|[]
name|t
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|resources
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|t
operator|=
operator|(
name|Object
index|[]
operator|)
name|result
operator|.
name|get
argument_list|(
name|resources
index|[
name|i
index|]
argument_list|)
expr_stmt|;
specifier|final
name|String
name|owner
init|=
operator|(
name|String
operator|)
name|t
index|[
literal|0
index|]
decl_stmt|;
specifier|final
name|String
name|group
init|=
operator|(
name|String
operator|)
name|t
index|[
literal|1
index|]
decl_stmt|;
specifier|final
name|int
name|mode
init|=
operator|(
operator|(
name|Integer
operator|)
name|t
index|[
literal|2
index|]
operator|)
operator|.
name|intValue
argument_list|()
decl_stmt|;
name|List
name|aces
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|t
operator|.
name|length
operator|==
literal|4
condition|)
block|{
name|aces
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
name|t
index|[
literal|3
index|]
argument_list|)
expr_stmt|;
block|}
name|perm
index|[
name|i
index|]
operator|=
name|getPermission
argument_list|(
name|owner
argument_list|,
name|group
argument_list|,
name|mode
argument_list|,
operator|(
name|List
argument_list|<
name|ACEAider
argument_list|>
operator|)
name|aces
argument_list|)
expr_stmt|;
block|}
return|return
name|perm
return|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|PermissionDeniedException
name|pde
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|PERMISSION_DENIED
argument_list|,
name|pde
operator|.
name|getMessage
argument_list|()
argument_list|,
name|pde
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Permission
index|[]
name|listCollectionPermissions
parameter_list|()
throws|throws
name|XMLDBException
block|{
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|parent
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|HashMap
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|result
init|=
operator|(
name|HashMap
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
operator|)
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"listCollectionPermissions"
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|Permission
name|perm
index|[]
init|=
operator|new
name|Permission
index|[
name|result
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|String
name|collections
index|[]
init|=
name|parent
operator|.
name|listChildCollections
argument_list|()
decl_stmt|;
name|Object
index|[]
name|t
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|collections
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|t
operator|=
operator|(
name|Object
index|[]
operator|)
name|result
operator|.
name|get
argument_list|(
name|collections
index|[
name|i
index|]
argument_list|)
expr_stmt|;
specifier|final
name|String
name|owner
init|=
operator|(
name|String
operator|)
name|t
index|[
literal|0
index|]
decl_stmt|;
specifier|final
name|String
name|group
init|=
operator|(
name|String
operator|)
name|t
index|[
literal|1
index|]
decl_stmt|;
specifier|final
name|int
name|mode
init|=
operator|(
operator|(
name|Integer
operator|)
name|t
index|[
literal|2
index|]
operator|)
operator|.
name|intValue
argument_list|()
decl_stmt|;
name|List
name|aces
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|t
operator|.
name|length
operator|==
literal|4
condition|)
block|{
name|aces
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
name|t
index|[
literal|3
index|]
argument_list|)
expr_stmt|;
block|}
name|perm
index|[
name|i
index|]
operator|=
name|getPermission
argument_list|(
name|owner
argument_list|,
name|group
argument_list|,
name|mode
argument_list|,
operator|(
name|List
argument_list|<
name|ACEAider
argument_list|>
operator|)
name|aces
argument_list|)
expr_stmt|;
block|}
return|return
name|perm
return|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|PermissionDeniedException
name|pde
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|PERMISSION_DENIED
argument_list|,
name|pde
operator|.
name|getMessage
argument_list|()
argument_list|,
name|pde
argument_list|)
throw|;
block|}
block|}
comment|/** 	 *  Gets the property attribute of the UserManagementServiceImpl object 	 * 	 *@param  property            Description of the Parameter 	 *@return                     The property value 	 *@exception  XMLDBException  Description of the Exception 	 */
specifier|public
name|String
name|getProperty
parameter_list|(
name|String
name|property
parameter_list|)
throws|throws
name|XMLDBException
block|{
return|return
literal|null
return|;
block|}
comment|/** 	 *  Get user information for specified user 	 * 	 *@param  name                Description of the Parameter 	 *@return                     The user value 	 *@exception  XMLDBException  Description of the Exception 	 */
annotation|@
name|Override
specifier|public
name|Account
name|getAccount
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|XMLDBException
block|{
try|try
block|{
specifier|final
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|name
argument_list|)
expr_stmt|;
specifier|final
name|HashMap
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|tab
init|=
operator|(
name|HashMap
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
operator|)
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"getAccount"
argument_list|,
name|params
argument_list|)
decl_stmt|;
if|if
condition|(
name|tab
operator|==
literal|null
operator|||
name|tab
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
name|GroupAider
name|defaultGroup
init|=
operator|new
name|GroupAider
argument_list|(
operator|(
name|Integer
operator|)
name|tab
operator|.
name|get
argument_list|(
literal|"default-group-id"
argument_list|)
argument_list|,
operator|(
name|String
operator|)
name|tab
operator|.
name|get
argument_list|(
literal|"default-group-realmId"
argument_list|)
argument_list|,
operator|(
name|String
operator|)
name|tab
operator|.
name|get
argument_list|(
literal|"default-group-name"
argument_list|)
argument_list|)
decl_stmt|;
name|UserAider
name|u
init|=
operator|new
name|UserAider
argument_list|(
operator|(
name|String
operator|)
name|tab
operator|.
name|get
argument_list|(
literal|"realmId"
argument_list|)
argument_list|,
operator|(
name|String
operator|)
name|tab
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|,
name|defaultGroup
argument_list|)
decl_stmt|;
name|Object
index|[]
name|groups
init|=
operator|(
name|Object
index|[]
operator|)
name|tab
operator|.
name|get
argument_list|(
literal|"groups"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|groups
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|u
operator|.
name|addGroup
argument_list|(
operator|(
name|String
operator|)
name|groups
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|String
name|home
init|=
operator|(
name|String
operator|)
name|tab
operator|.
name|get
argument_list|(
literal|"home"
argument_list|)
decl_stmt|;
name|u
operator|.
name|setHome
argument_list|(
name|home
operator|==
literal|null
condition|?
literal|null
else|:
name|XmldbURI
operator|.
name|create
argument_list|(
name|home
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|u
return|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
comment|/**      * Get a list of all users currently defined      *      * @return The user accounts      * @exception XMLDBException Description of the Exception      */
annotation|@
name|Override
specifier|public
name|Account
index|[]
name|getAccounts
parameter_list|()
throws|throws
name|XMLDBException
block|{
try|try
block|{
specifier|final
name|Object
index|[]
name|users
init|=
operator|(
name|Object
index|[]
operator|)
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"getAccounts"
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|UserAider
index|[]
name|u
init|=
operator|new
name|UserAider
index|[
name|users
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|u
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
specifier|final
name|HashMap
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|tab
init|=
operator|(
name|HashMap
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
operator|)
name|users
index|[
name|i
index|]
decl_stmt|;
name|int
name|uid
init|=
operator|-
literal|1
decl_stmt|;
try|try
block|{
name|uid
operator|=
operator|(
name|Integer
operator|)
name|tab
operator|.
name|get
argument_list|(
literal|"uid"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|NumberFormatException
name|e
parameter_list|)
block|{
block|}
name|u
index|[
name|i
index|]
operator|=
operator|new
name|UserAider
argument_list|(
name|uid
argument_list|,
operator|(
name|String
operator|)
name|tab
operator|.
name|get
argument_list|(
literal|"realmId"
argument_list|)
argument_list|,
operator|(
name|String
operator|)
name|tab
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|Object
index|[]
name|groups
init|=
operator|(
name|Object
index|[]
operator|)
name|tab
operator|.
name|get
argument_list|(
literal|"groups"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|groups
operator|.
name|length
condition|;
name|j
operator|++
control|)
block|{
name|u
index|[
name|i
index|]
operator|.
name|addGroup
argument_list|(
operator|(
name|String
operator|)
name|groups
index|[
name|j
index|]
argument_list|)
expr_stmt|;
block|}
name|String
name|home
init|=
operator|(
name|String
operator|)
name|tab
operator|.
name|get
argument_list|(
literal|"home"
argument_list|)
decl_stmt|;
name|u
index|[
name|i
index|]
operator|.
name|setHome
argument_list|(
name|home
operator|==
literal|null
condition|?
literal|null
else|:
name|XmldbURI
operator|.
name|create
argument_list|(
name|home
argument_list|)
argument_list|)
expr_stmt|;
name|u
index|[
name|i
index|]
operator|.
name|setEnabled
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
operator|(
name|String
operator|)
name|tab
operator|.
name|get
argument_list|(
literal|"enabled"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|metadata
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
operator|)
name|tab
operator|.
name|get
argument_list|(
literal|"metadata"
argument_list|)
decl_stmt|;
for|for
control|(
specifier|final
name|String
name|key
range|:
name|metadata
operator|.
name|keySet
argument_list|()
control|)
block|{
if|if
condition|(
name|AXSchemaType
operator|.
name|valueOfNamespace
argument_list|(
name|key
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|u
index|[
name|i
index|]
operator|.
name|setMetadataValue
argument_list|(
name|AXSchemaType
operator|.
name|valueOfNamespace
argument_list|(
name|key
argument_list|)
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|EXistSchemaType
operator|.
name|valueOfNamespace
argument_list|(
name|key
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|u
index|[
name|i
index|]
operator|.
name|setMetadataValue
argument_list|(
name|EXistSchemaType
operator|.
name|valueOfNamespace
argument_list|(
name|key
argument_list|)
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|return
name|u
return|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Group
name|getGroup
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|XMLDBException
block|{
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|tab
init|=
operator|(
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"getGroup"
argument_list|,
name|params
argument_list|)
decl_stmt|;
if|if
condition|(
name|tab
operator|!=
literal|null
operator|&&
operator|!
name|tab
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
specifier|final
name|Group
name|role
init|=
operator|new
name|GroupAider
argument_list|(
operator|(
name|Integer
operator|)
name|tab
operator|.
name|get
argument_list|(
literal|"id"
argument_list|)
argument_list|,
operator|(
name|String
operator|)
name|tab
operator|.
name|get
argument_list|(
literal|"realmId"
argument_list|)
argument_list|,
operator|(
name|String
operator|)
name|tab
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|metadata
init|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
operator|)
name|tab
operator|.
name|get
argument_list|(
literal|"metadata"
argument_list|)
decl_stmt|;
for|for
control|(
specifier|final
name|String
name|key
range|:
name|metadata
operator|.
name|keySet
argument_list|()
control|)
block|{
if|if
condition|(
name|AXSchemaType
operator|.
name|valueOfNamespace
argument_list|(
name|key
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|role
operator|.
name|setMetadataValue
argument_list|(
name|AXSchemaType
operator|.
name|valueOfNamespace
argument_list|(
name|key
argument_list|)
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|EXistSchemaType
operator|.
name|valueOfNamespace
argument_list|(
name|key
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|role
operator|.
name|setMetadataValue
argument_list|(
name|EXistSchemaType
operator|.
name|valueOfNamespace
argument_list|(
name|key
argument_list|)
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|role
return|;
block|}
return|return
literal|null
return|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
comment|/** 	 *  Gets the version attribute of the UserManagementServiceImpl object 	 * 	 *@return    The version value 	 */
specifier|public
name|String
name|getVersion
parameter_list|()
block|{
return|return
literal|"1.0"
return|;
block|}
comment|/** 	 *  Remove user. 	 * 	 *@param  u   User 	 *@exception  XMLDBException 	 */
specifier|public
name|void
name|removeAccount
parameter_list|(
name|Account
name|u
parameter_list|)
throws|throws
name|XMLDBException
block|{
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|u
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"removeAccount"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|void
name|removeGroup
parameter_list|(
name|Group
name|role
parameter_list|)
throws|throws
name|XMLDBException
block|{
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|role
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"removeGroup"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
comment|/** 	 *  Sets the collection attribute of the UserManagementServiceImpl object 	 * 	 *@param  collection          The new collection value 	 *@exception  XMLDBException  Description of the Exception 	 */
specifier|public
name|void
name|setCollection
parameter_list|(
name|Collection
name|collection
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|this
operator|.
name|parent
operator|=
operator|(
name|RemoteCollection
operator|)
name|collection
expr_stmt|;
block|}
comment|/** 	 *  Sets the property attribute of the UserManagementServiceImpl object 	 * 	 *@param  property            The new property value 	 *@param  value               The new property value 	 *@exception  XMLDBException  Description of the Exception 	 */
specifier|public
name|void
name|setProperty
parameter_list|(
name|String
name|property
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|XMLDBException
block|{
block|}
comment|/** 	 *  Update the specified user 	 * 	 *@param  user                Description of the Parameter 	 *@exception  XMLDBException  Description of the Exception 	 */
annotation|@
name|Override
specifier|public
name|void
name|updateAccount
parameter_list|(
specifier|final
name|Account
name|user
parameter_list|)
throws|throws
name|XMLDBException
block|{
try|try
block|{
specifier|final
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|12
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|user
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|user
operator|.
name|getPassword
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|user
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|user
operator|.
name|getDigestPassword
argument_list|()
operator|==
literal|null
condition|?
literal|""
else|:
name|user
operator|.
name|getDigestPassword
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|String
index|[]
name|gl
init|=
name|user
operator|.
name|getGroups
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|gl
argument_list|)
expr_stmt|;
if|if
condition|(
name|user
operator|.
name|getHome
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|add
argument_list|(
name|user
operator|.
name|getHome
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|params
operator|.
name|add
argument_list|(
name|user
operator|.
name|isEnabled
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|metadata
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
specifier|final
name|SchemaType
name|key
range|:
name|user
operator|.
name|getMetadataKeys
argument_list|()
control|)
block|{
name|metadata
operator|.
name|put
argument_list|(
name|key
operator|.
name|getNamespace
argument_list|()
argument_list|,
name|user
operator|.
name|getMetadataValue
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|params
operator|.
name|add
argument_list|(
name|metadata
argument_list|)
expr_stmt|;
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"updateAccount"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateGroup
parameter_list|(
specifier|final
name|Group
name|group
parameter_list|)
throws|throws
name|XMLDBException
block|{
try|try
block|{
specifier|final
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|12
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|group
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|String
name|managers
index|[]
init|=
operator|new
name|String
index|[
name|group
operator|.
name|getManagers
argument_list|()
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|managers
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|managers
index|[
name|i
index|]
operator|=
name|group
operator|.
name|getManagers
argument_list|()
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
name|params
operator|.
name|add
argument_list|(
name|managers
argument_list|)
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|metadata
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
specifier|final
name|SchemaType
name|key
range|:
name|group
operator|.
name|getMetadataKeys
argument_list|()
control|)
block|{
name|metadata
operator|.
name|put
argument_list|(
name|key
operator|.
name|getNamespace
argument_list|()
argument_list|,
name|group
operator|.
name|getMetadataValue
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|params
operator|.
name|add
argument_list|(
name|metadata
argument_list|)
expr_stmt|;
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"updateGroup"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
specifier|final
name|PermissionDeniedException
name|pde
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|PERMISSION_DENIED
argument_list|,
name|pde
operator|.
name|getMessage
argument_list|()
argument_list|,
name|pde
argument_list|)
throw|;
block|}
block|}
comment|/** 	 * Update the specified accounts groups  	 * 	 *@param  user                Description of the Parameter 	 *@exception  XMLDBException  Description of the Exception 	 */
specifier|public
name|void
name|addUserGroup
parameter_list|(
name|Account
name|user
parameter_list|)
throws|throws
name|XMLDBException
block|{
try|try
block|{
specifier|final
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|user
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|String
index|[]
name|gl
init|=
name|user
operator|.
name|getGroups
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|gl
argument_list|)
expr_stmt|;
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"updateAccount"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
comment|/** 	 *  Update the specified user removing a group from user's group 	 *  method added by {Marco.Tampucci, Massimo.Martinelli} @isti.cnr.it 	 *  	 * modified by Chris Tomlinson to remove handling of home which 	 * breaks the call on updateAccount in RpcConnection since there is 	 * no parameter to receive it 	 * 	 *@param  user                Description of the Parameter 	 *@param  rmgroup             Description of group to remove  	 *@exception  XMLDBException  Description of the Exception 	 */
specifier|public
name|void
name|removeGroup
parameter_list|(
name|Account
name|user
parameter_list|,
name|String
name|rmgroup
parameter_list|)
throws|throws
name|XMLDBException
block|{
try|try
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|user
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|String
index|[]
name|gl
init|=
name|user
operator|.
name|getGroups
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|gl
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|rmgroup
argument_list|)
expr_stmt|;
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"updateAccount"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc) 	 * @see org.exist.xmldb.UserManagementService#getGroups() 	 */
specifier|public
name|String
index|[]
name|getGroups
parameter_list|()
throws|throws
name|XMLDBException
block|{
try|try
block|{
name|Object
index|[]
name|v
init|=
operator|(
name|Object
index|[]
operator|)
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"getGroups"
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
argument_list|)
decl_stmt|;
name|String
index|[]
name|groups
init|=
operator|new
name|String
index|[
name|v
operator|.
name|length
index|]
decl_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|v
argument_list|,
literal|0
argument_list|,
name|groups
argument_list|,
literal|0
argument_list|,
name|v
operator|.
name|length
argument_list|)
expr_stmt|;
return|return
name|groups
return|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|addUser
parameter_list|(
name|User
name|user
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|Account
name|account
init|=
operator|new
name|UserAider
argument_list|(
name|user
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|addAccount
argument_list|(
name|account
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateUser
parameter_list|(
name|User
name|user
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|Account
name|account
init|=
operator|new
name|UserAider
argument_list|(
name|user
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|account
operator|.
name|setPassword
argument_list|(
name|user
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
comment|//TODO: groups
name|updateAccount
argument_list|(
name|account
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|User
name|getUser
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|XMLDBException
block|{
return|return
name|getAccount
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|User
index|[]
name|getUsers
parameter_list|()
throws|throws
name|XMLDBException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|removeUser
parameter_list|(
name|User
name|user
parameter_list|)
throws|throws
name|XMLDBException
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|void
name|lockResource
parameter_list|(
name|Resource
name|res
parameter_list|,
name|User
name|u
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|Account
name|account
init|=
operator|new
name|UserAider
argument_list|(
name|u
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|lockResource
argument_list|(
name|res
argument_list|,
name|account
argument_list|)
expr_stmt|;
block|}
block|}
end_class

begin_comment
comment|// -- end class UserManagementServiceImpl
end_comment

end_unit

