begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001 Wolfgang M. Meier  *  meier@ifs.tu-darmstadt.de  *  http://exist.sourceforge.net  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *    *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xmldb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlrpc
operator|.
name|XmlRpcClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlrpc
operator|.
name|XmlRpcException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Permission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|Compressor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|validation
operator|.
name|service
operator|.
name|RemoteValidationService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|ErrorCodes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_comment
comment|/**  * A remote implementation of the Collection interface. This   * implementation communicates with the server through the XMLRPC  * protocol.  *   * @author wolf  */
end_comment

begin_class
specifier|public
class|class
name|RemoteCollection
implements|implements
name|CollectionImpl
block|{
comment|// max size of a resource to be send to the server
comment|// if the resource exceeds this limit, the data is split into
comment|// junks and uploaded to the server via the update() call
specifier|private
specifier|static
specifier|final
name|int
name|MAX_CHUNK_LENGTH
init|=
literal|512
operator|*
literal|1024
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|MAX_UPLOAD_CHUNK
init|=
literal|10
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
specifier|protected
name|Map
name|childCollections
init|=
literal|null
decl_stmt|;
specifier|protected
name|XmldbURI
name|path
decl_stmt|;
specifier|protected
name|Permission
name|permissions
init|=
literal|null
decl_stmt|;
specifier|protected
name|RemoteCollection
name|parent
init|=
literal|null
decl_stmt|;
specifier|protected
name|XmlRpcClient
name|rpcClient
init|=
literal|null
decl_stmt|;
specifier|protected
name|Properties
name|properties
init|=
literal|null
decl_stmt|;
specifier|public
name|RemoteCollection
parameter_list|(
name|XmlRpcClient
name|client
parameter_list|,
name|XmldbURI
name|path
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|this
argument_list|(
name|client
argument_list|,
literal|null
argument_list|,
name|path
argument_list|)
expr_stmt|;
block|}
specifier|public
name|RemoteCollection
parameter_list|(
name|XmlRpcClient
name|client
parameter_list|,
name|RemoteCollection
name|parent
parameter_list|,
name|XmldbURI
name|path
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|this
operator|.
name|parent
operator|=
name|parent
expr_stmt|;
name|this
operator|.
name|path
operator|=
name|path
operator|.
name|toCollectionPathURI
argument_list|()
expr_stmt|;
name|this
operator|.
name|rpcClient
operator|=
name|client
expr_stmt|;
block|}
specifier|protected
name|void
name|addChildCollection
parameter_list|(
name|Collection
name|child
parameter_list|)
throws|throws
name|XMLDBException
block|{
if|if
condition|(
name|childCollections
operator|==
literal|null
condition|)
name|readCollection
argument_list|()
expr_stmt|;
try|try
block|{
name|childCollections
operator|.
name|put
argument_list|(
name|XmldbURI
operator|.
name|xmldbUriFor
argument_list|(
name|child
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|,
name|child
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_URI
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|XMLDBException
block|{
try|try
block|{
name|rpcClient
operator|.
name|execute
argument_list|(
literal|"sync"
argument_list|,
operator|new
name|Vector
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|UNKNOWN_ERROR
argument_list|,
literal|"failed to close collection"
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|UNKNOWN_ERROR
argument_list|,
literal|"failed to close collection"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|String
name|createId
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|Vector
name|params
init|=
operator|new
name|Vector
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|params
operator|.
name|addElement
argument_list|(
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
return|return
operator|(
name|String
operator|)
name|rpcClient
operator|.
name|execute
argument_list|(
literal|"createResourceId"
argument_list|,
name|params
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|UNKNOWN_ERROR
argument_list|,
literal|"failed to close collection"
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|UNKNOWN_ERROR
argument_list|,
literal|"failed to close collection"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|Resource
name|createResource
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|type
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|XmldbURI
name|newId
decl_stmt|;
try|try
block|{
name|newId
operator|=
operator|(
name|id
operator|==
literal|null
operator|)
condition|?
name|XmldbURI
operator|.
name|xmldbUriFor
argument_list|(
name|createId
argument_list|()
argument_list|)
else|:
name|XmldbURI
operator|.
name|xmldbUriFor
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_URI
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|Resource
name|r
decl_stmt|;
if|if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"XMLResource"
argument_list|)
condition|)
name|r
operator|=
operator|new
name|RemoteXMLResource
argument_list|(
name|this
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|newId
argument_list|,
literal|null
argument_list|)
expr_stmt|;
if|else if
condition|(
name|type
operator|.
name|equals
argument_list|(
literal|"BinaryResource"
argument_list|)
condition|)
name|r
operator|=
operator|new
name|RemoteBinaryResource
argument_list|(
name|this
argument_list|,
name|newId
argument_list|)
expr_stmt|;
else|else
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|UNKNOWN_RESOURCE_TYPE
argument_list|,
literal|"unknown resource type: "
operator|+
name|type
argument_list|)
throw|;
return|return
name|r
return|;
block|}
specifier|public
name|Collection
name|getChildCollection
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|XMLDBException
block|{
try|try
block|{
return|return
name|getChildCollection
argument_list|(
name|XmldbURI
operator|.
name|xmldbUriFor
argument_list|(
name|name
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_URI
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|Collection
name|getChildCollection
parameter_list|(
name|XmldbURI
name|name
parameter_list|)
throws|throws
name|XMLDBException
block|{
if|if
condition|(
name|childCollections
operator|==
literal|null
condition|)
name|readCollection
argument_list|()
expr_stmt|;
if|if
condition|(
name|name
operator|.
name|numSegments
argument_list|()
operator|>
literal|1
condition|)
return|return
operator|(
name|Collection
operator|)
name|childCollections
operator|.
name|get
argument_list|(
name|name
argument_list|)
return|;
else|else
return|return
operator|(
name|Collection
operator|)
name|childCollections
operator|.
name|get
argument_list|(
name|getPathURI
argument_list|()
operator|.
name|append
argument_list|(
name|name
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|int
name|getChildCollectionCount
parameter_list|()
throws|throws
name|XMLDBException
block|{
if|if
condition|(
name|childCollections
operator|==
literal|null
condition|)
name|readCollection
argument_list|()
expr_stmt|;
return|return
name|childCollections
operator|.
name|size
argument_list|()
return|;
block|}
specifier|protected
name|XmlRpcClient
name|getClient
parameter_list|()
block|{
return|return
name|rpcClient
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
throws|throws
name|XMLDBException
block|{
return|return
name|path
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|Collection
name|getParentCollection
parameter_list|()
throws|throws
name|XMLDBException
block|{
if|if
condition|(
name|parent
operator|==
literal|null
operator|&&
operator|!
name|path
operator|.
name|equals
argument_list|(
name|XmldbURI
operator|.
name|ROOT_COLLECTION_URI
argument_list|)
condition|)
block|{
name|XmldbURI
name|parentUri
init|=
name|path
operator|.
name|removeLastSegment
argument_list|()
decl_stmt|;
return|return
operator|new
name|RemoteCollection
argument_list|(
name|rpcClient
argument_list|,
literal|null
argument_list|,
name|parentUri
argument_list|)
return|;
block|}
return|return
name|parent
return|;
block|}
specifier|public
name|String
name|getPath
parameter_list|()
throws|throws
name|XMLDBException
block|{
return|return
name|getPathURI
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|XmldbURI
name|getPathURI
parameter_list|()
block|{
if|if
condition|(
name|parent
operator|==
literal|null
condition|)
block|{
comment|/* 		    if(name != null) 		        return name; 		    else 		    */
return|return
name|XmldbURI
operator|.
name|ROOT_COLLECTION_URI
return|;
block|}
return|return
name|path
return|;
block|}
specifier|public
name|String
name|getProperty
parameter_list|(
name|String
name|property
parameter_list|)
throws|throws
name|XMLDBException
block|{
if|if
condition|(
name|properties
operator|==
literal|null
condition|)
return|return
literal|null
return|;
return|return
operator|(
name|String
operator|)
name|properties
operator|.
name|get
argument_list|(
name|property
argument_list|)
return|;
block|}
specifier|public
name|Properties
name|getProperties
parameter_list|()
block|{
if|if
condition|(
name|properties
operator|==
literal|null
condition|)
name|properties
operator|=
operator|new
name|Properties
argument_list|()
expr_stmt|;
return|return
name|properties
return|;
block|}
specifier|public
name|int
name|getResourceCount
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|Vector
name|params
init|=
operator|new
name|Vector
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|params
operator|.
name|addElement
argument_list|(
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
return|return
operator|(
operator|(
name|Integer
operator|)
name|rpcClient
operator|.
name|execute
argument_list|(
literal|"getResourceCount"
argument_list|,
name|params
argument_list|)
operator|)
operator|.
name|intValue
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|UNKNOWN_ERROR
argument_list|,
literal|"failed to close collection"
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|UNKNOWN_ERROR
argument_list|,
literal|"failed to close collection"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|Service
name|getService
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|version
parameter_list|)
throws|throws
name|XMLDBException
block|{
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
literal|"XPathQueryService"
argument_list|)
condition|)
return|return
operator|new
name|RemoteXPathQueryService
argument_list|(
name|this
argument_list|)
return|;
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
literal|"XQueryService"
argument_list|)
condition|)
return|return
operator|new
name|RemoteXPathQueryService
argument_list|(
name|this
argument_list|)
return|;
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
literal|"CollectionManagementService"
argument_list|)
operator|||
name|name
operator|.
name|equals
argument_list|(
literal|"CollectionManager"
argument_list|)
condition|)
return|return
operator|new
name|RemoteCollectionManagementService
argument_list|(
name|this
argument_list|,
name|rpcClient
argument_list|)
return|;
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
literal|"UserManagementService"
argument_list|)
condition|)
return|return
operator|new
name|RemoteUserManagementService
argument_list|(
name|this
argument_list|)
return|;
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
literal|"DatabaseInstanceManager"
argument_list|)
condition|)
return|return
operator|new
name|RemoteDatabaseInstanceManager
argument_list|(
name|rpcClient
argument_list|)
return|;
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
literal|"IndexQueryService"
argument_list|)
condition|)
return|return
operator|new
name|RemoteIndexQueryService
argument_list|(
name|rpcClient
argument_list|,
name|this
argument_list|)
return|;
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
literal|"XUpdateQueryService"
argument_list|)
condition|)
return|return
operator|new
name|RemoteXUpdateQueryService
argument_list|(
name|this
argument_list|)
return|;
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
literal|"ValidationService"
argument_list|)
condition|)
return|return
operator|new
name|RemoteValidationService
argument_list|(
name|this
argument_list|,
name|rpcClient
argument_list|)
return|;
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|NO_SUCH_SERVICE
argument_list|)
throw|;
block|}
specifier|public
name|Service
index|[]
name|getServices
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|Service
index|[]
name|services
init|=
operator|new
name|Service
index|[
literal|7
index|]
decl_stmt|;
name|services
index|[
literal|0
index|]
operator|=
operator|new
name|RemoteXPathQueryService
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|services
index|[
literal|1
index|]
operator|=
operator|new
name|RemoteCollectionManagementService
argument_list|(
name|this
argument_list|,
name|rpcClient
argument_list|)
expr_stmt|;
name|services
index|[
literal|2
index|]
operator|=
operator|new
name|RemoteUserManagementService
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|services
index|[
literal|3
index|]
operator|=
operator|new
name|RemoteDatabaseInstanceManager
argument_list|(
name|rpcClient
argument_list|)
expr_stmt|;
name|services
index|[
literal|4
index|]
operator|=
operator|new
name|RemoteIndexQueryService
argument_list|(
name|rpcClient
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|services
index|[
literal|5
index|]
operator|=
operator|new
name|RemoteXUpdateQueryService
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|services
index|[
literal|6
index|]
operator|=
operator|new
name|RemoteValidationService
argument_list|(
name|this
argument_list|,
name|rpcClient
argument_list|)
expr_stmt|;
return|return
name|services
return|;
block|}
specifier|protected
name|boolean
name|hasChildCollection
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|XMLDBException
block|{
if|if
condition|(
name|childCollections
operator|==
literal|null
condition|)
name|readCollection
argument_list|()
expr_stmt|;
try|try
block|{
return|return
name|childCollections
operator|.
name|containsKey
argument_list|(
name|XmldbURI
operator|.
name|xmldbUriFor
argument_list|(
name|name
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_URI
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|boolean
name|isOpen
parameter_list|()
throws|throws
name|XMLDBException
block|{
return|return
literal|true
return|;
block|}
comment|/** 	 *  Returns a list of collection names naming all child collections of the 	 *  current collection. Only the name of the collection is returned - not 	 *  the entire path to the collection. 	 * 	 *@return                     Description of the Return Value 	 *@exception  XMLDBException  Description of the Exception 	 */
specifier|public
name|String
index|[]
name|listChildCollections
parameter_list|()
throws|throws
name|XMLDBException
block|{
if|if
condition|(
name|childCollections
operator|==
literal|null
condition|)
name|readCollection
argument_list|()
expr_stmt|;
name|String
name|coll
index|[]
init|=
operator|new
name|String
index|[
name|childCollections
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|int
name|j
init|=
literal|0
decl_stmt|;
name|XmldbURI
name|uri
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|childCollections
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
name|uri
operator|=
operator|(
name|XmldbURI
operator|)
name|i
operator|.
name|next
argument_list|()
expr_stmt|;
name|coll
index|[
name|j
index|]
operator|=
name|uri
operator|.
name|lastSegment
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
return|return
name|coll
return|;
block|}
specifier|public
name|String
index|[]
name|getChildCollections
parameter_list|()
throws|throws
name|XMLDBException
block|{
return|return
name|listChildCollections
argument_list|()
return|;
block|}
specifier|public
name|String
index|[]
name|listResources
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|Vector
name|params
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
name|params
operator|.
name|addElement
argument_list|(
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|Vector
name|vec
init|=
operator|(
name|Vector
operator|)
name|rpcClient
operator|.
name|execute
argument_list|(
literal|"getDocumentListing"
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|String
index|[]
name|resources
init|=
operator|new
name|String
index|[
name|vec
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
return|return
operator|(
name|String
index|[]
operator|)
name|vec
operator|.
name|toArray
argument_list|(
name|resources
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|xre
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|xre
operator|.
name|getMessage
argument_list|()
argument_list|,
name|xre
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_COLLECTION
argument_list|,
literal|"An IO error occurred: "
operator|+
name|ioe
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ioe
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc) 	 * @see org.exist.xmldb.CollectionImpl#getResources() 	 */
specifier|public
name|String
index|[]
name|getResources
parameter_list|()
throws|throws
name|XMLDBException
block|{
return|return
name|listResources
argument_list|()
return|;
block|}
specifier|public
name|Resource
name|getResource
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|Vector
name|params
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
name|XmldbURI
name|docUri
decl_stmt|;
try|try
block|{
name|docUri
operator|=
name|XmldbURI
operator|.
name|xmldbUriFor
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_URI
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|params
operator|.
name|addElement
argument_list|(
name|getPathURI
argument_list|()
operator|.
name|append
argument_list|(
name|docUri
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Hashtable
name|hash
decl_stmt|;
try|try
block|{
name|hash
operator|=
operator|(
name|Hashtable
operator|)
name|rpcClient
operator|.
name|execute
argument_list|(
literal|"describeResource"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|xre
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|xre
operator|.
name|getMessage
argument_list|()
argument_list|,
name|xre
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_COLLECTION
argument_list|,
literal|"An IO error occurred: "
operator|+
name|ioe
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ioe
argument_list|)
throw|;
block|}
name|String
name|docName
init|=
operator|(
name|String
operator|)
name|hash
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
decl_stmt|;
if|if
condition|(
name|docName
operator|==
literal|null
condition|)
return|return
literal|null
return|;
comment|// resource does not exist!
name|int
name|p
decl_stmt|;
try|try
block|{
name|docUri
operator|=
name|XmldbURI
operator|.
name|xmldbUriFor
argument_list|(
name|docName
argument_list|)
operator|.
name|lastSegment
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_URI
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|Permission
name|perm
init|=
operator|new
name|Permission
argument_list|(
operator|(
name|String
operator|)
name|hash
operator|.
name|get
argument_list|(
literal|"owner"
argument_list|)
argument_list|,
operator|(
name|String
operator|)
name|hash
operator|.
name|get
argument_list|(
literal|"group"
argument_list|)
argument_list|,
operator|(
operator|(
name|Integer
operator|)
name|hash
operator|.
name|get
argument_list|(
literal|"permissions"
argument_list|)
operator|)
operator|.
name|intValue
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|type
init|=
operator|(
name|String
operator|)
name|hash
operator|.
name|get
argument_list|(
literal|"type"
argument_list|)
decl_stmt|;
name|int
name|contentLen
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|hash
operator|.
name|containsKey
argument_list|(
literal|"content-length"
argument_list|)
condition|)
name|contentLen
operator|=
operator|(
operator|(
name|Integer
operator|)
name|hash
operator|.
name|get
argument_list|(
literal|"content-length"
argument_list|)
operator|)
operator|.
name|intValue
argument_list|()
expr_stmt|;
if|if
condition|(
name|type
operator|==
literal|null
operator|||
name|type
operator|.
name|equals
argument_list|(
literal|"XMLResource"
argument_list|)
condition|)
block|{
name|RemoteXMLResource
name|r
init|=
operator|new
name|RemoteXMLResource
argument_list|(
name|this
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
name|docUri
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|r
operator|.
name|setPermissions
argument_list|(
name|perm
argument_list|)
expr_stmt|;
name|r
operator|.
name|setContentLength
argument_list|(
name|contentLen
argument_list|)
expr_stmt|;
name|r
operator|.
name|setDateCreated
argument_list|(
operator|(
name|Date
operator|)
name|hash
operator|.
name|get
argument_list|(
literal|"created"
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|setDateModified
argument_list|(
operator|(
name|Date
operator|)
name|hash
operator|.
name|get
argument_list|(
literal|"modified"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|hash
operator|.
name|containsKey
argument_list|(
literal|"mime-type"
argument_list|)
condition|)
name|r
operator|.
name|setMimeType
argument_list|(
operator|(
name|String
operator|)
name|hash
operator|.
name|get
argument_list|(
literal|"mime-type"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|r
return|;
block|}
else|else
block|{
name|RemoteBinaryResource
name|r
init|=
operator|new
name|RemoteBinaryResource
argument_list|(
name|this
argument_list|,
name|docUri
argument_list|)
decl_stmt|;
name|r
operator|.
name|setContentLength
argument_list|(
name|contentLen
argument_list|)
expr_stmt|;
name|r
operator|.
name|setPermissions
argument_list|(
name|perm
argument_list|)
expr_stmt|;
name|r
operator|.
name|setDateCreated
argument_list|(
operator|(
name|Date
operator|)
name|hash
operator|.
name|get
argument_list|(
literal|"created"
argument_list|)
argument_list|)
expr_stmt|;
name|r
operator|.
name|setDateModified
argument_list|(
operator|(
name|Date
operator|)
name|hash
operator|.
name|get
argument_list|(
literal|"modified"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|hash
operator|.
name|containsKey
argument_list|(
literal|"mime-type"
argument_list|)
condition|)
name|r
operator|.
name|setMimeType
argument_list|(
operator|(
name|String
operator|)
name|hash
operator|.
name|get
argument_list|(
literal|"mime-type"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|r
return|;
block|}
block|}
specifier|private
name|void
name|readCollection
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|childCollections
operator|=
operator|new
name|HashMap
argument_list|()
expr_stmt|;
name|Vector
name|params
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
name|params
operator|.
name|addElement
argument_list|(
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|Hashtable
name|collection
decl_stmt|;
try|try
block|{
name|collection
operator|=
operator|(
name|Hashtable
operator|)
name|rpcClient
operator|.
name|execute
argument_list|(
literal|"describeCollection"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|xre
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|xre
operator|.
name|getMessage
argument_list|()
argument_list|,
name|xre
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_COLLECTION
argument_list|,
literal|"An IO error occurred: "
operator|+
name|ioe
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ioe
argument_list|)
throw|;
block|}
name|Vector
name|collections
init|=
operator|(
name|Vector
operator|)
name|collection
operator|.
name|get
argument_list|(
literal|"collections"
argument_list|)
decl_stmt|;
name|permissions
operator|=
operator|new
name|Permission
argument_list|(
operator|(
name|String
operator|)
name|collection
operator|.
name|get
argument_list|(
literal|"owner"
argument_list|)
argument_list|,
operator|(
name|String
operator|)
name|collection
operator|.
name|get
argument_list|(
literal|"group"
argument_list|)
argument_list|,
operator|(
operator|(
name|Integer
operator|)
name|collection
operator|.
name|get
argument_list|(
literal|"permissions"
argument_list|)
operator|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|childName
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|collections
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|childName
operator|=
operator|(
name|String
operator|)
name|collections
operator|.
name|elementAt
argument_list|(
name|i
argument_list|)
expr_stmt|;
try|try
block|{
comment|//TODO: Should this use the checked version instead?
name|RemoteCollection
name|child
init|=
operator|new
name|RemoteCollection
argument_list|(
name|rpcClient
argument_list|,
name|this
argument_list|,
name|getPathURI
argument_list|()
operator|.
name|append
argument_list|(
name|XmldbURI
operator|.
name|create
argument_list|(
name|childName
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|addChildCollection
argument_list|(
name|child
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
block|}
block|}
block|}
specifier|public
name|void
name|registerService
parameter_list|(
name|Service
name|serv
parameter_list|)
throws|throws
name|XMLDBException
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|NOT_IMPLEMENTED
argument_list|)
throw|;
block|}
specifier|public
name|void
name|removeChildCollection
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|XMLDBException
block|{
try|try
block|{
name|removeChildCollection
argument_list|(
name|XmldbURI
operator|.
name|xmldbUriFor
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_URI
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|void
name|removeChildCollection
parameter_list|(
name|XmldbURI
name|name
parameter_list|)
throws|throws
name|XMLDBException
block|{
if|if
condition|(
name|childCollections
operator|==
literal|null
condition|)
name|readCollection
argument_list|()
expr_stmt|;
name|childCollections
operator|.
name|remove
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeResource
parameter_list|(
name|Resource
name|res
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|Vector
name|params
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
try|try
block|{
name|params
operator|.
name|addElement
argument_list|(
name|getPathURI
argument_list|()
operator|.
name|append
argument_list|(
name|XmldbURI
operator|.
name|xmldbUriFor
argument_list|(
name|res
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_URI
argument_list|,
name|e
argument_list|)
throw|;
block|}
try|try
block|{
name|rpcClient
operator|.
name|execute
argument_list|(
literal|"remove"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|xre
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_RESOURCE
argument_list|,
name|xre
operator|.
name|getMessage
argument_list|()
argument_list|,
name|xre
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|ioe
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ioe
argument_list|)
throw|;
block|}
block|}
specifier|public
name|Date
name|getCreationTime
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|Vector
name|params
init|=
operator|new
name|Vector
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|params
operator|.
name|addElement
argument_list|(
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
return|return
operator|(
name|Date
operator|)
name|rpcClient
operator|.
name|execute
argument_list|(
literal|"getCreationDate"
argument_list|,
name|params
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|UNKNOWN_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|UNKNOWN_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|void
name|setProperty
parameter_list|(
name|String
name|property
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|XMLDBException
block|{
if|if
condition|(
name|properties
operator|==
literal|null
condition|)
name|properties
operator|=
operator|new
name|Properties
argument_list|()
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
name|property
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|storeResource
parameter_list|(
name|Resource
name|res
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|storeResource
argument_list|(
name|res
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|storeResource
parameter_list|(
name|Resource
name|res
parameter_list|,
name|Date
name|a
parameter_list|,
name|Date
name|b
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|Object
name|content
init|=
name|res
operator|.
name|getContent
argument_list|()
decl_stmt|;
if|if
condition|(
name|content
operator|instanceof
name|File
condition|)
block|{
name|File
name|file
init|=
operator|(
name|File
operator|)
name|content
decl_stmt|;
if|if
condition|(
operator|!
name|file
operator|.
name|canRead
argument_list|()
condition|)
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_RESOURCE
argument_list|,
literal|"failed to read resource from file "
operator|+
name|file
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
throw|;
if|if
condition|(
name|file
operator|.
name|length
argument_list|()
operator|<
name|MAX_CHUNK_LENGTH
condition|)
block|{
operator|(
operator|(
name|RemoteXMLResource
operator|)
name|res
operator|)
operator|.
name|dateCreated
operator|=
name|a
expr_stmt|;
operator|(
operator|(
name|RemoteXMLResource
operator|)
name|res
operator|)
operator|.
name|dateModified
operator|=
name|b
expr_stmt|;
name|store
argument_list|(
operator|(
name|RemoteXMLResource
operator|)
name|res
argument_list|)
expr_stmt|;
block|}
else|else
block|{
operator|(
operator|(
name|RemoteXMLResource
operator|)
name|res
operator|)
operator|.
name|dateCreated
operator|=
name|a
expr_stmt|;
operator|(
operator|(
name|RemoteXMLResource
operator|)
name|res
operator|)
operator|.
name|dateModified
operator|=
name|b
expr_stmt|;
name|uploadAndStore
argument_list|(
name|res
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|res
operator|.
name|getResourceType
argument_list|()
operator|.
name|equals
argument_list|(
literal|"BinaryResource"
argument_list|)
condition|)
block|{
operator|(
operator|(
name|RemoteBinaryResource
operator|)
name|res
operator|)
operator|.
name|dateCreated
operator|=
name|a
expr_stmt|;
operator|(
operator|(
name|RemoteBinaryResource
operator|)
name|res
operator|)
operator|.
name|dateModified
operator|=
name|b
expr_stmt|;
name|store
argument_list|(
operator|(
name|RemoteBinaryResource
operator|)
name|res
argument_list|)
expr_stmt|;
block|}
else|else
block|{
operator|(
operator|(
name|RemoteXMLResource
operator|)
name|res
operator|)
operator|.
name|dateCreated
operator|=
name|a
expr_stmt|;
operator|(
operator|(
name|RemoteXMLResource
operator|)
name|res
operator|)
operator|.
name|dateModified
operator|=
name|b
expr_stmt|;
name|store
argument_list|(
operator|(
name|RemoteXMLResource
operator|)
name|res
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|store
parameter_list|(
name|RemoteXMLResource
name|res
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|byte
index|[]
name|data
init|=
name|res
operator|.
name|getData
argument_list|()
decl_stmt|;
name|Vector
name|params
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
name|params
operator|.
name|addElement
argument_list|(
name|data
argument_list|)
expr_stmt|;
try|try
block|{
name|params
operator|.
name|addElement
argument_list|(
name|getPathURI
argument_list|()
operator|.
name|append
argument_list|(
name|XmldbURI
operator|.
name|xmldbUriFor
argument_list|(
name|res
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_URI
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|params
operator|.
name|addElement
argument_list|(
operator|new
name|Integer
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|res
operator|.
name|dateCreated
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|addElement
argument_list|(
name|res
operator|.
name|dateCreated
argument_list|)
expr_stmt|;
name|params
operator|.
name|addElement
argument_list|(
name|res
operator|.
name|dateModified
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|rpcClient
operator|.
name|execute
argument_list|(
literal|"parse"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|xre
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_RESOURCE
argument_list|,
name|xre
operator|==
literal|null
condition|?
literal|"unknown error"
else|:
name|xre
operator|.
name|getMessage
argument_list|()
argument_list|,
name|xre
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|ioe
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ioe
argument_list|)
throw|;
block|}
block|}
specifier|private
name|void
name|store
parameter_list|(
name|RemoteBinaryResource
name|res
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|byte
index|[]
name|data
init|=
operator|(
name|byte
index|[]
operator|)
name|res
operator|.
name|getContent
argument_list|()
decl_stmt|;
name|Vector
name|params
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
name|params
operator|.
name|addElement
argument_list|(
name|data
argument_list|)
expr_stmt|;
try|try
block|{
name|params
operator|.
name|addElement
argument_list|(
name|getPathURI
argument_list|()
operator|.
name|append
argument_list|(
name|XmldbURI
operator|.
name|xmldbUriFor
argument_list|(
name|res
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_URI
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|params
operator|.
name|addElement
argument_list|(
name|res
operator|.
name|getMimeType
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|addElement
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|Date
operator|)
name|res
operator|.
name|dateCreated
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|addElement
argument_list|(
operator|(
name|Date
operator|)
name|res
operator|.
name|dateCreated
argument_list|)
expr_stmt|;
name|params
operator|.
name|addElement
argument_list|(
operator|(
name|Date
operator|)
name|res
operator|.
name|dateModified
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|rpcClient
operator|.
name|execute
argument_list|(
literal|"storeBinary"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|xre
parameter_list|)
block|{
comment|/* the error code previously was INVALID_RESOURCE, but this was also thrown 		     * in case of insufficient persmissions. As you cannot tell here any more what the  		     * error really was, use UNKNOWN_ERROR. The reason is in XmlRpcResponseProcessor#processException 		     * which will only pass on the error message. 		     */
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|UNKNOWN_ERROR
argument_list|,
name|xre
operator|==
literal|null
condition|?
literal|"unknown error"
else|:
name|xre
operator|.
name|getMessage
argument_list|()
argument_list|,
name|xre
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|ioe
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ioe
argument_list|)
throw|;
block|}
block|}
specifier|private
name|void
name|uploadAndStore
parameter_list|(
name|Resource
name|res
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|File
name|file
init|=
operator|(
name|File
operator|)
name|res
operator|.
name|getContent
argument_list|()
decl_stmt|;
name|byte
index|[]
name|chunk
init|=
operator|new
name|byte
index|[
name|MAX_UPLOAD_CHUNK
index|]
decl_stmt|;
try|try
block|{
name|FileInputStream
name|is
init|=
operator|new
name|FileInputStream
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|int
name|len
decl_stmt|;
name|String
name|fileName
init|=
literal|null
decl_stmt|;
name|Vector
name|params
decl_stmt|;
name|byte
index|[]
name|compressed
decl_stmt|;
while|while
condition|(
operator|(
name|len
operator|=
name|is
operator|.
name|read
argument_list|(
name|chunk
argument_list|)
operator|)
operator|>
operator|-
literal|1
condition|)
block|{
name|compressed
operator|=
name|Compressor
operator|.
name|compress
argument_list|(
name|chunk
argument_list|,
name|len
argument_list|)
expr_stmt|;
name|params
operator|=
operator|new
name|Vector
argument_list|()
expr_stmt|;
if|if
condition|(
name|fileName
operator|!=
literal|null
condition|)
name|params
operator|.
name|addElement
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
name|params
operator|.
name|addElement
argument_list|(
name|compressed
argument_list|)
expr_stmt|;
name|params
operator|.
name|addElement
argument_list|(
operator|new
name|Integer
argument_list|(
name|len
argument_list|)
argument_list|)
expr_stmt|;
name|fileName
operator|=
operator|(
name|String
operator|)
name|rpcClient
operator|.
name|execute
argument_list|(
literal|"uploadCompressed"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
name|params
operator|=
operator|new
name|Vector
argument_list|()
expr_stmt|;
name|params
operator|.
name|addElement
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
try|try
block|{
name|params
operator|.
name|addElement
argument_list|(
name|getPathURI
argument_list|()
operator|.
name|append
argument_list|(
name|XmldbURI
operator|.
name|xmldbUriFor
argument_list|(
name|res
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_URI
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|params
operator|.
name|addElement
argument_list|(
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|RemoteXMLResource
operator|)
name|res
operator|)
operator|.
name|dateCreated
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|addElement
argument_list|(
operator|(
operator|(
name|RemoteXMLResource
operator|)
name|res
operator|)
operator|.
name|dateCreated
argument_list|)
expr_stmt|;
name|params
operator|.
name|addElement
argument_list|(
operator|(
operator|(
name|RemoteXMLResource
operator|)
name|res
operator|)
operator|.
name|dateModified
argument_list|)
expr_stmt|;
block|}
name|rpcClient
operator|.
name|execute
argument_list|(
literal|"parseLocal"
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_RESOURCE
argument_list|,
literal|"could not read resource from file "
operator|+
name|file
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_RESOURCE
argument_list|,
literal|"failed to read resource from file "
operator|+
name|file
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
literal|"networking error"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|Permission
name|getPermissions
parameter_list|()
block|{
return|return
name|permissions
return|;
block|}
comment|/* (non-Javadoc)      * @see org.exist.xmldb.CollectionImpl#isRemoteCollection()      */
specifier|public
name|boolean
name|isRemoteCollection
parameter_list|()
throws|throws
name|XMLDBException
block|{
return|return
literal|true
return|;
block|}
comment|//You probably will have to call this method from this cast :
comment|//((org.exist.xmldb.CollectionImpl)collection).getURI()
specifier|public
name|XmldbURI
name|getURI
parameter_list|()
block|{
name|StringBuffer
name|accessor
init|=
operator|new
name|StringBuffer
argument_list|(
name|XmldbURI
operator|.
name|XMLDB_URI_PREFIX
argument_list|)
decl_stmt|;
comment|//TODO : get the name from client
name|accessor
operator|.
name|append
argument_list|(
literal|"exist"
argument_list|)
expr_stmt|;
name|accessor
operator|.
name|append
argument_list|(
literal|"://"
argument_list|)
expr_stmt|;
name|accessor
operator|.
name|append
argument_list|(
name|rpcClient
operator|.
name|getURL
argument_list|()
operator|.
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|rpcClient
operator|.
name|getURL
argument_list|()
operator|.
name|getPort
argument_list|()
operator|!=
operator|-
literal|1
condition|)
name|accessor
operator|.
name|append
argument_list|(
literal|":"
argument_list|)
operator|.
name|append
argument_list|(
name|rpcClient
operator|.
name|getURL
argument_list|()
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|accessor
operator|.
name|append
argument_list|(
name|rpcClient
operator|.
name|getURL
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
comment|//TODO : cache it when constructed
return|return
name|XmldbURI
operator|.
name|create
argument_list|(
name|accessor
operator|.
name|toString
argument_list|()
argument_list|,
name|getPath
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
comment|//TODO : should never happen
return|return
literal|null
return|;
block|}
block|}
block|}
end_class

end_unit

