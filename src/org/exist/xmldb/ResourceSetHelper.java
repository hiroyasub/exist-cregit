begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-2005,  Wolfgang M. Meier (meier@ifs.tu-darmstadt.de)  *  *  This library is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Library General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This library is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Library General Public License for more details.  *  *  You should have received a copy of the GNU Library General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.  *  *  $Id:  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xmldb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|ResourceSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_comment
comment|/**  * @author jmv  *  */
end_comment

begin_class
specifier|public
class|class
name|ResourceSetHelper
block|{
specifier|public
specifier|static
name|ResourceSet
name|intersection
parameter_list|(
specifier|final
name|ResourceSet
name|s1
parameter_list|,
specifier|final
name|ResourceSet
name|s2
parameter_list|)
throws|throws
name|XMLDBException
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Resource
argument_list|>
name|m1
init|=
operator|new
name|MapResourceSet
argument_list|(
name|s1
argument_list|)
operator|.
name|getResourcesMap
argument_list|()
decl_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Resource
argument_list|>
name|m2
init|=
operator|new
name|MapResourceSet
argument_list|(
name|s2
argument_list|)
operator|.
name|getResourcesMap
argument_list|()
decl_stmt|;
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|set1
init|=
name|m1
operator|.
name|keySet
argument_list|()
decl_stmt|;
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|set2
init|=
name|m2
operator|.
name|keySet
argument_list|()
decl_stmt|;
name|set1
operator|.
name|retainAll
argument_list|(
name|set2
argument_list|)
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Resource
argument_list|>
name|m
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|final
name|Iterator
argument_list|<
name|String
argument_list|>
name|iter
init|=
name|set1
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
specifier|final
name|String
name|key
init|=
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
specifier|final
name|Resource
name|resource
init|=
name|m1
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
name|m
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|resource
argument_list|)
expr_stmt|;
block|}
specifier|final
name|MapResourceSet
name|res
init|=
operator|new
name|MapResourceSet
argument_list|(
name|m
argument_list|)
decl_stmt|;
comment|/*          VectorResourceSet res = new VectorResourceSet();           Collection c1 = new VectorResourceSet(s1).getResources();          res.getResources().addAll( c1 );          Collection c2 = new VectorResourceSet(s2).getResources();          res.getResources().retainAll(c2);          return res;          */
return|return
name|res
return|;
block|}
block|}
end_class

end_unit

