begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xmldb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|DataFormatException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|Inflater
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlrpc
operator|.
name|XmlRpcException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Permission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|serializers
operator|.
name|EXistOutputKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|EXistInputSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|ErrorCodes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractRemoteResource
implements|implements
name|EXistResource
implements|,
name|ExtendedResource
implements|,
name|Resource
block|{
specifier|protected
name|XmldbURI
name|path
init|=
literal|null
decl_stmt|;
specifier|protected
name|String
name|mimeType
init|=
literal|null
decl_stmt|;
specifier|protected
name|RemoteCollection
name|parent
decl_stmt|;
specifier|protected
name|File
name|file
init|=
literal|null
decl_stmt|;
specifier|protected
name|File
name|contentFile
init|=
literal|null
decl_stmt|;
specifier|protected
name|InputSource
name|inputSource
init|=
literal|null
decl_stmt|;
specifier|protected
name|boolean
name|isLocal
init|=
literal|false
decl_stmt|;
specifier|protected
name|long
name|contentLen
init|=
literal|0L
decl_stmt|;
specifier|protected
name|Permission
name|permissions
init|=
literal|null
decl_stmt|;
specifier|protected
name|Date
name|dateCreated
init|=
literal|null
decl_stmt|;
specifier|protected
name|Date
name|dateModified
init|=
literal|null
decl_stmt|;
specifier|public
name|AbstractRemoteResource
parameter_list|(
name|RemoteCollection
name|parent
parameter_list|,
name|XmldbURI
name|documentName
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|this
operator|.
name|parent
operator|=
name|parent
expr_stmt|;
if|if
condition|(
name|documentName
operator|.
name|numSegments
argument_list|()
operator|>
literal|1
condition|)
block|{
name|this
operator|.
name|path
operator|=
name|documentName
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|path
operator|=
name|parent
operator|.
name|getPathURI
argument_list|()
operator|.
name|append
argument_list|(
name|documentName
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|finalize
parameter_list|()
throws|throws
name|Throwable
block|{
name|freeLocalResources
argument_list|()
expr_stmt|;
name|super
operator|.
name|finalize
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|freeLocalResources
parameter_list|()
block|{
name|file
operator|=
literal|null
expr_stmt|;
name|inputSource
operator|=
literal|null
expr_stmt|;
if|if
condition|(
name|contentFile
operator|!=
literal|null
condition|)
block|{
name|contentFile
operator|.
name|delete
argument_list|()
expr_stmt|;
name|contentFile
operator|=
literal|null
expr_stmt|;
block|}
name|isLocal
operator|=
literal|true
expr_stmt|;
block|}
comment|/* (non-Javadoc) 	 * @see org.xmldb.api.base.Resource#getContent() 	 */
specifier|public
name|Object
name|getContent
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|Object
name|res
init|=
name|getExtendedContent
argument_list|()
decl_stmt|;
comment|// Backward compatibility
if|if
condition|(
name|isLocal
condition|)
return|return
name|res
return|;
if|if
condition|(
name|res
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|res
operator|instanceof
name|File
condition|)
block|{
return|return
name|readFile
argument_list|(
operator|(
name|File
operator|)
name|res
argument_list|)
return|;
block|}
if|else if
condition|(
name|res
operator|instanceof
name|InputSource
condition|)
block|{
return|return
name|readFile
argument_list|(
operator|(
name|InputSource
operator|)
name|res
argument_list|)
return|;
block|}
block|}
return|return
name|res
return|;
block|}
comment|/* (non-Javadoc) 	 * @see org.xmldb.api.base.Resource#getContent() 	 */
comment|// Backward compatibility
specifier|protected
name|byte
index|[]
name|getData
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|Object
name|res
init|=
name|getExtendedContent
argument_list|()
decl_stmt|;
if|if
condition|(
name|res
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|res
operator|instanceof
name|File
condition|)
block|{
return|return
name|readFile
argument_list|(
operator|(
name|File
operator|)
name|res
argument_list|)
return|;
block|}
if|else if
condition|(
name|res
operator|instanceof
name|InputSource
condition|)
block|{
return|return
name|readFile
argument_list|(
operator|(
name|InputSource
operator|)
name|res
argument_list|)
return|;
block|}
if|else if
condition|(
name|res
operator|instanceof
name|String
condition|)
block|{
try|try
block|{
return|return
operator|(
operator|(
name|String
operator|)
name|res
operator|)
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|UnsupportedEncodingException
name|uee
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|uee
operator|.
name|getMessage
argument_list|()
argument_list|,
name|uee
argument_list|)
throw|;
block|}
block|}
block|}
return|return
operator|(
name|byte
index|[]
operator|)
name|res
return|;
block|}
specifier|public
name|int
name|getContentLength
parameter_list|()
throws|throws
name|XMLDBException
block|{
return|return
operator|(
name|int
operator|)
name|contentLen
return|;
block|}
comment|/* (non-Javadoc) 	 * @see org.exist.xmldb.EXistResource#getCreationTime() 	 */
specifier|public
name|Date
name|getCreationTime
parameter_list|()
throws|throws
name|XMLDBException
block|{
return|return
name|dateCreated
return|;
block|}
specifier|public
name|long
name|getExtendedContentLength
parameter_list|()
throws|throws
name|XMLDBException
block|{
return|return
name|contentLen
return|;
block|}
comment|/* (non-Javadoc) 	 * @see org.exist.xmldb.EXistResource#getLastModificationTime() 	 */
specifier|public
name|Date
name|getLastModificationTime
parameter_list|()
throws|throws
name|XMLDBException
block|{
return|return
name|dateModified
return|;
block|}
comment|/* (non-Javadoc) 	* @see org.exist.xmldb.EXistResource#getMimeType() 	*/
specifier|public
name|String
name|getMimeType
parameter_list|()
block|{
return|return
name|mimeType
return|;
block|}
comment|/* (non-Javadoc) 	 * @see org.xmldb.api.base.Resource#getParentCollection() 	 */
specifier|public
name|Collection
name|getParentCollection
parameter_list|()
throws|throws
name|XMLDBException
block|{
return|return
name|parent
return|;
block|}
comment|/* (non-Javadoc) 	 * @see org.exist.xmldb.EXistResource#getPermissions() 	 */
specifier|public
name|Permission
name|getPermissions
parameter_list|()
block|{
return|return
name|permissions
return|;
block|}
specifier|protected
name|boolean
name|setContentInternal
parameter_list|(
name|Object
name|value
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|freeLocalResources
argument_list|()
expr_stmt|;
name|boolean
name|wasSet
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|value
operator|instanceof
name|File
condition|)
block|{
name|file
operator|=
operator|(
name|File
operator|)
name|value
expr_stmt|;
name|wasSet
operator|=
literal|true
expr_stmt|;
block|}
if|else if
condition|(
name|value
operator|instanceof
name|InputSource
condition|)
block|{
name|inputSource
operator|=
operator|(
name|InputSource
operator|)
name|value
expr_stmt|;
name|wasSet
operator|=
literal|true
expr_stmt|;
block|}
return|return
name|wasSet
return|;
block|}
specifier|public
name|void
name|setContentLength
parameter_list|(
name|int
name|len
parameter_list|)
block|{
name|this
operator|.
name|contentLen
operator|=
name|len
expr_stmt|;
block|}
comment|/* (non-Javadoc) 	* @see org.exist.xmldb.EXistResource#setMimeType(java.lang.String) 	*/
specifier|public
name|void
name|setMimeType
parameter_list|(
name|String
name|mime
parameter_list|)
block|{
name|this
operator|.
name|mimeType
operator|=
name|mime
expr_stmt|;
block|}
specifier|public
name|void
name|setPermissions
parameter_list|(
name|Permission
name|perms
parameter_list|)
block|{
name|permissions
operator|=
name|perms
expr_stmt|;
block|}
specifier|public
name|void
name|getContentIntoAFile
parameter_list|(
name|File
name|localfile
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|FileOutputStream
name|fos
init|=
literal|null
decl_stmt|;
name|BufferedOutputStream
name|bos
init|=
literal|null
decl_stmt|;
try|try
block|{
name|fos
operator|=
operator|new
name|FileOutputStream
argument_list|(
name|localfile
argument_list|)
expr_stmt|;
name|bos
operator|=
operator|new
name|BufferedOutputStream
argument_list|(
name|fos
argument_list|)
expr_stmt|;
name|getContentIntoAStream
argument_list|(
name|bos
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|ioe
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ioe
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|bos
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|bos
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
comment|// IgnoreIT(R)
block|}
block|}
if|if
condition|(
name|fos
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|fos
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
comment|// IgnoreIT(R)
block|}
block|}
block|}
block|}
specifier|protected
name|void
name|getRemoteContentIntoLocalFile
parameter_list|(
name|OutputStream
name|os
parameter_list|,
name|boolean
name|isRetrieve
parameter_list|,
name|int
name|handle
parameter_list|,
name|int
name|pos
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|FileOutputStream
name|fos
init|=
literal|null
decl_stmt|;
name|BufferedOutputStream
name|bos
init|=
literal|null
decl_stmt|;
name|Properties
name|properties
init|=
name|parent
operator|.
name|getProperties
argument_list|()
decl_stmt|;
name|String
name|command
init|=
literal|null
decl_stmt|;
name|List
name|params
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
if|if
condition|(
name|isRetrieve
condition|)
block|{
name|command
operator|=
literal|"retrieveFirstChunk"
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
operator|new
name|Integer
argument_list|(
name|handle
argument_list|)
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
operator|new
name|Integer
argument_list|(
name|pos
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|command
operator|=
literal|"getDocumentData"
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|params
operator|.
name|add
argument_list|(
name|properties
argument_list|)
expr_stmt|;
try|try
block|{
name|File
name|tmpfile
init|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"eXistARR"
argument_list|,
name|getResourceType
argument_list|()
operator|.
name|equals
argument_list|(
literal|"XMLResource"
argument_list|)
condition|?
literal|".xml"
else|:
literal|".bin"
argument_list|)
decl_stmt|;
name|tmpfile
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
name|fos
operator|=
operator|new
name|FileOutputStream
argument_list|(
name|tmpfile
argument_list|)
expr_stmt|;
name|bos
operator|=
operator|new
name|BufferedOutputStream
argument_list|(
name|fos
argument_list|)
expr_stmt|;
name|Map
name|table
init|=
operator|(
name|Map
operator|)
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
name|command
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|String
name|method
decl_stmt|;
name|boolean
name|useLongOffset
decl_stmt|;
if|if
condition|(
name|table
operator|.
name|containsKey
argument_list|(
literal|"supports-long-offset"
argument_list|)
operator|&&
operator|(
name|Boolean
operator|)
operator|(
name|table
operator|.
name|get
argument_list|(
literal|"supports-long-offset"
argument_list|)
operator|)
condition|)
block|{
name|useLongOffset
operator|=
literal|true
expr_stmt|;
name|method
operator|=
literal|"getNextExtendedChunk"
expr_stmt|;
block|}
else|else
block|{
name|useLongOffset
operator|=
literal|false
expr_stmt|;
name|method
operator|=
literal|"getNextChunk"
expr_stmt|;
block|}
name|long
name|offset
init|=
operator|(
operator|(
name|Integer
operator|)
name|table
operator|.
name|get
argument_list|(
literal|"offset"
argument_list|)
operator|)
operator|.
name|intValue
argument_list|()
decl_stmt|;
name|byte
index|[]
name|data
init|=
operator|(
name|byte
index|[]
operator|)
name|table
operator|.
name|get
argument_list|(
literal|"data"
argument_list|)
decl_stmt|;
name|boolean
name|isCompressed
init|=
name|properties
operator|.
name|getProperty
argument_list|(
name|EXistOutputKeys
operator|.
name|COMPRESS_OUTPUT
argument_list|,
literal|"no"
argument_list|)
operator|.
name|equals
argument_list|(
literal|"yes"
argument_list|)
decl_stmt|;
comment|// One for the local cached file
name|Inflater
name|dec
init|=
literal|null
decl_stmt|;
name|byte
index|[]
name|decResult
init|=
literal|null
decl_stmt|;
name|int
name|decLength
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|isCompressed
condition|)
block|{
name|dec
operator|=
operator|new
name|Inflater
argument_list|()
expr_stmt|;
name|decResult
operator|=
operator|new
name|byte
index|[
literal|65536
index|]
expr_stmt|;
name|dec
operator|.
name|setInput
argument_list|(
name|data
argument_list|)
expr_stmt|;
do|do
block|{
name|decLength
operator|=
name|dec
operator|.
name|inflate
argument_list|(
name|decResult
argument_list|)
expr_stmt|;
name|bos
operator|.
name|write
argument_list|(
name|decResult
argument_list|,
literal|0
argument_list|,
name|decLength
argument_list|)
expr_stmt|;
comment|// And other for the stream where we want to save it!
if|if
condition|(
name|os
operator|!=
literal|null
condition|)
name|os
operator|.
name|write
argument_list|(
name|decResult
argument_list|,
literal|0
argument_list|,
name|decLength
argument_list|)
expr_stmt|;
block|}
do|while
condition|(
name|decLength
operator|==
name|decResult
operator|.
name|length
operator|||
operator|!
name|dec
operator|.
name|needsInput
argument_list|()
condition|)
do|;
block|}
else|else
block|{
name|bos
operator|.
name|write
argument_list|(
name|data
argument_list|)
expr_stmt|;
comment|// And other for the stream where we want to save it!
if|if
condition|(
name|os
operator|!=
literal|null
condition|)
name|os
operator|.
name|write
argument_list|(
name|data
argument_list|)
expr_stmt|;
block|}
while|while
condition|(
name|offset
operator|>
literal|0
condition|)
block|{
name|params
operator|.
name|clear
argument_list|()
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|table
operator|.
name|get
argument_list|(
literal|"handle"
argument_list|)
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|useLongOffset
condition|?
name|Long
operator|.
name|toString
argument_list|(
name|offset
argument_list|)
else|:
operator|new
name|Integer
argument_list|(
operator|(
name|int
operator|)
name|offset
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|=
operator|(
name|Map
operator|)
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
name|method
argument_list|,
name|params
argument_list|)
expr_stmt|;
name|offset
operator|=
name|useLongOffset
condition|?
operator|new
name|Long
argument_list|(
operator|(
name|String
operator|)
name|table
operator|.
name|get
argument_list|(
literal|"offset"
argument_list|)
argument_list|)
operator|.
name|longValue
argument_list|()
else|:
operator|(
operator|(
name|Integer
operator|)
name|table
operator|.
name|get
argument_list|(
literal|"offset"
argument_list|)
operator|)
operator|.
name|longValue
argument_list|()
expr_stmt|;
name|data
operator|=
operator|(
name|byte
index|[]
operator|)
name|table
operator|.
name|get
argument_list|(
literal|"data"
argument_list|)
expr_stmt|;
comment|// One for the local cached file
if|if
condition|(
name|isCompressed
condition|)
block|{
name|dec
operator|.
name|setInput
argument_list|(
name|data
argument_list|)
expr_stmt|;
do|do
block|{
name|decLength
operator|=
name|dec
operator|.
name|inflate
argument_list|(
name|decResult
argument_list|)
expr_stmt|;
name|bos
operator|.
name|write
argument_list|(
name|decResult
argument_list|,
literal|0
argument_list|,
name|decLength
argument_list|)
expr_stmt|;
comment|// And other for the stream where we want to save it!
if|if
condition|(
name|os
operator|!=
literal|null
condition|)
name|os
operator|.
name|write
argument_list|(
name|decResult
argument_list|,
literal|0
argument_list|,
name|decLength
argument_list|)
expr_stmt|;
block|}
do|while
condition|(
name|decLength
operator|==
name|decResult
operator|.
name|length
operator|||
operator|!
name|dec
operator|.
name|needsInput
argument_list|()
condition|)
do|;
block|}
else|else
block|{
name|bos
operator|.
name|write
argument_list|(
name|data
argument_list|)
expr_stmt|;
comment|// And other for the stream where we want to save it!
if|if
condition|(
name|os
operator|!=
literal|null
condition|)
name|os
operator|.
name|write
argument_list|(
name|data
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|dec
operator|!=
literal|null
condition|)
name|dec
operator|.
name|end
argument_list|()
expr_stmt|;
name|isLocal
operator|=
literal|false
expr_stmt|;
name|contentFile
operator|=
name|tmpfile
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|xre
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_RESOURCE
argument_list|,
name|xre
operator|.
name|getMessage
argument_list|()
argument_list|,
name|xre
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|ioe
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ioe
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|DataFormatException
name|dfe
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|dfe
operator|.
name|getMessage
argument_list|()
argument_list|,
name|dfe
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|bos
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|bos
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
comment|//IgnoreIT(R)
block|}
block|}
if|if
condition|(
name|fos
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|fos
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
comment|//IgnoreIT(R)
block|}
block|}
block|}
block|}
specifier|protected
specifier|static
name|InputStream
name|getAnyStream
parameter_list|(
name|Object
name|obj
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|InputStream
name|bis
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|obj
operator|instanceof
name|String
condition|)
block|{
try|try
block|{
name|bis
operator|=
operator|new
name|ByteArrayInputStream
argument_list|(
operator|(
operator|(
name|String
operator|)
name|obj
operator|)
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedEncodingException
name|uee
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|uee
operator|.
name|getMessage
argument_list|()
argument_list|,
name|uee
argument_list|)
throw|;
block|}
block|}
if|else if
condition|(
name|obj
operator|instanceof
name|byte
index|[]
condition|)
block|{
name|bis
operator|=
operator|new
name|ByteArrayInputStream
argument_list|(
operator|(
name|byte
index|[]
operator|)
name|obj
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
literal|"don't know how to handle value of type "
operator|+
name|obj
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
throw|;
block|}
return|return
name|bis
return|;
block|}
specifier|protected
name|void
name|getContentIntoAStreamInternal
parameter_list|(
name|OutputStream
name|os
parameter_list|,
name|Object
name|obj
parameter_list|,
name|boolean
name|isRetrieve
parameter_list|,
name|int
name|handle
parameter_list|,
name|int
name|pos
parameter_list|)
throws|throws
name|XMLDBException
block|{
if|if
condition|(
name|file
operator|!=
literal|null
operator|||
name|contentFile
operator|!=
literal|null
operator|||
name|inputSource
operator|!=
literal|null
operator|||
name|obj
operator|!=
literal|null
condition|)
block|{
name|FileInputStream
name|fis
init|=
literal|null
decl_stmt|;
name|InputStream
name|bis
init|=
literal|null
decl_stmt|;
try|try
block|{
comment|// First, the local content, then the remote one!!!!
if|if
condition|(
name|file
operator|!=
literal|null
condition|)
block|{
name|fis
operator|=
operator|new
name|FileInputStream
argument_list|(
name|file
argument_list|)
expr_stmt|;
name|bis
operator|=
operator|new
name|BufferedInputStream
argument_list|(
name|fis
argument_list|,
literal|655360
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|inputSource
operator|!=
literal|null
condition|)
block|{
name|bis
operator|=
name|inputSource
operator|.
name|getByteStream
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|obj
operator|!=
literal|null
condition|)
block|{
name|bis
operator|=
name|getAnyStream
argument_list|(
name|obj
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|fis
operator|=
operator|new
name|FileInputStream
argument_list|(
name|contentFile
argument_list|)
expr_stmt|;
name|bis
operator|=
operator|new
name|BufferedInputStream
argument_list|(
name|fis
argument_list|,
literal|655360
argument_list|)
expr_stmt|;
block|}
name|int
name|readed
decl_stmt|;
name|byte
name|buffer
index|[]
init|=
operator|new
name|byte
index|[
literal|65536
index|]
decl_stmt|;
while|while
condition|(
operator|(
name|readed
operator|=
name|bis
operator|.
name|read
argument_list|(
name|buffer
argument_list|)
operator|)
operator|!=
operator|-
literal|1
condition|)
block|{
name|os
operator|.
name|write
argument_list|(
name|buffer
argument_list|,
literal|0
argument_list|,
name|readed
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|ioe
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ioe
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|inputSource
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|bis
operator|!=
literal|null
condition|)
block|{
comment|// As it comes from an input source, we cannot blindly close it,
comment|// but at least let's reset it! (if it is possible)
if|if
condition|(
name|bis
operator|.
name|markSupported
argument_list|()
condition|)
block|{
try|try
block|{
name|bis
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
comment|//IgnoreIT(R)
block|}
block|}
block|}
block|}
else|else
block|{
if|if
condition|(
name|bis
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|bis
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
comment|//IgnoreIT(R)
block|}
block|}
if|if
condition|(
name|fis
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|fis
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
comment|//IgnoreIT(R)
block|}
block|}
block|}
block|}
block|}
else|else
block|{
comment|// Let's fetch it, and save just in time!!!
name|getRemoteContentIntoLocalFile
argument_list|(
name|os
argument_list|,
name|isRetrieve
argument_list|,
name|handle
argument_list|,
name|pos
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|Object
name|getExtendedContentInternal
parameter_list|(
name|Object
name|obj
parameter_list|,
name|boolean
name|isRetrieve
parameter_list|,
name|int
name|handle
parameter_list|,
name|int
name|pos
parameter_list|)
throws|throws
name|XMLDBException
block|{
if|if
condition|(
name|obj
operator|!=
literal|null
condition|)
return|return
name|obj
return|;
if|if
condition|(
name|file
operator|!=
literal|null
condition|)
return|return
name|file
return|;
if|if
condition|(
name|inputSource
operator|!=
literal|null
condition|)
return|return
name|inputSource
return|;
if|if
condition|(
name|contentFile
operator|==
literal|null
condition|)
name|getRemoteContentIntoLocalFile
argument_list|(
literal|null
argument_list|,
name|isRetrieve
argument_list|,
name|handle
argument_list|,
name|pos
argument_list|)
expr_stmt|;
return|return
name|contentFile
return|;
block|}
specifier|protected
name|InputStream
name|getStreamContentInternal
parameter_list|(
name|Object
name|obj
parameter_list|,
name|boolean
name|isRetrieve
parameter_list|,
name|int
name|handle
parameter_list|,
name|int
name|pos
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|InputStream
name|retval
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|file
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|retval
operator|=
operator|new
name|FileInputStream
argument_list|(
name|file
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|fnfe
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|fnfe
operator|.
name|getMessage
argument_list|()
argument_list|,
name|fnfe
argument_list|)
throw|;
block|}
block|}
if|else if
condition|(
name|inputSource
operator|!=
literal|null
condition|)
block|{
name|retval
operator|=
name|inputSource
operator|.
name|getByteStream
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|obj
operator|!=
literal|null
condition|)
block|{
name|retval
operator|=
name|getAnyStream
argument_list|(
name|obj
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// At least one value, please!!!
if|if
condition|(
name|contentFile
operator|==
literal|null
condition|)
name|getRemoteContentIntoLocalFile
argument_list|(
literal|null
argument_list|,
name|isRetrieve
argument_list|,
name|handle
argument_list|,
name|pos
argument_list|)
expr_stmt|;
try|try
block|{
name|retval
operator|=
operator|new
name|FileInputStream
argument_list|(
name|contentFile
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|fnfe
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|fnfe
operator|.
name|getMessage
argument_list|()
argument_list|,
name|fnfe
argument_list|)
throw|;
block|}
block|}
return|return
name|retval
return|;
block|}
specifier|protected
name|long
name|getStreamLengthInternal
parameter_list|(
name|Object
name|obj
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|long
name|retval
init|=
operator|-
literal|1
decl_stmt|;
if|if
condition|(
name|file
operator|!=
literal|null
condition|)
block|{
name|retval
operator|=
name|file
operator|.
name|length
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|inputSource
operator|!=
literal|null
operator|&&
name|inputSource
operator|instanceof
name|EXistInputSource
condition|)
block|{
name|retval
operator|=
operator|(
operator|(
name|EXistInputSource
operator|)
name|inputSource
operator|)
operator|.
name|getByteStreamLength
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|obj
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|obj
operator|instanceof
name|String
condition|)
block|{
try|try
block|{
name|retval
operator|=
operator|(
operator|(
name|String
operator|)
name|obj
operator|)
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
operator|.
name|length
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedEncodingException
name|uee
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|uee
operator|.
name|getMessage
argument_list|()
argument_list|,
name|uee
argument_list|)
throw|;
block|}
block|}
if|else if
condition|(
name|obj
operator|instanceof
name|byte
index|[]
condition|)
block|{
name|retval
operator|=
operator|(
operator|(
name|byte
index|[]
operator|)
name|obj
operator|)
operator|.
name|length
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
literal|"don't know how to handle value of type "
operator|+
name|obj
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
throw|;
block|}
block|}
if|else if
condition|(
name|contentFile
operator|!=
literal|null
condition|)
block|{
name|retval
operator|=
name|contentFile
operator|.
name|length
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|Properties
name|properties
init|=
name|parent
operator|.
name|getProperties
argument_list|()
decl_stmt|;
name|List
name|params
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|properties
argument_list|)
expr_stmt|;
try|try
block|{
name|Map
name|table
init|=
operator|(
name|Map
operator|)
name|parent
operator|.
name|getClient
argument_list|()
operator|.
name|execute
argument_list|(
literal|"describeResource"
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|retval
operator|=
operator|(
operator|(
name|Integer
operator|)
name|table
operator|.
name|get
argument_list|(
literal|"content-length"
argument_list|)
operator|)
operator|.
name|intValue
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XmlRpcException
name|xre
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_RESOURCE
argument_list|,
name|xre
operator|.
name|getMessage
argument_list|()
argument_list|,
name|xre
argument_list|)
throw|;
block|}
block|}
return|return
name|retval
return|;
block|}
specifier|private
specifier|static
name|byte
index|[]
name|readFile
parameter_list|(
name|File
name|file
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|String
name|errmsg
init|=
literal|"file "
operator|+
name|file
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|readFile
argument_list|(
operator|new
name|FileInputStream
argument_list|(
name|file
argument_list|)
argument_list|,
name|errmsg
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|errmsg
operator|+
literal|" could not be found"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
specifier|static
name|byte
index|[]
name|readFile
parameter_list|(
name|InputSource
name|is
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|String
name|retval
init|=
literal|"<streamunknown>"
decl_stmt|;
if|if
condition|(
name|is
operator|instanceof
name|EXistInputSource
condition|)
block|{
name|retval
operator|=
operator|(
operator|(
name|EXistInputSource
operator|)
name|is
operator|)
operator|.
name|getSymbolicPath
argument_list|()
expr_stmt|;
block|}
return|return
name|readFile
argument_list|(
name|is
operator|.
name|getByteStream
argument_list|()
argument_list|,
literal|"input source "
operator|+
name|retval
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|byte
index|[]
name|readFile
parameter_list|(
name|InputStream
name|is
parameter_list|,
name|String
name|errmsg
parameter_list|)
throws|throws
name|XMLDBException
block|{
if|if
condition|(
name|errmsg
operator|==
literal|null
condition|)
name|errmsg
operator|=
literal|"stream"
expr_stmt|;
try|try
block|{
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|(
literal|2048
argument_list|)
decl_stmt|;
name|byte
index|[]
name|temp
init|=
operator|new
name|byte
index|[
literal|1024
index|]
decl_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
while|while
condition|(
operator|(
name|count
operator|=
name|is
operator|.
name|read
argument_list|(
name|temp
argument_list|)
operator|)
operator|>
operator|-
literal|1
condition|)
block|{
name|bos
operator|.
name|write
argument_list|(
name|temp
argument_list|,
literal|0
argument_list|,
name|count
argument_list|)
expr_stmt|;
block|}
return|return
name|bos
operator|.
name|toByteArray
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
literal|"IO exception while reading "
operator|+
name|errmsg
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|protected
name|void
name|setDateCreated
parameter_list|(
name|Date
name|dateCreated
parameter_list|)
block|{
name|this
operator|.
name|dateCreated
operator|=
name|dateCreated
expr_stmt|;
block|}
specifier|protected
name|void
name|setDateModified
parameter_list|(
name|Date
name|dateModified
parameter_list|)
block|{
name|this
operator|.
name|dateModified
operator|=
name|dateModified
expr_stmt|;
block|}
block|}
end_class

end_unit

