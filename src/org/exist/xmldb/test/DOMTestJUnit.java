begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Created on 7 aoï¿½t 2004 $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|test
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|textui
operator|.
name|TestRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|DatabaseManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|XMLResource
import|;
end_import

begin_comment
comment|/**  * @author jmv  */
end_comment

begin_class
specifier|public
class|class
name|DOMTestJUnit
extends|extends
name|TestCase
block|{
specifier|private
specifier|static
name|String
name|driver
init|=
literal|"org.exist.xmldb.DatabaseImpl"
decl_stmt|;
specifier|private
specifier|static
name|String
name|baseURI
init|=
literal|"xmldb:exist://localhost:8088/xmlrpc/db"
decl_stmt|;
specifier|private
specifier|static
name|String
name|username
init|=
literal|"admin"
decl_stmt|;
specifier|private
specifier|static
name|String
name|password
init|=
literal|""
decl_stmt|;
specifier|private
specifier|static
name|String
name|name
init|=
literal|"test.xml"
decl_stmt|;
specifier|private
name|Collection
name|rootColl
decl_stmt|;
specifier|private
name|Database
name|database
decl_stmt|;
comment|/** 	 * @param name 	 */
specifier|public
name|DOMTestJUnit
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
comment|/* 	 * @see TestCase#setUp() 	 */
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Running setUp ..."
argument_list|)
expr_stmt|;
comment|// Starting database
name|System
operator|.
name|setProperty
argument_list|(
literal|"exist.initdb"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|Class
name|dbc
init|=
name|Class
operator|.
name|forName
argument_list|(
name|driver
argument_list|)
decl_stmt|;
name|database
operator|=
operator|(
name|Database
operator|)
name|dbc
operator|.
name|newInstance
argument_list|()
expr_stmt|;
name|DatabaseManager
operator|.
name|registerDatabase
argument_list|(
name|database
argument_list|)
expr_stmt|;
name|rootColl
operator|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|baseURI
argument_list|,
literal|"admin"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
comment|// Storing an XML string
name|XMLResource
name|r
init|=
operator|(
name|XMLResource
operator|)
name|rootColl
operator|.
name|createResource
argument_list|(
name|name
argument_list|,
name|XMLResource
operator|.
name|RESOURCE_TYPE
argument_list|)
decl_stmt|;
name|r
operator|.
name|setContent
argument_list|(
literal|"<properties><property key=\"type\">Table</property></properties>"
argument_list|)
expr_stmt|;
name|rootColl
operator|.
name|storeResource
argument_list|(
name|r
argument_list|)
expr_stmt|;
block|}
comment|/** test Update of an existing document through DOM */
specifier|public
name|void
name|testDOMUpdate
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|XMLResource
name|index
init|=
operator|(
name|XMLResource
operator|)
name|rootColl
operator|.
name|getResource
argument_list|(
name|name
argument_list|)
decl_stmt|;
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Retrieving initial content:"
argument_list|)
expr_stmt|;
name|String
name|content
init|=
operator|(
name|String
operator|)
name|index
operator|.
name|getContent
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|content
argument_list|)
expr_stmt|;
block|}
name|Node
name|rootNode
init|=
name|index
operator|.
name|getContentAsDOM
argument_list|()
decl_stmt|;
name|Document
name|doc
init|=
name|rootNode
operator|.
name|getOwnerDocument
argument_list|()
decl_stmt|;
name|Element
name|schemaNode
init|=
name|doc
operator|.
name|createElement
argument_list|(
literal|"schema"
argument_list|)
decl_stmt|;
name|schemaNode
operator|.
name|setAttribute
argument_list|(
literal|"targetNamespace"
argument_list|,
literal|"targetNamespace"
argument_list|)
expr_stmt|;
name|schemaNode
operator|.
name|setAttribute
argument_list|(
literal|"resourceName"
argument_list|,
literal|"filename"
argument_list|)
expr_stmt|;
name|rootNode
operator|.
name|appendChild
argument_list|(
name|schemaNode
argument_list|)
expr_stmt|;
name|index
operator|.
name|setContentAsDOM
argument_list|(
name|rootNode
argument_list|)
expr_stmt|;
name|rootColl
operator|.
name|storeResource
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Retrieving modified content:"
argument_list|)
expr_stmt|;
name|index
operator|=
operator|(
name|XMLResource
operator|)
name|rootColl
operator|.
name|getResource
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|String
name|content
init|=
operator|(
name|String
operator|)
name|index
operator|.
name|getContent
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|rootNode
operator|=
name|index
operator|.
name|getContentAsDOM
argument_list|()
expr_stmt|;
name|Element
name|rootElem
init|=
operator|(
operator|(
name|Element
operator|)
name|rootNode
operator|)
decl_stmt|;
name|NodeList
name|nl
init|=
name|rootElem
operator|.
name|getChildNodes
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nl
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|nl
operator|.
name|item
argument_list|(
name|i
argument_list|)
operator|.
name|getNodeName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|TestRunner
operator|.
name|run
argument_list|(
name|DOMTestJUnit
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

