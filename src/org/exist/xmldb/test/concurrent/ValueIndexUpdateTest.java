begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-04 The eXist Project  *  http://exist-db.org  *    *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *    *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *    *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *    *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|test
operator|.
name|concurrent
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|CollectionConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_comment
comment|/**  * @author wolf  */
end_comment

begin_class
specifier|public
class|class
name|ValueIndexUpdateTest
extends|extends
name|ConcurrentTestBase
block|{
specifier|private
specifier|final
specifier|static
name|String
name|URI
init|=
literal|"xmldb:exist://"
operator|+
name|DBBroker
operator|.
name|ROOT_COLLECTION
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|XCONF
init|=
literal|"<exist:collection xmlns:exist=\"http://exist-db.org/collection-config/1.0\">"
operator|+
literal|"<exist:index doctype=\"items\" xmlns:x=\"http://www.foo.com\">"
operator|+
literal|"<exist:fulltext default=\"none\"/>"
operator|+
literal|"<exist:create path=\"//item/@id\" type=\"xs:integer\"/>"
operator|+
literal|"<exist:create path=\"//item/name\" type=\"xs:string\"/>"
operator|+
literal|"<exist:create path=\"//item/value\" type=\"xs:double\"/>"
operator|+
literal|"</exist:index>"
operator|+
literal|"</exist:collection>"
decl_stmt|;
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|junit
operator|.
name|textui
operator|.
name|TestRunner
operator|.
name|run
argument_list|(
name|ValueIndexUpdateTest
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ValueIndexUpdateTest
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|,
name|URI
argument_list|,
literal|"C1"
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|setUp
parameter_list|()
block|{
try|try
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|DBUtils
operator|.
name|addXMLResource
argument_list|(
name|getTestCollection
argument_list|()
argument_list|,
name|CollectionConfiguration
operator|.
name|COLLECTION_CONFIG_FILE
argument_list|,
name|XCONF
argument_list|)
expr_stmt|;
name|DBUtils
operator|.
name|addXMLResource
argument_list|(
name|getTestCollection
argument_list|()
argument_list|,
literal|"R1.xml"
argument_list|,
literal|"<items/>"
argument_list|)
expr_stmt|;
name|addAction
argument_list|(
operator|new
name|ValueAppendAction
argument_list|(
name|URI
operator|+
literal|"/C1"
argument_list|,
literal|"R1.xml"
argument_list|)
argument_list|,
literal|50
argument_list|,
literal|0
argument_list|,
literal|500
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|fail
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

