begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|// $Header$
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xmldb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|ErrorCodes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|ResourceIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|ResourceSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_comment
comment|/**  *  Implementation of ResourceSet (a container of Resource objects), using internally both a Map and a Vector.  *  The Map is keyed by the Id of each resource.  *   *@author     Jean-Marc Vanel (2 April 2003)  */
end_comment

begin_class
specifier|public
class|class
name|MapResourceSet
implements|implements
name|ResourceSet
block|{
specifier|protected
name|Map
name|resources
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
specifier|protected
name|Vector
name|resourcesVector
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
specifier|public
name|MapResourceSet
parameter_list|()
block|{
block|}
comment|/**      *  Constructor       */
specifier|public
name|MapResourceSet
parameter_list|(
name|Map
name|resources
parameter_list|)
block|{
name|this
operator|.
name|resources
operator|=
name|resources
expr_stmt|;
name|Iterator
name|iter
init|=
name|resources
operator|.
name|values
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Resource
name|res
init|=
operator|(
name|Resource
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|resourcesVector
operator|.
name|add
argument_list|(
name|res
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      *  Constructor       */
specifier|public
name|MapResourceSet
parameter_list|(
name|ResourceSet
name|rs
parameter_list|)
throws|throws
name|XMLDBException
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|rs
operator|.
name|getSize
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Resource
name|res
init|=
name|rs
operator|.
name|getResource
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|resources
operator|.
name|put
argument_list|(
name|res
operator|.
name|getId
argument_list|()
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|resourcesVector
operator|.
name|add
argument_list|(
name|rs
operator|.
name|getResource
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|Map
name|getResourcesMap
parameter_list|()
block|{
return|return
name|resources
return|;
block|}
comment|/**      *  Adds a resource to the container      *      *@param  resource  The resource to be added to the object      */
specifier|public
name|void
name|addResource
parameter_list|(
name|Resource
name|resource
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|resources
operator|.
name|put
argument_list|(
name|resource
operator|.
name|getId
argument_list|()
argument_list|,
name|resource
argument_list|)
expr_stmt|;
name|resourcesVector
operator|.
name|addElement
argument_list|(
name|resource
argument_list|)
expr_stmt|;
block|}
comment|/**      *  Make the container empty      *      *@exception  XMLDBException        */
specifier|public
name|void
name|clear
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|resources
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
comment|/**      *  Gets the iterator property      *      *@return                     The iterator value      *@exception  XMLDBException      */
specifier|public
name|ResourceIterator
name|getIterator
parameter_list|()
throws|throws
name|XMLDBException
block|{
return|return
operator|new
name|NewResourceIterator
argument_list|()
return|;
block|}
comment|/**      *  Gets the iterator property, starting from a given position      *      *@param  start            starting position>0 for the iterator      *@return                     The iterator value      *@exception  XMLDBException   thrown if pos is out of range      */
specifier|public
name|ResourceIterator
name|getIterator
parameter_list|(
name|long
name|start
parameter_list|)
throws|throws
name|XMLDBException
block|{
return|return
operator|new
name|NewResourceIterator
argument_list|(
name|start
argument_list|)
return|;
block|}
comment|/**      *  Gets the membersAsResource property of the object      *      *@return                     The membersAsResource value      *@exception  XMLDBException  Description of the Exception      */
specifier|public
name|Resource
name|getMembersAsResource
parameter_list|()
throws|throws
name|XMLDBException
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|NOT_IMPLEMENTED
argument_list|)
throw|;
block|}
comment|/**      *  Gets the resource at a given position.      *      *@param  pos             position> 0      *@return                     The resource value      *@exception  XMLDBException  thrown if pos is out of range      */
specifier|public
name|Resource
name|getResource
parameter_list|(
name|long
name|pos
parameter_list|)
throws|throws
name|XMLDBException
block|{
if|if
condition|(
name|pos
operator|<
literal|0
operator|||
name|pos
operator|>=
name|resources
operator|.
name|size
argument_list|()
condition|)
return|return
literal|null
return|;
name|Object
name|r
init|=
name|resourcesVector
operator|.
name|get
argument_list|(
operator|(
name|int
operator|)
name|pos
argument_list|)
decl_stmt|;
if|if
condition|(
name|r
operator|instanceof
name|Resource
condition|)
return|return
operator|(
name|Resource
operator|)
name|r
return|;
return|return
literal|null
return|;
block|}
comment|/**      *  Gets the size property      *      *@return                     The size value      *@exception  XMLDBException      */
specifier|public
name|long
name|getSize
parameter_list|()
throws|throws
name|XMLDBException
block|{
return|return
operator|(
name|long
operator|)
name|resources
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**       *  Removes the resource at a given position.      *      *@param  pos                 position> 0       *@exception  XMLDBException  thrown if pos is out of range     */
specifier|public
name|void
name|removeResource
parameter_list|(
name|long
name|pos
parameter_list|)
throws|throws
name|XMLDBException
block|{
name|Resource
name|r
init|=
operator|(
name|Resource
operator|)
name|resourcesVector
operator|.
name|get
argument_list|(
operator|(
name|int
operator|)
name|pos
argument_list|)
decl_stmt|;
name|resourcesVector
operator|.
name|removeElementAt
argument_list|(
operator|(
name|int
operator|)
name|pos
argument_list|)
expr_stmt|;
name|resources
operator|.
name|remove
argument_list|(
name|r
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      *  Inner resource Iterator Class      *      */
class|class
name|NewResourceIterator
implements|implements
name|ResourceIterator
block|{
name|long
name|pos
init|=
literal|0
decl_stmt|;
comment|/**  Constructor for the NewResourceIterator object */
specifier|public
name|NewResourceIterator
parameter_list|()
block|{
block|}
comment|/**          *  Constructor for the NewResourceIterator object          *          *@param  start  starting position>0 for the iterator           */
specifier|public
name|NewResourceIterator
parameter_list|(
name|long
name|start
parameter_list|)
block|{
name|pos
operator|=
name|start
expr_stmt|;
block|}
comment|/**          *  Classical loop test.          *          *@return                     Description of the Return Value          *@exception  XMLDBException  Description of the Exception          */
specifier|public
name|boolean
name|hasMoreResources
parameter_list|()
throws|throws
name|XMLDBException
block|{
return|return
name|pos
operator|<
name|resources
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**          *  Classical accessor to next Resource          *          *@return                     the next Resource          *@exception  XMLDBException          */
specifier|public
name|Resource
name|nextResource
parameter_list|()
throws|throws
name|XMLDBException
block|{
return|return
name|getResource
argument_list|(
name|pos
operator|++
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

