begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2015 The eXist Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public License  * along with this program; if not, write to the Free Software Foundation  * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xmldb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|BrokerPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|IndexStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|report
operator|.
name|Statistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|Configuration
import|;
end_import

begin_class
specifier|public
class|class
name|DatabaseStatus
block|{
specifier|private
specifier|final
name|String
name|id
decl_stmt|;
specifier|private
specifier|final
name|String
name|confPath
init|=
literal|null
decl_stmt|;
specifier|private
specifier|final
name|String
name|dataDir
decl_stmt|;
specifier|private
specifier|final
name|int
name|runningBrokers
decl_stmt|;
specifier|private
specifier|final
name|int
name|availableBrokers
decl_stmt|;
specifier|private
specifier|final
name|int
name|maxBrokers
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|IndexStats
argument_list|>
name|indexStats
init|=
operator|new
name|TreeMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|public
name|DatabaseStatus
parameter_list|(
name|BrokerPool
name|pool
parameter_list|)
block|{
specifier|final
name|Configuration
name|conf
init|=
name|pool
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
comment|// get id for this instance
name|this
operator|.
name|id
operator|=
name|pool
operator|.
name|getId
argument_list|()
expr_stmt|;
comment|// paths
comment|//this.confPath = conf.getPath();
name|this
operator|.
name|dataDir
operator|=
operator|(
name|String
operator|)
name|conf
operator|.
name|getProperty
argument_list|(
name|BrokerPool
operator|.
name|PROPERTY_DATA_DIR
argument_list|)
expr_stmt|;
comment|// broker statistics
name|this
operator|.
name|runningBrokers
operator|=
name|pool
operator|.
name|countActiveBrokers
argument_list|()
expr_stmt|;
name|this
operator|.
name|availableBrokers
operator|=
name|pool
operator|.
name|available
argument_list|()
expr_stmt|;
name|this
operator|.
name|maxBrokers
operator|=
name|pool
operator|.
name|getMax
argument_list|()
expr_stmt|;
name|Statistics
operator|.
name|generateIndexStatistics
argument_list|(
name|conf
argument_list|,
name|indexStats
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Number of brokers for this instance, which are 	 * currently active (i.e. actually processing requests). 	 *  	 * @return int 	 */
specifier|public
name|int
name|getAvailableBrokers
parameter_list|()
block|{
return|return
name|availableBrokers
return|;
block|}
comment|/** 	 * Path to the configuration file used to create 	 * this database instance. 	 *   	 * @return String 	 */
specifier|public
name|String
name|getConfPath
parameter_list|()
block|{
return|return
name|confPath
return|;
block|}
comment|/** 	 * Path to the data directory. 	 *  	 * @return String 	 */
specifier|public
name|String
name|getDataDir
parameter_list|()
block|{
return|return
name|dataDir
return|;
block|}
comment|/** 	 * The identifier for this instance. 	 *  	 * Used to distinguish between multiple database  	 * instances. 	 *  	 * @return String 	 */
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
comment|/** 	 * The maximum number of brokers allowed for this instance. 	 *  	 * @return int 	 */
specifier|public
name|int
name|getMaxBrokers
parameter_list|()
block|{
return|return
name|maxBrokers
return|;
block|}
comment|/** 	 * Number of brokers currently running. 	 *  	 * @return int 	 */
specifier|public
name|int
name|getRunningBrokers
parameter_list|()
block|{
return|return
name|runningBrokers
return|;
block|}
specifier|public
name|IndexStats
name|getIndexStats
parameter_list|(
specifier|final
name|String
name|dbName
parameter_list|)
block|{
return|return
name|indexStats
operator|.
name|get
argument_list|(
name|dbName
argument_list|)
return|;
block|}
block|}
end_class

end_unit

