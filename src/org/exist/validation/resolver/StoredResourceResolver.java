begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-07 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  * $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|validation
operator|.
name|resolver
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xerces
operator|.
name|xni
operator|.
name|XMLResourceIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xerces
operator|.
name|xni
operator|.
name|XNIException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xerces
operator|.
name|xni
operator|.
name|parser
operator|.
name|XMLEntityResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xerces
operator|.
name|xni
operator|.
name|parser
operator|.
name|XMLInputSource
import|;
end_import

begin_comment
comment|/**  *  Resolve a resource straight out of database.  *  * @author Dannes Wessels (dizzzz@exist-db.org)  */
end_comment

begin_class
specifier|public
class|class
name|StoredResourceResolver
implements|implements
name|XMLEntityResolver
block|{
specifier|private
specifier|final
specifier|static
name|Logger
name|LOG
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|StoredResourceResolver
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|String
name|docPath
init|=
literal|null
decl_stmt|;
comment|/** Creates a new instance of StoredResourceResolver */
specifier|public
name|StoredResourceResolver
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|docPath
operator|=
name|path
expr_stmt|;
if|if
condition|(
name|docPath
operator|.
name|startsWith
argument_list|(
literal|"/"
argument_list|)
condition|)
block|{
name|docPath
operator|=
literal|"xmldb:exist://"
operator|+
name|docPath
expr_stmt|;
block|}
block|}
comment|/**      *      */
specifier|public
name|XMLInputSource
name|resolveEntity
parameter_list|(
name|XMLResourceIdentifier
name|xri
parameter_list|)
throws|throws
name|XNIException
throws|,
name|IOException
block|{
if|if
condition|(
name|xri
operator|.
name|getExpandedSystemId
argument_list|()
operator|==
literal|null
operator|&&
name|xri
operator|.
name|getLiteralSystemId
argument_list|()
operator|==
literal|null
operator|&&
name|xri
operator|.
name|getNamespace
argument_list|()
operator|==
literal|null
operator|&&
name|xri
operator|.
name|getPublicId
argument_list|()
operator|==
literal|null
condition|)
block|{
comment|// quick fail
return|return
literal|null
return|;
block|}
name|LOG
operator|.
name|debug
argument_list|(
literal|"Resolving XMLResourceIdentifier: "
operator|+
name|getXriDetails
argument_list|(
name|xri
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|resourcePath
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|xri
operator|.
name|getBaseSystemId
argument_list|()
operator|==
literal|null
condition|)
block|{
comment|// First time use constructor supplied path
name|resourcePath
operator|=
name|docPath
expr_stmt|;
comment|// set expandedSystem=Id?
block|}
else|else
block|{
comment|// subsequent steps
name|resourcePath
operator|=
name|xri
operator|.
name|getExpandedSystemId
argument_list|()
expr_stmt|;
block|}
name|LOG
operator|.
name|debug
argument_list|(
literal|"resourcePath='"
operator|+
name|resourcePath
operator|+
literal|"'"
argument_list|)
expr_stmt|;
comment|// DWES set systemid?
name|InputStream
name|is
init|=
operator|new
name|URL
argument_list|(
name|resourcePath
argument_list|)
operator|.
name|openStream
argument_list|()
decl_stmt|;
name|XMLInputSource
name|retVal
init|=
operator|new
name|XMLInputSource
argument_list|(
name|xri
operator|.
name|getPublicId
argument_list|()
argument_list|,
name|xri
operator|.
name|getExpandedSystemId
argument_list|()
argument_list|,
name|xri
operator|.
name|getBaseSystemId
argument_list|()
argument_list|,
name|is
argument_list|,
literal|"UTF-8"
argument_list|)
decl_stmt|;
comment|//UTF-8?
return|return
name|retVal
return|;
block|}
specifier|private
name|String
name|getXriDetails
parameter_list|(
name|XMLResourceIdentifier
name|xrid
parameter_list|)
block|{
name|StringBuffer
name|sb
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"PublicId='"
argument_list|)
operator|.
name|append
argument_list|(
name|xrid
operator|.
name|getPublicId
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"' "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"BaseSystemId='"
argument_list|)
operator|.
name|append
argument_list|(
name|xrid
operator|.
name|getBaseSystemId
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"' "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"ExpandedSystemId='"
argument_list|)
operator|.
name|append
argument_list|(
name|xrid
operator|.
name|getExpandedSystemId
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"' "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"LiteralSystemId='"
argument_list|)
operator|.
name|append
argument_list|(
name|xrid
operator|.
name|getLiteralSystemId
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"' "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"Namespace='"
argument_list|)
operator|.
name|append
argument_list|(
name|xrid
operator|.
name|getNamespace
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"' "
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

