begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2010-2011 The eXist Project  *  http://exist-db.org  *    *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *    *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *    *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *    *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Credential
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|MessageDigester
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:shabanovd@gmail.com">Dmitriy Shabanov</a>  *  */
end_comment

begin_class
specifier|public
class|class
name|Password
implements|implements
name|Credential
block|{
specifier|public
specifier|static
name|String
name|MD5
init|=
literal|"MD5"
decl_stmt|;
comment|//private
specifier|public
name|String
name|pw
decl_stmt|;
specifier|private
name|String
name|algorithm
init|=
literal|""
decl_stmt|;
specifier|public
name|Password
parameter_list|(
name|String
name|password
parameter_list|)
block|{
if|if
condition|(
name|password
operator|==
literal|null
condition|)
name|this
operator|.
name|pw
operator|=
literal|null
expr_stmt|;
if|else if
condition|(
name|password
operator|.
name|startsWith
argument_list|(
literal|"{MD5}"
argument_list|)
condition|)
block|{
name|this
operator|.
name|pw
operator|=
name|password
operator|.
name|substring
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|this
operator|.
name|algorithm
operator|=
name|MD5
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|pw
operator|=
name|crypt
argument_list|(
name|password
argument_list|)
expr_stmt|;
name|this
operator|.
name|algorithm
operator|=
name|MD5
expr_stmt|;
block|}
block|}
specifier|private
name|String
name|crypt
parameter_list|(
name|String
name|str
parameter_list|)
block|{
return|return
name|MessageDigester
operator|.
name|md5
argument_list|(
name|str
argument_list|,
literal|true
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|check
parameter_list|(
name|Object
name|credentials
parameter_list|)
block|{
if|if
condition|(
name|credentials
operator|==
name|this
condition|)
return|return
literal|true
return|;
comment|//workaround old style, remove -shabanovd
if|if
condition|(
name|credentials
operator|==
literal|null
condition|)
name|credentials
operator|=
literal|""
expr_stmt|;
if|if
condition|(
name|credentials
operator|instanceof
name|Password
operator|||
name|credentials
operator|instanceof
name|String
condition|)
block|{
return|return
name|equals
argument_list|(
name|credentials
argument_list|)
return|;
block|}
if|if
condition|(
name|credentials
operator|instanceof
name|char
index|[]
condition|)
block|{
return|return
name|equals
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
operator|(
name|char
index|[]
operator|)
name|credentials
argument_list|)
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|obj
operator|instanceof
name|Password
condition|)
block|{
name|Password
name|p
init|=
operator|(
name|Password
operator|)
name|obj
decl_stmt|;
return|return
operator|(
name|pw
operator|==
name|p
operator|.
name|pw
operator|||
operator|(
name|pw
operator|!=
literal|null
operator|&&
name|pw
operator|.
name|equals
argument_list|(
name|p
operator|.
name|pw
argument_list|)
operator|)
operator|)
return|;
block|}
if|if
condition|(
name|obj
operator|instanceof
name|String
condition|)
block|{
return|return
operator|(
name|crypt
argument_list|(
operator|(
name|String
operator|)
name|obj
argument_list|)
operator|)
operator|.
name|equals
argument_list|(
name|pw
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"{"
operator|+
name|algorithm
operator|+
literal|"}"
operator|+
name|pw
return|;
block|}
block|}
end_class

end_unit

