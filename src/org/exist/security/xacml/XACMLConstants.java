begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-06 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|xacml
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|EvaluationCtx
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|attr
operator|.
name|AnyURIAttribute
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|attr
operator|.
name|DateAttribute
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|attr
operator|.
name|DateTimeAttribute
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|attr
operator|.
name|StringAttribute
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|attr
operator|.
name|TimeAttribute
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|finder
operator|.
name|impl
operator|.
name|CurrentEnvModule
import|;
end_import

begin_comment
comment|/** * This class provides constants for use in creating XACML requests. * It provides some<code>String</code>s and<code>URI</code>s for * both constants defined in the XACML specification and ones for * eXist-specific use.  Because Sun's XACML implementation currently * supports versions 1.0 and 1.1 of the specification but only * recognizes the 1.0 version of constants, only the 1.0 strings * are here. */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|XACMLConstants
block|{
comment|/* *********** Configuration property names ******************* */
specifier|public
specifier|static
specifier|final
name|String
name|CONFIGURATION_ELEMENT_NAME
init|=
literal|"xacml"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ENABLE_XACML_ATTRIBUTE
init|=
literal|"enable"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ENABLE_XACML_PROPERTY
init|=
literal|"xacml.enable"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|boolean
name|ENABLE_XACML_BY_DEFAULT
init|=
literal|false
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|LOAD_DEFAULT_POLICIES_ATTRIBUTE
init|=
literal|"load-defaults"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|LOAD_DEFAULT_POLICIES_PROPERTY
init|=
literal|"xacml.load.defaults"
decl_stmt|;
comment|/* **************** XACML constants **************************** */
specifier|public
specifier|static
specifier|final
name|String
name|XQUERY_OPERATORS_NS
init|=
literal|"http://www.w3c.org/TR/2002/WD-xquery-operators-20020816"
decl_stmt|;
comment|//the base to namespaces, attribute ids, etc... in the XACML specification
specifier|public
specifier|static
specifier|final
name|String
name|XACML_BASE
init|=
literal|"urn:oasis:names:tc:xacml:"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|VERSION_1_0
init|=
literal|"1.0:"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|VERSION_1_0_BASE
init|=
name|XACML_BASE
operator|+
name|VERSION_1_0
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|RULE_COMBINING_BASE
init|=
name|VERSION_1_0_BASE
operator|+
literal|"rule-combining-algorithm:"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|POLICY_COMBINING_BASE
init|=
name|VERSION_1_0_BASE
operator|+
literal|"policy-combining-algorithm:"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|XACML_DATATYPE_BASE
init|=
name|VERSION_1_0_BASE
operator|+
literal|"data-type:"
decl_stmt|;
comment|//XACML namespaces, one for policies, one for a request context
specifier|public
specifier|static
specifier|final
name|String
name|XACML_POLICY_NAMESPACE
init|=
name|VERSION_1_0_BASE
operator|+
literal|"policy"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|XACML_REQUEST_NAMESPACE
init|=
name|VERSION_1_0_BASE
operator|+
literal|"context"
decl_stmt|;
comment|//XACML root element names and referencing attribute names
specifier|public
specifier|static
specifier|final
name|String
name|POLICY_SET_ELEMENT_LOCAL_NAME
init|=
literal|"PolicySet"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|POLICY_ELEMENT_LOCAL_NAME
init|=
literal|"Policy"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|POLICY_SET_ID_LOCAL_NAME
init|=
literal|"PolicySetId"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|POLICY_ID_LOCAL_NAME
init|=
literal|"PolicyId"
decl_stmt|;
comment|//URIs for some XACML attribute IDs
specifier|public
specifier|static
specifier|final
name|URI
name|ACTION_ID_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|VERSION_1_0_BASE
operator|+
literal|"action:action-id"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|URI
name|ACTION_NS_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|VERSION_1_0_BASE
operator|+
literal|"action:action-namespace"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|URI
name|SUBJECT_ID_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|VERSION_1_0_BASE
operator|+
literal|"subject:subject-id"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|URI
name|RESOURCE_ID_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|EvaluationCtx
operator|.
name|RESOURCE_ID
argument_list|)
decl_stmt|;
comment|//URIs for some XACML subject categories
specifier|public
specifier|static
specifier|final
name|URI
name|ACCESS_SUBJECT
init|=
name|URI
operator|.
name|create
argument_list|(
name|VERSION_1_0_BASE
operator|+
literal|"subject-category:access-subject"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|URI
name|CODEBASE_SUBJECT
init|=
name|URI
operator|.
name|create
argument_list|(
name|VERSION_1_0_BASE
operator|+
literal|"subject-category:codebase"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|URI
name|CURRENT_DATE_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|CurrentEnvModule
operator|.
name|ENVIRONMENT_CURRENT_DATE
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|URI
name|CURRENT_TIME_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|CurrentEnvModule
operator|.
name|ENVIRONMENT_CURRENT_TIME
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|URI
name|CURRENT_DATETIME_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|CurrentEnvModule
operator|.
name|ENVIRONMENT_CURRENT_DATETIME
argument_list|)
decl_stmt|;
comment|//datatype URIs
specifier|public
specifier|static
specifier|final
name|URI
name|STRING_TYPE
init|=
name|URI
operator|.
name|create
argument_list|(
name|StringAttribute
operator|.
name|identifier
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|URI
name|URI_TYPE
init|=
name|URI
operator|.
name|create
argument_list|(
name|AnyURIAttribute
operator|.
name|identifier
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|URI
name|DATE_TYPE
init|=
name|URI
operator|.
name|create
argument_list|(
name|DateAttribute
operator|.
name|identifier
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|URI
name|DATETIME_TYPE
init|=
name|URI
operator|.
name|create
argument_list|(
name|DateTimeAttribute
operator|.
name|identifier
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|URI
name|TIME_TYPE
init|=
name|URI
operator|.
name|create
argument_list|(
name|TimeAttribute
operator|.
name|identifier
argument_list|)
decl_stmt|;
comment|/***************** eXist-specific constants *****************************/
comment|/** 	* The name of the policies collection. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|POLICY_COLLECTION_NAME
init|=
literal|"policies"
decl_stmt|;
comment|/** 	* The location of the top-level Policy and/or PolicySet documents. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|POLICY_COLLECTION
init|=
name|XmldbURI
operator|.
name|SYSTEM_COLLECTION
operator|+
literal|'/'
operator|+
name|POLICY_COLLECTION_NAME
decl_stmt|;
comment|/** 	* The location of the top-level Policy and/or PolicySet documents. 	*/
specifier|public
specifier|static
specifier|final
name|XmldbURI
name|POLICY_COLLECTION_URI
init|=
name|XmldbURI
operator|.
name|create
argument_list|(
name|POLICY_COLLECTION
argument_list|)
decl_stmt|;
comment|/** 	* The namespace used for eXist-specific XACML constants. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|EXIST_XACML_NS
init|=
literal|"http://exist-db.org/xacml"
decl_stmt|;
comment|/** 	* The namespace used for action-related eXist-specific XACML constants 	*/
specifier|public
specifier|static
specifier|final
name|String
name|ACTION_NS
init|=
name|EXIST_XACML_NS
operator|+
literal|"/action"
decl_stmt|;
comment|/** 	* The namespace used for resource-related eXist-specific XACML 	* constants. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|RESOURCE_NS
init|=
name|EXIST_XACML_NS
operator|+
literal|"/resource"
decl_stmt|;
comment|/** 	* The namespace used for subject-related eXist-specific XACML 	* constants. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|SUBJECT_NS
init|=
name|EXIST_XACML_NS
operator|+
literal|"/subject"
decl_stmt|;
comment|/** 	* The namespace used for environment-related eXist-specific XACML 	* constants 	*/
specifier|public
specifier|static
specifier|final
name|String
name|ENVIRONMENT_NS
init|=
name|EXIST_XACML_NS
operator|+
literal|"/environment"
decl_stmt|;
comment|/** 	* The attribute ID for the attribute that provides the namespace 	* URI of a module. 	*/
specifier|public
specifier|static
specifier|final
name|URI
name|SUBJECT_NS_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|SUBJECT_NS
operator|+
literal|"#subject-namespace"
argument_list|)
decl_stmt|;
comment|/** 	* The attribute ID for the attribute that provides the namespace 	* URI of a module. 	*/
specifier|public
specifier|static
specifier|final
name|URI
name|MODULE_NS_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|EXIST_XACML_NS
operator|+
literal|"#module-namespace"
argument_list|)
decl_stmt|;
comment|/** 	* The attribute ID for the attribute that provides the category 	* of an XQuery module. 	*/
specifier|public
specifier|static
specifier|final
name|URI
name|MODULE_CATEGORY_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|EXIST_XACML_NS
operator|+
literal|"#module-category"
argument_list|)
decl_stmt|;
comment|/** 	 * The attribute ID for the attribute the describes the source of some content, 	 * such as a module, a query.  	 */
specifier|public
specifier|static
specifier|final
name|URI
name|SOURCE_KEY_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|EXIST_XACML_NS
operator|+
literal|"#source-key"
argument_list|)
decl_stmt|;
comment|/** 	 * The attribute ID for the attribute the describes the type of source of some content, 	 * such as a module, a query. 	 */
specifier|public
specifier|static
specifier|final
name|URI
name|SOURCE_TYPE_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|EXIST_XACML_NS
operator|+
literal|"#source-type"
argument_list|)
decl_stmt|;
comment|/** 	* The attribute ID for the attribute that provides the category of 	* a resource. 	*/
specifier|public
specifier|static
specifier|final
name|URI
name|RESOURCE_CATEGORY_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|RESOURCE_NS
operator|+
literal|"#resource-category"
argument_list|)
decl_stmt|;
comment|/** 	* The attribute ID for the attribute that provides the name of a user. 	*/
specifier|public
specifier|static
specifier|final
name|URI
name|USER_NAME_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|SUBJECT_NS
operator|+
literal|"#name"
argument_list|)
decl_stmt|;
comment|/** 	* The attribute ID for the attribute that provides the names of the groups 	* to which a user belongs. 	*/
specifier|public
specifier|static
specifier|final
name|URI
name|GROUP_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|SUBJECT_NS
operator|+
literal|"#group"
argument_list|)
decl_stmt|;
comment|/** 	* The attribute ID for the attribute that provides the names of the groups 	* to which a user belongs. 	*/
specifier|public
specifier|static
specifier|final
name|URI
name|ACCESS_CONTEXT_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|ENVIRONMENT_NS
operator|+
literal|"#access-context"
argument_list|)
decl_stmt|;
comment|/** 	* The internal/builtin XQuery library module type. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|INTERNAL_LIBRARY_MODULE
init|=
literal|"internal library"
decl_stmt|;
comment|/** 	* The external/non-builtin XQuery library module type. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|EXTERNAL_LIBRARY_MODULE
init|=
literal|"external library"
decl_stmt|;
comment|/** 	* The external/non-builtin XQuery main module type. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|MAIN_MODULE
init|=
literal|"main"
decl_stmt|;
comment|/** 	* The action-id corresponding to a request to reflectively invoke a 	* method of a Java class in XQuery. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|INVOKE_METHOD_ACTION
init|=
literal|"invoke method"
decl_stmt|;
comment|/** 	* The action-id corresponding to a request to call a function in an XQuery. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|CALL_FUNCTION_ACTION
init|=
literal|"call function"
decl_stmt|;
comment|/** 	* The action-id corresponding to a request to execute a main XQuery module. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|EXECUTE_QUERY_ACTION
init|=
literal|"execute query"
decl_stmt|;
comment|/** 	* The Java method resource type. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|METHOD_RESOURCE
init|=
literal|"method"
decl_stmt|;
comment|/** 	* The query function resource type. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|FUNCTION_RESOURCE
init|=
literal|"function"
decl_stmt|;
comment|/** 	* The main XQuery module resource type. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|MAIN_MODULE_RESOURCE
init|=
literal|"query"
decl_stmt|;
comment|/** 	 * The source type for Java classes. 	 */
specifier|public
specifier|static
specifier|final
name|String
name|CLASS_SOURCE_TYPE
init|=
literal|"Class"
decl_stmt|;
comment|/** 	 * The source type for files. 	 */
specifier|public
specifier|static
specifier|final
name|String
name|FILE_SOURCE_TYPE
init|=
literal|"File"
decl_stmt|;
comment|/** 	 * The source type for documents from the database. 	 */
specifier|public
specifier|static
specifier|final
name|String
name|DB_SOURCE_TYPE
init|=
literal|"Database"
decl_stmt|;
comment|/** 	 * The source type for URLs. 	 */
specifier|public
specifier|static
specifier|final
name|String
name|URL_SOURCE_TYPE
init|=
literal|"URL"
decl_stmt|;
comment|/** 	 * The source type for resources loaded by the ClassLoader. 	 */
specifier|public
specifier|static
specifier|final
name|String
name|CLASSLOADER_SOURCE_TYPE
init|=
literal|"Classloader"
decl_stmt|;
comment|/** 	 * The source type for constructed strings. 	 */
specifier|public
specifier|static
specifier|final
name|String
name|STRING_SOURCE_TYPE
init|=
literal|"String"
decl_stmt|;
comment|/** 	 * The source type for cocoon sources. 	 */
specifier|public
specifier|static
specifier|final
name|String
name|COCOON_SOURCE_TYPE
init|=
literal|"Cocoon"
decl_stmt|;
specifier|private
name|XACMLConstants
parameter_list|()
block|{
block|}
block|}
end_class

end_unit

