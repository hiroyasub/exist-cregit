begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|xacml
package|;
end_package

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|EvaluationCtx
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xacml
operator|.
name|attr
operator|.
name|StringAttribute
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_comment
comment|/** * This class provides constants for use in creating XACML requests. * It provides some<code>String</code>s and<code>URI</code>s for * both constants defined in the XACML specification and ones for * eXist-specific use.  Because Sun's XACML implementation currently * supports versions 1.0 and 1.1 of the specification but only * recognizes the 1.0 version of constants, only the 1.0 strings * are here. */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|XACMLConstants
block|{
comment|/* **************** XACML constants **************************** */
comment|//the base to namespaces, attribute ids, etc... in the XACML specification
specifier|public
specifier|static
specifier|final
name|String
name|XACML_BASE
init|=
literal|"urn:oasis:names:tc:xacml:"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|VERSION_1_0
init|=
literal|"1.0:"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|VERSION_1_0_BASE
init|=
name|XACML_BASE
operator|+
name|VERSION_1_0
decl_stmt|;
comment|//XACML namespaces, one for a request context, the other for policies
specifier|public
specifier|static
specifier|final
name|String
name|XACML_POLICY_NAMESPACE
init|=
name|VERSION_1_0_BASE
operator|+
literal|"policy"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|XACML_REQUEST_NAMESPACE
init|=
name|VERSION_1_0_BASE
operator|+
literal|"context"
decl_stmt|;
comment|//XACML root element names and referencing attribute names
specifier|public
specifier|static
specifier|final
name|String
name|POLICY_SET_ELEMENT_LOCAL_NAME
init|=
literal|"PolicySet"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|POLICY_ELEMENT_LOCAL_NAME
init|=
literal|"Policy"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|POLICY_SET_ID_LOCAL_NAME
init|=
literal|"PolicySetId"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|POLICY_ID_LOCAL_NAME
init|=
literal|"PolicyId"
decl_stmt|;
comment|//URIs for some XACML attribute IDs
specifier|public
specifier|static
specifier|final
name|URI
name|ACTION_ID_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|VERSION_1_0_BASE
operator|+
literal|"action:action-id"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|URI
name|ACTION_NS_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|VERSION_1_0_BASE
operator|+
literal|"action:action-namespace"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|URI
name|SUBJECT_ID_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|VERSION_1_0_BASE
operator|+
literal|"subject:subject-id"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|URI
name|RESOURCE_ID_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|EvaluationCtx
operator|.
name|RESOURCE_ID
argument_list|)
decl_stmt|;
comment|//URIs for some XACML subject categories
specifier|public
specifier|static
specifier|final
name|URI
name|ACCESS_SUBJECT
init|=
name|URI
operator|.
name|create
argument_list|(
name|VERSION_1_0_BASE
operator|+
literal|"subject-category:access-subject"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|URI
name|CODEBASE_SUBJECT
init|=
name|URI
operator|.
name|create
argument_list|(
name|VERSION_1_0_BASE
operator|+
literal|"subject-category:codebase"
argument_list|)
decl_stmt|;
comment|//datatype URIs
specifier|public
specifier|static
specifier|final
name|URI
name|STRING_TYPE
init|=
name|URI
operator|.
name|create
argument_list|(
name|StringAttribute
operator|.
name|identifier
argument_list|)
decl_stmt|;
comment|/***************** eXist-specific constants *****************************/
comment|/** 	* The location of the top-level Policy and/or PolicySet documents. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|POLICY_COLLECTION
init|=
name|DBBroker
operator|.
name|SYSTEM_COLLECTION
operator|+
literal|"/policies"
decl_stmt|;
comment|/** 	* The namespace used for eXist-specific XACML constants. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|EXIST_XACML_NS
init|=
literal|"http://exist-db.org/xacml"
decl_stmt|;
comment|/** 	* The namespace used for action-related eXist-specific XACML constants 	*/
specifier|public
specifier|static
specifier|final
name|String
name|ACTION_NS
init|=
name|EXIST_XACML_NS
operator|+
literal|"/action"
decl_stmt|;
comment|/** 	* The namespace used for resource-related eXist-specific XACML 	* constants. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|RESOURCE_NS
init|=
name|EXIST_XACML_NS
operator|+
literal|"/resource"
decl_stmt|;
comment|/** 	* The attribute ID for the attribute that provides the namespace 	* URI of a module. 	*/
specifier|public
specifier|static
specifier|final
name|URI
name|MODULE_NS_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|EXIST_XACML_NS
operator|+
literal|"#module-namespace"
argument_list|)
decl_stmt|;
comment|/** 	* The attribute ID for the attribute that provides the category 	* of an XQuery module. 	*/
specifier|public
specifier|static
specifier|final
name|URI
name|MODULE_CATEGORY_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|EXIST_XACML_NS
operator|+
literal|"#module-category"
argument_list|)
decl_stmt|;
comment|/** 	* The attribute ID for the attribute that provides the category of 	* a resource. 	*/
specifier|public
specifier|static
specifier|final
name|URI
name|RESOURCE_CATEGORY_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|RESOURCE_NS
operator|+
literal|"#resource-category"
argument_list|)
decl_stmt|;
comment|/** 	* The internal/builtin XQuery module type. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|INTERNAL_MODULE_ATTR_VALUE
init|=
literal|"internal"
decl_stmt|;
comment|/** 	* The external/non-builtin XQuery module type. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|EXTERNAL_MODULE_ATTR_VALUE
init|=
literal|"external"
decl_stmt|;
comment|/** 	* The action-id corresponding to a request to reflectively load a 	* Java class in XQuery. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|LOAD_CLASS_ACTION
init|=
literal|"load class"
decl_stmt|;
comment|/** 	* The action-id corresponding to a request to reflectively invoke a 	* method of a Java class in XQuery. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|INVOKE_METHOD_ACTION
init|=
literal|"invoke method"
decl_stmt|;
comment|/** 	* The action-id corresponding to a request to import an XQuery module. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|IMPORT_MODULE_ACTION
init|=
literal|"import module"
decl_stmt|;
comment|/** 	* The action-id corresponding to a request to call a function in an XQuery. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|CALL_FUNCTION_ACTION
init|=
literal|"call function"
decl_stmt|;
comment|/** 	* The XQuery resource type. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|QUERY_RESOURCE
init|=
literal|"query"
decl_stmt|;
comment|/** 	* The Java method resource type. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|METHOD_RESOURCE
init|=
literal|"method"
decl_stmt|;
comment|/** 	* The Java class resource type. 	*/
specifier|public
specifier|static
specifier|final
name|String
name|CLASS_RESOURCE
init|=
literal|"class"
decl_stmt|;
comment|/** 	* The attribute ID for the attribute that provides the name of a Java class 	* being reflectively loaded. 	*/
specifier|public
specifier|static
specifier|final
name|URI
name|CLASS_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|EXIST_XACML_NS
operator|+
literal|"/class"
argument_list|)
decl_stmt|;
comment|/** 	* The attribute ID for the attribute that provides the names of the groups 	* to which a user belongs. 	*/
specifier|public
specifier|static
specifier|final
name|URI
name|GROUP_ATTRIBUTE
init|=
name|URI
operator|.
name|create
argument_list|(
name|EXIST_XACML_NS
operator|+
literal|"/group"
argument_list|)
decl_stmt|;
specifier|private
name|XACMLConstants
parameter_list|()
block|{
block|}
block|}
end_class

end_unit

