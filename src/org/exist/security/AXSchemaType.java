begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|security
package|;
end_package

begin_comment
comment|/**  *  * @author aretter  */
end_comment

begin_enum
specifier|public
enum|enum
name|AXSchemaType
block|{
name|ALIAS_USERNAME
argument_list|(
literal|"http://axschema.org/namePerson/friendly"
argument_list|,
literal|"Alias"
argument_list|)
block|,
name|FIRSTNAME
argument_list|(
literal|"http://axschema.org/namePerson/first"
argument_list|,
literal|"FirstName"
argument_list|)
block|,
name|LASTNAME
argument_list|(
literal|"http://axschema.org/namePerson/last"
argument_list|,
literal|"LastName"
argument_list|)
block|,
name|FULLNAME
argument_list|(
literal|"http://axschema.org/namePerson"
argument_list|,
literal|"FullName"
argument_list|)
block|,
name|EMAIL
argument_list|(
literal|"http://axschema.org/contact/email"
argument_list|,
literal|"Email"
argument_list|)
block|,
name|COUNTRY
argument_list|(
literal|"http://axschema.org/contact/country/home"
argument_list|,
literal|"Country"
argument_list|)
block|,
name|LANGUAGE
argument_list|(
literal|"http://axschema.org/pref/language"
argument_list|,
literal|"Language"
argument_list|)
block|,
name|TIMEZONE
argument_list|(
literal|"http://axschema.org/pref/timezone"
argument_list|,
literal|"Timezone"
argument_list|)
block|;
specifier|private
specifier|final
name|String
name|namespace
decl_stmt|;
specifier|private
specifier|final
name|String
name|alias
decl_stmt|;
name|AXSchemaType
parameter_list|(
name|String
name|namespace
parameter_list|,
name|String
name|alias
parameter_list|)
block|{
name|this
operator|.
name|namespace
operator|=
name|namespace
expr_stmt|;
name|this
operator|.
name|alias
operator|=
name|alias
expr_stmt|;
block|}
specifier|public
specifier|static
name|AXSchemaType
name|valueOfNamespace
parameter_list|(
name|String
name|namespace
parameter_list|)
block|{
for|for
control|(
name|AXSchemaType
name|axSchemaType
range|:
name|AXSchemaType
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|axSchemaType
operator|.
name|getNamespace
argument_list|()
operator|.
name|equals
argument_list|(
name|namespace
argument_list|)
condition|)
block|{
return|return
name|axSchemaType
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
specifier|static
name|AXSchemaType
name|valueOfAlias
parameter_list|(
name|String
name|alias
parameter_list|)
block|{
for|for
control|(
name|AXSchemaType
name|axSchemaType
range|:
name|AXSchemaType
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|axSchemaType
operator|.
name|getAlias
argument_list|()
operator|.
name|equals
argument_list|(
name|alias
argument_list|)
condition|)
block|{
return|return
name|axSchemaType
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getNamespace
parameter_list|()
block|{
return|return
name|namespace
return|;
block|}
specifier|public
name|String
name|getAlias
parameter_list|()
block|{
return|return
name|alias
return|;
block|}
block|}
end_enum

end_unit

