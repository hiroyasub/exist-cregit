begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|security
package|;
end_package

begin_comment
comment|/**  *  * http://tools.ietf.org/html/rfc3530#page-50  *  * @author Adam Retter<adam@exist-db.org>  */
end_comment

begin_class
specifier|public
class|class
name|NFSv4ACL
block|{
specifier|private
class|class
name|nfs4ace
block|{
name|int
name|type
decl_stmt|;
name|int
name|flag
decl_stmt|;
name|int
name|access_mask
decl_stmt|;
name|String
name|who
decl_stmt|;
block|}
specifier|public
specifier|final
specifier|static
name|int
name|ACL4_SUPPORT_ALLOW_ACL
init|=
literal|0x00000001
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACL4_SUPPORT_DENY_ACL
init|=
literal|0x00000002
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACL4_SUPPORT_AUDIT_ACL
init|=
literal|0x00000004
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACL4_SUPPORT_ALARM_ACL
init|=
literal|0x00000008
decl_stmt|;
comment|//TODO add support for ALARM_ACL
specifier|public
specifier|final
specifier|static
name|int
name|getaclsupport
init|=
name|ACL4_SUPPORT_ALLOW_ACL
operator||
name|ACL4_SUPPORT_DENY_ACL
operator||
name|ACL4_SUPPORT_AUDIT_ACL
decl_stmt|;
comment|//nfs4ace.type
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_ACCESS_ALLOWED_ACE_TYPE
init|=
literal|0x00000000
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_ACCESS_DENIED_ACE_TYPE
init|=
literal|0x00000001
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_SYSTEM_AUDIT_ACE_TYPE
init|=
literal|0x00000002
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_SYSTEM_ALARM_ACE_TYPE
init|=
literal|0x00000003
decl_stmt|;
comment|/*     Clients should not attempt to set an ACE unless the server claims     support for that ACE type.  If the server receives a request to set     an ACE that it cannot store, it MUST reject the request with     NFS4ERR_ATTRNOTSUPP.  If the server receives a request to set an ACE     that it can store but cannot enforce, the server SHOULD reject the     request with NFS4ERR_ATTRNOTSUPP.      Example: suppose a server can enforce NFS ACLs for NFS access but     cannot enforce ACLs for local access.  If arbitrary processes can run     on the server, then the server SHOULD NOT indicate ACL support.  On     the other hand, if only trusted administrative programs run locally,     then the server may indicate ACL support.     */
comment|//NFS4ERR_ATTRNOTSUPP
comment|//NFS4ERR_ATTRNOTSUPP
comment|//nfs4ace.access_mask
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_READ_DATA
init|=
literal|0x00000001
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_LIST_DIRECTORY
init|=
literal|0x00000001
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_WRITE_DATA
init|=
literal|0x00000002
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_ADD_FILE
init|=
literal|0x00000002
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_APPEND_DATA
init|=
literal|0x00000004
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_ADD_SUBDIRECTORY
init|=
literal|0x00000004
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_READ_NAMED_ATTRS
init|=
literal|0x00000008
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_WRITE_NAMED_ATTRS
init|=
literal|0x00000010
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_EXECUTE
init|=
literal|0x00000020
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_DELETE_CHILD
init|=
literal|0x00000040
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_READ_ATTRIBUTES
init|=
literal|0x00000080
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_WRITE_ATTRIBUTES
init|=
literal|0x00000100
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_DELETE
init|=
literal|0x00010000
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_READ_ACL
init|=
literal|0x00020000
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_WRITE_ACL
init|=
literal|0x00040000
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_WRITE_OWNER
init|=
literal|0x00080000
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_SYNCHRONIZE
init|=
literal|0x00100000
decl_stmt|;
comment|//nfs4ace.flag
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_FILE_INHERIT_ACE
init|=
literal|0x00000001
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_DIRECTORY_INHERIT_ACE
init|=
literal|0x00000002
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_NO_PROPAGATE_INHERIT_ACE
init|=
literal|0x00000004
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_INHERIT_ONLY_ACE
init|=
literal|0x00000008
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_SUCCESSFUL_ACCESS_ACE_FLAG
init|=
literal|0x00000010
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_FAILED_ACCESS_ACE_FLAG
init|=
literal|0x00000020
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|ACE4_IDENTIFIER_GROUP
init|=
literal|0x00000040
decl_stmt|;
comment|/*     A server need not support any of these flags.  If the server supports     flags that are similar to, but not exactly the same as, these flags,     the implementation may define a mapping between the protocol-defined     flags and the implementation-defined flags.  Again, the guiding     principle is that the file not appear to be more secure than it     really is.      For example, suppose a client tries to set an ACE with     ACE4_FILE_INHERIT_ACE set but not ACE4_DIRECTORY_INHERIT_ACE.  If the     server does not support any form of ACL inheritance, the server     should reject the request with NFS4ERR_ATTRNOTSUPP.  If the server     supports a single "inherit ACE" flag that applies to both files and     directories, the server may reject the request (i.e., requiring the     client to set both the file and directory inheritance flags).  The     server may also accept the request and silently turn on the     ACE4_DIRECTORY_INHERIT_ACE flag.     */
specifier|public
specifier|final
specifier|static
name|String
name|WHO4_OWNER
init|=
literal|"OWNER@"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|WHO4_GROUP
init|=
literal|"GROUP@"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|WHO4_EVERYONE
init|=
literal|"EVERYONE@"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|WHO4_INTERACTIVE
init|=
literal|"INTERACTIVE@"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|WHO4_NETWORK
init|=
literal|"NETWORK@"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|WHO4_DIALUP
init|=
literal|"DIALUP@"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|WHO4_BATCH
init|=
literal|"BATCH@"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|WHO4_ANONYMOUS
init|=
literal|"ANONYMOUS@"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|WHO4_AUTHENTICATED
init|=
literal|"AUTHENTICATED@"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|WHO4_SERVICE
init|=
literal|"SERVICE@"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|MODE4_SUID
init|=
literal|0x800
decl_stmt|;
comment|/* set user id on execution */
specifier|public
specifier|final
specifier|static
name|int
name|MODE4_SGID
init|=
literal|0x400
decl_stmt|;
comment|/* set group id on execution */
specifier|public
specifier|final
specifier|static
name|int
name|MODE4_SVTX
init|=
literal|0x200
decl_stmt|;
comment|/* save text even after use */
specifier|public
specifier|final
specifier|static
name|int
name|MODE4_RUSR
init|=
literal|0x100
decl_stmt|;
comment|/* read permission: owner */
specifier|public
specifier|final
specifier|static
name|int
name|MODE4_WUSR
init|=
literal|0x080
decl_stmt|;
comment|/* write permission: owner */
specifier|public
specifier|final
specifier|static
name|int
name|MODE4_XUSR
init|=
literal|0x040
decl_stmt|;
comment|/* execute permission: owner */
specifier|public
specifier|final
specifier|static
name|int
name|MODE4_RGRP
init|=
literal|0x020
decl_stmt|;
comment|/* read permission: group */
specifier|public
specifier|final
specifier|static
name|int
name|MODE4_WGRP
init|=
literal|0x010
decl_stmt|;
comment|/* write permission: group */
specifier|public
specifier|final
specifier|static
name|int
name|MODE4_XGRP
init|=
literal|0x008
decl_stmt|;
comment|/* execute permission: group */
specifier|public
specifier|final
specifier|static
name|int
name|MODE4_ROTH
init|=
literal|0x004
decl_stmt|;
comment|/* read permission: other */
specifier|public
specifier|final
specifier|static
name|int
name|MODE4_WOTH
init|=
literal|0x002
decl_stmt|;
comment|/* write permission: other */
specifier|public
specifier|final
specifier|static
name|int
name|MODE4_XOTH
init|=
literal|0x001
decl_stmt|;
comment|/* execute permission: other */
block|}
end_class

end_unit

