begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2011 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|serializer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|StoredNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|Locator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|helpers
operator|.
name|AttributesImpl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|siemens
operator|.
name|ct
operator|.
name|exi
operator|.
name|EXIFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|siemens
operator|.
name|ct
operator|.
name|exi
operator|.
name|GrammarFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|siemens
operator|.
name|ct
operator|.
name|exi
operator|.
name|api
operator|.
name|sax
operator|.
name|SAXEncoder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|siemens
operator|.
name|ct
operator|.
name|exi
operator|.
name|exceptions
operator|.
name|EXIException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|siemens
operator|.
name|ct
operator|.
name|exi
operator|.
name|grammar
operator|.
name|Grammar
import|;
end_import

begin_import
import|import
name|com
operator|.
name|siemens
operator|.
name|ct
operator|.
name|exi
operator|.
name|helpers
operator|.
name|DefaultEXIFactory
import|;
end_import

begin_class
specifier|public
class|class
name|EXISerializer
implements|implements
name|ContentHandler
implements|,
name|Receiver
block|{
specifier|static
specifier|final
name|String
name|UNKNOWN_TYPE
init|=
literal|""
decl_stmt|;
specifier|private
name|SAXEncoder
name|encoder
decl_stmt|;
specifier|public
name|EXISerializer
parameter_list|(
name|OutputStream
name|exiOutputStream
parameter_list|)
throws|throws
name|EXIException
block|{
name|EXIFactory
name|exiFactory
init|=
name|DefaultEXIFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|encoder
operator|=
operator|new
name|SAXEncoder
argument_list|(
name|exiFactory
argument_list|,
name|exiOutputStream
argument_list|)
expr_stmt|;
block|}
specifier|public
name|EXISerializer
parameter_list|(
name|OutputStream
name|exiOutputStream
parameter_list|,
name|InputStream
name|xsdInputStream
parameter_list|)
throws|throws
name|EXIException
block|{
name|EXIFactory
name|exiFactory
init|=
name|DefaultEXIFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|GrammarFactory
name|grammarFactory
init|=
name|GrammarFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|Grammar
name|g
init|=
name|grammarFactory
operator|.
name|createGrammar
argument_list|(
name|xsdInputStream
argument_list|)
decl_stmt|;
name|exiFactory
operator|.
name|setGrammar
argument_list|(
name|g
argument_list|)
expr_stmt|;
name|encoder
operator|=
operator|new
name|SAXEncoder
argument_list|(
name|exiFactory
argument_list|,
name|exiOutputStream
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|startDocument
parameter_list|()
throws|throws
name|SAXException
block|{
name|encoder
operator|.
name|startDocument
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|endDocument
parameter_list|()
throws|throws
name|SAXException
block|{
name|encoder
operator|.
name|endDocument
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|startPrefixMapping
parameter_list|(
name|String
name|prefix
parameter_list|,
name|String
name|namespaceURI
parameter_list|)
throws|throws
name|SAXException
block|{
name|encoder
operator|.
name|startPrefixMapping
argument_list|(
name|prefix
argument_list|,
name|namespaceURI
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|endPrefixMapping
parameter_list|(
name|String
name|prefix
parameter_list|)
throws|throws
name|SAXException
block|{
name|encoder
operator|.
name|endPrefixMapping
argument_list|(
name|prefix
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|startElement
parameter_list|(
name|QName
name|qname
parameter_list|,
name|AttrList
name|attribs
parameter_list|)
throws|throws
name|SAXException
block|{
name|AttributesImpl
name|attributes
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|attribs
operator|!=
literal|null
condition|)
block|{
name|attributes
operator|=
operator|new
name|AttributesImpl
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|x
init|=
literal|0
init|;
name|x
operator|<
name|attribs
operator|.
name|size
condition|;
name|x
operator|++
control|)
block|{
name|QName
name|attribQName
init|=
name|attribs
operator|.
name|getQName
argument_list|(
name|x
argument_list|)
decl_stmt|;
name|attributes
operator|.
name|addAttribute
argument_list|(
name|attribQName
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
name|attribQName
operator|.
name|getLocalName
argument_list|()
argument_list|,
name|attribQName
operator|.
name|getStringValue
argument_list|()
argument_list|,
name|UNKNOWN_TYPE
argument_list|,
name|attribs
operator|.
name|getValue
argument_list|(
name|x
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|encoder
operator|.
name|startElement
argument_list|(
name|qname
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
name|qname
operator|.
name|getLocalName
argument_list|()
argument_list|,
literal|null
argument_list|,
name|attributes
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|endElement
parameter_list|(
name|QName
name|qname
parameter_list|)
throws|throws
name|SAXException
block|{
name|encoder
operator|.
name|endElement
argument_list|(
name|qname
operator|.
name|getNamespaceURI
argument_list|()
argument_list|,
name|qname
operator|.
name|getLocalName
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|characters
parameter_list|(
name|CharSequence
name|seq
parameter_list|)
throws|throws
name|SAXException
block|{
name|String
name|sequence
init|=
name|seq
operator|.
name|toString
argument_list|()
decl_stmt|;
name|encoder
operator|.
name|characters
argument_list|(
name|sequence
operator|.
name|toCharArray
argument_list|()
argument_list|,
literal|0
argument_list|,
name|sequence
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|attribute
parameter_list|(
name|QName
name|qname
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|SAXException
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|void
name|comment
parameter_list|(
name|char
index|[]
name|ch
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SAXException
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|void
name|cdataSection
parameter_list|(
name|char
index|[]
name|ch
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|len
parameter_list|)
throws|throws
name|SAXException
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|void
name|processingInstruction
parameter_list|(
name|String
name|target
parameter_list|,
name|String
name|data
parameter_list|)
throws|throws
name|SAXException
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|void
name|documentType
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|publicId
parameter_list|,
name|String
name|systemId
parameter_list|)
throws|throws
name|SAXException
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|void
name|highlightText
parameter_list|(
name|CharSequence
name|seq
parameter_list|)
throws|throws
name|SAXException
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|void
name|setCurrentNode
parameter_list|(
name|StoredNode
name|node
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|Document
name|getDocument
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setDocumentLocator
parameter_list|(
name|Locator
name|locator
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|void
name|startElement
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|localName
parameter_list|,
name|String
name|qName
parameter_list|,
name|Attributes
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
name|encoder
operator|.
name|startElement
argument_list|(
name|uri
argument_list|,
name|localName
argument_list|,
literal|null
argument_list|,
name|atts
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|endElement
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|localName
parameter_list|,
name|String
name|qName
parameter_list|)
throws|throws
name|SAXException
block|{
name|encoder
operator|.
name|endElement
argument_list|(
name|uri
argument_list|,
name|localName
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|characters
parameter_list|(
name|char
index|[]
name|ch
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SAXException
block|{
name|encoder
operator|.
name|characters
argument_list|(
name|ch
argument_list|,
name|start
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|ignorableWhitespace
parameter_list|(
name|char
index|[]
name|ch
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SAXException
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|void
name|skippedEntity
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|SAXException
block|{
comment|// TODO Auto-generated method stub
block|}
name|void
name|setEncoder
parameter_list|(
name|SAXEncoder
name|encoder
parameter_list|)
block|{
name|this
operator|.
name|encoder
operator|=
name|encoder
expr_stmt|;
block|}
block|}
end_class

end_unit

