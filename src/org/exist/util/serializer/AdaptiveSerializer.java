begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2017 The eXist Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public  * License along with this library; if not, write to the Free Software  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|serializer
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|serializers
operator|.
name|EXistOutputKeys
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|XPathException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|value
operator|.
name|Sequence
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_comment
comment|/**  * Implements adaptive serialization from the<a href="https://www.w3.org/TR/xslt-xquery-serialization-31/">XSLT and  * XQuery Serialization 3.1</a> specification.  *  * @author Wolfgang  */
end_comment

begin_class
specifier|public
class|class
name|AdaptiveSerializer
extends|extends
name|AbstractSerializer
block|{
specifier|private
specifier|final
specifier|static
name|String
name|DEFAULT_ITEM_SEPARATOR
init|=
literal|"\n"
decl_stmt|;
specifier|private
specifier|final
name|DBBroker
name|broker
decl_stmt|;
specifier|private
name|AdaptiveWriter
name|adaptiveWriter
decl_stmt|;
specifier|public
name|AdaptiveSerializer
parameter_list|(
specifier|final
name|DBBroker
name|broker
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|broker
operator|=
name|broker
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setOutput
parameter_list|(
specifier|final
name|Writer
name|writer
parameter_list|,
specifier|final
name|Properties
name|properties
parameter_list|)
block|{
if|if
condition|(
name|properties
operator|==
literal|null
condition|)
block|{
name|outputProperties
operator|=
operator|new
name|Properties
argument_list|(
name|defaultProperties
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|outputProperties
operator|=
name|properties
expr_stmt|;
block|}
for|for
control|(
name|XMLWriter
name|w
range|:
name|writers
control|)
block|{
name|w
operator|.
name|setWriter
argument_list|(
name|writer
argument_list|)
expr_stmt|;
name|w
operator|.
name|setOutputProperties
argument_list|(
name|outputProperties
argument_list|)
expr_stmt|;
block|}
name|adaptiveWriter
operator|=
operator|new
name|AdaptiveWriter
argument_list|(
name|broker
argument_list|,
name|outputProperties
argument_list|,
name|writers
index|[
name|TEXT_WRITER
index|]
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|serialize
parameter_list|(
specifier|final
name|Sequence
name|sequence
parameter_list|)
throws|throws
name|XPathException
throws|,
name|SAXException
block|{
specifier|final
name|String
name|itemSep
init|=
name|outputProperties
operator|.
name|getProperty
argument_list|(
name|EXistOutputKeys
operator|.
name|ITEM_SEPARATOR
argument_list|,
name|DEFAULT_ITEM_SEPARATOR
argument_list|)
decl_stmt|;
try|try
block|{
name|adaptiveWriter
operator|.
name|write
argument_list|(
name|sequence
argument_list|,
name|itemSep
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TransformerException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SAXException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

