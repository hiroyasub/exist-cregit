begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-06 Wolfgang M. Meier  *  wolfgang@exist-db.org  *  http://exist.sourceforge.net  *    *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *    *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *    *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *    *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|serializer
operator|.
name|encodings
package|;
end_package

begin_comment
comment|/**  * Latin2 character set. Adopted from Saxon {@link http://saxon.sourceforge.net}.  *   */
end_comment

begin_class
specifier|public
class|class
name|Latin2CharSet
extends|extends
name|CharacterSet
block|{
specifier|protected
specifier|final
specifier|static
name|CharacterSet
name|instance
init|=
operator|new
name|Latin2CharSet
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|boolean
index|[]
name|c
init|=
literal|null
decl_stmt|;
static|static
block|{
name|c
operator|=
operator|new
name|boolean
index|[
literal|750
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|127
condition|;
name|i
operator|++
control|)
block|{
name|c
index|[
name|i
index|]
operator|=
literal|true
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|128
init|;
name|i
operator|<
literal|750
condition|;
name|i
operator|++
control|)
block|{
name|c
index|[
name|i
index|]
operator|=
literal|false
expr_stmt|;
block|}
name|c
index|[
literal|160
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|164
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|167
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|168
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|173
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|176
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|180
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|184
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|193
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|194
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|196
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|199
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|201
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|203
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|205
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|206
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|211
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|212
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|214
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|215
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|218
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|220
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|221
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|223
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|225
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|226
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|228
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|231
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|233
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|235
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|237
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|238
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|243
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|244
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|246
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|247
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|250
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|252
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|253
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|258
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|259
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|260
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|261
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|262
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|263
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|268
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|269
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|270
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|271
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|272
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|273
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|280
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|281
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|282
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|283
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|313
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|314
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|317
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|318
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|321
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|322
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|323
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|324
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|327
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|328
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|336
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|337
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|340
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|341
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|344
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|345
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|346
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|347
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|350
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|351
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|352
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|353
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|354
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|355
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|356
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|357
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|366
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|367
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|368
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|369
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|377
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|378
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|379
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|380
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|381
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|382
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|711
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|728
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|729
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|731
index|]
operator|=
literal|true
expr_stmt|;
name|c
index|[
literal|733
index|]
operator|=
literal|true
expr_stmt|;
block|}
comment|/* (non-Javadoc) 	 * @see org.exist.util.serializer.encodings.CharacterSet#inCharacterSet(char) 	 */
specifier|public
name|boolean
name|inCharacterSet
parameter_list|(
name|char
name|ch
parameter_list|)
block|{
return|return
operator|(
name|ch
operator|<
literal|750
operator|&&
name|c
index|[
name|ch
index|]
operator|)
return|;
block|}
specifier|public
specifier|static
name|CharacterSet
name|getInstance
parameter_list|()
block|{
return|return
name|instance
return|;
block|}
block|}
end_class

end_unit

