begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_class
specifier|public
class|class
name|VariableByteOutputStream
extends|extends
name|OutputStream
block|{
specifier|private
name|FastByteBuffer
name|buf
init|=
operator|new
name|FastByteBuffer
argument_list|(
literal|6
argument_list|,
literal|10
argument_list|,
literal|3
argument_list|)
decl_stmt|;
specifier|public
name|VariableByteOutputStream
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|buf
operator|.
name|setLength
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
block|}
specifier|public
name|void
name|copyTo
parameter_list|(
name|byte
index|[]
name|b
parameter_list|)
block|{
name|buf
operator|.
name|copyTo
argument_list|(
name|b
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|copyTo
parameter_list|(
name|byte
index|[]
name|b
parameter_list|,
name|int
name|off
parameter_list|)
block|{
name|buf
operator|.
name|copyTo
argument_list|(
name|b
argument_list|,
name|off
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|flush
parameter_list|()
throws|throws
name|IOException
block|{
block|}
specifier|public
name|byte
index|[]
name|toByteArray
parameter_list|()
block|{
name|byte
index|[]
name|b
init|=
operator|new
name|byte
index|[
name|buf
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|buf
operator|.
name|copyTo
argument_list|(
name|b
argument_list|,
literal|0
argument_list|)
expr_stmt|;
return|return
name|b
return|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|int
name|b
parameter_list|)
throws|throws
name|IOException
block|{
name|buf
operator|.
name|append
argument_list|(
operator|(
name|byte
operator|)
name|b
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|byte
index|[]
name|b
parameter_list|)
throws|throws
name|IOException
block|{
name|buf
operator|.
name|append
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|byte
index|[]
name|b
parameter_list|,
name|int
name|off
parameter_list|,
name|int
name|len
parameter_list|)
throws|throws
name|IOException
block|{
name|buf
operator|.
name|append
argument_list|(
name|b
argument_list|,
name|off
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeByte
parameter_list|(
name|byte
name|b
parameter_list|)
block|{
name|buf
operator|.
name|append
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeShort
parameter_list|(
name|int
name|s
parameter_list|)
block|{
name|VariableByteCoding
operator|.
name|encode
argument_list|(
name|buf
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeInt
parameter_list|(
name|int
name|i
parameter_list|)
block|{
name|VariableByteCoding
operator|.
name|encode
argument_list|(
name|buf
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeLong
parameter_list|(
name|long
name|l
parameter_list|)
block|{
name|VariableByteCoding
operator|.
name|encode
argument_list|(
name|buf
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeUTF
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|IOException
block|{
name|byte
index|[]
name|data
init|=
literal|null
decl_stmt|;
try|try
block|{
name|data
operator|=
name|s
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedEncodingException
name|e
parameter_list|)
block|{
name|data
operator|=
name|s
operator|.
name|getBytes
argument_list|()
expr_stmt|;
block|}
name|writeInt
argument_list|(
name|data
operator|.
name|length
argument_list|)
expr_stmt|;
name|write
argument_list|(
name|data
argument_list|,
literal|0
argument_list|,
name|data
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|finalize
parameter_list|()
block|{
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|VariableByteOutputStream
name|os
init|=
operator|new
name|VariableByteOutputStream
argument_list|()
decl_stmt|;
name|os
operator|.
name|writeUTF
argument_list|(
literal|"a_and_c.xml"
argument_list|)
expr_stmt|;
name|byte
index|[]
name|data
init|=
name|os
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|StringUtil
operator|.
name|hexDump
argument_list|(
name|data
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

