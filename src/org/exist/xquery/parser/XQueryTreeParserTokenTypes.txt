// $ANTLR 2.7.4: XQueryTree.g -> XQueryTreeParserTokenTypes.txt$
XQueryTreeParser    // output token vocab name
QNAME=4
PREDICATE=5
FLWOR=6
PARENTHESIZED=7
ABSOLUTE_SLASH=8
ABSOLUTE_DSLASH=9
WILDCARD=10
PREFIX_WILDCARD=11
FUNCTION=12
UNARY_MINUS=13
UNARY_PLUS=14
XPOINTER=15
XPOINTER_ID=16
VARIABLE_REF=17
VARIABLE_BINDING=18
ELEMENT=19
ATTRIBUTE=20
TEXT=21
VERSION_DECL=22
NAMESPACE_DECL=23
DEF_NAMESPACE_DECL=24
DEF_COLLATION_DECL=25
DEF_FUNCTION_NS_DECL=26
GLOBAL_VAR=27
FUNCTION_DECL=28
PROLOG=29
ATOMIC_TYPE=30
MODULE=31
ORDER_BY=32
POSITIONAL_VAR=33
BEFORE=34
AFTER=35
MODULE_DECL=36
ATTRIBUTE_TEST=37
COMP_ELEM_CONSTRUCTOR=38
COMP_ATTR_CONSTRUCTOR=39
COMP_TEXT_CONSTRUCTOR=40
COMP_COMMENT_CONSTRUCTOR=41
COMP_PI_CONSTRUCTOR=42
COMP_NS_CONSTRUCTOR=43
COMP_DOC_CONSTRUCTOR=44
LITERAL_xpointer="xpointer"=45
LPAREN("'('")=46
RPAREN("')'")=47
NCNAME=48
LITERAL_xquery="xquery"=49
LITERAL_version="version"=50
SEMICOLON=51
LITERAL_module="module"=52
LITERAL_namespace="namespace"=53
EQ=54
STRING_LITERAL=55
LITERAL_import="import"=56
LITERAL_declare="declare"=57
LITERAL_default="default"=58
LITERAL_xmlspace="xmlspace"=59
LITERAL_ordering="ordering"=60
LITERAL_construction="construction"=61
LITERAL_function="function"=62
LITERAL_variable="variable"=63
LITERAL_collation="collation"=64
LITERAL_element="element"=65
LITERAL_preserve="preserve"=66
LITERAL_strip="strip"=67
LITERAL_ordered="ordered"=68
LITERAL_unordered="unordered"=69
DOLLAR=70
LCURLY=71
RCURLY=72
LITERAL_at="at"=73
LITERAL_as="as"=74
COMMA=75
LITERAL_empty="empty"=76
QUESTION=77
STAR=78
PLUS=79
LITERAL_item="item"=80
LITERAL_for="for"=81
LITERAL_let="let"=82
LITERAL_some="some"=83
LITERAL_every="every"=84
LITERAL_if="if"=85
LITERAL_where="where"=86
LITERAL_return="return"=87
LITERAL_in="in"=88
COLON=89
LITERAL_order="order"=90
LITERAL_by="by"=91
LITERAL_ascending="ascending"=92
LITERAL_descending="descending"=93
LITERAL_greatest="greatest"=94
LITERAL_least="least"=95
LITERAL_satisfies="satisfies"=96
LITERAL_typeswitch="typeswitch"=97
LITERAL_case="case"=98
LITERAL_then="then"=99
LITERAL_else="else"=100
LITERAL_or="or"=101
LITERAL_and="and"=102
LITERAL_instance="instance"=103
LITERAL_of="of"=104
LITERAL_castable="castable"=105
LITERAL_cast="cast"=106
LT=107
GT=108
LITERAL_eq="eq"=109
LITERAL_ne="ne"=110
LITERAL_lt="lt"=111
LITERAL_le="le"=112
LITERAL_gt="gt"=113
LITERAL_ge="ge"=114
NEQ=115
GTEQ=116
LTEQ=117
LITERAL_is="is"=118
LITERAL_isnot="isnot"=119
ANDEQ=120
OREQ=121
LITERAL_to="to"=122
MINUS=123
LITERAL_div="div"=124
LITERAL_idiv="idiv"=125
LITERAL_mod="mod"=126
LITERAL_union="union"=127
UNION=128
LITERAL_intersect="intersect"=129
LITERAL_except="except"=130
SLASH=131
DSLASH=132
LITERAL_text="text"=133
LITERAL_node="node"=134
LITERAL_attribute="attribute"=135
LITERAL_comment="comment"=136
"processing-instruction"=137
"document-node"=138
LITERAL_document="document"=139
SELF=140
XML_COMMENT=141
XML_PI=142
LPPAREN=143
RPPAREN=144
AT=145
PARENT=146
LITERAL_child="child"=147
LITERAL_self="self"=148
LITERAL_descendant="descendant"=149
"descendant-or-self"=150
"following-sibling"=151
LITERAL_following="following"=152
LITERAL_parent="parent"=153
LITERAL_ancestor="ancestor"=154
"ancestor-or-self"=155
"preceding-sibling"=156
DOUBLE_LITERAL=157
DECIMAL_LITERAL=158
INTEGER_LITERAL=159
END_TAG_START=160
QUOT=161
APOS=162
ATTRIBUTE_CONTENT=163
ELEMENT_CONTENT=164
XML_COMMENT_END=165
XML_PI_END=166
XML_CDATA("CDATA")=167
LITERAL_collection="collection"=168
LITERAL_preceding="preceding"=169
XML_PI_START=170
XML_CDATA_START=171
XML_CDATA_END=172
LETTER=173
DIGITS=174
HEX_DIGITS=175
NMSTART=176
NMCHAR=177
WS=178
EXPR_COMMENT=179
PRAGMA=180
PRAGMA_CONTENT=181
PRAGMA_QNAME=182
PREDEFINED_ENTITY_REF=183
CHAR_REF=184
NEXT_TOKEN=185
CHAR=186
BASECHAR=187
IDEOGRAPHIC=188
COMBINING_CHAR=189
DIGIT=190
EXTENDER=191
