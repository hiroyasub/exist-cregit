// $ANTLR 2.7.4: XQueryTree.g -> XQueryTreeParserTokenTypes.txt$
XQueryTreeParser    // output token vocab name
QNAME=4
PREDICATE=5
FLWOR=6
PARENTHESIZED=7
ABSOLUTE_SLASH=8
ABSOLUTE_DSLASH=9
WILDCARD=10
PREFIX_WILDCARD=11
FUNCTION=12
UNARY_MINUS=13
UNARY_PLUS=14
XPOINTER=15
XPOINTER_ID=16
VARIABLE_REF=17
VARIABLE_BINDING=18
ELEMENT=19
ATTRIBUTE=20
ATTRIBUTE_CONTENT=21
TEXT=22
VERSION_DECL=23
NAMESPACE_DECL=24
DEF_NAMESPACE_DECL=25
DEF_COLLATION_DECL=26
DEF_FUNCTION_NS_DECL=27
GLOBAL_VAR=28
FUNCTION_DECL=29
PROLOG=30
ATOMIC_TYPE=31
MODULE=32
ORDER_BY=33
POSITIONAL_VAR=34
BEFORE=35
AFTER=36
MODULE_DECL=37
ATTRIBUTE_TEST=38
COMP_ELEM_CONSTRUCTOR=39
COMP_ATTR_CONSTRUCTOR=40
COMP_TEXT_CONSTRUCTOR=41
COMP_COMMENT_CONSTRUCTOR=42
COMP_PI_CONSTRUCTOR=43
COMP_NS_CONSTRUCTOR=44
COMP_DOC_CONSTRUCTOR=45
LITERAL_xpointer="xpointer"=46
LPAREN("opening parenthesis '('")=47
RPAREN("closing parenthesis ')'")=48
NCNAME("name")=49
LITERAL_xquery="xquery"=50
LITERAL_version="version"=51
SEMICOLON("semicolon ';'")=52
LITERAL_module="module"=53
LITERAL_namespace="namespace"=54
EQ("=")=55
STRING_LITERAL("string literal")=56
LITERAL_import="import"=57
LITERAL_declare="declare"=58
LITERAL_default="default"=59
LITERAL_xmlspace="xmlspace"=60
LITERAL_ordering="ordering"=61
LITERAL_construction="construction"=62
LITERAL_function="function"=63
LITERAL_variable="variable"=64
LITERAL_encoding="encoding"=65
LITERAL_collation="collation"=66
LITERAL_element="element"=67
LITERAL_preserve="preserve"=68
LITERAL_strip="strip"=69
LITERAL_ordered="ordered"=70
LITERAL_unordered="unordered"=71
DOLLAR("dollar sign '$'")=72
LCURLY("opening curly brace '{'")=73
RCURLY("closing curly brace '{'")=74
LITERAL_at="at"=75
LITERAL_as="as"=76
COMMA=77
LITERAL_empty="empty"=78
QUESTION("question mark '?'")=79
STAR("wildcard '*'")=80
PLUS("+")=81
LITERAL_item="item"=82
LITERAL_for="for"=83
LITERAL_let="let"=84
LITERAL_some="some"=85
LITERAL_every="every"=86
LITERAL_if="if"=87
LITERAL_where="where"=88
LITERAL_return="return"=89
LITERAL_in="in"=90
COLON=91
LITERAL_order="order"=92
LITERAL_by="by"=93
LITERAL_ascending="ascending"=94
LITERAL_descending="descending"=95
LITERAL_greatest="greatest"=96
LITERAL_least="least"=97
LITERAL_satisfies="satisfies"=98
LITERAL_typeswitch="typeswitch"=99
LITERAL_case="case"=100
LITERAL_then="then"=101
LITERAL_else="else"=102
LITERAL_or="or"=103
LITERAL_and="and"=104
LITERAL_instance="instance"=105
LITERAL_of="of"=106
LITERAL_castable="castable"=107
LITERAL_cast="cast"=108
LT("<")=109
GT(">")=110
LITERAL_eq="eq"=111
LITERAL_ne="ne"=112
LITERAL_lt="lt"=113
LITERAL_le="le"=114
LITERAL_gt="gt"=115
LITERAL_ge="ge"=116
NEQ("!=")=117
GTEQ(">=")=118
LTEQ("<=")=119
LITERAL_is="is"=120
LITERAL_isnot="isnot"=121
ANDEQ("fulltext operator '&='")=122
OREQ("fulltext operator '|='")=123
LITERAL_to="to"=124
MINUS("-")=125
LITERAL_div="div"=126
LITERAL_idiv="idiv"=127
LITERAL_mod="mod"=128
LITERAL_union="union"=129
UNION("union")=130
LITERAL_intersect="intersect"=131
LITERAL_except="except"=132
SLASH("single slash '/'")=133
DSLASH("double slash '//'")=134
LITERAL_text="text"=135
LITERAL_node="node"=136
LITERAL_attribute="attribute"=137
LITERAL_comment="comment"=138
"processing-instruction"=139
"document-node"=140
LITERAL_document="document"=141
SELF(".")=142
XML_COMMENT("XML comment")=143
XML_PI("processing instruction")=144
LPPAREN("opening brace '['")=145
RPPAREN("closing brace ']'")=146
AT("@ char")=147
PARENT("..")=148
LITERAL_child="child"=149
LITERAL_self="self"=150
LITERAL_descendant="descendant"=151
"descendant-or-self"=152
"following-sibling"=153
LITERAL_following="following"=154
LITERAL_parent="parent"=155
LITERAL_ancestor="ancestor"=156
"ancestor-or-self"=157
"preceding-sibling"=158
DOUBLE_LITERAL=159
DECIMAL_LITERAL=160
INTEGER_LITERAL=161
END_TAG_START("XML end tag")=162
QUOT("double quote '\"'")=163
APOS("single quote '")=164
QUOT_ATTRIBUTE_CONTENT=165
APOS_ATTRIBUTE_CONTENT=166
ELEMENT_CONTENT=167
XML_COMMENT_END("end of XML comment")=168
XML_PI_END("end of processing instruction")=169
XML_CDATA("CDATA section")=170
LITERAL_collection="collection"=171
LITERAL_preceding="preceding"=172
XML_PI_START("start of processing instruction")=173
XML_CDATA_START("CDATA section start")=174
XML_CDATA_END("end of CDATA section")=175
LETTER=176
DIGITS=177
HEX_DIGITS=178
NMSTART=179
NMCHAR=180
WS=181
EXPR_COMMENT("XQuery comment")=182
PRAGMA("XQuery pragma")=183
PRAGMA_CONTENT=184
PRAGMA_QNAME=185
PREDEFINED_ENTITY_REF=186
CHAR_REF=187
NEXT_TOKEN=188
CHAR=189
BASECHAR=190
IDEOGRAPHIC=191
COMBINING_CHAR=192
DIGIT=193
EXTENDER=194
