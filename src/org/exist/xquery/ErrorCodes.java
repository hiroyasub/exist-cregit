begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2010 The eXist Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *    * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *   * You should have received a copy of the GNU Lesser General Public License  * along with this program; if not, write to the Free Software Foundation  * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  *    *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xquery
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|Namespaces
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|QName
import|;
end_import

begin_comment
comment|/**  *  * @author aretter  */
end_comment

begin_class
specifier|public
class|class
name|ErrorCodes
block|{
comment|/* XPath 2.0 http://www.w3.org/TR/xpath20/#id-errors */
specifier|public
specifier|static
name|ErrorCode
name|XPST0001
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XPST0001"
argument_list|,
literal|"It is a static error if analysis of an expression relies on some component of the static context that has not been assigned a value."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XPDY0002
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XPDY0002"
argument_list|,
literal|"It is a dynamic error if evaluation of an expression relies on some part of the dynamic context that has not been assigned a value."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XPST0003
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XPST0003"
argument_list|,
literal|"It is a static error if an expression is not a valid instance of the grammar defined in A.1 EBNF."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XPTY0004
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XPTY0004"
argument_list|,
literal|"It is a type error if, during the static analysis phase, an expression is found to have a static type that is not appropriate for the context in which the expression occurs, or during the dynamic evaluation phase, the dynamic type of a value does not match a required type as specified by the matching rules in 2.5.4 SequenceType Matching."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XPST0005
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XPST0005"
argument_list|,
literal|"During the analysis phase, it is a static error if the static type assigned to an expression other than the expression () or data(()) is empty-sequence()."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XPTY0006
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XPTY0006"
argument_list|,
literal|"(Not currently used.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XPTY0007
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XPTY0007"
argument_list|,
literal|"(Not currently used.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XPST0008
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XPST0008"
argument_list|,
literal|"It is a static error if an expression refers to an element name, attribute name, schema type name, namespace prefix, or variable name that is not defined in the static context, except for an ElementName in an ElementTest or an AttributeName in an AttributeTest."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XPST0010
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XPST0010"
argument_list|,
literal|"An implementation must raise a static error if it encounters a reference to an axis that it does not support."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XPST0017
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XPST0017"
argument_list|,
literal|"It is a static error if the expanded QName and number of arguments in a function call do not match the name and arity of a function signature in the static context."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XPTY0018
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XPTY0018"
argument_list|,
literal|"It is a type error if the result of the last step in a path expression contains both nodes and atomic values."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XPTY0019
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XPTY0019"
argument_list|,
literal|"It is a type error if the result of a step (other than the last step) in a path expression contains an atomic value."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XPTY0020
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XPTY0020"
argument_list|,
literal|"It is a type error if, in an axis step, the context item is not a node."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XPDY0021
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XPDY0021"
argument_list|,
literal|"(Not currently used.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XPDY0050
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XPDY0050"
argument_list|,
literal|"It is a dynamic error if the dynamic type of the operand of a treat expression does not match the sequence type specified by the treat expression. This error might also be raised by a path expression beginning with \"/\" or \"//\" if the context node is not in a tree that is rooted at a document node. This is because a leading \"/\" or \"//\" in a path expression is an abbreviation for an initial step that includes the clause treat as document-node()."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XPST0051
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XPST0051"
argument_list|,
literal|"It is a static error if a QName that is used as an AtomicType in a SequenceType is not defined in the in-scope schema types as an atomic type."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XPST0080
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XPST0080"
argument_list|,
literal|"It is a static error if the target type of a cast or castable expression is xs:NOTATION or xs:anyAtomicType."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XPST0081
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XPST0081"
argument_list|,
literal|"It is a static error if a QName used in an expression contains a namespace prefix that cannot be expanded into a namespace URI by using the statically known namespaces."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XPST0083
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XPST0083"
argument_list|,
literal|"(Not currently used.)"
argument_list|)
decl_stmt|;
comment|/* XQuery 1.0 http://www.w3.org/TR/xquery/#id-errors */
specifier|public
specifier|static
name|ErrorCode
name|XQST0009
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0009"
argument_list|,
literal|"An implementation that does not support the Schema Import Feature must raise a static error if a Prolog contains a schema import."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0012
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0012"
argument_list|,
literal|"It is a static error if the set of definitions contained in all schemas imported by a Prolog do not satisfy the conditions for schema validity specified in Sections 3 and 5 of [XML Schema] Part 1--i.e., each definition must be valid, complete, and unique."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0013
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0013"
argument_list|,
literal|"It is a static error if an implementation recognizes a pragma but determines that its content is invalid."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0014
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0014"
argument_list|,
literal|"(Not currently used.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0015
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0015"
argument_list|,
literal|"(Not currently used.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0016
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0016"
argument_list|,
literal|"An implementation that does not support the Module Feature raises a static error if it encounters a module declaration or a module import."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0022
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0022"
argument_list|,
literal|"It is a static error if the value of a namespace declaration attribute is not a URILiteral."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQTY0023
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQTY0023"
argument_list|,
literal|"(Not currently used.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQTY0024
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQTY0024"
argument_list|,
literal|"It is a type error if the content sequence in an element constructor contains an attribute node following a node that is not an attribute node."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQDY0025
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQDY0025"
argument_list|,
literal|"It is a dynamic error if any attribute of a constructed element does not have a name that is distinct from the names of all other attributes of the constructed element."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQDY0026
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQDY0026"
argument_list|,
literal|"It is a dynamic error if the result of the content expression of a computed processing instruction constructor contains the string \"?>\"."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQDY0027
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQDY0027"
argument_list|,
literal|"In a validate expression, it is a dynamic error if the root element information item in the PSVI resulting from validation does not have the expected validity property: valid if validation mode is strict, or either valid or notKnown if validation mode is lax."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQTY0028
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQTY0028"
argument_list|,
literal|"(Not currently used.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQDY0029
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQDY0029"
argument_list|,
literal|"(Not currently used.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQTY0030
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQTY0030"
argument_list|,
literal|"It is a type error if the argument of a validate expression does not evaluate to exactly one document or element node."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0031
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0031"
argument_list|,
literal|"It is a static error if the version number specified in a version declaration is not supported by the implementation."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0032
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0032"
argument_list|,
literal|"A static error is raised if a Prolog contains more than one base URI declaration."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0033
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0033"
argument_list|,
literal|"It is a static error if a module contains multiple bindings for the same namespace prefix."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0034
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0034"
argument_list|,
literal|"It is a static error if multiple functions declared or imported by a module have the number of arguments and their expanded QNames are equal (as defined by the eq operator)."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0035
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0035"
argument_list|,
literal|"It is a static error to import two schema components that both define the same name in the same symbol space and in the same scope."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0036
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0036"
argument_list|,
literal|"It is a static error to import a module if the importing module's in-scope schema types do not include definitions for the schema type names that appear in the declarations of variables and functions (whether in an argument type or return type) that are present in the imported module and are referenced in the importing module."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0037
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0037"
argument_list|,
literal|"(Not currently used.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0038
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0038"
argument_list|,
literal|"It is a static error if a Prolog contains more than one default collation declaration, or the value specified by a default collation declaration is not present in statically known collations."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0039
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0039"
argument_list|,
literal|"It is a static error for a function declaration to have more than one parameter with the same name."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0040
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0040"
argument_list|,
literal|"It is a static error if the attributes specified by a direct element constructor do not have distinct expanded QNames."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQDY0041
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQDY0041"
argument_list|,
literal|"It is a dynamic error if the value of the name expression in a computed processing instruction constructor cannot be cast to the type xs:NCName."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0042
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0042"
argument_list|,
literal|"(Not currently used.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0043
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0043"
argument_list|,
literal|"(Not currently used.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQDY0044
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQDY0044"
argument_list|,
literal|"It is a dynamic error if the node-name property of the node constructed by a computed attribute constructor is in the namespace http://www.w3.org/2000/xmlns/ (corresponding to namespace prefix xmlns), or is in no namespace and has local name xmlns."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0045
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0045"
argument_list|,
literal|"It is a static error if the function name in a function declaration is in one of the following namespaces: http://www.w3.org/XML/1998/namespace, http://www.w3.org/2001/XMLSchema, http://www.w3.org/2001/XMLSchema-instance, http://www.w3.org/2005/xpath-functions."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0046
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0046"
argument_list|,
literal|"An implementation MAY raise a static error if the value of a URILiteral is of nonzero length and is not in the lexical space of xs:anyURI."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0047
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0047"
argument_list|,
literal|"It is a static error if multiple module imports in the same Prolog specify the same target namespace."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0048
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0048"
argument_list|,
literal|"It is a static error if a function or variable declared in a library module is not in the target namespace of the library module."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0049
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0049"
argument_list|,
literal|"It is a static error if two or more variables declared or imported by a module have equal expanded QNames (as defined by the eq operator.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQDY0052
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQDY0052"
argument_list|,
literal|"(Not currently used.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0053
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0053"
argument_list|,
literal|"(Not currently used.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0054
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0054"
argument_list|,
literal|"It is a static error if a variable depends on itself."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0055
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0055"
argument_list|,
literal|"It is a static error if a Prolog contains more than one copy-namespaces declaration."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0056
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0056"
argument_list|,
literal|"(Not currently used.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0057
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0057"
argument_list|,
literal|"It is a static error if a schema import binds a namespace prefix but does not specify a target namespace other than a zero-length string."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0058
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0058"
argument_list|,
literal|"It is a static error if multiple schema imports specify the same target namespace."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0059
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0059"
argument_list|,
literal|"It is a static error if an implementation is unable to process a schema or module import by finding a schema or module with the specified target namespace."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0060
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0060"
argument_list|,
literal|"It is a static error if the name of a function in a function declaration is not in a namespace (expanded QName has a null namespace URI)."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQDY0061
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQDY0061"
argument_list|,
literal|"It is a dynamic error if the operand of a validate expression is a document node whose children do not consist of exactly one element node and zero or more comment and processing instruction nodes, in any order."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQDY0062
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQDY0062"
argument_list|,
literal|"(Not currently used.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0063
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0063"
argument_list|,
literal|"(Not currently used.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQDY0064
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQDY0064"
argument_list|,
literal|"It is a dynamic error if the value of the name expression in a computed processing instruction constructor is equal to \"XML\" (in any combination of upper and lower case)."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0065
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0065"
argument_list|,
literal|"A static error is raised if a Prolog contains more than one ordering mode declaration."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0066
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0066"
argument_list|,
literal|"A static error is raised if a Prolog contains more than one default element/type namespace declaration, or more than one default function namespace declaration."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0067
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0067"
argument_list|,
literal|"A static error is raised if a Prolog contains more than one construction declaration."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0068
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0068"
argument_list|,
literal|"A static error is raised if a Prolog contains more than one boundary-space declaration."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0069
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0069"
argument_list|,
literal|"A static error is raised if a Prolog contains more than one empty order declaration."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0070
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0070"
argument_list|,
literal|"A static error is raised if a namespace URI is bound to the predefined prefix xmlns, or if a namespace URI other than http://www.w3.org/XML/1998/namespace is bound to the prefix xml, or if the prefix xml is bound to a namespace URI other than http://www.w3.org/XML/1998/namespace."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0071
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0071"
argument_list|,
literal|"A static error is raised if the namespace declaration attributes of a direct element constructor do not have distinct names."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQDY0072
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQDY0072"
argument_list|,
literal|"It is a dynamic error if the result of the content expression of a computed comment constructor contains two adjacent hyphens or ends with a hyphen."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0073
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0073"
argument_list|,
literal|"It is a static error if the graph of module imports contains a cycle (that is, if there exists a sequence of modules M1 ... Mn such that each Mi imports Mi+1  and Mn imports M1), unless all the modules in the cycle share a common namespace."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQDY0074
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQDY0074"
argument_list|,
literal|"It is a dynamic error if the value of the name expression in a computed element or attribute constructor cannot be converted to an expanded QName (for example, because it contains a namespace prefix not found in statically known namespaces.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0075
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0075"
argument_list|,
literal|"An implementation that does not support the Validation Feature must raise a static error if it encounters a validate expression."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0076
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0076"
argument_list|,
literal|"It is a static error if a collation subclause in an order by clause of a FLWOR expression does not identify a collation that is present in statically known collations."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0077
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0077"
argument_list|,
literal|"(Not currently used.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0078
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0078"
argument_list|,
literal|"(Not currently used.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0079
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0079"
argument_list|,
literal|"It is a static error if an extension expression contains neither a pragma that is recognized by the implementation nor an expression enclosed in curly braces."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0082
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0082"
argument_list|,
literal|"(Not currently used.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQDY0084
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQDY0084"
argument_list|,
literal|"It is a dynamic error if the element validated by a validate statement does not have a top-level element declaration in the in-scope element declarations, if validation mode is strict."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0085
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0085"
argument_list|,
literal|"It is a static error if the namespace URI in a namespace declaration attribute is a zero-length string, and the implementation does not support [XML Names 1.1]."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQTY0086
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQTY0086"
argument_list|,
literal|"It is a type error if the typed value of a copied element or attribute node is namespace-sensitive when construction mode is preserve and copy-namespaces mode is no-preserve."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0087
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0087"
argument_list|,
literal|"It is a static error if the encoding specified in a Version Declaration does not conform to the definition of EncName specified in [XML 1.0]."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0088
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0088"
argument_list|,
literal|"It is a static    error if the literal that specifies the target namespace in a module import or a module declaration is of zero length."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0089
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0089"
argument_list|,
literal|"It is a static error if a variable bound in a for clause of a FLWOR expression, and its associated positional variable, do not have distinct names (expanded QNames)."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0090
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0090"
argument_list|,
literal|"It is a static error if a character reference does not identify a valid character in the version of XML that is in use."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQDY0091
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQDY0091"
argument_list|,
literal|"An implementation MAY raise a dynamic error if an xml:id error, as defined in [XML ID], is encountered during construction of an attribute named xml:id."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQDY0092
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQDY0092"
argument_list|,
literal|"An implementation MAY raise a dynamic error  if a constructed attribute named xml:space has a value other than preserve or default."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQST0093
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQST0093"
argument_list|,
literal|"It is a static error to import a module M1 if there exists a sequence of modules M1 ... Mi ... M1 such that each module directly depends on the next module in the sequence (informally, if M1 depends on itself through some chain of module dependencies.)"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQDY0101
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQDY0101"
argument_list|,
literal|"An error is raised if a computed namespace constructor attempts to do any of the following:\n"
operator|+
literal|"Bind the prefix xml to some namespace URI other than http://www.w3.org/XML/1998/namespace.\n"
operator|+
literal|"Bind a prefix other than xml to the namespace URI http://www.w3.org/XML/1998/namespace.\n"
operator|+
literal|"Bind the prefix xmlns to any namespace URI.\n"
operator|+
literal|"Bind a prefix to the namespace URI http://www.w3.org/2000/xmlns/.\n"
operator|+
literal|"Bind any prefix (including the empty prefix) to a zero-length namespace URI."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|XQDY0138
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XQDY0138"
argument_list|,
literal|"Position n does not exist in this array"
argument_list|)
decl_stmt|;
comment|/* XQuery 1.0 and XPath 2.0 Functions and Operators http://www.w3.org/TR/xpath-functions/#error-summary */
specifier|public
specifier|static
name|ErrorCode
name|FOER0000
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FOER0000"
argument_list|,
literal|"Unidentified error."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FOAR0001
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FOAR0001"
argument_list|,
literal|"Division by zero."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FOAR0002
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FOAR0002"
argument_list|,
literal|"Numeric operation overflow/underflow."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FOCA0001
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FOCA0001"
argument_list|,
literal|"Input value too large for decimal."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FOCA0002
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FOCA0002"
argument_list|,
literal|"Invalid lexical value."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FOCA0003
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FOCA0003"
argument_list|,
literal|"Input value too large for integer."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FOCA0005
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FOCA0005"
argument_list|,
literal|"NaN supplied as float/double value."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FOCA0006
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FOCA0006"
argument_list|,
literal|"String to be cast to decimal has too many digits of precision."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FOCH0001
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FOCH0001"
argument_list|,
literal|"Code point not valid."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FOCH0002
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FOCH0002"
argument_list|,
literal|"Unsupported collation."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FOCH0003
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FOCH0003"
argument_list|,
literal|"Unsupported normalization form."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FOCH0004
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FOCH0004"
argument_list|,
literal|"Collation does not support collation units."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FODC0001
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FODC0001"
argument_list|,
literal|"No context document."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FODC0002
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FODC0002"
argument_list|,
literal|"Error retrieving resource."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FODC0003
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FODC0003"
argument_list|,
literal|"Function stability not defined."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FODC0004
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FODC0004"
argument_list|,
literal|"Invalid argument to fn:collection."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FODC0005
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FODC0005"
argument_list|,
literal|"Invalid argument to fn:doc or fn:doc-available."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FODT0001
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FODT0001"
argument_list|,
literal|"Overflow/underflow in date/time operation."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FODT0002
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FODT0002"
argument_list|,
literal|"Overflow/underflow in duration operation."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FODT0003
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FODT0003"
argument_list|,
literal|"Invalid timezone value."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FONS0004
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FONS0004"
argument_list|,
literal|"No namespace found for prefix."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FONS0005
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FONS0005"
argument_list|,
literal|"Base-uri not defined in the static context."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FORG0001
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FORG0001"
argument_list|,
literal|"Invalid value for cast/constructor."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FORG0002
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FORG0002"
argument_list|,
literal|"Invalid argument to fn:resolve-uri()."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FORG0003
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FORG0003"
argument_list|,
literal|"fn:zero-or-one called with a sequence containing more than one item."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FORG0004
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FORG0004"
argument_list|,
literal|"fn:one-or-more called with a sequence containing no items."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FORG0005
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FORG0005"
argument_list|,
literal|"fn:exactly-one called with a sequence containing zero or more than one item."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FORG0006
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FORG0006"
argument_list|,
literal|"Invalid argument type."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FORG0008
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FORG0008"
argument_list|,
literal|"Both arguments to fn:dateTime have a specified timezone."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FORG0009
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FORG0009"
argument_list|,
literal|"Error in resolving a relative URI against a base URI in fn:resolve-uri."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FORX0001
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FORX0001"
argument_list|,
literal|"Invalid regular expression. flags"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FORX0002
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FORX0002"
argument_list|,
literal|"Invalid regular expression."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FORX0003
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FORX0003"
argument_list|,
literal|"Regular expression matches zero-length string."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FORX0004
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FORX0004"
argument_list|,
literal|"Invalid replacement string."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FOTY0012
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FOTY0012"
argument_list|,
literal|"Argument node does not have a typed value."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FOTY0013
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FOTY0013"
argument_list|,
literal|"The argument to fn:data() contains a function item."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FOAY0001
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FOAY0001"
argument_list|,
literal|"Array index out of bounds."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FOAY0002
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FOAY0002"
argument_list|,
literal|"Negative array length."
argument_list|)
decl_stmt|;
comment|/* XSLT 2.0 and XQuery 1.0 Serialization http://www.w3.org/TR/xslt-xquery-serialization/#serial-err */
specifier|public
specifier|static
name|ErrorCode
name|SENR0001
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"SENR0001"
argument_list|,
literal|"It is an error if an item in S6 in sequence normalization is an attribute node or a namespace node."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|SERE0003
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"SERE0003"
argument_list|,
literal|"It is an error if the serializer is unable to satisfy the rules for either a well-formed XML document entity or a well-formed XML external general parsed entity, or both, except for content modified by the character expansion phase of serialization."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|SEPM0004
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"SEPM0004"
argument_list|,
literal|"It is an error to specify the doctype-system parameter, or to specify the standalone parameter with a value other than omit, if the instance of the data model contains text nodes or multiple element nodes as children of the root node."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|SERE0005
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"SERE0005"
argument_list|,
literal|"It is an error if the serialized result would contain an NCName Names that contains a character that is not permitted by the version of Namespaces in XML specified by the version parameter."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|SERE0006
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"SERE0006"
argument_list|,
literal|"It is an error if the serialized result would contain a character that is not permitted by the version of XML specified by the version parameter."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|SESU0007
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"SESU0007"
argument_list|,
literal|"It is an error if an output encoding other than UTF-8 or UTF-16 is requested and the serializer does not support that encoding."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|SERE0008
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"SERE0008"
argument_list|,
literal|"It is an error if a character that cannot be represented in the encoding that the serializer is using for output appears in a context where character references are not allowed (for example if the character occurs in the name of an element)."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|SEPM0009
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"SEPM0009"
argument_list|,
literal|"It is an error if the omit-xml-declaration parameter has the value yes, and the standalone attribute has a value other than omit; or the version parameter has a value other than 1.0 and the doctype-system parameter is specified."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|SEPM0010
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"SEPM0010"
argument_list|,
literal|"It is an error if the output method is xml, the value of the undeclare-prefixes parameter is yes, and the value of the version parameter is 1.0."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|SESU0011
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"SESU0011"
argument_list|,
literal|"It is an error if the value of the normalization-form parameter specifies a normalization form that is not supported by the serializer."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|SERE0012
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"SERE0012"
argument_list|,
literal|"It is an error if the value of the normalization-form parameter is fully-normalized and any relevant construct of the result begins with a combining character."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|SESU0013
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"SESU0013"
argument_list|,
literal|"It is an error if the serializer does not support the version of XML or HTML specified by the version parameter."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|SERE0014
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"SERE0014"
argument_list|,
literal|"It is an error to use the HTML output method when characters which are legal in XML but not in HTML, specifically the control characters #x7F-#x9F, appear in the instance of the data model."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|SERE0015
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"SERE0015"
argument_list|,
literal|"It is an error to use the HTML output method when> appears within a processing instruction in the data model instance being serialized."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|SEPM0016
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"SEPM0016"
argument_list|,
literal|"It is a an error if a parameter value is invalid for the defined domain."
argument_list|)
decl_stmt|;
comment|/* XQuery 3.0 functions and operators */
specifier|public
specifier|static
name|ErrorCode
name|FOFD1340
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FOFD1340"
argument_list|,
literal|"Invalid date/time formatting picture string"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|FOFD1350
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FOFD1350"
argument_list|,
literal|" Invalid date/time formatting component"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|ErrorCode
name|XTDE1310
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"XTDE1310"
argument_list|,
literal|" Invalid decimal format picture string."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|ErrorCode
name|FTDY0020
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FTDY0020"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|ErrorCode
name|FODC0006
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FODC0006"
argument_list|,
literal|"String passed to fn:parse-xml is not a well-formed XML document."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|ErrorCode
name|FOAP0001
init|=
operator|new
name|W3CErrorCode
argument_list|(
literal|"FOAP0001"
argument_list|,
literal|"Wrong number of arguments"
argument_list|)
decl_stmt|;
comment|/* eXist specific XQuery and XPath errors      *      * Codes have the format [EX][XQ|XP][DY|SE|ST][nnnn]      *      * EX = eXist      * XQ = XQuery      * XP = XPath      * DY = Dynamic      * SE = Serialization      * ST = Static      * nnnn = number      */
specifier|public
specifier|static
name|ErrorCode
name|EXXQDY0001
init|=
operator|new
name|EXistErrorCode
argument_list|(
literal|"EXXQDY0001"
argument_list|,
literal|"Index cannot be applied to the given expression."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|EXXQDY0002
init|=
operator|new
name|EXistErrorCode
argument_list|(
literal|"EXXQDY0002"
argument_list|,
literal|"Error parsing XML."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|EXXQDY0003
init|=
operator|new
name|EXistErrorCode
argument_list|(
literal|"EXXQDY0003"
argument_list|,
literal|"Only Supported for xquery version \"3.0\" and later."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|ErrorCode
name|ERROR
init|=
operator|new
name|EXistErrorCode
argument_list|(
literal|"ERROR"
argument_list|,
literal|"Error."
argument_list|)
decl_stmt|;
specifier|public
specifier|static
class|class
name|ErrorCode
block|{
specifier|private
specifier|final
name|QName
name|errorQName
decl_stmt|;
specifier|private
specifier|final
name|String
name|description
decl_stmt|;
specifier|public
name|ErrorCode
parameter_list|(
name|String
name|code
parameter_list|,
name|String
name|description
parameter_list|)
block|{
name|this
operator|.
name|errorQName
operator|=
operator|new
name|QName
argument_list|(
name|code
argument_list|,
name|Namespaces
operator|.
name|EXIST_XQUERY_XPATH_ERROR_NS
argument_list|,
name|Namespaces
operator|.
name|EXIST_XQUERY_XPATH_ERROR_PREFIX
argument_list|)
expr_stmt|;
name|this
operator|.
name|description
operator|=
name|description
expr_stmt|;
block|}
specifier|public
name|ErrorCode
parameter_list|(
name|QName
name|errorQName
parameter_list|,
name|String
name|description
parameter_list|)
block|{
name|this
operator|.
name|errorQName
operator|=
name|errorQName
expr_stmt|;
name|this
operator|.
name|description
operator|=
name|description
expr_stmt|;
block|}
specifier|public
name|QName
name|getErrorQName
parameter_list|()
block|{
return|return
name|errorQName
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"("
operator|+
name|errorQName
operator|.
name|getNamespaceURI
argument_list|()
operator|+
literal|"#"
operator|+
name|errorQName
operator|.
name|getLocalPart
argument_list|()
operator|+
literal|"):"
operator|+
name|description
return|;
block|}
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
name|description
return|;
block|}
block|}
specifier|public
specifier|static
class|class
name|W3CErrorCode
extends|extends
name|ErrorCode
block|{
specifier|private
name|W3CErrorCode
parameter_list|(
name|String
name|code
parameter_list|,
name|String
name|description
parameter_list|)
block|{
name|super
argument_list|(
operator|new
name|QName
argument_list|(
name|code
argument_list|,
name|Namespaces
operator|.
name|W3C_XQUERY_XPATH_ERROR_NS
argument_list|,
name|Namespaces
operator|.
name|W3C_XQUERY_XPATH_ERROR_PREFIX
argument_list|)
argument_list|,
name|description
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|EXistErrorCode
extends|extends
name|ErrorCode
block|{
specifier|private
name|EXistErrorCode
parameter_list|(
name|String
name|code
parameter_list|,
name|String
name|description
parameter_list|)
block|{
name|super
argument_list|(
operator|new
name|QName
argument_list|(
name|code
argument_list|,
name|Namespaces
operator|.
name|EXIST_XQUERY_XPATH_ERROR_NS
argument_list|,
name|Namespaces
operator|.
name|EXIST_XQUERY_XPATH_ERROR_PREFIX
argument_list|)
argument_list|,
name|description
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|JavaErrorCode
extends|extends
name|ErrorCode
block|{
specifier|public
name|JavaErrorCode
parameter_list|(
name|Throwable
name|throwable
parameter_list|)
block|{
name|super
argument_list|(
operator|new
name|QName
argument_list|(
name|throwable
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|Namespaces
operator|.
name|EXIST_XQUERY_XPATH_ERROR_NS
argument_list|,
literal|"java"
argument_list|)
argument_list|,
comment|// Namespaces.EXIST_XQUERY_XPATH_ERROR_PREFIX
name|throwable
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

