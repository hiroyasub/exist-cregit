begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-06 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xquery
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|Namespaces
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|functions
operator|.
name|FunMatches
import|;
end_import

begin_class
specifier|public
class|class
name|ExceptionIfIndexNotUsed
extends|extends
name|Pragma
block|{
name|Expression
name|expression
decl_stmt|;
name|boolean
name|bailout
init|=
literal|false
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|QName
name|EXCEPTION_IF_INDEX_NOT_USED_PRAGMA
init|=
operator|new
name|QName
argument_list|(
literal|"exceptionIfIndexNotUsed"
argument_list|,
name|Namespaces
operator|.
name|EXIST_NS
argument_list|,
literal|"exist"
argument_list|)
decl_stmt|;
specifier|public
name|ExceptionIfIndexNotUsed
parameter_list|(
name|QName
name|qname
parameter_list|,
name|String
name|contents
parameter_list|)
throws|throws
name|XPathException
block|{
name|super
argument_list|(
name|qname
argument_list|,
name|contents
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|before
parameter_list|(
name|XQueryContext
name|context
parameter_list|,
name|Expression
name|expression
parameter_list|)
throws|throws
name|XPathException
block|{
block|}
specifier|public
name|void
name|after
parameter_list|(
name|XQueryContext
name|context
parameter_list|,
name|Expression
name|expression
parameter_list|)
throws|throws
name|XPathException
block|{
if|if
condition|(
name|expression
operator|instanceof
name|PathExpr
condition|)
block|{
name|PathExpr
name|pe
init|=
operator|(
name|PathExpr
operator|)
name|expression
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|pe
operator|.
name|steps
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Expression
name|expr
init|=
operator|(
name|Expression
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|expr
operator|instanceof
name|GeneralComparison
condition|)
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|GeneralComparison
operator|)
name|expr
operator|)
operator|.
name|hasUsedIndex
argument_list|()
condition|)
throw|throw
operator|new
name|XPathException
argument_list|(
name|expression
operator|.
name|getASTNode
argument_list|()
argument_list|,
literal|"XQDYxxxx: Can not use index"
argument_list|)
throw|;
block|}
if|if
condition|(
name|expr
operator|instanceof
name|FunMatches
condition|)
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|FunMatches
operator|)
name|expr
operator|)
operator|.
name|hasUsedIndex
argument_list|()
condition|)
throw|throw
operator|new
name|XPathException
argument_list|(
name|expression
operator|.
name|getASTNode
argument_list|()
argument_list|,
literal|"XQDYxxxx: Can not use index"
argument_list|)
throw|;
block|}
block|}
block|}
block|}
block|}
end_class

end_unit

