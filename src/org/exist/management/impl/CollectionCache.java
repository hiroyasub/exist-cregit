begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2017 The eXist Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public  * License along with this library; if not, write to the Free Software  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|management
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|BrokerPool
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MalformedObjectNameException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_comment
comment|/**  * JMX MXBean for examining the CollectionCache  *  * @author Adam Retter<adam@evolvedbinary.com>  */
end_comment

begin_class
specifier|public
class|class
name|CollectionCache
implements|implements
name|CollectionCacheMXBean
block|{
specifier|private
specifier|final
name|BrokerPool
name|instance
decl_stmt|;
specifier|public
name|CollectionCache
parameter_list|(
specifier|final
name|BrokerPool
name|instance
parameter_list|)
block|{
name|this
operator|.
name|instance
operator|=
name|instance
expr_stmt|;
block|}
specifier|public
specifier|static
name|String
name|getAllInstancesQuery
parameter_list|()
block|{
return|return
name|getName
argument_list|(
literal|"*"
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|String
name|getName
parameter_list|(
specifier|final
name|String
name|instanceId
parameter_list|)
block|{
return|return
literal|"org.exist.management."
operator|+
name|instanceId
operator|+
literal|":type=CollectionCache"
return|;
block|}
annotation|@
name|Override
specifier|public
name|ObjectName
name|getName
parameter_list|()
throws|throws
name|MalformedObjectNameException
block|{
return|return
operator|new
name|ObjectName
argument_list|(
name|getName
argument_list|(
name|instance
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getInstanceId
parameter_list|()
block|{
return|return
name|instance
operator|.
name|getId
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|CollectionCache
operator|.
name|Statistics
name|getStatistics
parameter_list|()
block|{
return|return
name|instance
operator|.
name|getCollectionsCache
argument_list|()
operator|.
name|getStatistics
argument_list|()
return|;
block|}
block|}
end_class

end_unit

