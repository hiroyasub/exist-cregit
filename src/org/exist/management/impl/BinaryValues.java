begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2017 The eXist Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public  * License along with this library; if not, write to the Free Software  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|management
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|io
operator|.
name|FileFilterInputStreamCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|io
operator|.
name|FilterInputStreamCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|io
operator|.
name|FilterInputStreamCacheMonitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|io
operator|.
name|FilterInputStreamCacheMonitor
operator|.
name|FilterInputStreamCacheInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|io
operator|.
name|MemoryMappedFileFilterInputStreamCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|management
operator|.
name|impl
operator|.
name|BinaryInputStreamCacheInfo
operator|.
name|CacheType
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_class
specifier|public
class|class
name|BinaryValues
implements|implements
name|BinaryValuesMXBean
block|{
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|BinaryInputStreamCacheInfo
argument_list|>
name|getCacheInstances
parameter_list|()
block|{
specifier|final
name|FilterInputStreamCacheMonitor
name|monitor
init|=
name|FilterInputStreamCacheMonitor
operator|.
name|getInstance
argument_list|()
decl_stmt|;
specifier|final
name|Collection
argument_list|<
name|FilterInputStreamCacheInfo
argument_list|>
name|cacheInstances
init|=
name|monitor
operator|.
name|getActive
argument_list|()
decl_stmt|;
specifier|final
name|List
argument_list|<
name|BinaryInputStreamCacheInfo
argument_list|>
name|results
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
specifier|final
name|FilterInputStreamCacheInfo
name|cacheInstance
range|:
name|cacheInstances
control|)
block|{
specifier|final
name|BinaryInputStreamCacheInfo
name|result
decl_stmt|;
specifier|final
name|FilterInputStreamCache
name|cache
init|=
name|cacheInstance
operator|.
name|getCache
argument_list|()
decl_stmt|;
if|if
condition|(
name|cache
operator|instanceof
name|FileFilterInputStreamCache
condition|)
block|{
name|result
operator|=
operator|new
name|BinaryInputStreamCacheInfo
argument_list|(
name|CacheType
operator|.
name|FILE
argument_list|,
name|cacheInstance
operator|.
name|getRegistered
argument_list|()
argument_list|,
name|Optional
operator|.
name|of
argument_list|(
operator|(
operator|(
name|FileFilterInputStreamCache
operator|)
name|cache
operator|)
operator|.
name|getFilePath
argument_list|()
argument_list|)
argument_list|,
name|cache
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|cache
operator|instanceof
name|MemoryMappedFileFilterInputStreamCache
condition|)
block|{
name|result
operator|=
operator|new
name|BinaryInputStreamCacheInfo
argument_list|(
name|CacheType
operator|.
name|MEMORY_MAPPED_FILE
argument_list|,
name|cacheInstance
operator|.
name|getRegistered
argument_list|()
argument_list|,
name|Optional
operator|.
name|of
argument_list|(
operator|(
operator|(
name|MemoryMappedFileFilterInputStreamCache
operator|)
name|cache
operator|)
operator|.
name|getFilePath
argument_list|()
argument_list|)
argument_list|,
name|cache
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|result
operator|=
operator|new
name|BinaryInputStreamCacheInfo
argument_list|(
name|CacheType
operator|.
name|MEMORY
argument_list|,
name|cacheInstance
operator|.
name|getRegistered
argument_list|()
argument_list|,
name|Optional
operator|.
name|empty
argument_list|()
argument_list|,
name|cache
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|results
operator|.
name|add
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
return|return
name|results
return|;
block|}
block|}
end_class

end_unit

