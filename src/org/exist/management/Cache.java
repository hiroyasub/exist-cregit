begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-07 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  * $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|management
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MalformedObjectNameException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_class
specifier|public
class|class
name|Cache
implements|implements
name|CacheMXBean
block|{
specifier|private
specifier|final
name|String
name|instanceId
decl_stmt|;
specifier|private
specifier|final
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|cache
operator|.
name|Cache
name|cache
decl_stmt|;
specifier|public
name|Cache
parameter_list|(
specifier|final
name|String
name|instanceId
parameter_list|,
specifier|final
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|cache
operator|.
name|Cache
name|cache
parameter_list|)
block|{
name|this
operator|.
name|instanceId
operator|=
name|instanceId
expr_stmt|;
name|this
operator|.
name|cache
operator|=
name|cache
expr_stmt|;
block|}
specifier|public
specifier|static
name|String
name|getAllInstancesQuery
parameter_list|()
block|{
return|return
literal|"org.exist.management."
operator|+
literal|'*'
operator|+
literal|":type=CacheManager.Cache,"
operator|+
literal|'*'
return|;
block|}
specifier|private
specifier|static
name|ObjectName
name|getName
parameter_list|(
specifier|final
name|String
name|instanceId
parameter_list|,
specifier|final
name|String
name|cacheName
parameter_list|,
specifier|final
name|String
name|cacheType
parameter_list|)
throws|throws
name|MalformedObjectNameException
block|{
return|return
operator|new
name|ObjectName
argument_list|(
literal|"org.exist.management."
operator|+
name|instanceId
operator|+
literal|":type=CacheManager.Cache,name="
operator|+
name|cacheName
operator|+
literal|",cache-type="
operator|+
name|cacheType
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ObjectName
name|getName
parameter_list|()
throws|throws
name|MalformedObjectNameException
block|{
return|return
name|getName
argument_list|(
name|instanceId
argument_list|,
name|cache
operator|.
name|getName
argument_list|()
argument_list|,
name|cache
operator|.
name|getType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getInstanceId
parameter_list|()
block|{
return|return
name|instanceId
return|;
block|}
annotation|@
name|Override
specifier|public
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|cache
operator|.
name|Cache
operator|.
name|CacheType
name|getType
parameter_list|()
block|{
return|return
name|cache
operator|.
name|getType
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getSize
parameter_list|()
block|{
return|return
name|cache
operator|.
name|getBuffers
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getUsed
parameter_list|()
block|{
return|return
name|cache
operator|.
name|getUsedBuffers
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getHits
parameter_list|()
block|{
return|return
name|cache
operator|.
name|getHits
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getFails
parameter_list|()
block|{
return|return
name|cache
operator|.
name|getFails
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getCacheName
parameter_list|()
block|{
return|return
name|cache
operator|.
name|getName
argument_list|()
return|;
block|}
block|}
end_class

end_unit

