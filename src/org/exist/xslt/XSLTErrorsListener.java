begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2017 The eXist Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public  * License along with this library; if not, write to the Free Software  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xslt
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|ErrorListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|LogManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:shabanovd@gmail.com">Dmitriy Shabanov</a>  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|XSLTErrorsListener
parameter_list|<
name|E
extends|extends
name|Exception
parameter_list|>
implements|implements
name|ErrorListener
block|{
specifier|private
specifier|final
specifier|static
name|Logger
name|LOG
init|=
name|LogManager
operator|.
name|getLogger
argument_list|(
name|XSLTErrorsListener
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|int
name|NO_ERROR
init|=
literal|0
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|int
name|WARNING
init|=
literal|1
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|int
name|ERROR
init|=
literal|2
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|int
name|FATAL
init|=
literal|3
decl_stmt|;
name|boolean
name|stopOnError
decl_stmt|;
name|boolean
name|stopOnWarn
decl_stmt|;
specifier|private
name|int
name|errorCode
init|=
name|NO_ERROR
decl_stmt|;
specifier|private
name|Exception
name|exception
decl_stmt|;
specifier|public
name|XSLTErrorsListener
parameter_list|(
name|boolean
name|stopOnError
parameter_list|,
name|boolean
name|stopOnWarn
parameter_list|)
block|{
name|this
operator|.
name|stopOnError
operator|=
name|stopOnError
expr_stmt|;
name|this
operator|.
name|stopOnWarn
operator|=
name|stopOnWarn
expr_stmt|;
block|}
specifier|protected
specifier|abstract
name|void
name|raiseError
parameter_list|(
name|String
name|error
parameter_list|,
name|Exception
name|ex
parameter_list|)
throws|throws
name|E
function_decl|;
specifier|public
name|void
name|checkForErrors
parameter_list|()
throws|throws
name|E
block|{
switch|switch
condition|(
name|errorCode
condition|)
block|{
case|case
name|WARNING
case|:
if|if
condition|(
name|stopOnWarn
condition|)
block|{
name|raiseError
argument_list|(
literal|"XSL transform reported warning: "
operator|+
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|,
name|exception
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|ERROR
case|:
if|if
condition|(
name|stopOnError
condition|)
block|{
name|raiseError
argument_list|(
literal|"XSL transform reported error: "
operator|+
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|,
name|exception
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|FATAL
case|:
name|raiseError
argument_list|(
literal|"XSL transform reported error: "
operator|+
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|,
name|exception
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|warning
parameter_list|(
name|TransformerException
name|except
parameter_list|)
throws|throws
name|TransformerException
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"XSL transform reports warning: "
operator|+
name|except
operator|.
name|getMessage
argument_list|()
argument_list|,
name|except
argument_list|)
expr_stmt|;
name|errorCode
operator|=
name|WARNING
expr_stmt|;
name|exception
operator|=
name|except
expr_stmt|;
if|if
condition|(
name|stopOnWarn
condition|)
block|{
throw|throw
name|except
throw|;
block|}
block|}
specifier|public
name|void
name|error
parameter_list|(
name|TransformerException
name|except
parameter_list|)
throws|throws
name|TransformerException
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"XSL transform reports recoverable error: "
operator|+
name|except
operator|.
name|getMessage
argument_list|()
argument_list|,
name|except
argument_list|)
expr_stmt|;
name|errorCode
operator|=
name|ERROR
expr_stmt|;
name|exception
operator|=
name|except
expr_stmt|;
if|if
condition|(
name|stopOnError
condition|)
block|{
throw|throw
name|except
throw|;
block|}
block|}
specifier|public
name|void
name|fatalError
parameter_list|(
name|TransformerException
name|except
parameter_list|)
throws|throws
name|TransformerException
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"XSL transform reports fatal error: "
operator|+
name|except
operator|.
name|getMessage
argument_list|()
argument_list|,
name|except
argument_list|)
expr_stmt|;
name|errorCode
operator|=
name|FATAL
expr_stmt|;
name|exception
operator|=
name|except
expr_stmt|;
throw|throw
name|except
throw|;
block|}
block|}
end_class

end_unit

