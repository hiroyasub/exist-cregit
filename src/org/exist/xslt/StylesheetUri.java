begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2017 The eXist Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public  * License along with this library; if not, write to the Free Software  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xslt
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Templates
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerConfigurationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|sax
operator|.
name|SAXTransformerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|sax
operator|.
name|TemplatesHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|sax
operator|.
name|TransformerHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|LogManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|persistent
operator|.
name|DocumentImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|PermissionDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|BrokerPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|lock
operator|.
name|Lock
operator|.
name|LockMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|serializers
operator|.
name|Serializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:shabanovd@gmail.com">Dmitriy Shabanov</a>  */
end_comment

begin_class
specifier|public
class|class
name|StylesheetUri
implements|implements
name|Stylesheet
block|{
specifier|protected
specifier|final
specifier|static
name|Logger
name|LOG
init|=
name|LogManager
operator|.
name|getLogger
argument_list|(
name|StylesheetUri
operator|.
name|class
argument_list|)
decl_stmt|;
name|SAXTransformerFactory
name|factory
decl_stmt|;
name|long
name|lastModified
init|=
operator|-
literal|1
decl_stmt|;
name|Templates
name|templates
init|=
literal|null
decl_stmt|;
name|String
name|uri
decl_stmt|;
name|String
name|base
decl_stmt|;
name|Properties
name|properties
decl_stmt|;
specifier|public
name|StylesheetUri
parameter_list|(
name|String
name|uri
parameter_list|)
block|{
name|this
operator|.
name|uri
operator|=
name|uri
expr_stmt|;
specifier|final
name|int
name|p
init|=
name|uri
operator|.
name|lastIndexOf
argument_list|(
literal|"/"
argument_list|)
decl_stmt|;
if|if
condition|(
name|p
operator|!=
name|Constants
operator|.
name|STRING_NOT_FOUND
condition|)
block|{
name|base
operator|=
name|uri
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|p
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|base
operator|=
name|uri
expr_stmt|;
block|}
block|}
specifier|public
name|StylesheetUri
parameter_list|(
name|String
name|uri
parameter_list|,
name|Properties
name|properties
parameter_list|)
block|{
name|this
argument_list|(
name|uri
argument_list|)
expr_stmt|;
name|this
operator|.
name|properties
operator|=
name|properties
expr_stmt|;
block|}
specifier|public
parameter_list|<
name|E
extends|extends
name|Exception
parameter_list|>
name|Templates
name|templates
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|XSLTErrorsListener
argument_list|<
name|E
argument_list|>
name|errorListener
parameter_list|)
throws|throws
name|E
throws|,
name|TransformerConfigurationException
throws|,
name|IOException
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
block|{
if|if
condition|(
name|uri
operator|.
name|startsWith
argument_list|(
name|XmldbURI
operator|.
name|EMBEDDED_SERVER_URI_PREFIX
argument_list|)
condition|)
block|{
specifier|final
name|String
name|docPath
init|=
name|uri
operator|.
name|substring
argument_list|(
name|XmldbURI
operator|.
name|EMBEDDED_SERVER_URI_PREFIX
operator|.
name|length
argument_list|()
argument_list|)
decl_stmt|;
name|DocumentImpl
name|doc
init|=
literal|null
decl_stmt|;
try|try
block|{
name|doc
operator|=
name|broker
operator|.
name|getXMLResource
argument_list|(
name|XmldbURI
operator|.
name|create
argument_list|(
name|docPath
argument_list|)
argument_list|,
name|LockMode
operator|.
name|READ_LOCK
argument_list|)
expr_stmt|;
if|if
condition|(
name|doc
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"XSL stylesheet not found: "
operator|+
name|docPath
argument_list|)
throw|;
block|}
if|if
condition|(
name|templates
operator|==
literal|null
operator|||
name|doc
operator|.
name|getMetadata
argument_list|()
operator|.
name|getLastModified
argument_list|()
operator|>
name|lastModified
condition|)
block|{
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"compiling stylesheet "
operator|+
name|doc
operator|.
name|getURI
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|templates
operator|=
name|compileTemplates
argument_list|(
name|broker
argument_list|,
name|doc
argument_list|,
name|errorListener
argument_list|)
expr_stmt|;
name|lastModified
operator|=
name|doc
operator|.
name|getMetadata
argument_list|()
operator|.
name|getLastModified
argument_list|()
expr_stmt|;
block|}
block|}
finally|finally
block|{
if|if
condition|(
name|doc
operator|!=
literal|null
condition|)
block|{
name|doc
operator|.
name|getUpdateLock
argument_list|()
operator|.
name|release
argument_list|(
name|LockMode
operator|.
name|READ_LOCK
argument_list|)
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
specifier|final
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|uri
argument_list|)
decl_stmt|;
specifier|final
name|URLConnection
name|connection
init|=
name|url
operator|.
name|openConnection
argument_list|()
decl_stmt|;
name|long
name|modified
init|=
name|connection
operator|.
name|getLastModified
argument_list|()
decl_stmt|;
if|if
condition|(
name|templates
operator|==
literal|null
operator|||
name|modified
operator|>
name|lastModified
operator|||
name|modified
operator|==
literal|0
condition|)
block|{
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"compiling stylesheet "
operator|+
name|url
argument_list|)
expr_stmt|;
block|}
try|try
init|(
specifier|final
name|InputStream
name|is
init|=
name|connection
operator|.
name|getInputStream
argument_list|()
init|)
block|{
name|templates
operator|=
name|factory
argument_list|(
name|broker
operator|.
name|getBrokerPool
argument_list|()
argument_list|,
name|errorListener
argument_list|)
operator|.
name|newTemplates
argument_list|(
operator|new
name|StreamSource
argument_list|(
name|is
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|lastModified
operator|=
name|modified
expr_stmt|;
block|}
return|return
name|templates
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|E
extends|extends
name|Exception
parameter_list|>
name|TransformerHandler
name|newTransformerHandler
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|XSLTErrorsListener
argument_list|<
name|E
argument_list|>
name|errorListener
parameter_list|)
throws|throws
name|E
throws|,
name|PermissionDeniedException
throws|,
name|SAXException
throws|,
name|TransformerConfigurationException
throws|,
name|IOException
block|{
name|TransformerHandler
name|handler
init|=
name|cachedFactory
argument_list|(
name|broker
operator|.
name|getBrokerPool
argument_list|()
argument_list|)
operator|.
name|newTransformerHandler
argument_list|(
name|templates
argument_list|(
name|broker
argument_list|,
name|errorListener
argument_list|)
argument_list|)
decl_stmt|;
name|handler
operator|.
name|getTransformer
argument_list|()
operator|.
name|setErrorListener
argument_list|(
name|errorListener
argument_list|)
expr_stmt|;
return|return
name|handler
return|;
block|}
specifier|private
parameter_list|<
name|E
extends|extends
name|Exception
parameter_list|>
name|Templates
name|compileTemplates
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|DocumentImpl
name|stylesheet
parameter_list|,
name|XSLTErrorsListener
argument_list|<
name|E
argument_list|>
name|errorListener
parameter_list|)
throws|throws
name|E
throws|,
name|TransformerConfigurationException
throws|,
name|SAXException
block|{
comment|//factory.setURIResolver(new EXistURIResolver(broker, stylesheet.getCollection().getURI().toString()));
specifier|final
name|TemplatesHandler
name|handler
init|=
name|factory
argument_list|(
name|broker
operator|.
name|getBrokerPool
argument_list|()
argument_list|,
name|errorListener
argument_list|)
operator|.
name|newTemplatesHandler
argument_list|()
decl_stmt|;
name|handler
operator|.
name|startDocument
argument_list|()
expr_stmt|;
specifier|final
name|Serializer
name|serializer
init|=
name|broker
operator|.
name|newSerializer
argument_list|()
decl_stmt|;
name|serializer
operator|.
name|reset
argument_list|()
expr_stmt|;
name|serializer
operator|.
name|setSAXHandlers
argument_list|(
name|handler
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|toSAX
argument_list|(
name|stylesheet
argument_list|)
expr_stmt|;
name|handler
operator|.
name|endDocument
argument_list|()
expr_stmt|;
specifier|final
name|Templates
name|t
init|=
name|handler
operator|.
name|getTemplates
argument_list|()
decl_stmt|;
comment|//check for errors
name|errorListener
operator|.
name|checkForErrors
argument_list|()
expr_stmt|;
return|return
name|t
return|;
block|}
specifier|private
name|SAXTransformerFactory
name|cachedFactory
parameter_list|(
name|BrokerPool
name|db
parameter_list|)
block|{
if|if
condition|(
name|factory
operator|==
literal|null
condition|)
block|{
name|factory
operator|=
name|TransformerFactoryAllocator
operator|.
name|getTransformerFactory
argument_list|(
name|db
argument_list|)
expr_stmt|;
if|if
condition|(
name|properties
operator|!=
literal|null
condition|)
block|{
comment|//set any attributes
for|for
control|(
specifier|final
name|Map
operator|.
name|Entry
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|attribute
range|:
name|properties
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|factory
operator|.
name|setAttribute
argument_list|(
operator|(
name|String
operator|)
name|attribute
operator|.
name|getKey
argument_list|()
argument_list|,
name|attribute
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|factory
operator|.
name|setURIResolver
argument_list|(
operator|new
name|EXistURIResolver
argument_list|(
name|db
argument_list|,
name|base
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|factory
return|;
block|}
specifier|private
parameter_list|<
name|E
extends|extends
name|Exception
parameter_list|>
name|SAXTransformerFactory
name|factory
parameter_list|(
name|BrokerPool
name|db
parameter_list|,
name|XSLTErrorsListener
argument_list|<
name|E
argument_list|>
name|errorListener
parameter_list|)
block|{
name|SAXTransformerFactory
name|newFactory
init|=
name|TransformerFactoryAllocator
operator|.
name|getTransformerFactory
argument_list|(
name|db
argument_list|)
decl_stmt|;
if|if
condition|(
name|properties
operator|!=
literal|null
condition|)
block|{
comment|//set any attributes
for|for
control|(
specifier|final
name|Map
operator|.
name|Entry
argument_list|<
name|Object
argument_list|,
name|Object
argument_list|>
name|attribute
range|:
name|properties
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|newFactory
operator|.
name|setAttribute
argument_list|(
operator|(
name|String
operator|)
name|attribute
operator|.
name|getKey
argument_list|()
argument_list|,
name|attribute
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|newFactory
operator|.
name|setURIResolver
argument_list|(
operator|new
name|EXistURIResolver
argument_list|(
name|db
argument_list|,
name|base
argument_list|)
argument_list|)
expr_stmt|;
name|newFactory
operator|.
name|setErrorListener
argument_list|(
name|errorListener
argument_list|)
expr_stmt|;
return|return
name|newFactory
return|;
block|}
block|}
end_class

end_unit

