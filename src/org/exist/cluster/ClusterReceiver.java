begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|//$Id$
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|cluster
package|;
end_package

begin_comment
comment|/**  * Created by Francesco Mondora.  *  * @author Francesco Mondora aka Makkina  * @author Michele Danieli aka mdanieli  *         Date: Aug 31, 2004  *         Time: 3:00:25 PM  *         Revision $Revision$  */
end_comment

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|blocks
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|ClusterReceiver
implements|implements
name|RequestHandler
implements|,
name|MessageListener
implements|,
name|Runnable
block|{
specifier|private
name|boolean
name|running
init|=
literal|true
decl_stmt|;
specifier|static
name|Logger
name|log
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|ClusterReceiver
operator|.
name|class
argument_list|)
decl_stmt|;
name|Channel
name|channel
decl_stmt|;
name|MessageDispatcher
name|disp
decl_stmt|;
name|RspList
name|rsp_list
decl_stmt|;
name|String
name|props
init|=
literal|"UDP"
decl_stmt|;
comment|/**      * Stop serving cluster events on the channel      *      */
specifier|public
name|void
name|stop
parameter_list|()
block|{
name|channel
operator|.
name|disconnect
argument_list|()
expr_stmt|;
name|running
operator|=
literal|false
expr_stmt|;
block|}
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Starting JavaGroup"
argument_list|)
expr_stmt|;
name|channel
operator|=
operator|new
name|JChannel
argument_list|(
name|ClusterConfiguration
operator|.
name|getProtocolStack
argument_list|()
argument_list|)
expr_stmt|;
name|channel
operator|.
name|connect
argument_list|(
name|ClusterChannel
operator|.
name|EXIST_GROUP
argument_list|)
expr_stmt|;
name|disp
operator|=
operator|new
name|MessageDispatcher
argument_list|(
name|channel
argument_list|,
name|this
argument_list|,
literal|null
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Started JavaGroup"
argument_list|)
expr_stmt|;
while|while
condition|(
name|running
condition|)
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|receive
parameter_list|(
name|Message
name|msg
parameter_list|)
block|{
name|byte
index|[]
name|b
init|=
name|msg
operator|.
name|getBuffer
argument_list|()
decl_stmt|;
if|if
condition|(
name|b
operator|==
literal|null
condition|)
return|return;
name|log
operator|.
name|info
argument_list|(
literal|"Cluster Event Received:"
operator|+
operator|new
name|String
argument_list|(
name|b
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|ByteArrayInputStream
name|bis
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|b
argument_list|)
decl_stmt|;
name|ObjectInputStream
name|ois
init|=
operator|new
name|ObjectInputStream
argument_list|(
name|bis
argument_list|)
decl_stmt|;
name|ClusterEvent
name|ce
init|=
operator|(
name|ClusterEvent
operator|)
name|ois
operator|.
name|readObject
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|ClusterChannel
operator|.
name|hasToBePublished
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|ce
operator|.
name|hashCode
argument_list|()
argument_list|)
argument_list|)
condition|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"REENTRANT Event found: must not be delivered!"
argument_list|)
expr_stmt|;
return|return;
block|}
else|else
block|{
name|ce
operator|.
name|execute
argument_list|()
expr_stmt|;
name|ClusterChannel
operator|.
name|accountEvent
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|ce
operator|.
name|hashCode
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
block|}
block|}
specifier|public
name|byte
index|[]
name|getState
parameter_list|()
block|{
return|return
name|b
return|;
block|}
name|byte
index|[]
name|b
init|=
literal|null
decl_stmt|;
specifier|public
name|void
name|setState
parameter_list|(
name|byte
index|[]
name|b
parameter_list|)
block|{
name|this
operator|.
name|b
operator|=
name|b
expr_stmt|;
block|}
specifier|public
name|Object
name|handle
parameter_list|(
name|Message
name|msg
parameter_list|)
block|{
return|return
operator|new
name|String
argument_list|(
literal|"Success !"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

