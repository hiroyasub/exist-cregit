begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|//$Id$
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|cluster
package|;
end_package

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|DatabaseManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|XMLResource
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_comment
comment|/**  * Created by Francesco Mondora.  *  * @author Francesco Mondora aka Makkina  * @author Michele Danieli aka mdanieli  *         Date: Aug 30, 2004  *         Time: 3:42:17 PM  *         Revision $Revision$  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|ClusterEvent
implements|implements
name|Serializable
block|{
specifier|protected
name|String
name|collectionName
decl_stmt|;
specifier|protected
name|String
name|documentName
decl_stmt|;
specifier|public
name|ClusterEvent
parameter_list|()
block|{
block|}
specifier|protected
name|ClusterEvent
parameter_list|(
name|String
name|documentName
parameter_list|,
name|String
name|collectionName
parameter_list|)
block|{
name|this
operator|.
name|documentName
operator|=
name|documentName
expr_stmt|;
name|this
operator|.
name|collectionName
operator|=
name|collectionName
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|instanceof
name|ClusterEvent
condition|)
return|return
operator|(
name|this
operator|.
name|hashCode
argument_list|()
operator|==
operator|(
operator|(
name|ClusterEvent
operator|)
name|o
operator|)
operator|.
name|hashCode
argument_list|()
operator|)
return|;
else|else
return|return
literal|false
return|;
block|}
comment|/**      * Execute the current command.      */
specifier|public
specifier|abstract
name|void
name|execute
parameter_list|()
throws|throws
name|ClusterException
function_decl|;
specifier|public
name|XMLResource
name|getResource
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|Collection
name|collection
init|=
name|getCollection
argument_list|()
decl_stmt|;
return|return
operator|(
name|XMLResource
operator|)
name|collection
operator|.
name|createResource
argument_list|(
name|documentName
argument_list|,
literal|"XMLResource"
argument_list|)
return|;
block|}
specifier|public
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
name|getCollection
parameter_list|(
name|String
name|cName
parameter_list|)
throws|throws
name|XMLDBException
block|{
return|return
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
literal|"xmldb:exist://"
operator|+
name|cName
argument_list|,
name|ClusterConfiguration
operator|.
name|getDBName
argument_list|()
argument_list|,
name|ClusterConfiguration
operator|.
name|getDbPassword
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
name|getCollection
parameter_list|()
throws|throws
name|XMLDBException
block|{
return|return
name|getCollection
argument_list|(
name|collectionName
argument_list|)
return|;
block|}
block|}
end_class

end_unit

