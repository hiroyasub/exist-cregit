begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|//$Id$
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|cluster
operator|.
name|cocoon
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cocoon
operator|.
name|ProcessingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cocoon
operator|.
name|generation
operator|.
name|AbstractGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|cluster
operator|.
name|ClusterComunication
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|report
operator|.
name|XMLStatistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|helpers
operator|.
name|AttributesImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|stack
operator|.
name|IpAddress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jgroups
operator|.
name|Address
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_comment
comment|/**  * A Cocoon Generator which generates status information about running database instances,  * buffer usage and the like.  * Created by Nicola Breda.  *  * @author Nicola Breda aka maiale  * @author David Frontini aka spider  *         Date: 05-aug-2005  *         Time: 18.09.08  *         Revision $Revision$  */
end_comment

begin_class
specifier|public
class|class
name|ClusterGenerator
extends|extends
name|AbstractGenerator
block|{
specifier|public
specifier|final
specifier|static
name|String
name|NAMESPACE
init|=
literal|"http://exist.sourceforge.net/generators/cluster"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|PREFIX
init|=
literal|"cluster"
decl_stmt|;
name|XMLStatistics
name|stats
decl_stmt|;
specifier|public
name|ClusterGenerator
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
comment|/**      * @see org.apache.cocoon.generation.Generator#generate()      */
specifier|public
name|void
name|generate
parameter_list|()
throws|throws
name|IOException
throws|,
name|SAXException
block|{
name|this
operator|.
name|contentHandler
operator|.
name|startDocument
argument_list|()
expr_stmt|;
name|this
operator|.
name|contentHandler
operator|.
name|startPrefixMapping
argument_list|(
name|PREFIX
argument_list|,
name|NAMESPACE
argument_list|)
expr_stmt|;
name|this
operator|.
name|contentHandler
operator|.
name|startPrefixMapping
argument_list|(
literal|"ci"
argument_list|,
literal|"http://apache.org/cocoon/include/1.0"
argument_list|)
expr_stmt|;
name|this
operator|.
name|contentHandler
operator|.
name|startElement
argument_list|(
name|NAMESPACE
argument_list|,
literal|"page"
argument_list|,
name|PREFIX
operator|+
literal|":page"
argument_list|,
operator|new
name|AttributesImpl
argument_list|()
argument_list|)
expr_stmt|;
name|AttributesImpl
name|attr
init|=
operator|new
name|AttributesImpl
argument_list|()
decl_stmt|;
name|attr
operator|.
name|addAttribute
argument_list|(
literal|""
argument_list|,
literal|"src"
argument_list|,
literal|"src"
argument_list|,
literal|"CDATA"
argument_list|,
literal|"sidebar.xml"
argument_list|)
expr_stmt|;
name|this
operator|.
name|contentHandler
operator|.
name|startElement
argument_list|(
literal|"http://apache.org/cocoon/include/1.0"
argument_list|,
literal|"include"
argument_list|,
literal|"ci:include"
argument_list|,
name|attr
argument_list|)
expr_stmt|;
name|this
operator|.
name|contentHandler
operator|.
name|endElement
argument_list|(
literal|"http://apache.org/cocoon/include/1.0"
argument_list|,
literal|"include"
argument_list|,
literal|"ci:include"
argument_list|)
expr_stmt|;
name|this
operator|.
name|contentHandler
operator|.
name|startElement
argument_list|(
name|NAMESPACE
argument_list|,
literal|"cluster"
argument_list|,
name|PREFIX
operator|+
literal|":cluster"
argument_list|,
operator|new
name|AttributesImpl
argument_list|()
argument_list|)
expr_stmt|;
name|genNodes
argument_list|()
expr_stmt|;
name|this
operator|.
name|contentHandler
operator|.
name|endElement
argument_list|(
name|NAMESPACE
argument_list|,
literal|"cluster"
argument_list|,
name|PREFIX
operator|+
literal|":cluster"
argument_list|)
expr_stmt|;
name|this
operator|.
name|contentHandler
operator|.
name|endPrefixMapping
argument_list|(
name|PREFIX
argument_list|)
expr_stmt|;
name|this
operator|.
name|contentHandler
operator|.
name|endElement
argument_list|(
name|NAMESPACE
argument_list|,
literal|"page"
argument_list|,
name|PREFIX
operator|+
literal|":page"
argument_list|)
expr_stmt|;
name|this
operator|.
name|contentHandler
operator|.
name|endDocument
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|genNodes
parameter_list|()
throws|throws
name|SAXException
block|{
name|ClusterComunication
name|cluster
init|=
name|ClusterComunication
operator|.
name|getInstance
argument_list|()
decl_stmt|;
if|if
condition|(
name|cluster
operator|==
literal|null
condition|)
return|return;
name|AttributesImpl
name|atts
init|=
operator|new
name|AttributesImpl
argument_list|()
decl_stmt|;
name|atts
operator|.
name|addAttribute
argument_list|(
literal|""
argument_list|,
literal|"address"
argument_list|,
literal|"address"
argument_list|,
literal|"CDATA"
argument_list|,
name|cluster
operator|.
name|getAddress
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|atts
operator|.
name|addAttribute
argument_list|(
literal|""
argument_list|,
literal|"type"
argument_list|,
literal|"type"
argument_list|,
literal|"CDATA"
argument_list|,
name|cluster
operator|.
name|isCoordinator
argument_list|()
condition|?
literal|"local-master"
else|:
literal|"local-node"
argument_list|)
expr_stmt|;
name|atts
operator|.
name|addAttribute
argument_list|(
literal|""
argument_list|,
literal|"console-address"
argument_list|,
literal|"console-address"
argument_list|,
literal|"CDATA"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|this
operator|.
name|contentHandler
operator|.
name|startElement
argument_list|(
name|NAMESPACE
argument_list|,
literal|"node"
argument_list|,
name|PREFIX
operator|+
literal|":node"
argument_list|,
name|atts
argument_list|)
expr_stmt|;
name|this
operator|.
name|contentHandler
operator|.
name|endElement
argument_list|(
name|NAMESPACE
argument_list|,
literal|"node"
argument_list|,
name|PREFIX
operator|+
literal|":node"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|cluster
operator|.
name|isCoordinator
argument_list|()
condition|)
block|{
name|String
name|consoleAddr
init|=
literal|"no-ip-found"
decl_stmt|;
name|Address
name|addr
init|=
name|cluster
operator|.
name|getCoordinator
argument_list|()
decl_stmt|;
if|if
condition|(
name|addr
operator|instanceof
name|IpAddress
condition|)
block|{
name|IpAddress
name|ipA
init|=
operator|(
name|IpAddress
operator|)
name|addr
decl_stmt|;
name|consoleAddr
operator|=
name|ipA
operator|.
name|getIpAddress
argument_list|()
operator|.
name|getHostAddress
argument_list|()
expr_stmt|;
block|}
name|Vector
name|v
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
name|v
operator|.
name|add
argument_list|(
name|addr
argument_list|)
expr_stmt|;
name|ConsoleInfo
name|info
init|=
operator|(
name|ConsoleInfo
operator|)
name|cluster
operator|.
name|getConsoleInfos
argument_list|(
name|v
argument_list|)
operator|.
name|get
argument_list|(
name|addr
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|atts
operator|=
operator|new
name|AttributesImpl
argument_list|()
expr_stmt|;
name|atts
operator|.
name|addAttribute
argument_list|(
literal|""
argument_list|,
literal|"address"
argument_list|,
literal|"address"
argument_list|,
literal|"CDATA"
argument_list|,
name|addr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|atts
operator|.
name|addAttribute
argument_list|(
literal|""
argument_list|,
literal|"type"
argument_list|,
literal|"type"
argument_list|,
literal|"CDATA"
argument_list|,
literal|"remote-master"
argument_list|)
expr_stmt|;
if|if
condition|(
name|info
operator|!=
literal|null
condition|)
name|atts
operator|.
name|addAttribute
argument_list|(
literal|""
argument_list|,
literal|"console-address"
argument_list|,
literal|"console-address"
argument_list|,
literal|"CDATA"
argument_list|,
literal|"http://"
operator|+
name|consoleAddr
operator|+
literal|":"
operator|+
name|info
operator|.
name|getProperty
argument_list|(
literal|"port"
argument_list|)
operator|+
literal|"/exist/cluster"
argument_list|)
expr_stmt|;
name|this
operator|.
name|contentHandler
operator|.
name|startElement
argument_list|(
name|NAMESPACE
argument_list|,
literal|"node"
argument_list|,
name|PREFIX
operator|+
literal|":node"
argument_list|,
name|atts
argument_list|)
expr_stmt|;
name|this
operator|.
name|contentHandler
operator|.
name|endElement
argument_list|(
name|NAMESPACE
argument_list|,
literal|"node"
argument_list|,
name|PREFIX
operator|+
literal|":node"
argument_list|)
expr_stmt|;
block|}
name|Vector
name|members
init|=
name|cluster
operator|.
name|getMembersNoCoordinator
argument_list|()
decl_stmt|;
name|HashMap
name|infos
init|=
name|cluster
operator|.
name|getConsoleInfos
argument_list|(
name|members
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|members
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|String
name|consoleAddr
init|=
literal|"no-ip-found"
decl_stmt|;
name|ConsoleInfo
name|info
init|=
operator|(
name|ConsoleInfo
operator|)
name|infos
operator|.
name|get
argument_list|(
name|members
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|members
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|instanceof
name|IpAddress
condition|)
block|{
name|IpAddress
name|ipA
init|=
operator|(
name|IpAddress
operator|)
name|members
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|consoleAddr
operator|=
name|ipA
operator|.
name|getIpAddress
argument_list|()
operator|.
name|getHostAddress
argument_list|()
expr_stmt|;
block|}
name|atts
operator|=
operator|new
name|AttributesImpl
argument_list|()
expr_stmt|;
name|atts
operator|.
name|addAttribute
argument_list|(
literal|""
argument_list|,
literal|"address"
argument_list|,
literal|"address"
argument_list|,
literal|"CDATA"
argument_list|,
name|members
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|atts
operator|.
name|addAttribute
argument_list|(
literal|""
argument_list|,
literal|"type"
argument_list|,
literal|"type"
argument_list|,
literal|"CDATA"
argument_list|,
literal|"remote-node"
argument_list|)
expr_stmt|;
if|if
condition|(
name|info
operator|!=
literal|null
condition|)
name|atts
operator|.
name|addAttribute
argument_list|(
literal|""
argument_list|,
literal|"console-address"
argument_list|,
literal|"console-address"
argument_list|,
literal|"CDATA"
argument_list|,
literal|"http://"
operator|+
name|consoleAddr
operator|+
literal|":"
operator|+
name|info
operator|.
name|getProperty
argument_list|(
literal|"port"
argument_list|)
operator|+
literal|"/exist/cluster"
argument_list|)
expr_stmt|;
name|this
operator|.
name|contentHandler
operator|.
name|startElement
argument_list|(
name|NAMESPACE
argument_list|,
literal|"node"
argument_list|,
name|PREFIX
operator|+
literal|":node"
argument_list|,
name|atts
argument_list|)
expr_stmt|;
name|this
operator|.
name|contentHandler
operator|.
name|endElement
argument_list|(
name|NAMESPACE
argument_list|,
literal|"node"
argument_list|,
name|PREFIX
operator|+
literal|":node"
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * @param elem      * @param value      * @throws org.xml.sax.SAXException      */
specifier|private
name|void
name|addValue
parameter_list|(
name|String
name|elem
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|SAXException
block|{
name|stats
operator|.
name|addValue
argument_list|(
name|elem
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

