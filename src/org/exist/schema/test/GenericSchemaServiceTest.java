begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-04 Wolfgang M. Meier  *  wolfgang@exist-db.org  *  http://exist.sourceforge.net  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|schema
operator|.
name|test
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|schema
operator|.
name|SchemaService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exolab
operator|.
name|castor
operator|.
name|xml
operator|.
name|schema
operator|.
name|AttributeDecl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exolab
operator|.
name|castor
operator|.
name|xml
operator|.
name|schema
operator|.
name|ElementDecl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exolab
operator|.
name|castor
operator|.
name|xml
operator|.
name|schema
operator|.
name|XMLType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|DatabaseManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|XMLResource
import|;
end_import

begin_comment
comment|/**  * @author Sebastian Bossung, Technische Universitaet Hamburg-Harburg  */
end_comment

begin_class
specifier|public
class|class
name|GenericSchemaServiceTest
extends|extends
name|TestCase
block|{
specifier|private
specifier|final
specifier|static
name|String
name|URI
init|=
literal|"xmldb:exist:///db"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|DRIVER
init|=
literal|"org.exist.xmldb.DatabaseImpl"
decl_stmt|;
specifier|private
name|Collection
name|rootCollection
init|=
literal|null
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|ADDRESSBOOK_SCHEMA
init|=
literal|"<?xml version='1.0'?>"
operator|+
literal|"<xsd:schema xmlns:xsd='http://www.w3.org/2001/XMLSchema'"
operator|+
literal|"    targetNamespace='http://jmvanel.free.fr/xsd/addressBook'"
operator|+
literal|"    xmlns='http://jmvanel.free.fr/xsd/addressBook' elementFormDefault='qualified'>"
operator|+
literal|"<xsd:attribute name='uselessAttribute' type='xsd:string'/>"
operator|+
literal|"<xsd:complexType name='record'> "
operator|+
literal|"<xsd:sequence> "
operator|+
literal|"<xsd:element name='cname' type='xsd:string'/>"
operator|+
literal|"<xsd:element name='email' type='xsd:string'/> "
operator|+
literal|"</xsd:sequence> "
operator|+
literal|"</xsd:complexType> "
operator|+
literal|"<xsd:element name='addressBook'>"
operator|+
literal|"<xsd:complexType> "
operator|+
literal|"<xsd:sequence> "
operator|+
literal|"<xsd:element name='owner' type='record'/>"
operator|+
literal|"<xsd:element name='person' type='record'"
operator|+
literal|"                       minOccurs='0' maxOccurs='unbounded'/>"
operator|+
literal|"</xsd:sequence></xsd:complexType> "
operator|+
literal|"</xsd:element> "
operator|+
literal|"</xsd:schema> "
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|ADDRESSBOOK_DOCUMENT
init|=
literal|"<?xml version='1.0'?> "
operator|+
literal|"<addressBook xmlns='http://jmvanel.free.fr/xsd/addressBook'> "
operator|+
literal|"<owner> "
operator|+
literal|"<cname>John Punin</cname>"
operator|+
literal|"<email>puninj@cs.rpi.edu</email>"
operator|+
literal|"</owner> "
operator|+
literal|"<person> "
operator|+
literal|"<cname>Harrison Ford</cname>"
operator|+
literal|"<email>hford@famous.org</email> "
operator|+
literal|"</person> "
operator|+
literal|"<person> "
operator|+
literal|"<cname>Julia Roberts</cname>"
operator|+
literal|"<email>jr@pw.com</email> "
operator|+
literal|"</person> "
operator|+
literal|"</addressBook> "
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|ADDRESSBOOK_DOCUMENT_INVALID
init|=
literal|"<?xml version='1.0'?> "
operator|+
literal|"<addressBook xmlns='http://jmvanel.free.fr/xsd/addressBook'> "
operator|+
literal|"<owner> "
operator|+
literal|"<cname>John Punin</cname>"
operator|+
literal|"<email>puninj@cs.rpi.edu</email>"
operator|+
literal|"</owner> "
operator|+
literal|"<person> "
operator|+
literal|"<cname>Harrison Ford</cname>"
operator|+
literal|"<email>hford@famous.org</email> "
operator|+
literal|"</person> "
operator|+
literal|"<person> "
operator|+
literal|"<name>Julia Roberts</name>"
operator|+
literal|"<email>jr@pw.com</email> "
operator|+
literal|"</person> "
operator|+
literal|"</addressBook> "
decl_stmt|;
specifier|public
name|GenericSchemaServiceTest
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
comment|/*    * @see TestCase#setUp()    */
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
name|cl
init|=
name|Class
operator|.
name|forName
argument_list|(
name|DRIVER
argument_list|)
decl_stmt|;
name|Database
name|database
init|=
operator|(
name|Database
operator|)
name|cl
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|database
operator|.
name|setProperty
argument_list|(
literal|"create-database"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|DatabaseManager
operator|.
name|registerDatabase
argument_list|(
name|database
argument_list|)
expr_stmt|;
name|rootCollection
operator|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|URI
argument_list|,
literal|"admin"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
if|if
condition|(
name|rootCollection
operator|==
literal|null
condition|)
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Could not connect to database."
argument_list|)
throw|;
block|}
specifier|private
name|SchemaService
name|getSchemaService
parameter_list|()
throws|throws
name|XMLDBException
block|{
return|return
operator|(
name|SchemaService
operator|)
name|rootCollection
operator|.
name|getService
argument_list|(
literal|"SchemaService"
argument_list|,
literal|"1.0"
argument_list|)
return|;
block|}
specifier|protected
name|void
name|insertSchemas
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|SchemaService
name|service
init|=
name|getSchemaService
argument_list|()
decl_stmt|;
name|service
operator|.
name|putSchema
argument_list|(
name|ADDRESSBOOK_SCHEMA
argument_list|)
expr_stmt|;
block|}
comment|/*    * @see TestCase#tearDown()    */
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testGetName
parameter_list|()
throws|throws
name|Exception
block|{
name|getSchemaService
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"SchemaService"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetVersion
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|getSchemaService
argument_list|()
operator|.
name|getVersion
argument_list|()
operator|.
name|equals
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testPutSchema
parameter_list|()
throws|throws
name|XMLDBException
block|{
comment|// insert the new schema:
name|getSchemaService
argument_list|()
operator|.
name|putSchema
argument_list|(
name|ADDRESSBOOK_SCHEMA
argument_list|)
expr_stmt|;
comment|// check it's there:
name|assertNotNull
argument_list|(
name|getSchemaService
argument_list|()
operator|.
name|getSchema
argument_list|(
literal|"http://jmvanel.free.fr/xsd/addressBook"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetSchema
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|insertSchemas
argument_list|()
expr_stmt|;
name|XMLResource
name|schema
init|=
name|getSchemaService
argument_list|()
operator|.
name|getSchema
argument_list|(
literal|"http://jmvanel.free.fr/xsd/addressBook"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|schema
argument_list|)
expr_stmt|;
name|String
name|targetNamespace
decl_stmt|;
name|Node
name|domSchema
init|=
name|schema
operator|.
name|getContentAsDOM
argument_list|()
decl_stmt|;
name|targetNamespace
operator|=
name|domSchema
operator|.
name|getAttributes
argument_list|()
operator|.
name|getNamedItem
argument_list|(
literal|"targetNamespace"
argument_list|)
operator|.
name|getNodeValue
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|targetNamespace
argument_list|,
literal|"http://jmvanel.free.fr/xsd/addressBook"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testValidateContents
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|insertSchemas
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|getSchemaService
argument_list|()
operator|.
name|validateContents
argument_list|(
name|ADDRESSBOOK_DOCUMENT
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|getSchemaService
argument_list|()
operator|.
name|validateContents
argument_list|(
name|ADDRESSBOOK_DOCUMENT_INVALID
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|String
name|message
init|=
name|e
operator|.
name|getMessage
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|message
operator|.
name|indexOf
argument_list|(
literal|"Invalid content"
argument_list|)
operator|>
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|message
operator|.
name|indexOf
argument_list|(
literal|"element 'name'"
argument_list|)
operator|>
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testValidateResource
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|Collection
name|collection
init|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|URI
argument_list|,
literal|"admin"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
block|{
name|XMLResource
name|resource
init|=
operator|(
name|XMLResource
operator|)
name|collection
operator|.
name|createResource
argument_list|(
literal|"addressbook.xml"
argument_list|,
literal|"XMLResource"
argument_list|)
decl_stmt|;
name|resource
operator|.
name|setContent
argument_list|(
name|ADDRESSBOOK_DOCUMENT
argument_list|)
expr_stmt|;
name|collection
operator|.
name|storeResource
argument_list|(
name|resource
argument_list|)
expr_stmt|;
block|}
block|{
name|XMLResource
name|resource
init|=
operator|(
name|XMLResource
operator|)
name|collection
operator|.
name|createResource
argument_list|(
literal|"addressbook_invalid.xml"
argument_list|,
literal|"XMLResource"
argument_list|)
decl_stmt|;
name|resource
operator|.
name|setContent
argument_list|(
name|ADDRESSBOOK_DOCUMENT_INVALID
argument_list|)
expr_stmt|;
name|collection
operator|.
name|storeResource
argument_list|(
name|resource
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|getSchemaService
argument_list|()
operator|.
name|validateResource
argument_list|(
literal|"addressbook.xml"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|getSchemaService
argument_list|()
operator|.
name|validateResource
argument_list|(
literal|"addressbook_invalid.xml"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|String
name|message
init|=
name|e
operator|.
name|getCause
argument_list|()
operator|.
name|getMessage
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|message
operator|.
name|indexOf
argument_list|(
literal|"Invalid content"
argument_list|)
operator|>
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|message
operator|.
name|indexOf
argument_list|(
literal|"element 'name'"
argument_list|)
operator|>
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testGetAttribute
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|insertSchemas
argument_list|()
expr_stmt|;
name|AttributeDecl
name|attribute
init|=
name|getSchemaService
argument_list|()
operator|.
name|getAttribute
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://jmvanel.free.fr/xsd/addressBook"
argument_list|,
literal|"uselessAttribute"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"uselessAttribute"
argument_list|,
name|attribute
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetElement
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|insertSchemas
argument_list|()
expr_stmt|;
name|ElementDecl
name|element
init|=
name|getSchemaService
argument_list|()
operator|.
name|getElement
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://jmvanel.free.fr/xsd/addressBook"
argument_list|,
literal|"addressBook"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|element
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"addressBook"
argument_list|,
name|element
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetType
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|insertSchemas
argument_list|()
expr_stmt|;
name|XMLType
name|type
init|=
name|getSchemaService
argument_list|()
operator|.
name|getType
argument_list|(
operator|new
name|QName
argument_list|(
literal|"http://jmvanel.free.fr/xsd/addressBook"
argument_list|,
literal|"record"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"record"
argument_list|,
name|type
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testIsKnownNamespace
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|insertSchemas
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|getSchemaService
argument_list|()
operator|.
name|isKnownNamespace
argument_list|(
literal|"http://jmvanel.free.fr/xsd/addressBook"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|getSchemaService
argument_list|()
operator|.
name|isKnownNamespace
argument_list|(
literal|"http://dont.have.this.namespace"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|final
specifier|static
name|String
name|TRANSIENT_SCHEMA
init|=
literal|"<?xml version='1.0'?>"
operator|+
literal|"<xsd:schema xmlns:xsd='http://www.w3.org/2001/XMLSchema'"
operator|+
literal|"    targetNamespace='http://somewhere.invalid/transient'"
operator|+
literal|"    xmlns:t='http://somewhere.invalid/transient' elementFormDefault='qualified'>"
operator|+
literal|"<xsd:element name='testElement' type='xsd:string'/>"
operator|+
literal|"</xsd:schema>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|TRANSIENT_TEST_DOCUMENT
init|=
literal|"<testElement xmlns='http://somewhere.invalid/transient'>test Strings can contain numbers: 123</testElement>"
decl_stmt|;
specifier|public
name|void
name|testRegisterTransientSchema
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|SchemaService
name|service
init|=
name|getSchemaService
argument_list|()
decl_stmt|;
name|service
operator|.
name|registerTransientSchema
argument_list|(
name|TRANSIENT_SCHEMA
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|service
operator|.
name|validateContents
argument_list|(
name|TRANSIENT_TEST_DOCUMENT
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testRebuildIndex
parameter_list|()
throws|throws
name|XMLDBException
block|{
name|insertSchemas
argument_list|()
expr_stmt|;
name|getSchemaService
argument_list|()
operator|.
name|rebuildIndex
argument_list|()
expr_stmt|;
name|getSchemaService
argument_list|()
operator|.
name|isKnownNamespace
argument_list|(
literal|"http://jmvanel.free.fr/xsd/addressBook"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

