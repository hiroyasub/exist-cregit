begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * ServerShutdown.java - Jul 20, 2003  *   * @author wolf  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|jetty
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avalon
operator|.
name|excalibur
operator|.
name|cli
operator|.
name|CLArgsParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avalon
operator|.
name|excalibur
operator|.
name|cli
operator|.
name|CLOption
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avalon
operator|.
name|excalibur
operator|.
name|cli
operator|.
name|CLOptionDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avalon
operator|.
name|excalibur
operator|.
name|cli
operator|.
name|CLUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlrpc
operator|.
name|XmlRpcException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|ConfigurationHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|DatabaseInstanceManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|DatabaseManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_comment
comment|/**  * Call the main method of this class to shut down a running database instance.  *   * @author wolf  */
end_comment

begin_class
specifier|public
class|class
name|ServerShutdown
block|{
comment|// command-line options
specifier|private
specifier|final
specifier|static
name|int
name|HELP_OPT
init|=
literal|'h'
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|int
name|URI_OPT
init|=
literal|'l'
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|int
name|USER_OPT
init|=
literal|'u'
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|int
name|PASSWORD_OPT
init|=
literal|'p'
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|CLOptionDescriptor
name|OPTIONS
index|[]
init|=
operator|new
name|CLOptionDescriptor
index|[]
block|{
operator|new
name|CLOptionDescriptor
argument_list|(
literal|"help"
argument_list|,
name|CLOptionDescriptor
operator|.
name|ARGUMENT_DISALLOWED
argument_list|,
name|HELP_OPT
argument_list|,
literal|"print help on command line options and exit."
argument_list|)
block|,
operator|new
name|CLOptionDescriptor
argument_list|(
literal|"user"
argument_list|,
name|CLOptionDescriptor
operator|.
name|ARGUMENT_REQUIRED
argument_list|,
name|USER_OPT
argument_list|,
literal|"specify username (has to be a member of group dba)."
argument_list|)
block|,
operator|new
name|CLOptionDescriptor
argument_list|(
literal|"password"
argument_list|,
name|CLOptionDescriptor
operator|.
name|ARGUMENT_REQUIRED
argument_list|,
name|PASSWORD_OPT
argument_list|,
literal|"specify password for the user."
argument_list|)
block|,
operator|new
name|CLOptionDescriptor
argument_list|(
literal|"uri"
argument_list|,
name|CLOptionDescriptor
operator|.
name|ARGUMENT_REQUIRED
argument_list|,
name|URI_OPT
argument_list|,
literal|"the XML:DB URI of the database instance to be shut down."
argument_list|)
block|}
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
specifier|final
name|CLArgsParser
name|optParser
init|=
operator|new
name|CLArgsParser
argument_list|(
name|args
argument_list|,
name|OPTIONS
argument_list|)
decl_stmt|;
if|if
condition|(
name|optParser
operator|.
name|getErrorString
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"ERROR: "
operator|+
name|optParser
operator|.
name|getErrorString
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
specifier|final
name|Properties
name|properties
init|=
name|loadProperties
argument_list|()
decl_stmt|;
name|String
name|user
init|=
literal|"admin"
decl_stmt|;
name|String
name|passwd
init|=
literal|""
decl_stmt|;
name|String
name|uri
init|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"uri"
argument_list|,
literal|"xmldb:exist://localhost:8080/exist/xmlrpc"
argument_list|)
decl_stmt|;
specifier|final
name|List
argument_list|<
name|CLOption
argument_list|>
name|opts
init|=
name|optParser
operator|.
name|getArguments
argument_list|()
decl_stmt|;
for|for
control|(
specifier|final
name|CLOption
name|option
range|:
name|opts
control|)
block|{
switch|switch
condition|(
name|option
operator|.
name|getId
argument_list|()
condition|)
block|{
case|case
name|HELP_OPT
case|:
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Usage: java "
operator|+
name|ServerShutdown
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|" [options]"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|CLUtil
operator|.
name|describeOptions
argument_list|(
name|OPTIONS
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
return|return;
case|case
name|USER_OPT
case|:
name|user
operator|=
name|option
operator|.
name|getArgument
argument_list|()
expr_stmt|;
break|break;
case|case
name|PASSWORD_OPT
case|:
name|passwd
operator|=
name|option
operator|.
name|getArgument
argument_list|()
expr_stmt|;
break|break;
case|case
name|URI_OPT
case|:
name|uri
operator|=
name|option
operator|.
name|getArgument
argument_list|()
expr_stmt|;
block|}
block|}
try|try
block|{
comment|// initialize database drivers
specifier|final
name|Class
argument_list|<
name|?
argument_list|>
name|cl
init|=
name|Class
operator|.
name|forName
argument_list|(
literal|"org.exist.xmldb.DatabaseImpl"
argument_list|)
decl_stmt|;
comment|// create the default database
specifier|final
name|Database
name|database
init|=
operator|(
name|Database
operator|)
name|cl
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|DatabaseManager
operator|.
name|registerDatabase
argument_list|(
name|database
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|uri
operator|.
name|endsWith
argument_list|(
name|XmldbURI
operator|.
name|ROOT_COLLECTION
argument_list|)
condition|)
block|{
name|uri
operator|=
name|uri
operator|+
name|XmldbURI
operator|.
name|ROOT_COLLECTION
expr_stmt|;
block|}
specifier|final
name|Collection
name|root
init|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|uri
argument_list|,
name|user
argument_list|,
name|passwd
argument_list|)
decl_stmt|;
specifier|final
name|DatabaseInstanceManager
name|manager
init|=
operator|(
name|DatabaseInstanceManager
operator|)
name|root
operator|.
name|getService
argument_list|(
literal|"DatabaseInstanceManager"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Shutting down database instance at "
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|'\t'
operator|+
name|uri
argument_list|)
expr_stmt|;
name|manager
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XMLDBException
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"ERROR: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|Throwable
name|t
init|=
name|e
operator|.
name|getCause
argument_list|()
decl_stmt|;
if|if
condition|(
name|t
operator|!=
literal|null
operator|&&
name|t
operator|instanceof
name|XmlRpcException
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"CAUSE: "
operator|+
name|t
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
specifier|final
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Properties
name|loadProperties
parameter_list|()
block|{
specifier|final
name|Properties
name|clientProps
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
specifier|final
name|Path
name|propFile
init|=
name|ConfigurationHelper
operator|.
name|lookup
argument_list|(
literal|"client.properties"
argument_list|)
decl_stmt|;
name|InputStream
name|pin
init|=
literal|null
decl_stmt|;
comment|// Try to load from file
try|try
block|{
name|pin
operator|=
name|Files
operator|.
name|newInputStream
argument_list|(
name|propFile
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IOException
name|ex
parameter_list|)
block|{
comment|// File not found, no exception handling
block|}
if|if
condition|(
name|pin
operator|==
literal|null
condition|)
block|{
comment|// Try to load via classloader
name|pin
operator|=
name|ServerShutdown
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"client.properties"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|pin
operator|!=
literal|null
condition|)
block|{
comment|// Try to load properties from stream
try|try
block|{
try|try
block|{
name|clientProps
operator|.
name|load
argument_list|(
name|pin
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|pin
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
specifier|final
name|IOException
name|ex
parameter_list|)
block|{
comment|//
block|}
block|}
return|return
name|clientProps
return|;
block|}
block|}
end_class

end_unit

