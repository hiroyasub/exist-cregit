begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-07 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id: Connection.java 189 2007-03-30 15:02:18Z dizzzz $  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|protocolhandler
operator|.
name|protocols
operator|.
name|xmldb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|LogManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|protocolhandler
operator|.
name|embedded
operator|.
name|EmbeddedInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|protocolhandler
operator|.
name|embedded
operator|.
name|EmbeddedOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|protocolhandler
operator|.
name|xmldb
operator|.
name|XmldbURL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|protocolhandler
operator|.
name|xmlrpc
operator|.
name|XmlrpcInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|protocolhandler
operator|.
name|xmlrpc
operator|.
name|XmlrpcOutputStream
import|;
end_import

begin_comment
comment|/**  *  A URLConnection object manages the translation of a URL object into a  * resource stream.  *  * @see<A HREF="http://java.sun.com/developer/onlineTraining/protocolhandlers/"  *>A New Era for Java Protocol Handlers</A>  *  * @see java.net.URLConnection  *  * @author Dannes Wessels  */
end_comment

begin_class
specifier|public
class|class
name|Connection
extends|extends
name|URLConnection
block|{
specifier|private
specifier|final
specifier|static
name|Logger
name|LOG
init|=
name|LogManager
operator|.
name|getLogger
argument_list|(
name|Connection
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/**      * Constructs a URL connection to the specified URL.       */
specifier|protected
name|Connection
parameter_list|(
name|URL
name|url
parameter_list|)
block|{
name|super
argument_list|(
name|url
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
name|url
argument_list|)
expr_stmt|;
name|setDoInput
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setDoOutput
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
comment|/**      * @see java.net.URLConnection#connect      */
specifier|public
name|void
name|connect
parameter_list|()
throws|throws
name|IOException
block|{
name|LOG
operator|.
name|debug
argument_list|(
name|url
argument_list|)
expr_stmt|;
block|}
comment|/**      * @see java.net.URLConnection#getInputStream      */
specifier|public
name|InputStream
name|getInputStream
parameter_list|()
throws|throws
name|IOException
block|{
name|LOG
operator|.
name|debug
argument_list|(
name|url
argument_list|)
expr_stmt|;
name|InputStream
name|inputstream
init|=
literal|null
decl_stmt|;
specifier|final
name|XmldbURL
name|xmldbURL
init|=
operator|new
name|XmldbURL
argument_list|(
name|url
argument_list|)
decl_stmt|;
if|if
condition|(
name|xmldbURL
operator|.
name|isEmbedded
argument_list|()
condition|)
block|{
name|inputstream
operator|=
operator|new
name|EmbeddedInputStream
argument_list|(
name|xmldbURL
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|inputstream
operator|=
operator|new
name|XmlrpcInputStream
argument_list|(
name|xmldbURL
argument_list|)
expr_stmt|;
block|}
return|return
name|inputstream
return|;
block|}
comment|/**      * @see java.net.URLConnection#getOutputStream      */
specifier|public
name|OutputStream
name|getOutputStream
parameter_list|()
throws|throws
name|IOException
block|{
name|LOG
operator|.
name|debug
argument_list|(
name|url
argument_list|)
expr_stmt|;
name|OutputStream
name|outputstream
init|=
literal|null
decl_stmt|;
specifier|final
name|XmldbURL
name|xmldbURL
init|=
operator|new
name|XmldbURL
argument_list|(
name|url
argument_list|)
decl_stmt|;
if|if
condition|(
name|xmldbURL
operator|.
name|isEmbedded
argument_list|()
condition|)
block|{
name|outputstream
operator|=
operator|new
name|EmbeddedOutputStream
argument_list|(
name|xmldbURL
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|outputstream
operator|=
operator|new
name|XmlrpcOutputStream
argument_list|(
name|xmldbURL
argument_list|)
expr_stmt|;
block|}
return|return
name|outputstream
return|;
block|}
block|}
end_class

end_unit

