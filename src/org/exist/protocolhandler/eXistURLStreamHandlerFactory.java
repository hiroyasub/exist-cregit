begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-07 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id: eXistURLStreamHandlerFactory.java 189 2007-03-30 15:02:18Z dizzzz $  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|protocolhandler
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLStreamHandler
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLStreamHandlerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|protocolhandler
operator|.
name|protocols
operator|.
name|xmldb
operator|.
name|Handler
import|;
end_import

begin_comment
comment|/**  * Factory class for creating custom stream handlers for the 'xmldb' protocol.  *  * @see java.net.URLStreamHandler  * @see java.net.URLStreamHandlerFactory  *  * @author Dannes Wessels  */
end_comment

begin_class
specifier|public
class|class
name|eXistURLStreamHandlerFactory
implements|implements
name|URLStreamHandlerFactory
block|{
specifier|private
specifier|final
specifier|static
name|Logger
name|LOG
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|eXistURLStreamHandlerFactory
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|JAVA_PROTOCOL_HANDLER_PKGS
init|=
literal|"java.protocol.handler.pkgs"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|EXIST_PROTOCOL_HANDLER
init|=
literal|"org.exist.protocolhandler.protocols"
decl_stmt|;
specifier|public
specifier|static
name|void
name|init
parameter_list|()
block|{
name|boolean
name|initOK
init|=
literal|false
decl_stmt|;
try|try
block|{
name|URL
operator|.
name|setURLStreamHandlerFactory
argument_list|(
operator|new
name|eXistURLStreamHandlerFactory
argument_list|()
argument_list|)
expr_stmt|;
name|initOK
operator|=
literal|true
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Succesfully registered eXistURLStreamHandlerFactory."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Error
name|ex
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"The JVM has already an URLStreamHandlerFactory registered, skipping..."
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|initOK
condition|)
block|{
name|String
name|currentSystemProperty
init|=
name|System
operator|.
name|getProperty
argument_list|(
name|JAVA_PROTOCOL_HANDLER_PKGS
argument_list|)
decl_stmt|;
if|if
condition|(
name|currentSystemProperty
operator|==
literal|null
condition|)
block|{
comment|// Nothing setup yet
name|LOG
operator|.
name|info
argument_list|(
literal|"Setting "
operator|+
name|JAVA_PROTOCOL_HANDLER_PKGS
operator|+
literal|" to "
operator|+
name|EXIST_PROTOCOL_HANDLER
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
name|JAVA_PROTOCOL_HANDLER_PKGS
argument_list|,
name|EXIST_PROTOCOL_HANDLER
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// java.protocol.handler.pkgs is already setup, preserving settings
if|if
condition|(
name|currentSystemProperty
operator|.
name|indexOf
argument_list|(
name|EXIST_PROTOCOL_HANDLER
argument_list|)
operator|==
operator|-
literal|1
condition|)
block|{
comment|// eXist handler is not setup yet
name|currentSystemProperty
operator|=
name|currentSystemProperty
operator|+
literal|"|"
operator|+
name|EXIST_PROTOCOL_HANDLER
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Setting "
operator|+
name|JAVA_PROTOCOL_HANDLER_PKGS
operator|+
literal|" to "
operator|+
name|currentSystemProperty
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
name|JAVA_PROTOCOL_HANDLER_PKGS
argument_list|,
name|currentSystemProperty
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"System property "
operator|+
name|JAVA_PROTOCOL_HANDLER_PKGS
operator|+
literal|" has not been updated."
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
comment|/**      *  Create Custom URL streamhandler for the<B>xmldb</B> protocol.      *      * @param protocol Protocol      * @return Custom Xmldb stream handler.      */
specifier|public
name|URLStreamHandler
name|createURLStreamHandler
parameter_list|(
name|String
name|protocol
parameter_list|)
block|{
name|URLStreamHandler
name|handler
init|=
literal|null
decl_stmt|;
if|if
condition|(
literal|"xmldb"
operator|.
name|equals
argument_list|(
name|protocol
argument_list|)
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
name|protocol
argument_list|)
expr_stmt|;
name|handler
operator|=
operator|new
name|Handler
argument_list|()
expr_stmt|;
block|}
else|else
block|{
comment|//LOG.error("Protocol should be xmldb, not "+protocol);
block|}
return|return
name|handler
return|;
block|}
block|}
end_class

end_unit

