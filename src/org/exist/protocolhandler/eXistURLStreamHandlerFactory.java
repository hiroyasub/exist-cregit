begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2017 The eXist Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public  * License along with this library; if not, write to the Free Software  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|protocolhandler
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLStreamHandler
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLStreamHandlerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|LogManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|protocolhandler
operator|.
name|protocols
operator|.
name|xmldb
operator|.
name|Handler
import|;
end_import

begin_comment
comment|/**  * Factory class for creating custom stream handlers for the 'xmldb' protocol.  *  * @see java.net.URLStreamHandler  * @see java.net.URLStreamHandlerFactory  *  * @author Dannes Wessels  */
end_comment

begin_class
specifier|public
class|class
name|eXistURLStreamHandlerFactory
implements|implements
name|URLStreamHandlerFactory
block|{
specifier|private
specifier|final
specifier|static
name|Logger
name|LOG
init|=
name|LogManager
operator|.
name|getLogger
argument_list|(
name|eXistURLStreamHandlerFactory
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|URLStreamHandler
name|handler
decl_stmt|;
name|eXistURLStreamHandlerFactory
parameter_list|(
name|Mode
name|mode
parameter_list|)
block|{
name|handler
operator|=
operator|new
name|Handler
argument_list|(
name|mode
argument_list|)
expr_stmt|;
block|}
comment|/**      *  Create Custom URL streamhandler for the<B>xmldb</B> protocol.      *      * @param protocol Protocol      * @return Custom Xmldb stream handler.      */
specifier|public
name|URLStreamHandler
name|createURLStreamHandler
parameter_list|(
specifier|final
name|String
name|protocol
parameter_list|)
block|{
if|if
condition|(
literal|"xmldb"
operator|.
name|equals
argument_list|(
name|protocol
argument_list|)
condition|)
block|{
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
name|protocol
argument_list|)
expr_stmt|;
block|}
return|return
name|handler
return|;
block|}
else|else
block|{
comment|//LOG.error("Protocol should be xmldb, not "+protocol);
return|return
literal|null
return|;
block|}
block|}
block|}
end_class

end_unit

