begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-2010 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id: EmbeddedUser.java 188 2007-03-30 14:59:28Z dizzzz $  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|protocolhandler
operator|.
name|embedded
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|protocolhandler
operator|.
name|xmldb
operator|.
name|XmldbURL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|AuthenticationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|SecurityManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|BrokerPool
import|;
end_import

begin_comment
comment|/**  * Authenticate user with embedded eXist.   *  * @author @author Dannes Wessels  */
end_comment

begin_class
specifier|public
class|class
name|EmbeddedUser
block|{
comment|/**      *  Authenticate user specified in URL with embedded database.      *      * @param xmldbURL URL formatted as xmldb:exist://username:passwd@......      * @param pool     Exist broker pool, provides access to database.      * @return         USER when user exists and password is OK, or NULL      */
specifier|public
specifier|static
name|Subject
name|authenticate
parameter_list|(
name|XmldbURL
name|xmldbURL
parameter_list|,
name|BrokerPool
name|pool
parameter_list|)
block|{
if|if
condition|(
operator|!
name|xmldbURL
operator|.
name|hasUserInfo
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
specifier|final
name|SecurityManager
name|secman
init|=
name|pool
operator|.
name|getSecurityManager
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|secman
operator|.
name|authenticate
argument_list|(
name|xmldbURL
operator|.
name|getUsername
argument_list|()
argument_list|,
name|xmldbURL
operator|.
name|getPassword
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
specifier|final
name|AuthenticationException
name|e
parameter_list|)
block|{
return|return
literal|null
return|;
comment|// authentication is failed
block|}
block|}
comment|/**      *  Get user GUEST from database.      *      * @param pool  Exist broker pool, provides access to database.      * @return      eXist GUEST user.      */
specifier|public
specifier|static
name|Subject
name|getUserGuest
parameter_list|(
name|BrokerPool
name|pool
parameter_list|)
block|{
return|return
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getGuestSubject
argument_list|()
return|;
block|}
block|}
end_class

end_unit

