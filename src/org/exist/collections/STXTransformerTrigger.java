begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  STXTransformerTrigger.java - eXist Open Source Native XML Database  *  Copyright (C) 2003 Wolfgang M. Meier  *  wolfgang@exist-db.org  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *   * $Id$  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|collections
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|Templates
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerConfigurationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|sax
operator|.
name|SAXResult
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|sax
operator|.
name|SAXTransformerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|sax
operator|.
name|TransformerHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_comment
comment|/**  * @author wolf  */
end_comment

begin_class
specifier|public
class|class
name|STXTransformerTrigger
extends|extends
name|FilteringTrigger
block|{
specifier|private
name|Templates
name|template
init|=
literal|null
decl_stmt|;
specifier|private
name|SAXTransformerFactory
name|factory
init|=
literal|null
decl_stmt|;
specifier|public
name|void
name|configure
parameter_list|(
name|Map
name|parameters
parameter_list|)
throws|throws
name|CollectionConfigurationException
block|{
name|String
name|stylesheet
init|=
operator|(
name|String
operator|)
name|parameters
operator|.
name|get
argument_list|(
literal|"src"
argument_list|)
decl_stmt|;
if|if
condition|(
name|stylesheet
operator|==
literal|null
condition|)
throw|throw
operator|new
name|CollectionConfigurationException
argument_list|(
literal|"STXTransformerTrigger requires an "
operator|+
literal|"attribute 'src'"
argument_list|)
throw|;
name|String
name|origProperty
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"javax.xml.transform.TransformerFactory"
argument_list|)
decl_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"javax.xml.transform.TransformerFactory"
argument_list|,
literal|"net.sf.joost.trax.TransformerFactoryImpl"
argument_list|)
expr_stmt|;
name|factory
operator|=
operator|(
name|SAXTransformerFactory
operator|)
name|TransformerFactory
operator|.
name|newInstance
argument_list|()
expr_stmt|;
comment|// reset property to previous setting
if|if
condition|(
name|origProperty
operator|!=
literal|null
condition|)
name|System
operator|.
name|setProperty
argument_list|(
literal|"javax.xml.transform.TransformerFactory"
argument_list|,
name|origProperty
argument_list|)
expr_stmt|;
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"compiling stylesheet "
operator|+
name|stylesheet
argument_list|)
expr_stmt|;
try|try
block|{
name|template
operator|=
name|factory
operator|.
name|newTemplates
argument_list|(
operator|new
name|StreamSource
argument_list|(
name|stylesheet
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TransformerConfigurationException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|CollectionConfigurationException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc) 	 * @see org.exist.collections.Trigger#prepare(org.exist.storage.DBBroker, org.exist.collections.Collection, java.lang.String, org.w3c.dom.Document) 	 */
specifier|public
name|void
name|prepare
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Collection
name|collection
parameter_list|,
name|String
name|documentName
parameter_list|,
name|Document
name|existingDocument
parameter_list|)
throws|throws
name|TriggerException
block|{
name|TransformerHandler
name|handler
decl_stmt|;
try|try
block|{
name|handler
operator|=
name|factory
operator|.
name|newTransformerHandler
argument_list|(
name|template
argument_list|)
expr_stmt|;
name|SAXResult
name|result
init|=
operator|new
name|SAXResult
argument_list|()
decl_stmt|;
name|result
operator|.
name|setHandler
argument_list|(
name|getOutputHandler
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|setLexicalHandler
argument_list|(
name|getLexicalOutputHandler
argument_list|()
argument_list|)
expr_stmt|;
name|handler
operator|.
name|setResult
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|setOutputHandler
argument_list|(
name|handler
argument_list|)
expr_stmt|;
name|setLexicalOutputHandler
argument_list|(
name|handler
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TransformerConfigurationException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|TriggerException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

