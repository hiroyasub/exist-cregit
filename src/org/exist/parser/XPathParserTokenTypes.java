begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|// $ANTLR : "XPathParser.g" -> "XPathLexer.java"$
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|parser
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xpath
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|analysis
operator|.
name|Tokenizer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|PermissionDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|StringTokenizer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|BasicConfigurator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_interface
specifier|public
interface|interface
name|XPathParserTokenTypes
block|{
name|int
name|EOF
init|=
literal|1
decl_stmt|;
name|int
name|NULL_TREE_LOOKAHEAD
init|=
literal|3
decl_stmt|;
name|int
name|LITERAL_xpointer
init|=
literal|4
decl_stmt|;
name|int
name|LPAREN
init|=
literal|5
decl_stmt|;
name|int
name|RPAREN
init|=
literal|6
decl_stmt|;
name|int
name|ID
init|=
literal|7
decl_stmt|;
name|int
name|LITERAL_or
init|=
literal|8
decl_stmt|;
name|int
name|LITERAL_and
init|=
literal|9
decl_stmt|;
name|int
name|CONST
init|=
literal|10
decl_stmt|;
name|int
name|ANDEQ
init|=
literal|11
decl_stmt|;
name|int
name|OREQ
init|=
literal|12
decl_stmt|;
name|int
name|EQ
init|=
literal|13
decl_stmt|;
name|int
name|NEQ
init|=
literal|14
decl_stmt|;
name|int
name|UNION
init|=
literal|15
decl_stmt|;
name|int
name|LT
init|=
literal|16
decl_stmt|;
name|int
name|GT
init|=
literal|17
decl_stmt|;
name|int
name|LTEQ
init|=
literal|18
decl_stmt|;
name|int
name|GTEQ
init|=
literal|19
decl_stmt|;
name|int
name|PLUS
init|=
literal|20
decl_stmt|;
name|int
name|LITERAL_doctype
init|=
literal|21
decl_stmt|;
name|int
name|LITERAL_document
init|=
literal|22
decl_stmt|;
name|int
name|STAR
init|=
literal|23
decl_stmt|;
name|int
name|COMMA
init|=
literal|24
decl_stmt|;
name|int
name|LITERAL_collection
init|=
literal|25
decl_stmt|;
name|int
name|LITERAL_false
init|=
literal|26
decl_stmt|;
name|int
name|LITERAL_true
init|=
literal|27
decl_stmt|;
name|int
name|INT
init|=
literal|28
decl_stmt|;
name|int
name|LITERAL_text
init|=
literal|29
decl_stmt|;
name|int
name|SLASH
init|=
literal|30
decl_stmt|;
name|int
name|DSLASH
init|=
literal|31
decl_stmt|;
name|int
name|LPPAREN
init|=
literal|32
decl_stmt|;
comment|// "starts-with" = 33
comment|// "ends-with" = 34
name|int
name|LITERAL_contains
init|=
literal|35
decl_stmt|;
name|int
name|LITERAL_match
init|=
literal|36
decl_stmt|;
name|int
name|LITERAL_near
init|=
literal|37
decl_stmt|;
name|int
name|FUNC
init|=
literal|38
decl_stmt|;
name|int
name|ATTRIB
init|=
literal|39
decl_stmt|;
name|int
name|ATTRIB_STAR
init|=
literal|40
decl_stmt|;
name|int
name|LITERAL_node
init|=
literal|41
decl_stmt|;
name|int
name|PARENT
init|=
literal|42
decl_stmt|;
name|int
name|SELF
init|=
literal|43
decl_stmt|;
name|int
name|RPPAREN
init|=
literal|44
decl_stmt|;
name|int
name|WS
init|=
literal|45
decl_stmt|;
name|int
name|CHAR
init|=
literal|46
decl_stmt|;
name|int
name|DIGIT
init|=
literal|47
decl_stmt|;
name|int
name|ID_OR_FUNC
init|=
literal|48
decl_stmt|;
name|int
name|VARIABLE
init|=
literal|49
decl_stmt|;
block|}
end_interface

end_unit

