begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2010 The eXist Project  *  http://exist-db.org  *    *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *    *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *    *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *    *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|config
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|EXistException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|triggers
operator|.
name|FilteringTrigger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|triggers
operator|.
name|TriggerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|DocumentImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|ElementAtExist
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|PermissionDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|SecurityManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|utils
operator|.
name|ConverterFrom1_0
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|Txn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmldb
operator|.
name|XmldbURI
import|;
end_import

begin_comment
comment|/**  * @author<a href="mailto:shabanovd@gmail.com">Dmitriy Shabanov</a>  *  */
end_comment

begin_class
specifier|public
class|class
name|ConfigurationDocumentTrigger
extends|extends
name|FilteringTrigger
block|{
annotation|@
name|Override
specifier|public
name|void
name|prepare
parameter_list|(
name|int
name|event
parameter_list|,
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|XmldbURI
name|documentPath
parameter_list|,
name|DocumentImpl
name|existingDocument
parameter_list|)
throws|throws
name|TriggerException
block|{
empty_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|finish
parameter_list|(
name|int
name|event
parameter_list|,
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|XmldbURI
name|documentPath
parameter_list|,
name|DocumentImpl
name|document
parameter_list|)
block|{
name|Configuration
name|conf
decl_stmt|;
switch|switch
condition|(
name|event
condition|)
block|{
case|case
name|REMOVE_DOCUMENT_EVENT
case|:
name|conf
operator|=
name|Configurator
operator|.
name|getConfigurtion
argument_list|(
name|broker
operator|.
name|getBrokerPool
argument_list|()
argument_list|,
name|documentPath
argument_list|)
expr_stmt|;
if|if
condition|(
name|conf
operator|!=
literal|null
condition|)
block|{
name|Configurator
operator|.
name|unregister
argument_list|(
name|conf
argument_list|)
expr_stmt|;
empty_stmt|;
comment|//XXX: inform object that configuration was deleted
block|}
break|break;
default|default:
name|conf
operator|=
name|Configurator
operator|.
name|getConfigurtion
argument_list|(
name|broker
operator|.
name|getBrokerPool
argument_list|()
argument_list|,
name|documentPath
argument_list|)
expr_stmt|;
if|if
condition|(
name|conf
operator|!=
literal|null
condition|)
name|conf
operator|.
name|checkForUpdates
argument_list|(
operator|(
name|ElementAtExist
operator|)
name|document
operator|.
name|getDocumentElement
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|documentPath
operator|.
name|equals
argument_list|(
literal|"/db/system/users.xml"
argument_list|)
condition|)
block|{
try|try
block|{
name|ConverterFrom1_0
operator|.
name|convert
argument_list|(
name|broker
operator|.
name|getSubject
argument_list|()
argument_list|,
name|broker
operator|.
name|getBrokerPool
argument_list|()
operator|.
name|getSecurityManager
argument_list|()
argument_list|,
name|document
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PermissionDeniedException
name|e
parameter_list|)
block|{
block|}
catch|catch
parameter_list|(
name|EXistException
name|e
parameter_list|)
block|{
block|}
block|}
break|break;
block|}
block|}
specifier|private
name|void
name|checkForUpdates
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|XmldbURI
name|uri
parameter_list|,
name|DocumentImpl
name|document
parameter_list|)
block|{
name|Configuration
name|conf
init|=
name|Configurator
operator|.
name|getConfigurtion
argument_list|(
name|broker
operator|.
name|getBrokerPool
argument_list|()
argument_list|,
name|uri
argument_list|)
decl_stmt|;
if|if
condition|(
name|conf
operator|!=
literal|null
condition|)
name|conf
operator|.
name|checkForUpdates
argument_list|(
operator|(
name|ElementAtExist
operator|)
name|document
operator|.
name|getDocumentElement
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|uri
operator|.
name|equals
argument_list|(
literal|"/db/system/users.xml"
argument_list|)
condition|)
block|{
try|try
block|{
name|ConverterFrom1_0
operator|.
name|convert
argument_list|(
name|broker
operator|.
name|getSubject
argument_list|()
argument_list|,
name|broker
operator|.
name|getBrokerPool
argument_list|()
operator|.
name|getSecurityManager
argument_list|()
argument_list|,
name|document
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PermissionDeniedException
name|e
parameter_list|)
block|{
block|}
catch|catch
parameter_list|(
name|EXistException
name|e
parameter_list|)
block|{
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeCreateDocument
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|XmldbURI
name|uri
parameter_list|)
throws|throws
name|TriggerException
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterCreateDocument
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|DocumentImpl
name|document
parameter_list|)
throws|throws
name|TriggerException
block|{
name|checkForUpdates
argument_list|(
name|broker
argument_list|,
name|document
operator|.
name|getURI
argument_list|()
argument_list|,
name|document
argument_list|)
expr_stmt|;
name|XmldbURI
name|uri
init|=
name|document
operator|.
name|getCollection
argument_list|()
operator|.
name|getURI
argument_list|()
decl_stmt|;
if|if
condition|(
name|uri
operator|.
name|startsWith
argument_list|(
name|SecurityManager
operator|.
name|SECURITY_COLLETION_URI
argument_list|)
condition|)
try|try
block|{
name|broker
operator|.
name|getBrokerPool
argument_list|()
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|processPramatter
argument_list|(
name|broker
argument_list|,
name|document
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ConfigurationException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Configuration can't be proccessed ["
operator|+
name|document
operator|.
name|getURI
argument_list|()
operator|+
literal|"]"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeUpdateDocument
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|DocumentImpl
name|document
parameter_list|)
throws|throws
name|TriggerException
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterUpdateDocument
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|DocumentImpl
name|document
parameter_list|)
throws|throws
name|TriggerException
block|{
name|checkForUpdates
argument_list|(
name|broker
argument_list|,
name|document
operator|.
name|getURI
argument_list|()
argument_list|,
name|document
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeCopyDocument
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|DocumentImpl
name|document
parameter_list|,
name|XmldbURI
name|newUri
parameter_list|)
throws|throws
name|TriggerException
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterCopyDocument
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|DocumentImpl
name|document
parameter_list|,
name|XmldbURI
name|oldUri
parameter_list|)
throws|throws
name|TriggerException
block|{
name|checkForUpdates
argument_list|(
name|broker
argument_list|,
name|document
operator|.
name|getURI
argument_list|()
argument_list|,
name|document
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeMoveDocument
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|DocumentImpl
name|document
parameter_list|,
name|XmldbURI
name|newUri
parameter_list|)
throws|throws
name|TriggerException
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterMoveDocument
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|DocumentImpl
name|document
parameter_list|,
name|XmldbURI
name|oldUri
parameter_list|)
throws|throws
name|TriggerException
block|{
name|checkForUpdates
argument_list|(
name|broker
argument_list|,
name|document
operator|.
name|getURI
argument_list|()
argument_list|,
name|document
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeDeleteDocument
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|DocumentImpl
name|document
parameter_list|)
throws|throws
name|TriggerException
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterDeleteDocument
parameter_list|(
name|DBBroker
name|broker
parameter_list|,
name|Txn
name|transaction
parameter_list|,
name|XmldbURI
name|uri
parameter_list|)
throws|throws
name|TriggerException
block|{
name|Configuration
name|conf
init|=
name|Configurator
operator|.
name|getConfigurtion
argument_list|(
name|broker
operator|.
name|getBrokerPool
argument_list|()
argument_list|,
name|uri
argument_list|)
decl_stmt|;
if|if
condition|(
name|conf
operator|!=
literal|null
condition|)
block|{
name|Configurator
operator|.
name|unregister
argument_list|(
name|conf
argument_list|)
expr_stmt|;
empty_stmt|;
comment|//XXX: inform object that configuration was deleted
block|}
block|}
block|}
end_class

end_unit

