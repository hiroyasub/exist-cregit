begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|cocoon
package|;
end_package

begin_comment
comment|// avalon classes
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avalon
operator|.
name|framework
operator|.
name|activity
operator|.
name|Startable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avalon
operator|.
name|framework
operator|.
name|context
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avalon
operator|.
name|framework
operator|.
name|context
operator|.
name|ContextException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avalon
operator|.
name|framework
operator|.
name|context
operator|.
name|Contextualizable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avalon
operator|.
name|framework
operator|.
name|logger
operator|.
name|AbstractLoggable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avalon
operator|.
name|framework
operator|.
name|parameters
operator|.
name|Parameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avalon
operator|.
name|framework
operator|.
name|parameters
operator|.
name|Parameterizable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avalon
operator|.
name|framework
operator|.
name|thread
operator|.
name|ThreadSafe
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cocoon
operator|.
name|Constants
import|;
end_import

begin_comment
comment|// eXist classes
end_comment

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|BrokerPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|EXistException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|http
operator|.
name|HttpServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xmlrpc
operator|.
name|RpcServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlrpc
operator|.
name|XmlRpc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlrpc
operator|.
name|WebServer
import|;
end_import

begin_comment
comment|// other java classes
end_comment

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_comment
comment|/**  *  Ãœberschrift: eXist XML-Datenbankerweitrung um Lokle Interfaces Beschreibung:  *  Copyright: Copyright (c) 2002 Organisation: C-Ware IT-Service  *  *@author     Christofer Dutz  *@created    14. Februar 2002  *@version    1.0  */
end_comment

begin_class
specifier|public
class|class
name|ExistImpl
extends|extends
name|AbstractLoggable
implements|implements
name|Exist
implements|,
name|Parameterizable
implements|,
name|Contextualizable
implements|,
name|ThreadSafe
implements|,
name|Runnable
implements|,
name|Startable
block|{
specifier|private
name|int
name|httpPort
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|rpcPort
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|threads
init|=
literal|5
decl_stmt|;
specifier|private
name|String
name|home
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.dir"
argument_list|)
decl_stmt|;
comment|/**      *  Initialize the ServerImpl. A few options can be used :      *<UL>      *<LI> http-port = port where the http-server is listening</LI>      *<LI> rpc-port = port where the rpc-server is listening</LI>      *</UL>      *      *      *@param  params  Description of the Parameter      */
specifier|public
name|void
name|parameterize
parameter_list|(
name|Parameters
name|params
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"Parameterize ExistImpl"
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|httpPort
operator|=
name|params
operator|.
name|getParameterAsInteger
argument_list|(
literal|"http-port"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|this
operator|.
name|rpcPort
operator|=
name|params
operator|.
name|getParameterAsInteger
argument_list|(
literal|"rpc-port"
argument_list|,
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"Configure ExistImpl"
operator|+
literal|" with "
operator|+
operator|(
operator|(
name|this
operator|.
name|httpPort
operator|!=
literal|0
operator|)
condition|?
literal|"http-port : "
operator|+
name|this
operator|.
name|httpPort
else|:
literal|"disabed http server"
operator|)
operator|+
literal|" with "
operator|+
operator|(
operator|(
name|this
operator|.
name|rpcPort
operator|!=
literal|0
operator|)
condition|?
literal|"rpc-port : "
operator|+
name|this
operator|.
name|rpcPort
else|:
literal|"disabed rpc server"
operator|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      *  Contextualize this class      *      *@param  context               Description of the Parameter      *@exception  ContextException  Description of the Exception      */
specifier|public
name|void
name|contextualize
parameter_list|(
name|Context
name|context
parameter_list|)
throws|throws
name|ContextException
block|{
comment|//if (this.getLogger().isDebugEnabled()) {
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"Contextualize ExistImpl"
argument_list|)
expr_stmt|;
comment|//}
name|org
operator|.
name|apache
operator|.
name|cocoon
operator|.
name|environment
operator|.
name|Context
name|ctx
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|cocoon
operator|.
name|environment
operator|.
name|Context
operator|)
name|context
operator|.
name|get
argument_list|(
name|Constants
operator|.
name|CONTEXT_ENVIRONMENT_CONTEXT
argument_list|)
decl_stmt|;
try|try
block|{
name|String
name|dbPath
init|=
operator|new
name|File
argument_list|(
name|ctx
operator|.
name|getRealPath
argument_list|(
literal|"/WEB-INF/xmldb"
argument_list|)
argument_list|)
operator|.
name|getCanonicalPath
argument_list|()
decl_stmt|;
name|this
operator|.
name|home
operator|=
name|dbPath
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"database is : "
operator|+
name|dbPath
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|MalformedURLException
name|mue
parameter_list|)
block|{
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"MalformedURLException - Could not get database directory "
argument_list|,
name|mue
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"IOException - Could not get database directory "
argument_list|,
name|ioe
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      *  Start the server      */
specifier|public
name|void
name|start
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"Start ExistImpl"
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|String
name|pathSep
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"file.separator"
argument_list|,
literal|"/"
argument_list|)
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"Creating Configuration"
argument_list|)
expr_stmt|;
block|}
name|Configuration
name|config
init|=
operator|new
name|Configuration
argument_list|(
literal|"conf.xml"
argument_list|,
name|home
argument_list|)
decl_stmt|;
comment|// eventualy create the data-directory
name|File
name|dataDir
init|=
operator|new
name|File
argument_list|(
name|home
operator|+
name|pathSep
operator|+
literal|"data"
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|dataDir
operator|.
name|exists
argument_list|()
operator|||
operator|!
name|dataDir
operator|.
name|isDirectory
argument_list|()
condition|)
block|{
if|if
condition|(
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"Creating Data-Directory"
argument_list|)
expr_stmt|;
block|}
name|dataDir
operator|.
name|mkdir
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"Configuring Brokerpool"
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|BrokerPool
operator|.
name|configure
argument_list|(
literal|1
argument_list|,
name|threads
argument_list|,
name|config
argument_list|)
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"Brokerpool up and running"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|httpPort
operator|!=
literal|0
condition|)
block|{
comment|// setup the http-server
try|try
block|{
name|HttpServer
name|http
init|=
operator|new
name|HttpServer
argument_list|(
name|config
argument_list|,
name|httpPort
argument_list|,
literal|1
argument_list|,
name|threads
argument_list|)
decl_stmt|;
name|http
operator|.
name|start
argument_list|()
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"Exist HTTP-Server started"
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|EXistException
name|ee
parameter_list|)
block|{
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"ExistException - Error starting HTTP-Server "
argument_list|,
name|ee
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|this
operator|.
name|rpcPort
operator|!=
literal|0
condition|)
block|{
comment|// setup the rpc-server
try|try
block|{
name|XmlRpc
operator|.
name|setEncoding
argument_list|(
literal|"UTF-8"
argument_list|)
expr_stmt|;
name|WebServer
name|webServer
init|=
operator|new
name|WebServer
argument_list|(
name|rpcPort
argument_list|)
decl_stmt|;
name|RpcServer
name|rpcserv
init|=
operator|new
name|RpcServer
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|webServer
operator|.
name|addHandler
argument_list|(
literal|"$default"
argument_list|,
name|rpcserv
argument_list|)
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"Exist RPC-Server started"
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"IOException - Error starting RPC-Server "
argument_list|,
name|ioe
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"Exist started"
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|EXistException
name|ee
parameter_list|)
block|{
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"ExistException - Error initializing BrokerPool "
argument_list|,
name|ee
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"Exception - Error starting Exist "
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      *  Stop the server      */
specifier|public
name|void
name|stop
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"Stop ExistImpl"
argument_list|)
expr_stmt|;
block|}
try|try
block|{
if|if
condition|(
name|BrokerPool
operator|.
name|getInstance
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|BrokerPool
operator|.
name|getInstance
argument_list|()
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|EXistException
name|ee
parameter_list|)
block|{
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|error
argument_list|(
literal|"ExistException - Error stopping Exist "
argument_list|,
name|ee
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      *  Main processing method for the ServerImpl object      */
specifier|public
name|void
name|run
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|this
operator|.
name|getLogger
argument_list|()
operator|.
name|debug
argument_list|(
literal|"Run ExistImpl"
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
comment|/**      *  The main program for the ExistImpl class      *      *@param  args  The command line arguments      */
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
block|}
block|}
end_class

end_unit

