begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|cocoon
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avalon
operator|.
name|framework
operator|.
name|parameters
operator|.
name|Parameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avalon
operator|.
name|framework
operator|.
name|thread
operator|.
name|ThreadSafe
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cocoon
operator|.
name|acting
operator|.
name|ServiceableAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cocoon
operator|.
name|environment
operator|.
name|ObjectModelHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cocoon
operator|.
name|environment
operator|.
name|Redirector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cocoon
operator|.
name|environment
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cocoon
operator|.
name|environment
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cocoon
operator|.
name|environment
operator|.
name|SourceResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|XPathException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|xquery
operator|.
name|value
operator|.
name|Item
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|DatabaseManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_comment
comment|/**  *  Cocoon action to authenticate a user against the database.  *   * If authentication succeeds, user and password will be stored into  * the current session.  *  * @author     Wolfgang Meier<wolfgang@exist-db.org>  */
end_comment

begin_class
specifier|public
class|class
name|XMLDBSessionLoginAction
extends|extends
name|ServiceableAction
implements|implements
name|ThreadSafe
block|{
specifier|public
name|Map
name|act
parameter_list|(
name|Redirector
name|redirector
parameter_list|,
name|SourceResolver
name|resolver
parameter_list|,
name|Map
name|objectModel
parameter_list|,
name|String
name|source
parameter_list|,
name|Parameters
name|param
parameter_list|)
throws|throws
name|Exception
block|{
name|Request
name|request
init|=
name|ObjectModelHelper
operator|.
name|getRequest
argument_list|(
name|objectModel
argument_list|)
decl_stmt|;
if|if
condition|(
name|request
operator|==
literal|null
condition|)
block|{
name|getLogger
argument_list|()
operator|.
name|error
argument_list|(
literal|"XMLDBSessionLoginAction: no request object!"
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
name|Map
name|map
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
name|String
name|user
init|=
literal|null
decl_stmt|;
name|String
name|passwd
init|=
literal|null
decl_stmt|;
comment|// check for valid session
name|Session
name|session
init|=
name|request
operator|.
name|getSession
argument_list|(
literal|false
argument_list|)
decl_stmt|;
if|if
condition|(
name|session
operator|==
literal|null
operator|||
operator|(
operator|!
name|request
operator|.
name|isRequestedSessionIdValid
argument_list|()
operator|)
condition|)
comment|// create a new session
name|session
operator|=
name|request
operator|.
name|getSession
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// check user account and store it to the session
if|if
condition|(
name|session
operator|.
name|getAttribute
argument_list|(
literal|"user"
argument_list|)
operator|==
literal|null
condition|)
block|{
comment|// try to read parameters from sitemap
name|user
operator|=
name|param
operator|.
name|getParameter
argument_list|(
literal|"user"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|passwd
operator|=
name|param
operator|.
name|getParameter
argument_list|(
literal|"password"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// else try to read parameters from request
if|if
condition|(
name|user
operator|==
literal|null
condition|)
block|{
name|user
operator|=
name|request
operator|.
name|getParameter
argument_list|(
literal|"user"
argument_list|)
expr_stmt|;
name|passwd
operator|=
name|request
operator|.
name|getParameter
argument_list|(
literal|"password"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|user
operator|==
literal|null
condition|)
block|{
name|getLogger
argument_list|()
operator|.
name|error
argument_list|(
literal|"XMLDBSessionLoginAction: no parameters!"
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
if|if
condition|(
name|source
operator|==
literal|null
condition|)
block|{
name|getLogger
argument_list|()
operator|.
name|error
argument_list|(
literal|"XMLDBSessionLoginAction: no source specified!"
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
name|getLogger
argument_list|()
operator|.
name|info
argument_list|(
literal|"trying to login user "
operator|+
name|user
argument_list|)
expr_stmt|;
comment|// try to access collection specified in source
try|try
block|{
name|Collection
name|collection
init|=
name|DatabaseManager
operator|.
name|getCollection
argument_list|(
name|source
argument_list|,
name|user
argument_list|,
name|passwd
argument_list|)
decl_stmt|;
block|}
catch|catch
parameter_list|(
name|XMLDBException
name|e
parameter_list|)
block|{
name|getLogger
argument_list|()
operator|.
name|error
argument_list|(
literal|"login denied: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
comment|// store user info to session
name|session
operator|.
name|setAttribute
argument_list|(
literal|"user"
argument_list|,
name|user
argument_list|)
expr_stmt|;
name|session
operator|.
name|setAttribute
argument_list|(
literal|"password"
argument_list|,
name|passwd
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// retrieve user info from session
name|user
operator|=
name|getSessionAttribute
argument_list|(
name|session
argument_list|,
literal|"user"
argument_list|)
expr_stmt|;
name|passwd
operator|=
name|getSessionAttribute
argument_list|(
name|session
argument_list|,
literal|"password"
argument_list|)
expr_stmt|;
if|if
condition|(
name|user
operator|==
literal|null
condition|)
return|return
literal|null
return|;
block|}
comment|// return data to the sitemap
name|map
operator|.
name|put
argument_list|(
literal|"user"
argument_list|,
name|user
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"password"
argument_list|,
name|passwd
argument_list|)
expr_stmt|;
return|return
name|map
return|;
block|}
specifier|private
name|String
name|getSessionAttribute
parameter_list|(
name|Session
name|session
parameter_list|,
name|String
name|attribute
parameter_list|)
block|{
name|Object
name|obj
init|=
name|session
operator|.
name|getAttribute
argument_list|(
name|attribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
return|return
literal|null
return|;
if|if
condition|(
name|obj
operator|instanceof
name|Item
condition|)
try|try
block|{
return|return
operator|(
operator|(
name|Item
operator|)
name|obj
operator|)
operator|.
name|getStringValue
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|XPathException
name|e
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
return|return
name|obj
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

