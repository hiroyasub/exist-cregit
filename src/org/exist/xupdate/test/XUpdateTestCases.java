begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xupdate
operator|.
name|test
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_comment
comment|/**  * @author berlinge-to  *  * To change this generated comment edit the template variable "typecomment":  * Window>Preferences>Java>Templates.  * To enable and disable the creation of type comments go to  * Window>Preferences>Java>Code Generation.  */
end_comment

begin_class
specifier|public
class|class
name|XUpdateTestCases
extends|extends
name|TestCase
block|{
specifier|private
name|XUpdateTest
name|test
init|=
literal|null
decl_stmt|;
specifier|public
name|XUpdateTestCases
parameter_list|(
name|String
name|name
parameter_list|,
name|XUpdateTest
name|test
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|this
operator|.
name|test
operator|=
name|test
expr_stmt|;
block|}
comment|// TestCases Start
specifier|public
name|void
name|append
parameter_list|()
throws|throws
name|Exception
block|{
name|test
operator|.
name|doTest
argument_list|(
literal|"append"
argument_list|,
literal|"address.xml"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|insertafter
parameter_list|()
throws|throws
name|Exception
block|{
name|test
operator|.
name|doTest
argument_list|(
literal|"insertafter"
argument_list|,
literal|"address.xml"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|insertbefore
parameter_list|()
throws|throws
name|Exception
block|{
name|test
operator|.
name|doTest
argument_list|(
literal|"insertbefore"
argument_list|,
literal|"address.xml"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|remove
parameter_list|()
throws|throws
name|Exception
block|{
name|test
operator|.
name|doTest
argument_list|(
literal|"remove"
argument_list|,
literal|"address.xml"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|update
parameter_list|()
throws|throws
name|Exception
block|{
name|test
operator|.
name|doTest
argument_list|(
literal|"update"
argument_list|,
literal|"address.xml"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|appendAttribute
parameter_list|()
throws|throws
name|Exception
block|{
name|test
operator|.
name|doTest
argument_list|(
literal|"append_attribute"
argument_list|,
literal|"address.xml"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|appendChild
parameter_list|()
throws|throws
name|Exception
block|{
name|test
operator|.
name|doTest
argument_list|(
literal|"append_child"
argument_list|,
literal|"address.xml"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|insertafter_big
parameter_list|()
throws|throws
name|Exception
block|{
name|test
operator|.
name|doTest
argument_list|(
literal|"insertafter_big"
argument_list|,
literal|"address_big.xml"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|conditional
parameter_list|()
throws|throws
name|Exception
block|{
name|test
operator|.
name|doTest
argument_list|(
literal|"conditional"
argument_list|,
literal|"address.xml"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|variables
parameter_list|()
throws|throws
name|Exception
block|{
name|test
operator|.
name|doTest
argument_list|(
literal|"variables"
argument_list|,
literal|"address.xml"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|replace
parameter_list|()
throws|throws
name|Exception
block|{
name|test
operator|.
name|doTest
argument_list|(
literal|"replace"
argument_list|,
literal|"address.xml"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|whitespace
parameter_list|()
throws|throws
name|Exception
block|{
name|test
operator|.
name|doTest
argument_list|(
literal|"whitespace"
argument_list|,
literal|"address.xml"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|namespaces
parameter_list|()
throws|throws
name|Exception
block|{
name|test
operator|.
name|doTest
argument_list|(
literal|"namespaces"
argument_list|,
literal|"namespaces.xml"
argument_list|)
expr_stmt|;
block|}
comment|//<add a new TestCase Method here>
comment|// TestCases End
block|}
end_class

end_unit

