begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xupdate
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|EXistException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|DocumentImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|DocumentSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|NodeImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Permission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|PermissionDeniedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|BrokerPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|XMLUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_comment
comment|/**  * Append.java  *   * @author Wolfgang Meier  */
end_comment

begin_class
specifier|public
class|class
name|Append
extends|extends
name|Modification
block|{
specifier|private
specifier|final
specifier|static
name|Logger
name|LOG
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|Append
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/** 	 * Constructor for Append. 	 * @param selectStmt 	 */
specifier|public
name|Append
parameter_list|(
name|BrokerPool
name|pool
parameter_list|,
name|User
name|user
parameter_list|,
name|String
name|selectStmt
parameter_list|)
block|{
name|super
argument_list|(
name|pool
argument_list|,
name|user
argument_list|,
name|selectStmt
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @see org.exist.xupdate.Modification#process() 	 */
specifier|public
name|long
name|process
parameter_list|(
name|DocumentSet
name|docs
parameter_list|)
throws|throws
name|PermissionDeniedException
throws|,
name|EXistException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|XMLUtil
operator|.
name|dump
argument_list|(
name|content
argument_list|)
argument_list|)
expr_stmt|;
name|ArrayList
name|qr
init|=
name|select
argument_list|(
name|docs
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"select found "
operator|+
name|qr
operator|.
name|size
argument_list|()
operator|+
literal|" nodes for append"
argument_list|)
expr_stmt|;
name|IndexListener
name|listener
init|=
operator|new
name|IndexListener
argument_list|(
name|qr
argument_list|)
decl_stmt|;
name|NodeImpl
name|node
decl_stmt|;
name|DocumentImpl
name|doc
decl_stmt|,
name|prevDoc
init|=
literal|null
decl_stmt|;
name|NodeList
name|children
init|=
name|content
operator|.
name|getChildNodes
argument_list|()
decl_stmt|;
name|int
name|len
init|=
name|children
operator|.
name|getLength
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"found "
operator|+
name|len
operator|+
literal|" nodes to append"
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|qr
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|node
operator|=
operator|(
name|NodeImpl
operator|)
name|i
operator|.
name|next
argument_list|()
expr_stmt|;
name|doc
operator|=
operator|(
name|DocumentImpl
operator|)
name|node
operator|.
name|getOwnerDocument
argument_list|()
expr_stmt|;
name|doc
operator|.
name|setIndexListener
argument_list|(
name|listener
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|doc
operator|.
name|getCollection
argument_list|()
operator|.
name|getPermissions
argument_list|()
operator|.
name|validate
argument_list|(
name|user
argument_list|,
name|Permission
operator|.
name|UPDATE
argument_list|)
condition|)
throw|throw
operator|new
name|PermissionDeniedException
argument_list|(
literal|"write access to collection denied; user="
operator|+
name|user
operator|.
name|getName
argument_list|()
argument_list|)
throw|;
if|if
condition|(
operator|!
name|doc
operator|.
name|getPermissions
argument_list|()
operator|.
name|validate
argument_list|(
name|user
argument_list|,
name|Permission
operator|.
name|UPDATE
argument_list|)
condition|)
throw|throw
operator|new
name|PermissionDeniedException
argument_list|(
literal|"permission to remove document denied"
argument_list|)
throw|;
name|node
operator|.
name|appendChildren
argument_list|(
name|children
argument_list|)
expr_stmt|;
name|doc
operator|.
name|clearIndexListener
argument_list|()
expr_stmt|;
name|prevDoc
operator|=
name|doc
expr_stmt|;
block|}
return|return
name|qr
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"append"
return|;
block|}
block|}
end_class

end_unit

