begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-03 Wolfgang M. Meier  *  wolfgang@exist-db.org  *  http://exist.sourceforge.net  *    *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *    *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *    *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *    *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|ant
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|BuildException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|Task
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|DatabaseManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Database
import|;
end_import

begin_comment
comment|/**  * @author wolf  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractXMLDBTask
extends|extends
name|Task
block|{
specifier|protected
name|String
name|driver
init|=
literal|"org.exist.xmldb.DatabaseImpl"
decl_stmt|;
specifier|protected
name|String
name|user
init|=
literal|"guest"
decl_stmt|;
specifier|protected
name|String
name|password
init|=
literal|"guest"
decl_stmt|;
specifier|protected
name|String
name|uri
init|=
literal|null
decl_stmt|;
specifier|protected
name|boolean
name|createDatabase
init|=
literal|false
decl_stmt|;
specifier|protected
name|boolean
name|failonerror
init|=
literal|true
decl_stmt|;
comment|/**    * @param driver    */
specifier|public
name|void
name|setDriver
parameter_list|(
name|String
name|driver
parameter_list|)
block|{
name|this
operator|.
name|driver
operator|=
name|driver
expr_stmt|;
block|}
comment|/**    * @param password    */
specifier|public
name|void
name|setPassword
parameter_list|(
name|String
name|password
parameter_list|)
block|{
name|this
operator|.
name|password
operator|=
name|password
expr_stmt|;
block|}
comment|/**    * @param user    */
specifier|public
name|void
name|setUser
parameter_list|(
name|String
name|user
parameter_list|)
block|{
name|this
operator|.
name|user
operator|=
name|user
expr_stmt|;
block|}
comment|/**    * @param uri    */
specifier|public
name|void
name|setUri
parameter_list|(
name|String
name|uri
parameter_list|)
block|{
name|this
operator|.
name|uri
operator|=
name|uri
expr_stmt|;
block|}
comment|/**    * @param create    */
specifier|public
name|void
name|setInitdb
parameter_list|(
name|boolean
name|create
parameter_list|)
block|{
name|this
operator|.
name|createDatabase
operator|=
name|create
expr_stmt|;
block|}
specifier|public
name|void
name|setFailonerror
parameter_list|(
name|boolean
name|failonerror
parameter_list|)
block|{
name|this
operator|.
name|failonerror
operator|=
name|failonerror
expr_stmt|;
block|}
specifier|protected
name|void
name|registerDatabase
parameter_list|()
throws|throws
name|BuildException
block|{
try|try
block|{
name|log
argument_list|(
literal|"Registering database"
argument_list|,
name|Project
operator|.
name|MSG_DEBUG
argument_list|)
expr_stmt|;
name|Database
name|dbs
index|[]
init|=
name|DatabaseManager
operator|.
name|getDatabases
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|dbs
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|dbs
index|[
name|i
index|]
operator|.
name|acceptsURI
argument_list|(
name|uri
argument_list|)
condition|)
block|{
name|log
argument_list|(
literal|"Database driver already registered."
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
name|Class
name|clazz
init|=
name|Class
operator|.
name|forName
argument_list|(
name|driver
argument_list|)
decl_stmt|;
name|Database
name|database
init|=
operator|(
name|Database
operator|)
name|clazz
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|database
operator|.
name|setProperty
argument_list|(
literal|"create-database"
argument_list|,
name|createDatabase
condition|?
literal|"true"
else|:
literal|"false"
argument_list|)
expr_stmt|;
name|DatabaseManager
operator|.
name|registerDatabase
argument_list|(
name|database
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|BuildException
argument_list|(
literal|"failed to initialize XMLDB database driver"
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

