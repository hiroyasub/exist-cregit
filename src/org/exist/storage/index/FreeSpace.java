begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2000-04,  Wolfgang M. Meier (wolfgang@exist-db.org)  *  *  This library is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Library General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This library is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Library General Public License for more details.  *  *  You should have received a copy of the GNU General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.  *   *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|index
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|btree
operator|.
name|Paged
operator|.
name|Page
import|;
end_import

begin_comment
comment|/**  * Used to track the available amount of free space in a data page.  *   * @see FreeList  * @author wolf  */
end_comment

begin_class
specifier|public
class|class
name|FreeSpace
block|{
specifier|protected
name|int
name|free
init|=
literal|0
decl_stmt|;
specifier|protected
name|long
name|page
init|=
name|Page
operator|.
name|NO_PAGE
decl_stmt|;
specifier|protected
name|FreeSpace
name|next
init|=
literal|null
decl_stmt|;
specifier|protected
name|FreeSpace
name|previous
init|=
literal|null
decl_stmt|;
specifier|public
name|FreeSpace
parameter_list|(
name|long
name|pageNum
parameter_list|,
name|int
name|space
parameter_list|)
block|{
name|page
operator|=
name|pageNum
expr_stmt|;
name|free
operator|=
name|space
expr_stmt|;
block|}
specifier|public
name|int
name|compareTo
parameter_list|(
name|FreeSpace
name|other
parameter_list|)
block|{
if|if
condition|(
name|free
operator|<
name|other
operator|.
name|free
condition|)
return|return
operator|-
literal|1
return|;
if|else if
condition|(
name|free
operator|>
name|other
operator|.
name|free
condition|)
return|return
literal|1
return|;
else|else
return|return
literal|0
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|FreeSpace
name|other
parameter_list|)
block|{
return|return
name|page
operator|==
name|other
operator|.
name|page
return|;
block|}
comment|/**      * Returns the amount of unused space in the page (in bytes).      *       * @return      */
specifier|public
name|int
name|getFree
parameter_list|()
block|{
return|return
name|free
return|;
block|}
comment|/**      * The unique page number.      *       * @return      */
specifier|public
name|long
name|getPage
parameter_list|()
block|{
return|return
name|page
return|;
block|}
specifier|public
name|void
name|setFree
parameter_list|(
name|int
name|space
parameter_list|)
block|{
name|free
operator|=
name|space
expr_stmt|;
block|}
block|}
end_class

end_unit

