begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|storage
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|EXistException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|sync
operator|.
name|Sync
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Stack
import|;
end_import

begin_class
specifier|public
class|class
name|SystemTaskManager
block|{
specifier|private
specifier|final
specifier|static
name|Logger
name|LOG
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|SystemTaskManager
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/** 	 * The pending system maintenance tasks of the database instance. 	 */
specifier|private
specifier|final
name|Stack
argument_list|<
name|SystemTask
argument_list|>
name|waitingSystemTasks
init|=
operator|new
name|Stack
argument_list|<
name|SystemTask
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|BrokerPool
name|pool
decl_stmt|;
specifier|public
name|SystemTaskManager
parameter_list|(
name|BrokerPool
name|pool
parameter_list|)
block|{
name|this
operator|.
name|pool
operator|=
name|pool
expr_stmt|;
block|}
specifier|public
name|void
name|triggerSystemTask
parameter_list|(
name|SystemTask
name|task
parameter_list|)
block|{
synchronized|synchronized
init|(
name|waitingSystemTasks
init|)
block|{
name|waitingSystemTasks
operator|.
name|push
argument_list|(
name|task
argument_list|)
expr_stmt|;
name|pool
operator|.
name|getTransactionManager
argument_list|()
operator|.
name|processSystemTasks
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|processTasks
parameter_list|()
block|{
comment|//dont run the task if we are shutting down
if|if
condition|(
name|pool
operator|.
name|isShuttingDown
argument_list|()
condition|)
block|{
return|return;
block|}
synchronized|synchronized
init|(
name|waitingSystemTasks
init|)
block|{
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
name|Subject
name|oldUser
init|=
literal|null
decl_stmt|;
try|try
block|{
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|oldUser
operator|=
name|broker
operator|.
name|getUser
argument_list|()
expr_stmt|;
name|broker
operator|.
name|setUser
argument_list|(
name|pool
operator|.
name|getSecurityManager
argument_list|()
operator|.
name|getSystemSubject
argument_list|()
argument_list|)
expr_stmt|;
while|while
condition|(
operator|!
name|waitingSystemTasks
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|pool
operator|.
name|sync
argument_list|(
name|broker
argument_list|,
name|Sync
operator|.
name|MAJOR_SYNC
argument_list|)
expr_stmt|;
name|SystemTask
name|task
init|=
name|waitingSystemTasks
operator|.
name|pop
argument_list|()
decl_stmt|;
name|runSystemTask
argument_list|(
name|task
argument_list|,
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"System maintenance task reported error: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|oldUser
operator|!=
literal|null
condition|)
block|{
name|broker
operator|.
name|setUser
argument_list|(
name|oldUser
argument_list|)
expr_stmt|;
block|}
name|pool
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|runSystemTask
parameter_list|(
name|SystemTask
name|task
parameter_list|,
name|DBBroker
name|broker
parameter_list|)
throws|throws
name|EXistException
block|{
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
name|LOG
operator|.
name|debug
argument_list|(
literal|"Running system maintenance task: "
operator|+
name|task
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|task
operator|.
name|execute
argument_list|(
name|broker
argument_list|)
expr_stmt|;
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
name|LOG
operator|.
name|debug
argument_list|(
literal|"System task completed."
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|initialize
parameter_list|()
block|{
name|waitingSystemTasks
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|shutdown
parameter_list|()
block|{
synchronized|synchronized
init|(
name|waitingSystemTasks
init|)
block|{
name|waitingSystemTasks
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

