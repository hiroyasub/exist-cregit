begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2015 The eXist Project  *  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public License  * along with this program; if not, write to the Free Software Foundation  * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|storage
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|StandardCopyOption
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|journal
operator|.
name|LogException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|txn
operator|.
name|Txn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|crypto
operator|.
name|digest
operator|.
name|MessageDigest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|crypto
operator|.
name|digest
operator|.
name|StreamableDigest
import|;
end_import

begin_comment
comment|/**  * @author Adam Retter<adam@evolvedbinary.com>  *  * Serialized binary format is as follows:  *  * [walDataPathLen, walDataPath, walDataDigestType, walDataDigest, createPathLen, createPath]  *  * walDataPathLen:          2 bytes, unsigned short  * walDataPath:             var length bytes, UTF-8 encoded java.lang.String  * walDataDigestType:       1 byte  * walDataDigest:           n-bytes, where n is deteremined by {@code walDataDigestType}  * createPathLen:           2 bytes, unsigned short  * createPath:              var length bytes, UTF-8 encoded java.lang.String  */
end_comment

begin_class
specifier|public
class|class
name|CreateBinaryLoggable
extends|extends
name|AbstractBinaryLoggable
block|{
specifier|private
name|byte
index|[]
name|walDataPath
decl_stmt|;
comment|// the data to use for the file to be created
specifier|private
name|MessageDigest
name|walDataDigest
decl_stmt|;
specifier|private
name|byte
index|[]
name|createPath
decl_stmt|;
comment|// the file to be created
comment|/**      * Creates a new instance of CreateBinaryLoggable.      *      * @param broker The database broker.      * @param txn The database transaction.      * @param walData A copy of the data that was stored for {@code create} file before it was actually created (i.e. the new value).      * @param walDataDigest digest of the {@code walData} content      * @param create The file that is to be created in the database.      */
specifier|public
name|CreateBinaryLoggable
parameter_list|(
specifier|final
name|DBBroker
name|broker
parameter_list|,
specifier|final
name|Txn
name|txn
parameter_list|,
specifier|final
name|Path
name|walData
parameter_list|,
specifier|final
name|MessageDigest
name|walDataDigest
parameter_list|,
specifier|final
name|Path
name|create
parameter_list|)
block|{
name|super
argument_list|(
name|NativeBroker
operator|.
name|LOG_CREATE_BINARY
argument_list|,
name|txn
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|walDataPath
operator|=
name|getPathData
argument_list|(
name|walData
argument_list|)
expr_stmt|;
name|checkPathLen
argument_list|(
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|,
literal|"walDataPath"
argument_list|,
name|walDataPath
argument_list|)
expr_stmt|;
name|this
operator|.
name|walDataDigest
operator|=
name|walDataDigest
expr_stmt|;
name|this
operator|.
name|createPath
operator|=
name|getPathData
argument_list|(
name|create
argument_list|)
expr_stmt|;
name|checkPathLen
argument_list|(
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|,
literal|"createPath"
argument_list|,
name|createPath
argument_list|)
expr_stmt|;
block|}
comment|/**      * Creates a new instance of CreateBinaryLoggable.      *      * @param broker The database broker.      * @param transactionId The database transaction id.      */
specifier|public
name|CreateBinaryLoggable
parameter_list|(
specifier|final
name|DBBroker
name|broker
parameter_list|,
specifier|final
name|long
name|transactionId
parameter_list|)
block|{
name|super
argument_list|(
name|NativeBroker
operator|.
name|LOG_CREATE_BINARY
argument_list|,
name|transactionId
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getLogSize
parameter_list|()
block|{
return|return
literal|2
operator|+
name|walDataPath
operator|.
name|length
operator|+
literal|1
operator|+
name|walDataDigest
operator|.
name|getDigestType
argument_list|()
operator|.
name|getDigestLengthBytes
argument_list|()
operator|+
literal|2
operator|+
name|createPath
operator|.
name|length
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
specifier|final
name|ByteBuffer
name|out
parameter_list|)
block|{
name|out
operator|.
name|putShort
argument_list|(
name|asUnsignedShort
argument_list|(
name|walDataPath
operator|.
name|length
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|put
argument_list|(
name|walDataPath
argument_list|)
expr_stmt|;
name|writeMessageDigest
argument_list|(
name|out
argument_list|,
name|walDataDigest
argument_list|)
expr_stmt|;
name|out
operator|.
name|putShort
argument_list|(
name|asUnsignedShort
argument_list|(
name|createPath
operator|.
name|length
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|put
argument_list|(
name|createPath
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|read
parameter_list|(
specifier|final
name|ByteBuffer
name|in
parameter_list|)
block|{
specifier|final
name|int
name|walDataPathLen
init|=
name|asSignedInt
argument_list|(
name|in
operator|.
name|getShort
argument_list|()
argument_list|)
decl_stmt|;
name|this
operator|.
name|walDataPath
operator|=
operator|new
name|byte
index|[
name|walDataPathLen
index|]
expr_stmt|;
name|in
operator|.
name|get
argument_list|(
name|walDataPath
argument_list|)
expr_stmt|;
name|this
operator|.
name|walDataDigest
operator|=
name|readMessageDigest
argument_list|(
name|in
argument_list|)
expr_stmt|;
specifier|final
name|int
name|createPathLen
init|=
name|asSignedInt
argument_list|(
name|in
operator|.
name|getShort
argument_list|()
argument_list|)
decl_stmt|;
name|this
operator|.
name|createPath
operator|=
operator|new
name|byte
index|[
name|createPathLen
index|]
expr_stmt|;
name|in
operator|.
name|get
argument_list|(
name|createPath
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|redo
parameter_list|()
throws|throws
name|LogException
block|{
comment|//we need to re-copy the data from the walDataPath file to the createPath file
specifier|final
name|Path
name|walData
init|=
name|getPath
argument_list|(
name|walDataPath
argument_list|)
decl_stmt|;
specifier|final
name|Path
name|create
init|=
name|getPath
argument_list|(
name|createPath
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|Files
operator|.
name|exists
argument_list|(
name|walData
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|LogException
argument_list|(
literal|"Cannot redo creation of binary resource: "
operator|+
name|create
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|", missing write ahead data: "
operator|+
name|walData
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
try|try
block|{
comment|// ensure the integrity of the walData file
specifier|final
name|StreamableDigest
name|walDataStreamableDigest
init|=
name|walDataDigest
operator|.
name|getDigestType
argument_list|()
operator|.
name|newStreamableDigest
argument_list|()
decl_stmt|;
name|FileUtils
operator|.
name|digest
argument_list|(
name|walData
argument_list|,
name|walDataStreamableDigest
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|Arrays
operator|.
name|equals
argument_list|(
name|walDataStreamableDigest
operator|.
name|getMessageDigest
argument_list|()
argument_list|,
name|walDataDigest
operator|.
name|getValue
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|LogException
argument_list|(
literal|"Cannot redo creation of binary resource: "
operator|+
name|create
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|" from "
operator|+
name|walData
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|", digest of walData file is invalid"
argument_list|)
throw|;
block|}
comment|// perform the redo - copy
name|Files
operator|.
name|copy
argument_list|(
name|walData
argument_list|,
name|create
argument_list|,
name|StandardCopyOption
operator|.
name|REPLACE_EXISTING
argument_list|)
expr_stmt|;
comment|// ensure the integrity of the copy
name|walDataStreamableDigest
operator|.
name|reset
argument_list|()
expr_stmt|;
name|FileUtils
operator|.
name|digest
argument_list|(
name|create
argument_list|,
name|walDataStreamableDigest
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|Arrays
operator|.
name|equals
argument_list|(
name|walDataStreamableDigest
operator|.
name|getMessageDigest
argument_list|()
argument_list|,
name|walDataDigest
operator|.
name|getValue
argument_list|()
argument_list|)
condition|)
block|{
name|FileUtils
operator|.
name|deleteQuietly
argument_list|(
name|create
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|LogException
argument_list|(
literal|"Cannot redo creation of binary resource: "
operator|+
name|create
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|" from "
operator|+
name|walData
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|", checksum of new create file is invalid"
argument_list|)
throw|;
block|}
block|}
catch|catch
parameter_list|(
specifier|final
name|IOException
name|ioe
parameter_list|)
block|{
throw|throw
operator|new
name|LogException
argument_list|(
literal|"Cannot redo creation of binary resource: "
operator|+
name|create
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|ioe
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|undo
parameter_list|()
throws|throws
name|LogException
block|{
comment|// we need to delete the createPath file
specifier|final
name|Path
name|walData
init|=
name|getPath
argument_list|(
name|walDataPath
argument_list|)
decl_stmt|;
specifier|final
name|Path
name|create
init|=
name|getPath
argument_list|(
name|createPath
argument_list|)
decl_stmt|;
try|try
block|{
comment|// ensure integrity of the walData file first!
if|if
condition|(
operator|!
name|Files
operator|.
name|exists
argument_list|(
name|walData
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|LogException
argument_list|(
literal|"Cannot redo creation of binary resource: "
operator|+
name|create
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|", missing write ahead data: "
operator|+
name|walData
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
comment|// ensure integrity of walData file by checksum
specifier|final
name|StreamableDigest
name|walDataStreamableDigest
init|=
name|walDataDigest
operator|.
name|getDigestType
argument_list|()
operator|.
name|newStreamableDigest
argument_list|()
decl_stmt|;
name|FileUtils
operator|.
name|digest
argument_list|(
name|walData
argument_list|,
name|walDataStreamableDigest
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|Arrays
operator|.
name|equals
argument_list|(
name|walDataStreamableDigest
operator|.
name|getMessageDigest
argument_list|()
argument_list|,
name|walDataDigest
operator|.
name|getValue
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|LogException
argument_list|(
literal|"Cannot undo creation of binary resource: "
operator|+
name|create
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|", checksum of walData file is invalid"
argument_list|)
throw|;
block|}
comment|// cover the use-case where the previous operation was a delete
if|if
condition|(
operator|!
name|Files
operator|.
name|exists
argument_list|(
name|create
argument_list|)
condition|)
block|{
return|return;
block|}
comment|// ensure that no one has interfered with the createdFile
name|walDataStreamableDigest
operator|.
name|reset
argument_list|()
expr_stmt|;
name|FileUtils
operator|.
name|digest
argument_list|(
name|create
argument_list|,
name|walDataStreamableDigest
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|Arrays
operator|.
name|equals
argument_list|(
name|walDataStreamableDigest
operator|.
name|getMessageDigest
argument_list|()
argument_list|,
name|walDataDigest
operator|.
name|getValue
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|LogException
argument_list|(
literal|"Cannot undo creation of binary resource: "
operator|+
name|create
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|", checksum is invalid"
argument_list|)
throw|;
block|}
comment|// preform the undo - delete
name|Files
operator|.
name|delete
argument_list|(
name|create
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IOException
name|ioe
parameter_list|)
block|{
throw|throw
operator|new
name|LogException
argument_list|(
literal|"Cannot undo creation of binary resource: "
operator|+
name|create
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|ioe
argument_list|)
throw|;
block|}
block|}
specifier|public
name|Path
name|getCreateFile
parameter_list|()
block|{
return|return
name|getPath
argument_list|(
name|createPath
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|dump
parameter_list|()
block|{
return|return
name|super
operator|.
name|dump
argument_list|()
operator|+
literal|" - create binary [key="
operator|+
name|getPath
argument_list|(
name|createPath
argument_list|)
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|", currentValue=null, newValue="
operator|+
name|getPath
argument_list|(
name|walDataPath
argument_list|)
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

