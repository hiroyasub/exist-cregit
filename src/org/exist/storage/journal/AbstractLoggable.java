begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2015 The eXist Project  *  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public License  * along with this program; if not, write to the Free Software Foundation  * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|journal
package|;
end_package

begin_comment
comment|/**  * Abstract implementation of the Loggable interface.  *  * @author wolf  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractLoggable
implements|implements
name|Loggable
block|{
specifier|protected
specifier|final
name|byte
name|type
decl_stmt|;
specifier|protected
name|long
name|transactionId
decl_stmt|;
specifier|protected
name|long
name|lsn
decl_stmt|;
specifier|public
name|AbstractLoggable
parameter_list|(
specifier|final
name|byte
name|type
parameter_list|,
specifier|final
name|long
name|transactionId
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
name|this
operator|.
name|transactionId
operator|=
name|transactionId
expr_stmt|;
block|}
specifier|public
name|void
name|clear
parameter_list|(
specifier|final
name|long
name|transactionId
parameter_list|)
block|{
name|this
operator|.
name|transactionId
operator|=
name|transactionId
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|byte
name|getLogType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getTransactionId
parameter_list|()
block|{
return|return
name|transactionId
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setLsn
parameter_list|(
name|long
name|lsn
parameter_list|)
block|{
name|this
operator|.
name|lsn
operator|=
name|lsn
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getLsn
parameter_list|()
block|{
return|return
name|lsn
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|redo
parameter_list|()
throws|throws
name|LogException
block|{
comment|// do nothing
block|}
annotation|@
name|Override
specifier|public
name|void
name|undo
parameter_list|()
throws|throws
name|LogException
block|{
comment|// do nothing
block|}
comment|/**      * Default implementation returns the current LSN plus the      * class name of the Loggable instance.      */
annotation|@
name|Override
specifier|public
name|String
name|dump
parameter_list|()
block|{
return|return
literal|'['
operator|+
name|Lsn
operator|.
name|dump
argument_list|(
name|getLsn
argument_list|()
argument_list|)
operator|+
literal|"] "
operator|+
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|' '
return|;
block|}
block|}
end_class

end_unit

