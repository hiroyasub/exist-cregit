begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|storage
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Created by aretter on 20/08/2016.  */
end_comment

begin_class
class|class
name|BrokerPoolServicesManager
block|{
specifier|final
name|List
argument_list|<
name|BrokerPoolService
argument_list|>
name|brokerPoolServices
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
comment|//    public<T extends BrokerPoolService> T register(final Function<BrokerPool, T> cstr) {
comment|//        return brokerPoolServices.add(cstr.apply(brokerPool));
comment|//    }
parameter_list|<
name|T
extends|extends
name|BrokerPoolService
parameter_list|>
name|T
name|register
parameter_list|(
specifier|final
name|T
name|brokerPoolService
parameter_list|)
block|{
name|brokerPoolServices
operator|.
name|add
argument_list|(
name|brokerPoolService
argument_list|)
expr_stmt|;
return|return
name|brokerPoolService
return|;
block|}
name|void
name|configureServices
parameter_list|(
specifier|final
name|Configuration
name|configuration
parameter_list|)
throws|throws
name|BrokerPoolServiceException
block|{
for|for
control|(
specifier|final
name|BrokerPoolService
name|brokerPoolService
range|:
name|brokerPoolServices
control|)
block|{
name|brokerPoolService
operator|.
name|configure
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
block|}
block|}
name|void
name|prepareServices
parameter_list|(
specifier|final
name|BrokerPool
name|brokerPool
parameter_list|)
throws|throws
name|BrokerPoolServiceException
block|{
comment|//TODO(AR) perhaps... create a proxy around BrokerPool which masks off things like getBroker so we can
comment|//avoid people doing things they shouldn't at this stage... or instead of a proxy
comment|//create an interface for BrokerPool which we use here instead and only provides getId and maybe a couple other things?
for|for
control|(
specifier|final
name|BrokerPoolService
name|brokerPoolService
range|:
name|brokerPoolServices
control|)
block|{
name|brokerPoolService
operator|.
name|prepare
argument_list|(
name|brokerPool
argument_list|)
expr_stmt|;
block|}
block|}
name|void
name|startSystemServices
parameter_list|(
specifier|final
name|DBBroker
name|systemBroker
parameter_list|)
throws|throws
name|BrokerPoolServiceException
block|{
comment|//TODO(AR) consider how we could prevent users calling systemBroker.getBrokerPool.getBroker
for|for
control|(
specifier|final
name|BrokerPoolService
name|brokerPoolService
range|:
name|brokerPoolServices
control|)
block|{
name|brokerPoolService
operator|.
name|startSystem
argument_list|(
name|systemBroker
argument_list|)
expr_stmt|;
block|}
block|}
name|void
name|startTrailingSystemServices
parameter_list|(
specifier|final
name|DBBroker
name|systemBroker
parameter_list|)
throws|throws
name|BrokerPoolServiceException
block|{
comment|//TODO(AR) consider how we could prevent users calling systemBroker.getBrokerPool.getBroker
for|for
control|(
specifier|final
name|BrokerPoolService
name|brokerPoolService
range|:
name|brokerPoolServices
control|)
block|{
name|brokerPoolService
operator|.
name|startTrailingSystem
argument_list|(
name|systemBroker
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

