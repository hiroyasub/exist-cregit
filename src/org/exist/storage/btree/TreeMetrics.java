begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-07 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA  *   *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|btree
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
class|class
name|TreeMetrics
block|{
specifier|private
name|int
name|leafPages
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|innerPages
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|dataPages
init|=
literal|0
decl_stmt|;
specifier|private
name|String
name|btreeName
decl_stmt|;
specifier|public
name|TreeMetrics
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|btreeName
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|void
name|addPage
parameter_list|(
name|int
name|status
parameter_list|)
block|{
if|if
condition|(
name|status
operator|==
name|BTree
operator|.
name|BRANCH
condition|)
name|addInnerPage
argument_list|()
expr_stmt|;
else|else
name|addLeafPage
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|addLeafPage
parameter_list|()
block|{
operator|++
name|leafPages
expr_stmt|;
block|}
specifier|public
name|void
name|addInnerPage
parameter_list|()
block|{
operator|++
name|innerPages
expr_stmt|;
block|}
specifier|public
name|void
name|addDataPage
parameter_list|()
block|{
operator|++
name|dataPages
expr_stmt|;
block|}
specifier|public
name|void
name|print
parameter_list|(
name|PrintWriter
name|writer
parameter_list|)
block|{
name|writer
operator|.
name|println
argument_list|(
literal|"BTree tree metrics for "
operator|+
name|btreeName
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"# inner pages: "
operator|+
name|innerPages
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"# leaf pages: "
operator|+
name|leafPages
argument_list|)
expr_stmt|;
name|writer
operator|.
name|println
argument_list|(
literal|"# data pages: "
operator|+
name|dataPages
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|toLogger
parameter_list|()
block|{
name|StringWriter
name|sw
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|PrintWriter
name|writer
init|=
operator|new
name|PrintWriter
argument_list|(
name|sw
argument_list|)
decl_stmt|;
name|print
argument_list|(
name|writer
argument_list|)
expr_stmt|;
if|if
condition|(
name|BTree
operator|.
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
name|BTree
operator|.
name|LOG
operator|.
name|debug
argument_list|(
name|sw
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

