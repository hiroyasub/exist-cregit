begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001 Wolfgang M. Meier  * wolfgang@exist-db.org  * http://exist.sourceforge.net  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public License  * along with this program; if not, write to the Free Software  * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|storage
package|;
end_package

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|EXistException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|Configuration
import|;
end_import

begin_class
specifier|public
class|class
name|BrokerFactory
block|{
specifier|public
specifier|static
specifier|final
name|String
name|PROPERTY_DATABASE
init|=
literal|"database"
decl_stmt|;
specifier|public
specifier|static
name|DBBroker
name|getInstance
parameter_list|(
name|BrokerPool
name|pool
parameter_list|,
name|Configuration
name|conf
parameter_list|)
throws|throws
name|EXistException
block|{
name|String
name|dbName
init|=
operator|(
name|String
operator|)
name|conf
operator|.
name|getProperty
argument_list|(
name|PROPERTY_DATABASE
argument_list|)
decl_stmt|;
if|if
condition|(
name|dbName
operator|==
literal|null
condition|)
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"no database defined"
argument_list|)
throw|;
if|if
condition|(
name|dbName
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"NATIVE"
argument_list|)
condition|)
return|return
operator|new
name|NativeBroker
argument_list|(
name|pool
argument_list|,
name|conf
argument_list|)
return|;
if|else if
condition|(
name|dbName
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"NATIVE_CLUSTER"
argument_list|)
condition|)
return|return
operator|new
name|NativeClusterBroker
argument_list|(
name|pool
argument_list|,
name|conf
argument_list|)
return|;
else|else
throw|throw
operator|new
name|EXistException
argument_list|(
literal|"no database backend found for "
operator|+
name|dbName
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

