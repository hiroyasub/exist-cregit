begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|storage
package|;
end_package

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|OracleWrapper
extends|extends
name|DBWrapper
block|{
specifier|protected
name|String
name|userid
decl_stmt|;
specifier|protected
name|String
name|ctlDir
decl_stmt|;
specifier|public
name|OracleWrapper
parameter_list|(
name|Configuration
name|config
parameter_list|,
name|DBConnectionPool
name|pool
parameter_list|)
block|{
name|super
argument_list|(
name|config
argument_list|,
name|pool
argument_list|)
expr_stmt|;
name|String
name|user
decl_stmt|,
name|pass
decl_stmt|,
name|service
decl_stmt|;
if|if
condition|(
operator|(
name|user
operator|=
operator|(
name|String
operator|)
name|config
operator|.
name|getProperty
argument_list|(
literal|"user"
argument_list|)
operator|)
operator|==
literal|null
condition|)
name|user
operator|=
literal|"test"
expr_stmt|;
if|if
condition|(
operator|(
name|pass
operator|=
operator|(
name|String
operator|)
name|config
operator|.
name|getProperty
argument_list|(
literal|"password"
argument_list|)
operator|)
operator|==
literal|null
condition|)
name|pass
operator|=
literal|"test"
expr_stmt|;
name|service
operator|=
operator|(
name|String
operator|)
name|config
operator|.
name|getProperty
argument_list|(
literal|"db-connection.serviceName"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|ctlDir
operator|=
operator|(
name|String
operator|)
name|config
operator|.
name|getProperty
argument_list|(
literal|"parser.ctlDir"
argument_list|)
operator|)
operator|==
literal|null
condition|)
name|ctlDir
operator|=
literal|"ctl"
expr_stmt|;
name|userid
operator|=
name|user
operator|+
literal|"/"
operator|+
name|pass
expr_stmt|;
if|if
condition|(
name|service
operator|!=
literal|null
condition|)
name|userid
operator|=
name|userid
operator|+
literal|"@"
operator|+
name|service
expr_stmt|;
block|}
specifier|public
name|void
name|loadFromFile
parameter_list|(
name|String
name|fname
parameter_list|,
name|String
name|table
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
name|checkFile
argument_list|(
name|fname
argument_list|)
condition|)
return|return;
name|File
name|f
init|=
operator|new
name|File
argument_list|(
name|fname
argument_list|)
decl_stmt|;
name|String
name|absolutePath
init|=
name|f
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
name|String
name|pathSep
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"file.separator"
argument_list|,
literal|"/"
argument_list|)
decl_stmt|;
name|String
name|ctl
init|=
literal|"control="
operator|+
name|ctlDir
operator|+
name|pathSep
operator|+
name|table
operator|+
literal|".ctl"
decl_stmt|;
name|String
name|data
init|=
literal|"data="
operator|+
name|absolutePath
decl_stmt|;
name|String
name|arg
init|=
literal|"sqlldr direct=true userid="
operator|+
name|userid
operator|+
literal|" "
operator|+
name|data
operator|+
literal|" "
operator|+
name|ctl
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"running: "
operator|+
name|arg
argument_list|)
expr_stmt|;
name|Process
name|process
init|=
name|Runtime
operator|.
name|getRuntime
argument_list|()
operator|.
name|exec
argument_list|(
name|arg
argument_list|)
decl_stmt|;
name|BufferedReader
name|buf
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|process
operator|.
name|getInputStream
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|exitCode
init|=
literal|0
decl_stmt|;
try|try
block|{
name|exitCode
operator|=
name|process
operator|.
name|waitFor
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|ie
parameter_list|)
block|{
block|}
name|String
name|line
decl_stmt|;
while|while
condition|(
operator|(
name|line
operator|=
name|buf
operator|.
name|readLine
argument_list|()
operator|)
operator|!=
literal|null
condition|)
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|line
argument_list|)
expr_stmt|;
if|if
condition|(
name|exitCode
operator|!=
literal|0
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"sqlldr exited with error: "
operator|+
name|exitCode
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|IOException
argument_list|(
literal|"sqlldr exited with error-code: "
operator|+
name|exitCode
argument_list|)
throw|;
block|}
name|removeFile
argument_list|(
name|absolutePath
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

