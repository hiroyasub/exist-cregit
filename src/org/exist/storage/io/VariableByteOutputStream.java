begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|io
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|ByteArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|FastByteBuffer
import|;
end_import

begin_comment
comment|/**  * A byte array output stream using variable byte encoding.  *   * @author wolf  */
end_comment

begin_class
specifier|public
class|class
name|VariableByteOutputStream
extends|extends
name|OutputStream
block|{
specifier|private
specifier|final
name|int
name|MAX_BUFFER_SIZE
init|=
literal|65536
decl_stmt|;
specifier|protected
name|FastByteBuffer
name|buf
decl_stmt|;
specifier|private
specifier|final
name|byte
index|[]
name|temp
init|=
operator|new
name|byte
index|[
literal|5
index|]
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|VariableByteArrayInput
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
name|VariableByteOutputStream
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|buf
operator|=
operator|new
name|FastByteBuffer
argument_list|(
literal|9
argument_list|)
expr_stmt|;
block|}
specifier|public
name|VariableByteOutputStream
parameter_list|(
name|int
name|size
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|buf
operator|=
operator|new
name|FastByteBuffer
argument_list|(
name|size
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|clear
parameter_list|()
block|{
if|if
condition|(
name|buf
operator|.
name|size
argument_list|()
operator|>
name|MAX_BUFFER_SIZE
condition|)
name|buf
operator|=
operator|new
name|FastByteBuffer
argument_list|(
literal|9
argument_list|)
expr_stmt|;
else|else
name|buf
operator|.
name|setLength
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|buf
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|buf
operator|.
name|length
argument_list|()
return|;
block|}
specifier|public
name|void
name|flush
parameter_list|()
throws|throws
name|IOException
block|{
block|}
specifier|public
name|int
name|position
parameter_list|()
block|{
return|return
name|buf
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|byte
index|[]
name|toByteArray
parameter_list|()
block|{
name|byte
index|[]
name|b
init|=
operator|new
name|byte
index|[
name|buf
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
name|buf
operator|.
name|copyTo
argument_list|(
name|b
argument_list|,
literal|0
argument_list|)
expr_stmt|;
return|return
name|b
return|;
block|}
specifier|public
name|ByteArray
name|data
parameter_list|()
block|{
return|return
name|buf
return|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|int
name|b
parameter_list|)
throws|throws
name|IOException
block|{
name|buf
operator|.
name|append
argument_list|(
operator|(
name|byte
operator|)
name|b
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|byte
index|[]
name|b
parameter_list|)
block|{
name|buf
operator|.
name|append
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|byte
index|[]
name|b
parameter_list|,
name|int
name|off
parameter_list|,
name|int
name|len
parameter_list|)
throws|throws
name|IOException
block|{
name|buf
operator|.
name|append
argument_list|(
name|b
argument_list|,
name|off
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|ByteArray
name|b
parameter_list|)
block|{
name|b
operator|.
name|copyTo
argument_list|(
name|buf
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeByte
parameter_list|(
name|byte
name|b
parameter_list|)
block|{
name|buf
operator|.
name|append
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeShort
parameter_list|(
name|int
name|s
parameter_list|)
block|{
while|while
condition|(
operator|(
name|s
operator|&
operator|~
literal|0177
operator|)
operator|!=
literal|0
condition|)
block|{
name|buf
operator|.
name|append
argument_list|(
operator|(
name|byte
operator|)
operator|(
operator|(
name|s
operator|&
literal|0177
operator|)
operator||
literal|0200
operator|)
argument_list|)
expr_stmt|;
name|s
operator|>>>=
literal|7
expr_stmt|;
block|}
name|buf
operator|.
name|append
argument_list|(
operator|(
name|byte
operator|)
name|s
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeInt
parameter_list|(
name|int
name|i
parameter_list|)
block|{
name|int
name|count
init|=
literal|0
decl_stmt|;
while|while
condition|(
operator|(
name|i
operator|&
operator|~
literal|0177
operator|)
operator|!=
literal|0
condition|)
block|{
name|temp
index|[
name|count
operator|++
index|]
operator|=
operator|(
name|byte
operator|)
operator|(
operator|(
name|i
operator|&
literal|0177
operator|)
operator||
literal|0200
operator|)
expr_stmt|;
name|i
operator|>>>=
literal|7
expr_stmt|;
block|}
name|temp
index|[
name|count
operator|++
index|]
operator|=
operator|(
name|byte
operator|)
name|i
expr_stmt|;
name|buf
operator|.
name|append
argument_list|(
name|temp
argument_list|,
literal|0
argument_list|,
name|count
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeFixedInt
parameter_list|(
name|int
name|i
parameter_list|)
block|{
name|temp
index|[
literal|0
index|]
operator|=
operator|(
name|byte
operator|)
operator|(
operator|(
name|i
operator|>>>
literal|0
operator|)
operator|&
literal|0xff
operator|)
expr_stmt|;
name|temp
index|[
literal|1
index|]
operator|=
operator|(
name|byte
operator|)
operator|(
operator|(
name|i
operator|>>>
literal|8
operator|)
operator|&
literal|0xff
operator|)
expr_stmt|;
name|temp
index|[
literal|2
index|]
operator|=
operator|(
name|byte
operator|)
operator|(
operator|(
name|i
operator|>>>
literal|16
operator|)
operator|&
literal|0xff
operator|)
expr_stmt|;
name|temp
index|[
literal|3
index|]
operator|=
operator|(
name|byte
operator|)
operator|(
operator|(
name|i
operator|>>>
literal|24
operator|)
operator|&
literal|0xff
operator|)
expr_stmt|;
name|buf
operator|.
name|append
argument_list|(
name|temp
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeFixedInt
parameter_list|(
name|int
name|position
parameter_list|,
name|int
name|i
parameter_list|)
block|{
name|buf
operator|.
name|set
argument_list|(
name|position
argument_list|,
operator|(
name|byte
operator|)
operator|(
operator|(
name|i
operator|>>>
literal|0
operator|)
operator|&
literal|0xff
operator|)
argument_list|)
expr_stmt|;
name|buf
operator|.
name|set
argument_list|(
name|position
operator|+
literal|1
argument_list|,
operator|(
name|byte
operator|)
operator|(
operator|(
name|i
operator|>>>
literal|8
operator|)
operator|&
literal|0xff
operator|)
argument_list|)
expr_stmt|;
name|buf
operator|.
name|set
argument_list|(
name|position
operator|+
literal|2
argument_list|,
operator|(
name|byte
operator|)
operator|(
operator|(
name|i
operator|>>>
literal|16
operator|)
operator|&
literal|0xff
operator|)
argument_list|)
expr_stmt|;
name|buf
operator|.
name|set
argument_list|(
name|position
operator|+
literal|3
argument_list|,
operator|(
name|byte
operator|)
operator|(
operator|(
name|i
operator|>>>
literal|24
operator|)
operator|&
literal|0xff
operator|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeInt
parameter_list|(
name|int
name|position
parameter_list|,
name|int
name|i
parameter_list|)
block|{
while|while
condition|(
operator|(
name|i
operator|&
operator|~
literal|0177
operator|)
operator|!=
literal|0
condition|)
block|{
name|buf
operator|.
name|set
argument_list|(
name|position
operator|++
argument_list|,
operator|(
name|byte
operator|)
operator|(
operator|(
name|i
operator|&
literal|0177
operator|)
operator||
literal|0200
operator|)
argument_list|)
expr_stmt|;
name|i
operator|>>>=
literal|7
expr_stmt|;
block|}
name|buf
operator|.
name|set
argument_list|(
name|position
argument_list|,
operator|(
name|byte
operator|)
name|i
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeLong
parameter_list|(
name|long
name|l
parameter_list|)
block|{
while|while
condition|(
operator|(
name|l
operator|&
operator|~
literal|0177
operator|)
operator|!=
literal|0
condition|)
block|{
name|buf
operator|.
name|append
argument_list|(
operator|(
name|byte
operator|)
operator|(
operator|(
name|l
operator|&
literal|0177
operator|)
operator||
literal|0200
operator|)
argument_list|)
expr_stmt|;
name|l
operator|>>>=
literal|7
expr_stmt|;
block|}
name|buf
operator|.
name|append
argument_list|(
operator|(
name|byte
operator|)
name|l
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeFixedLong
parameter_list|(
name|long
name|l
parameter_list|)
block|{
name|buf
operator|.
name|append
argument_list|(
operator|(
name|byte
operator|)
operator|(
operator|(
name|l
operator|>>>
literal|56
operator|)
operator|&
literal|0xff
operator|)
argument_list|)
expr_stmt|;
name|buf
operator|.
name|append
argument_list|(
operator|(
name|byte
operator|)
operator|(
operator|(
name|l
operator|>>>
literal|48
operator|)
operator|&
literal|0xff
operator|)
argument_list|)
expr_stmt|;
name|buf
operator|.
name|append
argument_list|(
operator|(
name|byte
operator|)
operator|(
operator|(
name|l
operator|>>>
literal|40
operator|)
operator|&
literal|0xff
operator|)
argument_list|)
expr_stmt|;
name|buf
operator|.
name|append
argument_list|(
operator|(
name|byte
operator|)
operator|(
operator|(
name|l
operator|>>>
literal|32
operator|)
operator|&
literal|0xff
operator|)
argument_list|)
expr_stmt|;
name|buf
operator|.
name|append
argument_list|(
operator|(
name|byte
operator|)
operator|(
operator|(
name|l
operator|>>>
literal|24
operator|)
operator|&
literal|0xff
operator|)
argument_list|)
expr_stmt|;
name|buf
operator|.
name|append
argument_list|(
operator|(
name|byte
operator|)
operator|(
operator|(
name|l
operator|>>>
literal|16
operator|)
operator|&
literal|0xff
operator|)
argument_list|)
expr_stmt|;
name|buf
operator|.
name|append
argument_list|(
operator|(
name|byte
operator|)
operator|(
operator|(
name|l
operator|>>>
literal|8
operator|)
operator|&
literal|0xff
operator|)
argument_list|)
expr_stmt|;
name|buf
operator|.
name|append
argument_list|(
operator|(
name|byte
operator|)
operator|(
operator|(
name|l
operator|>>>
literal|0
operator|)
operator|&
literal|0xff
operator|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|writeUTF
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|IOException
block|{
name|byte
index|[]
name|data
init|=
literal|null
decl_stmt|;
try|try
block|{
name|data
operator|=
name|s
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedEncodingException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|data
operator|=
name|s
operator|.
name|getBytes
argument_list|()
expr_stmt|;
block|}
name|writeInt
argument_list|(
name|data
operator|.
name|length
argument_list|)
expr_stmt|;
name|write
argument_list|(
name|data
argument_list|,
literal|0
argument_list|,
name|data
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

