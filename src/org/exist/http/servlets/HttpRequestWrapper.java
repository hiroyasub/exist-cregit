begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-03 Wolfgang M. Meier  *  wolfgang@exist-db.org  *  http://exist.sourceforge.net  *    *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *    *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *    *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *    *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|http
operator|.
name|servlets
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Principal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|fileupload
operator|.
name|DefaultFileItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|fileupload
operator|.
name|DiskFileUpload
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|fileupload
operator|.
name|FileItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|fileupload
operator|.
name|FileUpload
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|fileupload
operator|.
name|FileUploadException
import|;
end_import

begin_comment
comment|/**  * @author Wolfgang Meier (wolfgang@exist-db.org)  */
end_comment

begin_class
specifier|public
class|class
name|HttpRequestWrapper
implements|implements
name|RequestWrapper
block|{
specifier|private
name|HttpServletRequest
name|request
decl_stmt|;
specifier|private
name|String
name|formEncoding
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|containerEncoding
init|=
literal|null
decl_stmt|;
specifier|private
name|Hashtable
name|params
init|=
literal|null
decl_stmt|;
comment|/** 	 *  	 */
specifier|public
name|HttpRequestWrapper
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|String
name|formEncoding
parameter_list|,
name|String
name|containerEncoding
parameter_list|)
block|{
name|this
operator|.
name|request
operator|=
name|request
expr_stmt|;
name|this
operator|.
name|formEncoding
operator|=
name|formEncoding
expr_stmt|;
name|this
operator|.
name|containerEncoding
operator|=
name|containerEncoding
expr_stmt|;
if|if
condition|(
name|FileUpload
operator|.
name|isMultipartContent
argument_list|(
name|request
argument_list|)
condition|)
block|{
name|parseMultipartContent
argument_list|(
name|request
argument_list|)
expr_stmt|;
block|}
block|}
comment|/** 	 * @param request2 	 */
specifier|private
name|void
name|parseMultipartContent
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|DiskFileUpload
name|upload
init|=
operator|new
name|DiskFileUpload
argument_list|()
decl_stmt|;
name|upload
operator|.
name|setSizeThreshold
argument_list|(
literal|0
argument_list|)
expr_stmt|;
try|try
block|{
name|this
operator|.
name|params
operator|=
operator|new
name|Hashtable
argument_list|()
expr_stmt|;
name|List
name|items
init|=
name|upload
operator|.
name|parseRequest
argument_list|(
name|request
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|items
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|FileItem
name|next
init|=
operator|(
name|FileItem
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|this
operator|.
name|params
operator|.
name|put
argument_list|(
name|next
operator|.
name|getFieldName
argument_list|()
argument_list|,
name|next
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|FileUploadException
name|e
parameter_list|)
block|{
comment|// TODO: handle this
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
comment|/* (non-Javadoc) 	 * @see org.exist.http.servlets.RequestWrapper#getInputStream() 	 */
specifier|public
name|InputStream
name|getInputStream
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|request
operator|.
name|getInputStream
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|String
name|getCharacterEncoding
parameter_list|()
block|{
return|return
name|request
operator|.
name|getCharacterEncoding
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|int
name|getContentLength
parameter_list|()
block|{
return|return
name|request
operator|.
name|getContentLength
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|String
name|getContentType
parameter_list|()
block|{
return|return
name|request
operator|.
name|getContentType
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|String
name|getContextPath
parameter_list|()
block|{
return|return
name|request
operator|.
name|getContextPath
argument_list|()
return|;
block|}
comment|/** 	 * @param arg0 	 * @return 	 */
specifier|public
name|long
name|getDateHeader
parameter_list|(
name|String
name|arg0
parameter_list|)
block|{
return|return
name|request
operator|.
name|getDateHeader
argument_list|(
name|arg0
argument_list|)
return|;
block|}
comment|/** 	 * @param arg0 	 * @return 	 */
specifier|public
name|String
name|getHeader
parameter_list|(
name|String
name|arg0
parameter_list|)
block|{
return|return
name|request
operator|.
name|getHeader
argument_list|(
name|arg0
argument_list|)
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|Enumeration
name|getHeaderNames
parameter_list|()
block|{
return|return
name|request
operator|.
name|getHeaderNames
argument_list|()
return|;
block|}
comment|/** 	 * @param arg0 	 * @return 	 */
specifier|public
name|Enumeration
name|getHeaders
parameter_list|(
name|String
name|arg0
parameter_list|)
block|{
return|return
name|request
operator|.
name|getHeaders
argument_list|(
name|arg0
argument_list|)
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|Locale
name|getLocale
parameter_list|()
block|{
return|return
name|request
operator|.
name|getLocale
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|Enumeration
name|getLocales
parameter_list|()
block|{
return|return
name|request
operator|.
name|getLocales
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|String
name|getMethod
parameter_list|()
block|{
return|return
name|request
operator|.
name|getMethod
argument_list|()
return|;
block|}
comment|/** 	 * @param arg0 	 * @return 	 */
specifier|public
name|String
name|getParameter
parameter_list|(
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
name|params
operator|==
literal|null
condition|)
block|{
name|String
name|value
init|=
name|request
operator|.
name|getParameter
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|formEncoding
operator|==
literal|null
operator|||
name|value
operator|==
literal|null
condition|)
return|return
name|value
return|;
return|return
name|decode
argument_list|(
name|value
argument_list|)
return|;
block|}
else|else
block|{
name|FileItem
name|item
init|=
operator|(
name|FileItem
operator|)
name|params
operator|.
name|get
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
if|if
condition|(
name|formEncoding
operator|==
literal|null
condition|)
return|return
name|item
operator|.
name|getString
argument_list|()
return|;
else|else
try|try
block|{
return|return
name|item
operator|.
name|getString
argument_list|(
name|formEncoding
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|UnsupportedEncodingException
name|e
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
block|}
specifier|public
name|File
name|getFileUploadParam
parameter_list|(
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
name|params
operator|==
literal|null
condition|)
return|return
literal|null
return|;
name|FileItem
name|item
init|=
operator|(
name|FileItem
operator|)
name|params
operator|.
name|get
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|isFormField
argument_list|()
condition|)
return|return
literal|null
return|;
return|return
operator|(
operator|(
name|DefaultFileItem
operator|)
name|item
operator|)
operator|.
name|getStoreLocation
argument_list|()
return|;
block|}
specifier|public
name|String
name|getUploadedFileName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
name|params
operator|==
literal|null
condition|)
return|return
literal|null
return|;
name|FileItem
name|item
init|=
operator|(
name|FileItem
operator|)
name|params
operator|.
name|get
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|.
name|isFormField
argument_list|()
condition|)
return|return
literal|null
return|;
name|File
name|f
init|=
operator|new
name|File
argument_list|(
name|item
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|f
operator|.
name|getName
argument_list|()
return|;
block|}
specifier|private
name|String
name|decode
parameter_list|(
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|containerEncoding
operator|==
literal|null
condition|)
name|containerEncoding
operator|=
literal|"ISO-8859-1"
expr_stmt|;
try|try
block|{
name|byte
index|[]
name|bytes
init|=
name|value
operator|.
name|getBytes
argument_list|(
name|containerEncoding
argument_list|)
decl_stmt|;
return|return
operator|new
name|String
argument_list|(
name|bytes
argument_list|,
name|formEncoding
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|UnsupportedEncodingException
name|e
parameter_list|)
block|{
return|return
name|value
return|;
block|}
block|}
comment|/** 	 * @return 	 */
specifier|public
name|Enumeration
name|getParameterNames
parameter_list|()
block|{
if|if
condition|(
name|params
operator|==
literal|null
condition|)
return|return
name|request
operator|.
name|getParameterNames
argument_list|()
return|;
else|else
block|{
return|return
name|params
operator|.
name|keys
argument_list|()
return|;
block|}
block|}
comment|/** 	 * @param arg0 	 * @return 	 */
specifier|public
name|String
index|[]
name|getParameterValues
parameter_list|(
name|String
name|key
parameter_list|)
block|{
if|if
condition|(
name|params
operator|==
literal|null
condition|)
block|{
name|String
index|[]
name|values
init|=
name|request
operator|.
name|getParameterValues
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|formEncoding
operator|==
literal|null
operator|||
name|values
operator|==
literal|null
condition|)
return|return
name|values
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|values
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|values
index|[
name|i
index|]
operator|=
name|decode
argument_list|(
name|values
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
return|return
name|values
return|;
block|}
else|else
block|{
name|FileItem
name|item
init|=
operator|(
name|FileItem
operator|)
name|params
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|item
operator|==
literal|null
condition|)
return|return
literal|null
return|;
name|String
index|[]
name|values
init|=
operator|new
name|String
index|[
literal|1
index|]
decl_stmt|;
try|try
block|{
name|values
index|[
literal|0
index|]
operator|=
name|formEncoding
operator|==
literal|null
condition|?
name|item
operator|.
name|getString
argument_list|()
else|:
name|item
operator|.
name|getString
argument_list|(
name|formEncoding
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedEncodingException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
name|values
return|;
block|}
block|}
comment|/** 	 * @return 	 */
specifier|public
name|String
name|getPathInfo
parameter_list|()
block|{
return|return
name|request
operator|.
name|getPathInfo
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|String
name|getPathTranslated
parameter_list|()
block|{
return|return
name|request
operator|.
name|getPathTranslated
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|String
name|getProtocol
parameter_list|()
block|{
return|return
name|request
operator|.
name|getProtocol
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|String
name|getQueryString
parameter_list|()
block|{
return|return
name|request
operator|.
name|getQueryString
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|String
name|getRemoteAddr
parameter_list|()
block|{
return|return
name|request
operator|.
name|getRemoteAddr
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|String
name|getRemoteHost
parameter_list|()
block|{
return|return
name|request
operator|.
name|getRemoteHost
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|String
name|getRemoteUser
parameter_list|()
block|{
return|return
name|request
operator|.
name|getRemoteUser
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|String
name|getRequestedSessionId
parameter_list|()
block|{
return|return
name|request
operator|.
name|getRequestedSessionId
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|String
name|getRequestURI
parameter_list|()
block|{
return|return
name|request
operator|.
name|getRequestURI
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|String
name|getScheme
parameter_list|()
block|{
return|return
name|request
operator|.
name|getScheme
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|String
name|getServerName
parameter_list|()
block|{
return|return
name|request
operator|.
name|getServerName
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|int
name|getServerPort
parameter_list|()
block|{
return|return
name|request
operator|.
name|getServerPort
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|String
name|getServletPath
parameter_list|()
block|{
return|return
name|request
operator|.
name|getServletPath
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|SessionWrapper
name|getSession
parameter_list|()
block|{
return|return
operator|new
name|HttpSessionWrapper
argument_list|(
name|request
operator|.
name|getSession
argument_list|()
argument_list|)
return|;
block|}
comment|/** 	 * @param arg0 	 * @return 	 */
specifier|public
name|SessionWrapper
name|getSession
parameter_list|(
name|boolean
name|arg0
parameter_list|)
block|{
return|return
operator|new
name|HttpSessionWrapper
argument_list|(
name|request
operator|.
name|getSession
argument_list|(
name|arg0
argument_list|)
argument_list|)
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|Principal
name|getUserPrincipal
parameter_list|()
block|{
return|return
name|request
operator|.
name|getUserPrincipal
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|boolean
name|isRequestedSessionIdFromCookie
parameter_list|()
block|{
return|return
name|request
operator|.
name|isRequestedSessionIdFromCookie
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|boolean
name|isRequestedSessionIdFromURL
parameter_list|()
block|{
return|return
name|request
operator|.
name|isRequestedSessionIdFromURL
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|boolean
name|isRequestedSessionIdValid
parameter_list|()
block|{
return|return
name|request
operator|.
name|isRequestedSessionIdValid
argument_list|()
return|;
block|}
comment|/** 	 * @return 	 */
specifier|public
name|boolean
name|isSecure
parameter_list|()
block|{
return|return
name|request
operator|.
name|isSecure
argument_list|()
return|;
block|}
comment|/** 	 * @param arg0 	 * @return 	 */
specifier|public
name|boolean
name|isUserInRole
parameter_list|(
name|String
name|arg0
parameter_list|)
block|{
return|return
name|request
operator|.
name|isUserInRole
argument_list|(
name|arg0
argument_list|)
return|;
block|}
comment|/** 	 * @param arg0 	 */
specifier|public
name|void
name|removeAttribute
parameter_list|(
name|String
name|arg0
parameter_list|)
block|{
name|request
operator|.
name|removeAttribute
argument_list|(
name|arg0
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param arg0 	 * @param arg1 	 */
specifier|public
name|void
name|setAttribute
parameter_list|(
name|String
name|arg0
parameter_list|,
name|Object
name|arg1
parameter_list|)
block|{
name|request
operator|.
name|setAttribute
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @param arg0 	 * @throws java.io.UnsupportedEncodingException 	 */
specifier|public
name|void
name|setCharacterEncoding
parameter_list|(
name|String
name|arg0
parameter_list|)
throws|throws
name|UnsupportedEncodingException
block|{
name|request
operator|.
name|setCharacterEncoding
argument_list|(
name|arg0
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

