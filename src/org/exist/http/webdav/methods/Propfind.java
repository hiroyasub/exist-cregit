begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-04 Wolfgang M. Meier  *  wolfgang@exist-db.org  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public License  *  along with this program; if not, write to the Free Software  *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  *   *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|http
operator|.
name|webdav
operator|.
name|methods
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TimeZone
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|ParserConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|EXistException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|collections
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|DocumentImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|dom
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|http
operator|.
name|webdav
operator|.
name|WebDAV
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|http
operator|.
name|webdav
operator|.
name|WebDAVUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|Permission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|security
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|BrokerPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|storage
operator|.
name|DBBroker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|Lock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|LockException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|serializer
operator|.
name|SAXSerializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|serializer
operator|.
name|SAXSerializerPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|helpers
operator|.
name|AttributesImpl
import|;
end_import

begin_comment
comment|/**  * Implements the WebDAV PROPFIND method.  *   * @author wolf  */
end_comment

begin_class
specifier|public
class|class
name|Propfind
extends|extends
name|AbstractWebDAVMethod
block|{
comment|// search types
specifier|private
specifier|final
specifier|static
name|int
name|FIND_ALL_PROPERTIES
init|=
literal|0
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|int
name|FIND_BY_PROPERTY
init|=
literal|1
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|int
name|FIND_PROPERTY_NAMES
init|=
literal|2
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|SimpleDateFormat
name|creationDateFormat
init|=
operator|new
name|SimpleDateFormat
argument_list|(
literal|"yyyy-MM-dd'T'HH:mm:ss'Z'"
argument_list|,
name|Locale
operator|.
name|US
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|SimpleDateFormat
name|modificationDateFormat
init|=
operator|new
name|SimpleDateFormat
argument_list|(
literal|"EEE, dd MMM yyyy HH:mm:ss zzz"
argument_list|,
name|Locale
operator|.
name|US
argument_list|)
decl_stmt|;
static|static
block|{
name|creationDateFormat
operator|.
name|setTimeZone
argument_list|(
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"GMT"
argument_list|)
argument_list|)
expr_stmt|;
name|modificationDateFormat
operator|.
name|setTimeZone
argument_list|(
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"GMT"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// default prefix for the webdav namespace
specifier|private
specifier|final
specifier|static
name|String
name|PREFIX
init|=
literal|"D"
decl_stmt|;
comment|// constants for known properties
specifier|private
specifier|final
specifier|static
name|QName
name|DISPLAY_NAME_PROP
init|=
operator|new
name|QName
argument_list|(
literal|"displayname"
argument_list|,
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
name|PREFIX
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|QName
name|CREATION_DATE_PROP
init|=
operator|new
name|QName
argument_list|(
literal|"creationdate"
argument_list|,
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
name|PREFIX
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|QName
name|RESOURCE_TYPE_PROP
init|=
operator|new
name|QName
argument_list|(
literal|"resourcetype"
argument_list|,
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
name|PREFIX
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|QName
name|CONTENT_TYPE_PROP
init|=
operator|new
name|QName
argument_list|(
literal|"getcontenttype"
argument_list|,
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
name|PREFIX
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|QName
name|CONTENT_LENGTH_PROP
init|=
operator|new
name|QName
argument_list|(
literal|"getcontentlength"
argument_list|,
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
name|PREFIX
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|QName
name|LAST_MODIFIED_PROP
init|=
operator|new
name|QName
argument_list|(
literal|"getlastmodified"
argument_list|,
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
name|PREFIX
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|QName
name|SUPPORTED_LOCK_PROP
init|=
operator|new
name|QName
argument_list|(
literal|"supportedlock"
argument_list|,
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
name|PREFIX
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|QName
name|EXCLUSIVE_LOCK_PROP
init|=
operator|new
name|QName
argument_list|(
literal|"exclusive"
argument_list|,
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
name|PREFIX
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|QName
name|WRITE_LOCK_PROP
init|=
operator|new
name|QName
argument_list|(
literal|"write"
argument_list|,
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
name|PREFIX
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|QName
name|ETAG_PROP
init|=
operator|new
name|QName
argument_list|(
literal|"etag"
argument_list|,
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
name|PREFIX
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|QName
name|STATUS_PROP
init|=
operator|new
name|QName
argument_list|(
literal|"status"
argument_list|,
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
name|PREFIX
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|QName
name|COLLECTION_PROP
init|=
operator|new
name|QName
argument_list|(
literal|"collection"
argument_list|,
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
name|PREFIX
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|QName
index|[]
name|DEFAULT_COLLECTION_PROPS
init|=
block|{
name|DISPLAY_NAME_PROP
block|,
name|RESOURCE_TYPE_PROP
block|,
name|CREATION_DATE_PROP
block|,
name|LAST_MODIFIED_PROP
block|}
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|QName
index|[]
name|DEFAULT_RESOURCE_PROPS
init|=
block|{
name|DISPLAY_NAME_PROP
block|,
name|RESOURCE_TYPE_PROP
block|,
name|CREATION_DATE_PROP
block|,
name|LAST_MODIFIED_PROP
block|,
name|CONTENT_TYPE_PROP
block|,
name|CONTENT_LENGTH_PROP
block|,
name|SUPPORTED_LOCK_PROP
block|}
decl_stmt|;
specifier|public
name|Propfind
parameter_list|(
name|BrokerPool
name|pool
parameter_list|)
block|{
name|super
argument_list|(
name|pool
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|process
parameter_list|(
name|User
name|user
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|,
name|String
name|path
parameter_list|)
throws|throws
name|ServletException
throws|,
name|IOException
block|{
name|DBBroker
name|broker
init|=
literal|null
decl_stmt|;
name|Collection
name|collection
init|=
literal|null
decl_stmt|;
name|DocumentImpl
name|resource
init|=
literal|null
decl_stmt|;
synchronized|synchronized
init|(
name|pool
operator|.
name|getCollectionsCache
argument_list|()
init|)
block|{
try|try
block|{
name|broker
operator|=
name|pool
operator|.
name|get
argument_list|(
name|user
argument_list|)
expr_stmt|;
comment|// open the collection or resource specified in the path
name|collection
operator|=
name|broker
operator|.
name|openCollection
argument_list|(
name|path
argument_list|,
name|Lock
operator|.
name|READ_LOCK
argument_list|)
expr_stmt|;
if|if
condition|(
name|collection
operator|==
literal|null
condition|)
block|{
comment|// no collection found: check for a resource
name|int
name|pos
init|=
name|path
operator|.
name|lastIndexOf
argument_list|(
literal|'/'
argument_list|)
decl_stmt|;
name|String
name|collName
init|=
name|path
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|pos
argument_list|)
decl_stmt|;
name|String
name|docName
init|=
name|path
operator|.
name|substring
argument_list|(
name|pos
operator|+
literal|1
argument_list|)
decl_stmt|;
name|collection
operator|=
name|broker
operator|.
name|openCollection
argument_list|(
name|collName
argument_list|,
name|Lock
operator|.
name|READ_LOCK
argument_list|)
expr_stmt|;
if|if
condition|(
name|collection
operator|==
literal|null
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"No resource or collection found for path: "
operator|+
name|path
argument_list|)
expr_stmt|;
name|response
operator|.
name|sendError
argument_list|(
name|HttpServletResponse
operator|.
name|SC_NOT_FOUND
argument_list|,
name|NOT_FOUND_ERR
argument_list|)
expr_stmt|;
return|return;
block|}
name|resource
operator|=
name|collection
operator|.
name|getDocumentWithLock
argument_list|(
name|broker
argument_list|,
name|docName
argument_list|,
name|Lock
operator|.
name|READ_LOCK
argument_list|)
expr_stmt|;
if|if
condition|(
name|resource
operator|==
literal|null
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"No resource found for path: "
operator|+
name|path
argument_list|)
expr_stmt|;
name|response
operator|.
name|sendError
argument_list|(
name|HttpServletResponse
operator|.
name|SC_NOT_FOUND
argument_list|,
name|NOT_FOUND_ERR
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
if|if
condition|(
operator|!
name|collection
operator|.
name|getPermissions
argument_list|()
operator|.
name|validate
argument_list|(
name|user
argument_list|,
name|Permission
operator|.
name|READ
argument_list|)
condition|)
block|{
name|response
operator|.
name|sendError
argument_list|(
name|HttpServletResponse
operator|.
name|SC_FORBIDDEN
argument_list|)
expr_stmt|;
return|return;
block|}
comment|// parse the request contents
name|DocumentBuilderFactory
name|docFactory
init|=
name|DocumentBuilderFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|docFactory
operator|.
name|setNamespaceAware
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|DocumentBuilder
name|docBuilder
decl_stmt|;
try|try
block|{
name|docBuilder
operator|=
name|docFactory
operator|.
name|newDocumentBuilder
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParserConfigurationException
name|e1
parameter_list|)
block|{
throw|throw
operator|new
name|ServletException
argument_list|(
name|WebDAVUtil
operator|.
name|XML_CONFIGURATION_ERR
argument_list|,
name|e1
argument_list|)
throw|;
block|}
name|Document
name|doc
init|=
name|WebDAVUtil
operator|.
name|parseRequestContent
argument_list|(
name|request
argument_list|,
name|response
argument_list|,
name|docBuilder
argument_list|)
decl_stmt|;
name|int
name|type
init|=
name|FIND_ALL_PROPERTIES
decl_stmt|;
name|DAVProperties
name|searchedProperties
init|=
operator|new
name|DAVProperties
argument_list|()
decl_stmt|;
if|if
condition|(
name|doc
operator|!=
literal|null
condition|)
block|{
name|Element
name|propfind
init|=
name|doc
operator|.
name|getDocumentElement
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|propfind
operator|.
name|getLocalName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"propfind"
argument_list|)
operator|&&
name|propfind
operator|.
name|getNamespaceURI
argument_list|()
operator|.
name|equals
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|)
operator|)
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
name|WebDAVUtil
operator|.
name|UNEXPECTED_ELEMENT_ERR
operator|+
name|propfind
operator|.
name|getNodeName
argument_list|()
argument_list|)
expr_stmt|;
name|response
operator|.
name|sendError
argument_list|(
name|HttpServletResponse
operator|.
name|SC_BAD_REQUEST
argument_list|,
name|WebDAVUtil
operator|.
name|UNEXPECTED_ELEMENT_ERR
operator|+
name|propfind
operator|.
name|getNodeName
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
name|NodeList
name|childNodes
init|=
name|propfind
operator|.
name|getChildNodes
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|childNodes
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Node
name|currentNode
init|=
name|childNodes
operator|.
name|item
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|currentNode
operator|.
name|getNodeType
argument_list|()
operator|==
name|Node
operator|.
name|ELEMENT_NODE
condition|)
block|{
if|if
condition|(
name|currentNode
operator|.
name|getNamespaceURI
argument_list|()
operator|.
name|equals
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|)
condition|)
block|{
if|if
condition|(
name|currentNode
operator|.
name|getLocalName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"prop"
argument_list|)
condition|)
block|{
name|type
operator|=
name|FIND_BY_PROPERTY
expr_stmt|;
name|getPropertyNames
argument_list|(
name|currentNode
argument_list|,
name|searchedProperties
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|currentNode
operator|.
name|getLocalName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"allprop"
argument_list|)
condition|)
name|type
operator|=
name|FIND_ALL_PROPERTIES
expr_stmt|;
if|if
condition|(
name|currentNode
operator|.
name|getLocalName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"propname"
argument_list|)
condition|)
name|type
operator|=
name|FIND_PROPERTY_NAMES
expr_stmt|;
block|}
else|else
block|{
comment|// Found an unknown element: return with 400 Bad Request
name|LOG
operator|.
name|debug
argument_list|(
literal|"Unexpected child: "
operator|+
name|currentNode
operator|.
name|getNodeName
argument_list|()
argument_list|)
expr_stmt|;
name|response
operator|.
name|sendError
argument_list|(
name|HttpServletResponse
operator|.
name|SC_BAD_REQUEST
argument_list|,
name|WebDAVUtil
operator|.
name|UNEXPECTED_ELEMENT_ERR
operator|+
name|currentNode
operator|.
name|getNodeName
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
block|}
name|String
name|servletPath
init|=
name|getServletPath
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|int
name|depth
init|=
name|getDepth
argument_list|(
name|request
argument_list|)
decl_stmt|;
name|StringWriter
name|os
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|SAXSerializer
name|serializer
init|=
name|SAXSerializerPool
operator|.
name|getInstance
argument_list|()
operator|.
name|borrowSAXSerializer
argument_list|()
decl_stmt|;
try|try
block|{
name|serializer
operator|.
name|setWriter
argument_list|(
name|os
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|setOutputProperties
argument_list|(
name|WebDAV
operator|.
name|OUTPUT_PROPERTIES
argument_list|)
expr_stmt|;
name|AttributesImpl
name|attrs
init|=
operator|new
name|AttributesImpl
argument_list|()
decl_stmt|;
name|serializer
operator|.
name|startDocument
argument_list|()
expr_stmt|;
name|serializer
operator|.
name|startPrefixMapping
argument_list|(
name|PREFIX
argument_list|,
name|WebDAV
operator|.
name|DAV_NS
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"multistatus"
argument_list|,
literal|"D:multistatus"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
if|if
condition|(
name|type
operator|==
name|FIND_ALL_PROPERTIES
operator|||
name|type
operator|==
name|FIND_BY_PROPERTY
condition|)
block|{
if|if
condition|(
name|resource
operator|!=
literal|null
condition|)
name|writeResourceProperties
argument_list|(
name|user
argument_list|,
name|searchedProperties
argument_list|,
name|type
argument_list|,
name|collection
argument_list|,
name|resource
argument_list|,
name|serializer
argument_list|,
name|servletPath
argument_list|)
expr_stmt|;
else|else
name|writeCollectionProperties
argument_list|(
name|user
argument_list|,
name|broker
argument_list|,
name|searchedProperties
argument_list|,
name|type
argument_list|,
name|collection
argument_list|,
name|serializer
argument_list|,
name|servletPath
argument_list|,
name|depth
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|type
operator|==
name|FIND_PROPERTY_NAMES
condition|)
name|writePropertyNames
argument_list|(
name|collection
argument_list|,
name|resource
argument_list|,
name|serializer
argument_list|,
name|servletPath
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"multistatus"
argument_list|,
literal|"D:multistatus"
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endPrefixMapping
argument_list|(
name|PREFIX
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endDocument
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SAXException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServletException
argument_list|(
literal|"Exception while writing multistatus response: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
finally|finally
block|{
name|SAXSerializerPool
operator|.
name|getInstance
argument_list|()
operator|.
name|returnSAXSerializer
argument_list|(
name|serializer
argument_list|)
expr_stmt|;
block|}
name|String
name|content
init|=
name|os
operator|.
name|toString
argument_list|()
decl_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"response:\n"
operator|+
name|content
argument_list|)
expr_stmt|;
name|writeResponse
argument_list|(
name|response
argument_list|,
name|content
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EXistException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|ServletException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|LockException
name|e
parameter_list|)
block|{
name|response
operator|.
name|sendError
argument_list|(
name|HttpServletResponse
operator|.
name|SC_INTERNAL_SERVER_ERROR
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|resource
operator|!=
literal|null
condition|)
name|resource
operator|.
name|getUpdateLock
argument_list|()
operator|.
name|release
argument_list|(
name|Lock
operator|.
name|READ_LOCK
argument_list|)
expr_stmt|;
if|if
condition|(
name|collection
operator|!=
literal|null
condition|)
name|collection
operator|.
name|release
argument_list|()
expr_stmt|;
name|pool
operator|.
name|release
argument_list|(
name|broker
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|writeCollectionProperties
parameter_list|(
name|User
name|user
parameter_list|,
name|DBBroker
name|broker
parameter_list|,
name|DAVProperties
name|searchedProperties
parameter_list|,
name|int
name|type
parameter_list|,
name|Collection
name|collection
parameter_list|,
name|SAXSerializer
name|serializer
parameter_list|,
name|String
name|servletPath
parameter_list|,
name|int
name|maxDepth
parameter_list|,
name|int
name|currentDepth
parameter_list|)
throws|throws
name|SAXException
block|{
if|if
condition|(
operator|!
name|collection
operator|.
name|getPermissions
argument_list|()
operator|.
name|validate
argument_list|(
name|user
argument_list|,
name|Permission
operator|.
name|READ
argument_list|)
condition|)
return|return;
name|AttributesImpl
name|attrs
init|=
operator|new
name|AttributesImpl
argument_list|()
decl_stmt|;
name|searchedProperties
operator|.
name|reset
argument_list|()
expr_stmt|;
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"response"
argument_list|,
literal|"D:response"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
comment|// write D:href
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"href"
argument_list|,
literal|"D:href"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|characters
argument_list|(
name|servletPath
operator|+
name|collection
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"href"
argument_list|,
literal|"D:href"
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"propstat"
argument_list|,
literal|"D:propstat"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"prop"
argument_list|,
literal|"D:prop"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
if|if
condition|(
name|shouldIncludeProperty
argument_list|(
name|type
argument_list|,
name|searchedProperties
argument_list|,
name|DISPLAY_NAME_PROP
argument_list|)
condition|)
block|{
comment|// write D:displayname
name|String
name|displayName
init|=
name|collection
operator|.
name|getName
argument_list|()
decl_stmt|;
name|int
name|p
init|=
name|displayName
operator|.
name|lastIndexOf
argument_list|(
literal|'/'
argument_list|)
decl_stmt|;
if|if
condition|(
name|p
operator|>
operator|-
literal|1
condition|)
name|displayName
operator|=
name|displayName
operator|.
name|substring
argument_list|(
name|p
operator|+
literal|1
argument_list|)
expr_stmt|;
name|writeSimpleElement
argument_list|(
name|DISPLAY_NAME_PROP
argument_list|,
name|displayName
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|shouldIncludeProperty
argument_list|(
name|type
argument_list|,
name|searchedProperties
argument_list|,
name|RESOURCE_TYPE_PROP
argument_list|)
condition|)
block|{
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"resourcetype"
argument_list|,
literal|"D:resourcetype"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
name|writeEmptyElement
argument_list|(
name|COLLECTION_PROP
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"resourcetype"
argument_list|,
literal|"D:resourcetype"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|shouldIncludeProperty
argument_list|(
name|type
argument_list|,
name|searchedProperties
argument_list|,
name|CREATION_DATE_PROP
argument_list|)
condition|)
block|{
name|long
name|created
init|=
name|collection
operator|.
name|getCreationTime
argument_list|()
decl_stmt|;
name|writeSimpleElement
argument_list|(
name|CREATION_DATE_PROP
argument_list|,
name|creationDateFormat
operator|.
name|format
argument_list|(
operator|new
name|Date
argument_list|(
name|created
argument_list|)
argument_list|)
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|shouldIncludeProperty
argument_list|(
name|type
argument_list|,
name|searchedProperties
argument_list|,
name|LAST_MODIFIED_PROP
argument_list|)
condition|)
block|{
comment|// for collections, the last modification date is the same as the creation date
name|long
name|created
init|=
name|collection
operator|.
name|getCreationTime
argument_list|()
decl_stmt|;
name|writeSimpleElement
argument_list|(
name|LAST_MODIFIED_PROP
argument_list|,
name|modificationDateFormat
operator|.
name|format
argument_list|(
operator|new
name|Date
argument_list|(
name|created
argument_list|)
argument_list|)
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
block|}
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"prop"
argument_list|,
literal|"D:prop"
argument_list|)
expr_stmt|;
name|writeSimpleElement
argument_list|(
name|STATUS_PROP
argument_list|,
literal|"HTTP/1.1 200 OK"
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"propstat"
argument_list|,
literal|"D:propstat"
argument_list|)
expr_stmt|;
if|if
condition|(
name|type
operator|==
name|FIND_BY_PROPERTY
condition|)
block|{
name|List
name|unvisited
init|=
name|searchedProperties
operator|.
name|unvisitedProperties
argument_list|()
decl_stmt|;
if|if
condition|(
name|unvisited
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
comment|// there were unsupported properties. Report these to the client.
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"propstat"
argument_list|,
literal|"D:propstat"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"prop"
argument_list|,
literal|"D:prop"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|unvisited
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|writeEmptyElement
argument_list|(
operator|(
name|QName
operator|)
name|i
operator|.
name|next
argument_list|()
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
block|}
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"prop"
argument_list|,
literal|"D:prop"
argument_list|)
expr_stmt|;
name|writeSimpleElement
argument_list|(
name|STATUS_PROP
argument_list|,
literal|"HTTP/1.1 404 Not Found"
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"propstat"
argument_list|,
literal|"D:propstat"
argument_list|)
expr_stmt|;
block|}
block|}
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"response"
argument_list|,
literal|"D:response"
argument_list|)
expr_stmt|;
if|if
condition|(
name|currentDepth
operator|++
operator|<
name|maxDepth
condition|)
block|{
if|if
condition|(
name|collection
operator|.
name|getDocumentCount
argument_list|()
operator|>
literal|0
condition|)
block|{
for|for
control|(
name|Iterator
name|i
init|=
name|collection
operator|.
name|iterator
argument_list|(
name|broker
argument_list|)
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|DocumentImpl
name|doc
init|=
operator|(
name|DocumentImpl
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
try|try
block|{
name|doc
operator|.
name|getUpdateLock
argument_list|()
operator|.
name|acquire
argument_list|(
name|Lock
operator|.
name|READ_LOCK
argument_list|)
expr_stmt|;
name|writeResourceProperties
argument_list|(
name|user
argument_list|,
name|searchedProperties
argument_list|,
name|type
argument_list|,
name|collection
argument_list|,
name|doc
argument_list|,
name|serializer
argument_list|,
name|servletPath
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|LockException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Failed to acquire lock on document "
operator|+
name|doc
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|doc
operator|.
name|getUpdateLock
argument_list|()
operator|.
name|release
argument_list|(
name|Lock
operator|.
name|READ_LOCK
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|collection
operator|.
name|getChildCollectionCount
argument_list|()
operator|>
literal|0
condition|)
block|{
for|for
control|(
name|Iterator
name|i
init|=
name|collection
operator|.
name|collectionIterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|String
name|child
init|=
operator|(
name|String
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|Collection
name|childCollection
init|=
literal|null
decl_stmt|;
try|try
block|{
name|childCollection
operator|=
name|broker
operator|.
name|openCollection
argument_list|(
name|collection
operator|.
name|getName
argument_list|()
operator|+
literal|'/'
operator|+
name|child
argument_list|,
name|Lock
operator|.
name|READ_LOCK
argument_list|)
expr_stmt|;
if|if
condition|(
name|childCollection
operator|!=
literal|null
condition|)
name|writeCollectionProperties
argument_list|(
name|user
argument_list|,
name|broker
argument_list|,
name|searchedProperties
argument_list|,
name|type
argument_list|,
name|childCollection
argument_list|,
name|serializer
argument_list|,
name|servletPath
argument_list|,
name|maxDepth
argument_list|,
name|currentDepth
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
block|}
finally|finally
block|{
if|if
condition|(
name|childCollection
operator|!=
literal|null
condition|)
name|childCollection
operator|.
name|release
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
specifier|private
name|void
name|writeResourceProperties
parameter_list|(
name|User
name|user
parameter_list|,
name|DAVProperties
name|searchedProperties
parameter_list|,
name|int
name|type
parameter_list|,
name|Collection
name|collection
parameter_list|,
name|DocumentImpl
name|resource
parameter_list|,
name|SAXSerializer
name|serializer
parameter_list|,
name|String
name|servletPath
parameter_list|)
throws|throws
name|SAXException
block|{
if|if
condition|(
operator|!
name|resource
operator|.
name|getPermissions
argument_list|()
operator|.
name|validate
argument_list|(
name|user
argument_list|,
name|Permission
operator|.
name|READ
argument_list|)
condition|)
return|return;
name|AttributesImpl
name|attrs
init|=
operator|new
name|AttributesImpl
argument_list|()
decl_stmt|;
name|searchedProperties
operator|.
name|reset
argument_list|()
expr_stmt|;
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"response"
argument_list|,
literal|"D:response"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
comment|// write D:href
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"href"
argument_list|,
literal|"D:href"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|characters
argument_list|(
name|servletPath
operator|+
name|collection
operator|.
name|getName
argument_list|()
operator|+
literal|'/'
operator|+
name|resource
operator|.
name|getFileName
argument_list|()
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"href"
argument_list|,
literal|"D:href"
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"propstat"
argument_list|,
literal|"D:propstat"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"prop"
argument_list|,
literal|"D:prop"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
if|if
condition|(
name|shouldIncludeProperty
argument_list|(
name|type
argument_list|,
name|searchedProperties
argument_list|,
name|DISPLAY_NAME_PROP
argument_list|)
condition|)
block|{
comment|// write D:displayname
name|writeSimpleElement
argument_list|(
name|DISPLAY_NAME_PROP
argument_list|,
name|resource
operator|.
name|getFileName
argument_list|()
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|shouldIncludeProperty
argument_list|(
name|type
argument_list|,
name|searchedProperties
argument_list|,
name|RESOURCE_TYPE_PROP
argument_list|)
condition|)
block|{
name|writeEmptyElement
argument_list|(
name|RESOURCE_TYPE_PROP
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|shouldIncludeProperty
argument_list|(
name|type
argument_list|,
name|searchedProperties
argument_list|,
name|CREATION_DATE_PROP
argument_list|)
condition|)
block|{
name|long
name|created
init|=
name|resource
operator|.
name|getCreated
argument_list|()
decl_stmt|;
name|writeSimpleElement
argument_list|(
name|CREATION_DATE_PROP
argument_list|,
name|creationDateFormat
operator|.
name|format
argument_list|(
operator|new
name|Date
argument_list|(
name|created
argument_list|)
argument_list|)
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|shouldIncludeProperty
argument_list|(
name|type
argument_list|,
name|searchedProperties
argument_list|,
name|LAST_MODIFIED_PROP
argument_list|)
condition|)
block|{
name|long
name|modified
init|=
name|resource
operator|.
name|getLastModified
argument_list|()
decl_stmt|;
name|writeSimpleElement
argument_list|(
name|LAST_MODIFIED_PROP
argument_list|,
name|modificationDateFormat
operator|.
name|format
argument_list|(
operator|new
name|Date
argument_list|(
name|modified
argument_list|)
argument_list|)
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|shouldIncludeProperty
argument_list|(
name|type
argument_list|,
name|searchedProperties
argument_list|,
name|CONTENT_LENGTH_PROP
argument_list|)
condition|)
block|{
name|writeSimpleElement
argument_list|(
name|CONTENT_LENGTH_PROP
argument_list|,
name|Long
operator|.
name|toString
argument_list|(
name|resource
operator|.
name|getContentLength
argument_list|()
argument_list|)
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|shouldIncludeProperty
argument_list|(
name|type
argument_list|,
name|searchedProperties
argument_list|,
name|CONTENT_TYPE_PROP
argument_list|)
condition|)
block|{
if|if
condition|(
name|resource
operator|.
name|getResourceType
argument_list|()
operator|==
name|DocumentImpl
operator|.
name|XML_FILE
condition|)
name|writeSimpleElement
argument_list|(
name|CONTENT_TYPE_PROP
argument_list|,
name|WebDAV
operator|.
name|XML_CONTENT
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
else|else
name|writeSimpleElement
argument_list|(
name|CONTENT_TYPE_PROP
argument_list|,
name|WebDAV
operator|.
name|BINARY_CONTENT
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|shouldIncludeProperty
argument_list|(
name|type
argument_list|,
name|searchedProperties
argument_list|,
name|SUPPORTED_LOCK_PROP
argument_list|)
condition|)
block|{
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"supportedlock"
argument_list|,
literal|"D:supportedlock"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"lockentry"
argument_list|,
literal|"D:lockentry"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"lockscope"
argument_list|,
literal|"D:lockscope"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
name|writeEmptyElement
argument_list|(
name|EXCLUSIVE_LOCK_PROP
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"lockscope"
argument_list|,
literal|"D:lockscope"
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"locktype"
argument_list|,
literal|"D:locktype"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
name|writeEmptyElement
argument_list|(
name|WRITE_LOCK_PROP
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"locktype"
argument_list|,
literal|"D:locktype"
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"lockentry"
argument_list|,
literal|"D:lockentry"
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"supportedlock"
argument_list|,
literal|"D:supportedlock"
argument_list|)
expr_stmt|;
block|}
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"prop"
argument_list|,
literal|"D:prop"
argument_list|)
expr_stmt|;
name|writeSimpleElement
argument_list|(
name|STATUS_PROP
argument_list|,
literal|"HTTP/1.1 200 OK"
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"propstat"
argument_list|,
literal|"D:propstat"
argument_list|)
expr_stmt|;
if|if
condition|(
name|type
operator|==
name|FIND_BY_PROPERTY
condition|)
block|{
name|List
name|unvisited
init|=
name|searchedProperties
operator|.
name|unvisitedProperties
argument_list|()
decl_stmt|;
if|if
condition|(
name|unvisited
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
comment|// there were unsupported properties. Report these to the client.
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"propstat"
argument_list|,
literal|"D:propstat"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"prop"
argument_list|,
literal|"D:prop"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|unvisited
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|writeEmptyElement
argument_list|(
operator|(
name|QName
operator|)
name|i
operator|.
name|next
argument_list|()
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
block|}
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"prop"
argument_list|,
literal|"D:prop"
argument_list|)
expr_stmt|;
name|writeSimpleElement
argument_list|(
name|STATUS_PROP
argument_list|,
literal|"HTTP/1.1 404 Not Found"
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"propstat"
argument_list|,
literal|"D:propstat"
argument_list|)
expr_stmt|;
block|}
block|}
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"response"
argument_list|,
literal|"D:response"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|writePropertyNames
parameter_list|(
name|Collection
name|collection
parameter_list|,
name|DocumentImpl
name|resource
parameter_list|,
name|SAXSerializer
name|serializer
parameter_list|,
name|String
name|servletPath
parameter_list|)
throws|throws
name|SAXException
block|{
name|AttributesImpl
name|attrs
init|=
operator|new
name|AttributesImpl
argument_list|()
decl_stmt|;
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"response"
argument_list|,
literal|"D:response"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
comment|// write D:href
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"href"
argument_list|,
literal|"D:href"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
name|String
name|href
init|=
name|servletPath
operator|+
operator|(
name|resource
operator|!=
literal|null
condition|?
name|collection
operator|.
name|getName
argument_list|()
operator|+
literal|'/'
operator|+
name|resource
operator|.
name|getFileName
argument_list|()
else|:
name|collection
operator|.
name|getName
argument_list|()
operator|)
decl_stmt|;
name|serializer
operator|.
name|characters
argument_list|(
name|href
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"href"
argument_list|,
literal|"D:href"
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"propstat"
argument_list|,
literal|"D:propstat"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"prop"
argument_list|,
literal|"D:prop"
argument_list|,
name|attrs
argument_list|)
expr_stmt|;
name|QName
index|[]
name|defaults
init|=
name|resource
operator|==
literal|null
condition|?
name|DEFAULT_COLLECTION_PROPS
else|:
name|DEFAULT_RESOURCE_PROPS
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|defaults
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|writeEmptyElement
argument_list|(
name|defaults
index|[
name|i
index|]
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
block|}
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"prop"
argument_list|,
literal|"D:prop"
argument_list|)
expr_stmt|;
name|writeSimpleElement
argument_list|(
name|STATUS_PROP
argument_list|,
literal|"HTTP/1.1 200 OK"
argument_list|,
name|serializer
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"propstat"
argument_list|,
literal|"D:propstat"
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
literal|"response"
argument_list|,
literal|"D:response"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|boolean
name|shouldIncludeProperty
parameter_list|(
name|int
name|type
parameter_list|,
name|DAVProperties
name|properties
parameter_list|,
name|QName
name|name
parameter_list|)
block|{
if|if
condition|(
name|type
operator|==
name|FIND_ALL_PROPERTIES
condition|)
return|return
literal|true
return|;
return|return
name|properties
operator|.
name|includeProperty
argument_list|(
name|name
argument_list|)
return|;
block|}
specifier|private
name|void
name|writeEmptyElement
parameter_list|(
name|QName
name|qname
parameter_list|,
name|SAXSerializer
name|serializer
parameter_list|)
throws|throws
name|SAXException
block|{
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
name|qname
operator|.
name|getLocalName
argument_list|()
argument_list|,
name|qname
operator|.
name|toString
argument_list|()
argument_list|,
operator|new
name|AttributesImpl
argument_list|()
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
name|qname
operator|.
name|getLocalName
argument_list|()
argument_list|,
name|qname
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|writeSimpleElement
parameter_list|(
name|QName
name|element
parameter_list|,
name|String
name|content
parameter_list|,
name|SAXSerializer
name|serializer
parameter_list|)
throws|throws
name|SAXException
block|{
name|serializer
operator|.
name|startElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
name|element
operator|.
name|getLocalName
argument_list|()
argument_list|,
name|element
operator|.
name|toString
argument_list|()
argument_list|,
operator|new
name|AttributesImpl
argument_list|()
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|characters
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|endElement
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|,
name|element
operator|.
name|getLocalName
argument_list|()
argument_list|,
name|element
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|writeResponse
parameter_list|(
name|HttpServletResponse
name|response
parameter_list|,
name|String
name|content
parameter_list|)
throws|throws
name|IOException
block|{
name|response
operator|.
name|setStatus
argument_list|(
name|WebDAV
operator|.
name|SC_MULTI_STATUS
argument_list|)
expr_stmt|;
name|response
operator|.
name|setContentType
argument_list|(
literal|"text/xml; charset=UTF-8"
argument_list|)
expr_stmt|;
name|byte
index|[]
name|data
init|=
name|content
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
decl_stmt|;
name|response
operator|.
name|setContentLength
argument_list|(
name|data
operator|.
name|length
argument_list|)
expr_stmt|;
name|OutputStream
name|os
init|=
name|response
operator|.
name|getOutputStream
argument_list|()
decl_stmt|;
name|os
operator|.
name|write
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|os
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
specifier|private
name|String
name|getServletPath
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|)
block|{
name|String
name|servletPath
init|=
name|request
operator|.
name|getContextPath
argument_list|()
decl_stmt|;
if|if
condition|(
name|servletPath
operator|.
name|endsWith
argument_list|(
literal|"/"
argument_list|)
condition|)
block|{
name|servletPath
operator|=
name|servletPath
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|servletPath
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|servletPath
operator|+=
name|request
operator|.
name|getServletPath
argument_list|()
expr_stmt|;
if|if
condition|(
name|servletPath
operator|.
name|endsWith
argument_list|(
literal|"/"
argument_list|)
condition|)
block|{
name|servletPath
operator|=
name|servletPath
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|servletPath
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
return|return
name|servletPath
return|;
block|}
specifier|protected
name|int
name|getDepth
parameter_list|(
name|HttpServletRequest
name|req
parameter_list|)
block|{
name|int
name|depth
init|=
literal|1
decl_stmt|;
comment|// Depth: infitiy
name|String
name|depthStr
init|=
name|req
operator|.
name|getHeader
argument_list|(
literal|"Depth"
argument_list|)
decl_stmt|;
if|if
condition|(
name|depthStr
operator|!=
literal|null
operator|&&
name|depthStr
operator|.
name|equals
argument_list|(
literal|"0"
argument_list|)
condition|)
block|{
name|depth
operator|=
literal|0
expr_stmt|;
block|}
return|return
name|depth
return|;
block|}
specifier|private
name|void
name|getPropertyNames
parameter_list|(
name|Node
name|propNode
parameter_list|,
name|DAVProperties
name|properties
parameter_list|)
block|{
name|NodeList
name|childList
init|=
name|propNode
operator|.
name|getChildNodes
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|childList
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Node
name|currentNode
init|=
name|childList
operator|.
name|item
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|currentNode
operator|.
name|getNodeType
argument_list|()
operator|==
name|Node
operator|.
name|ELEMENT_NODE
condition|)
block|{
name|properties
operator|.
name|add
argument_list|(
name|currentNode
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
specifier|static
class|class
name|Visited
block|{
name|boolean
name|visited
init|=
literal|false
decl_stmt|;
name|boolean
name|isVisited
parameter_list|()
block|{
return|return
name|visited
return|;
block|}
name|void
name|setVisited
parameter_list|(
name|boolean
name|visit
parameter_list|)
block|{
name|visited
operator|=
name|visit
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
class|class
name|DAVProperties
extends|extends
name|HashMap
block|{
name|DAVProperties
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
name|void
name|add
parameter_list|(
name|Node
name|node
parameter_list|)
block|{
name|QName
name|qname
init|=
operator|new
name|QName
argument_list|(
name|node
operator|.
name|getLocalName
argument_list|()
argument_list|,
name|node
operator|.
name|getNamespaceURI
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|node
operator|.
name|getNamespaceURI
argument_list|()
operator|.
name|equals
argument_list|(
name|WebDAV
operator|.
name|DAV_NS
argument_list|)
condition|)
name|qname
operator|.
name|setPrefix
argument_list|(
name|PREFIX
argument_list|)
expr_stmt|;
else|else
name|qname
operator|.
name|setPrefix
argument_list|(
name|node
operator|.
name|getPrefix
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|containsKey
argument_list|(
name|qname
argument_list|)
condition|)
name|put
argument_list|(
name|qname
argument_list|,
operator|new
name|Visited
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|boolean
name|includeProperty
parameter_list|(
name|QName
name|property
parameter_list|)
block|{
name|Visited
name|visited
init|=
operator|(
name|Visited
operator|)
name|get
argument_list|(
name|property
argument_list|)
decl_stmt|;
if|if
condition|(
name|visited
operator|==
literal|null
condition|)
return|return
literal|false
return|;
name|boolean
name|include
init|=
operator|!
name|visited
operator|.
name|isVisited
argument_list|()
decl_stmt|;
name|visited
operator|.
name|setVisited
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|include
return|;
block|}
name|List
name|unvisitedProperties
parameter_list|()
block|{
name|List
name|list
init|=
operator|new
name|ArrayList
argument_list|(
literal|5
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Map
operator|.
name|Entry
name|entry
init|=
operator|(
name|Map
operator|.
name|Entry
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
operator|(
name|Visited
operator|)
name|entry
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|visited
condition|)
name|list
operator|.
name|add
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|list
return|;
block|}
name|void
name|reset
parameter_list|()
block|{
for|for
control|(
name|Iterator
name|i
init|=
name|values
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Visited
name|visited
init|=
operator|(
name|Visited
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|visited
operator|.
name|setVisited
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

