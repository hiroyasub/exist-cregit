begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* *  eXist Open Source Native XML Database *  Copyright (C) 2001-04 Wolfgang M. Meier (wolfgang@exist-db.org)  *  and others (see http://exist-db.org) * *  This program is free software; you can redistribute it and/or *  modify it under the terms of the GNU Lesser General Public License *  as published by the Free Software Foundation; either version 2 *  of the License, or (at your option) any later version. * *  This program is distributed in the hope that it will be useful, *  but WITHOUT ANY WARRANTY; without even the implied warranty of *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the *  GNU Lesser General Public License for more details. * *  You should have received a copy of the GNU Lesser General Public License *  along with this program; if not, write to the Free Software *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. *  *  $Id$ */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|http
operator|.
name|test
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStreamWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLConnection
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_comment
comment|/**  * @author wolf  */
end_comment

begin_class
specifier|public
class|class
name|RESTServiceTest
extends|extends
name|TestCase
block|{
specifier|private
specifier|final
specifier|static
name|String
name|SERVER_URI
init|=
literal|"http://localhost:8088"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RESOURCE_URI
init|=
name|SERVER_URI
operator|+
literal|"/db/test/test.xml"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|XML_DATA
init|=
literal|"<test>"
operator|+
literal|"<para>Ã¤Ã¤Ã¼Ã¼Ã¶Ã¶ÃÃÃÃÃÃ</para>"
operator|+
literal|"</test>"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|XUPDATE
init|=
literal|"<xu:modifications xmlns:xu=\"http://www.xmldb.org/xupdate\" version=\"1.0\">"
operator|+
literal|"<xu:append select=\"/test\" child=\"1\">"
operator|+
literal|"<para>Inserted paragraph.</para>"
operator|+
literal|"</xu:append>"
operator|+
literal|"</xu:modifications>"
decl_stmt|;
specifier|public
name|RESTServiceTest
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testPut
parameter_list|()
throws|throws
name|IOException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--- Storing document ---"
argument_list|)
expr_stmt|;
name|HttpURLConnection
name|connect
init|=
name|getConnection
argument_list|(
name|RESOURCE_URI
argument_list|)
decl_stmt|;
name|connect
operator|.
name|setRequestMethod
argument_list|(
literal|"PUT"
argument_list|)
expr_stmt|;
name|connect
operator|.
name|setDoOutput
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|connect
operator|.
name|setRequestProperty
argument_list|(
literal|"ContentType"
argument_list|,
literal|"text/xml"
argument_list|)
expr_stmt|;
name|Writer
name|writer
init|=
operator|new
name|OutputStreamWriter
argument_list|(
name|connect
operator|.
name|getOutputStream
argument_list|()
argument_list|,
literal|"UTF-8"
argument_list|)
decl_stmt|;
name|writer
operator|.
name|write
argument_list|(
name|XML_DATA
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|connect
operator|.
name|connect
argument_list|()
expr_stmt|;
name|int
name|r
init|=
name|connect
operator|.
name|getResponseCode
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Server returned response code "
operator|+
name|r
argument_list|,
literal|200
argument_list|,
name|r
argument_list|)
expr_stmt|;
name|doGet
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testXUpdate
parameter_list|()
throws|throws
name|IOException
block|{
name|HttpURLConnection
name|connect
init|=
name|getConnection
argument_list|(
name|RESOURCE_URI
argument_list|)
decl_stmt|;
name|connect
operator|.
name|setRequestMethod
argument_list|(
literal|"POST"
argument_list|)
expr_stmt|;
name|connect
operator|.
name|setDoOutput
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|connect
operator|.
name|setRequestProperty
argument_list|(
literal|"ContentType"
argument_list|,
literal|"text/xml"
argument_list|)
expr_stmt|;
name|Writer
name|writer
init|=
operator|new
name|OutputStreamWriter
argument_list|(
name|connect
operator|.
name|getOutputStream
argument_list|()
argument_list|,
literal|"UTF-8"
argument_list|)
decl_stmt|;
name|writer
operator|.
name|write
argument_list|(
name|XUPDATE
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|connect
operator|.
name|connect
argument_list|()
expr_stmt|;
name|int
name|r
init|=
name|connect
operator|.
name|getResponseCode
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Server returned response code "
operator|+
name|r
argument_list|,
literal|200
argument_list|,
name|r
argument_list|)
expr_stmt|;
name|doGet
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|doGet
parameter_list|()
throws|throws
name|IOException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"--- Retrieving document ---"
argument_list|)
expr_stmt|;
name|HttpURLConnection
name|connect
init|=
name|getConnection
argument_list|(
name|RESOURCE_URI
argument_list|)
decl_stmt|;
name|connect
operator|.
name|setRequestMethod
argument_list|(
literal|"GET"
argument_list|)
expr_stmt|;
name|connect
operator|.
name|connect
argument_list|()
expr_stmt|;
name|BufferedReader
name|reader
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|connect
operator|.
name|getInputStream
argument_list|()
argument_list|,
literal|"UTF-8"
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|line
decl_stmt|;
while|while
condition|(
operator|(
name|line
operator|=
name|reader
operator|.
name|readLine
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
name|int
name|r
init|=
name|connect
operator|.
name|getResponseCode
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Server returned response code "
operator|+
name|r
argument_list|,
literal|200
argument_list|,
name|r
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|HttpURLConnection
name|getConnection
parameter_list|(
name|String
name|url
parameter_list|)
throws|throws
name|IOException
block|{
name|URL
name|u
init|=
operator|new
name|URL
argument_list|(
name|url
argument_list|)
decl_stmt|;
return|return
operator|(
name|HttpURLConnection
operator|)
name|u
operator|.
name|openConnection
argument_list|()
return|;
block|}
comment|/* 	 * @see TestCase#setUp() 	 */
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
block|}
comment|/* 	 * @see TestCase#tearDown() 	 */
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

