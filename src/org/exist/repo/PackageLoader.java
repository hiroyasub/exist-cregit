begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  eXist Open Source Native XML Database  *  Copyright (C) 2001-12 The eXist Project  *  http://exist-db.org  *  *  This program is free software; you can redistribute it and/or  *  modify it under the terms of the GNU Lesser General Public License  *  as published by the Free Software Foundation; either version 2  *  of the License, or (at your option) any later version.  *  *  This program is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU Lesser General Public License for more details.  *  *  You should have received a copy of the GNU Lesser General Public  *  License along with this library; if not, write to the Free Software  *  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  *  *  $Id$  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|repo
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Interface for resolving package dependencies. Implementations may load  * packages e.g. from a public server or the file system.  */
end_comment

begin_interface
specifier|public
interface|interface
name|PackageLoader
block|{
comment|/**      * Wrapper for the different version schemes supported by      * the expath spec.      */
specifier|public
specifier|static
class|class
name|Version
block|{
name|String
name|min
init|=
literal|null
decl_stmt|;
name|String
name|max
init|=
literal|null
decl_stmt|;
name|String
name|semVer
init|=
literal|null
decl_stmt|;
name|String
name|version
init|=
literal|null
decl_stmt|;
specifier|public
name|String
name|getMin
parameter_list|()
block|{
return|return
name|min
return|;
block|}
specifier|public
name|String
name|getMax
parameter_list|()
block|{
return|return
name|max
return|;
block|}
specifier|public
name|String
name|getSemVer
parameter_list|()
block|{
return|return
name|semVer
return|;
block|}
specifier|public
name|String
name|getVersion
parameter_list|()
block|{
return|return
name|version
return|;
block|}
specifier|public
name|Version
parameter_list|(
name|String
name|version
parameter_list|,
name|boolean
name|semver
parameter_list|)
block|{
if|if
condition|(
name|semver
condition|)
name|this
operator|.
name|semVer
operator|=
name|version
expr_stmt|;
else|else
name|this
operator|.
name|version
operator|=
name|version
expr_stmt|;
block|}
specifier|public
name|Version
parameter_list|(
name|String
name|min
parameter_list|,
name|String
name|max
parameter_list|)
block|{
name|this
operator|.
name|min
operator|=
name|min
expr_stmt|;
name|this
operator|.
name|max
operator|=
name|max
expr_stmt|;
block|}
block|}
comment|/**      * Locate the expath package identified by name.      *      * @param name unique name of the package      * @param version the version to install      * @return a file containing the package or null if not found      */
specifier|public
name|File
name|load
parameter_list|(
name|String
name|name
parameter_list|,
name|Version
name|version
parameter_list|)
throws|throws
name|IOException
function_decl|;
block|}
end_interface

end_unit

