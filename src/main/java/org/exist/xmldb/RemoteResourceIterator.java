begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* * eXist Open Source Native XML Database * Copyright (C) 2001-2015 The eXist Project * http://exist-db.org * * This program is free software; you can redistribute it and/or * modify it under the terms of the GNU Lesser General Public License * as published by the Free Software Foundation; either version 2 * of the License, or (at your option) any later version. * * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU Lesser General Public License for more details. * * You should have received a copy of the GNU Lesser General Public License * along with this program; if not, write to the Free Software Foundation * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|xmldb
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlrpc
operator|.
name|XmlRpcException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlrpc
operator|.
name|client
operator|.
name|XmlRpcClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|exist
operator|.
name|util
operator|.
name|Leasable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|ErrorCodes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|ResourceIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|base
operator|.
name|XMLDBException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xmldb
operator|.
name|api
operator|.
name|modules
operator|.
name|XMLResource
import|;
end_import

begin_class
specifier|public
class|class
name|RemoteResourceIterator
implements|implements
name|ResourceIterator
block|{
specifier|private
specifier|final
name|Leasable
argument_list|<
name|XmlRpcClient
argument_list|>
name|leasableXmlRpcClient
decl_stmt|;
specifier|private
specifier|final
name|Leasable
argument_list|<
name|XmlRpcClient
argument_list|>
operator|.
name|Lease
name|xmlRpcClientLease
decl_stmt|;
specifier|private
specifier|final
name|RemoteCollection
name|collection
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|Object
argument_list|>
name|resources
decl_stmt|;
specifier|private
specifier|final
name|int
name|indentXML
decl_stmt|;
specifier|private
specifier|final
name|String
name|encoding
decl_stmt|;
specifier|private
name|int
name|pos
init|=
literal|0
decl_stmt|;
specifier|public
name|RemoteResourceIterator
parameter_list|(
specifier|final
name|Leasable
argument_list|<
name|XmlRpcClient
argument_list|>
name|leasableXmlRpcClient
parameter_list|,
specifier|final
name|Leasable
argument_list|<
name|XmlRpcClient
argument_list|>
operator|.
name|Lease
name|xmlRpcClientLease
parameter_list|,
specifier|final
name|RemoteCollection
name|collection
parameter_list|,
specifier|final
name|List
argument_list|<
name|Object
argument_list|>
name|resources
parameter_list|,
specifier|final
name|int
name|indentXML
parameter_list|,
specifier|final
name|String
name|encoding
parameter_list|)
block|{
name|this
operator|.
name|leasableXmlRpcClient
operator|=
name|leasableXmlRpcClient
expr_stmt|;
name|this
operator|.
name|xmlRpcClientLease
operator|=
name|xmlRpcClientLease
expr_stmt|;
name|this
operator|.
name|collection
operator|=
name|collection
expr_stmt|;
name|this
operator|.
name|resources
operator|=
name|resources
expr_stmt|;
name|this
operator|.
name|indentXML
operator|=
name|indentXML
expr_stmt|;
name|this
operator|.
name|encoding
operator|=
name|encoding
expr_stmt|;
block|}
specifier|public
name|int
name|getLength
parameter_list|()
block|{
return|return
name|resources
operator|.
name|size
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasMoreResources
parameter_list|()
throws|throws
name|XMLDBException
block|{
return|return
name|pos
operator|<
name|resources
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|void
name|setNext
parameter_list|(
name|int
name|next
parameter_list|)
block|{
name|pos
operator|=
name|next
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
specifier|public
name|Resource
name|nextResource
parameter_list|()
throws|throws
name|XMLDBException
block|{
if|if
condition|(
name|pos
operator|>=
name|resources
operator|.
name|size
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
comment|// node or value?
if|if
condition|(
name|resources
operator|.
name|get
argument_list|(
name|pos
argument_list|)
operator|instanceof
name|List
condition|)
block|{
comment|// node
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|v
init|=
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
name|resources
operator|.
name|get
argument_list|(
name|pos
operator|++
argument_list|)
decl_stmt|;
specifier|final
name|String
name|doc
init|=
name|v
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
specifier|final
name|String
name|s_id
init|=
name|v
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
specifier|final
name|List
argument_list|<
name|Object
argument_list|>
name|params
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|params
operator|.
name|add
argument_list|(
name|doc
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|s_id
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|indentXML
argument_list|)
expr_stmt|;
name|params
operator|.
name|add
argument_list|(
name|encoding
argument_list|)
expr_stmt|;
try|try
block|{
specifier|final
name|byte
index|[]
name|data
init|=
operator|(
name|byte
index|[]
operator|)
name|xmlRpcClientLease
operator|.
name|get
argument_list|()
operator|.
name|execute
argument_list|(
literal|"retrieve"
argument_list|,
name|params
argument_list|)
decl_stmt|;
specifier|final
name|XMLResource
name|res
init|=
operator|new
name|RemoteXMLResource
argument_list|(
name|leasableXmlRpcClient
operator|.
name|lease
argument_list|()
argument_list|,
name|collection
argument_list|,
name|XmldbURI
operator|.
name|xmldbUriFor
argument_list|(
name|doc
argument_list|)
argument_list|,
name|Optional
operator|.
name|of
argument_list|(
name|doc
operator|+
literal|"_"
operator|+
name|s_id
argument_list|)
argument_list|)
decl_stmt|;
name|res
operator|.
name|setContent
argument_list|(
operator|new
name|String
argument_list|(
name|data
argument_list|,
name|encoding
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|res
return|;
block|}
catch|catch
parameter_list|(
specifier|final
name|XmlRpcException
name|xre
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_RESOURCE
argument_list|,
name|xre
operator|.
name|getMessage
argument_list|()
argument_list|,
name|xre
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
specifier|final
name|IOException
name|ioe
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|VENDOR_ERROR
argument_list|,
name|ioe
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ioe
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
specifier|final
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|XMLDBException
argument_list|(
name|ErrorCodes
operator|.
name|INVALID_URI
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
else|else
block|{
comment|// value
specifier|final
name|XMLResource
name|res
init|=
operator|new
name|RemoteXMLResource
argument_list|(
name|leasableXmlRpcClient
operator|.
name|lease
argument_list|()
argument_list|,
name|collection
argument_list|,
literal|null
argument_list|,
name|Optional
operator|.
name|of
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|pos
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|res
operator|.
name|setContent
argument_list|(
name|resources
operator|.
name|get
argument_list|(
name|pos
operator|++
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|res
return|;
block|}
block|}
block|}
end_class

end_unit

