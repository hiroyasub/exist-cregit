begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * eXist Open Source Native XML Database  * Copyright (C) 2001-2018 The eXist Project  * http://exist-db.org  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public  * License along with this library; if not, write to the Free Software  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA  */
end_comment

begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|management
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_comment
comment|/**  * Simple bean to hold JMX info and a Binary Input Stream's cache  */
end_comment

begin_class
specifier|public
class|class
name|BinaryInputStreamCacheInfo
block|{
specifier|private
specifier|final
name|long
name|created
decl_stmt|;
specifier|private
specifier|final
name|CacheType
name|cacheType
decl_stmt|;
specifier|private
specifier|final
name|Optional
argument_list|<
name|Path
argument_list|>
name|file
decl_stmt|;
specifier|private
specifier|final
name|long
name|size
decl_stmt|;
specifier|public
name|BinaryInputStreamCacheInfo
parameter_list|(
specifier|final
name|CacheType
name|cacheType
parameter_list|,
specifier|final
name|long
name|created
parameter_list|,
specifier|final
name|Optional
argument_list|<
name|Path
argument_list|>
name|file
parameter_list|,
specifier|final
name|long
name|size
parameter_list|)
block|{
name|this
operator|.
name|created
operator|=
name|created
expr_stmt|;
name|this
operator|.
name|cacheType
operator|=
name|cacheType
expr_stmt|;
name|this
operator|.
name|file
operator|=
name|file
expr_stmt|;
name|this
operator|.
name|size
operator|=
name|size
expr_stmt|;
block|}
comment|/**      * Get the time that the Cache was created.      *      * @return the time the Cache was created      */
specifier|public
name|Date
name|getCreated
parameter_list|()
block|{
return|return
operator|new
name|Date
argument_list|(
name|created
argument_list|)
return|;
block|}
comment|/**      * Get the type of the Cache.      *      * @return the type of the Cache      */
specifier|public
name|CacheType
name|getCacheType
parameter_list|()
block|{
return|return
name|cacheType
return|;
block|}
comment|/**      * Get the path of the file backing the cache.      *      * @return The path of the file backing the cache (if there is one)      */
annotation|@
name|Nullable
specifier|public
name|String
name|getFile
parameter_list|()
block|{
return|return
name|file
operator|.
name|map
argument_list|(
name|Path
operator|::
name|toAbsolutePath
argument_list|)
operator|.
name|map
argument_list|(
name|Path
operator|::
name|toString
argument_list|)
operator|.
name|orElse
argument_list|(
literal|null
argument_list|)
return|;
block|}
comment|/**      * Get the size of the cache.      *      * @return the size of the cache.      */
specifier|public
name|long
name|getSize
parameter_list|()
block|{
return|return
name|size
return|;
block|}
enum|enum
name|CacheType
block|{
name|FILE
block|,
name|MEMORY_MAPPED_FILE
block|,
name|MEMORY
block|}
block|}
end_class

end_unit

