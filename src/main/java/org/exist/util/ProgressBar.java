begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|exist
operator|.
name|util
package|;
end_package

begin_comment
comment|/* eXist xml document repository and xpath implementation  * Copyright (C) 2001,  Wolfgang Meier (meier@ifs.tu-darmstadt.de)  *  * This program is free software; you can redistribute it and/or  * modify it under the terms of the GNU General Public License  * as published by the Free Software Foundation; either version 2  * of the License, or (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *  * You should have received a copy of the GNU General Public License  * along with this program; if not, write to the Free Software  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.  */
end_comment

begin_class
specifier|public
class|class
name|ProgressBar
block|{
specifier|protected
name|String
name|mMessage
decl_stmt|;
specifier|protected
name|double
name|mMax
init|=
literal|1
decl_stmt|;
specifier|protected
name|int
name|mPosition
init|=
literal|0
decl_stmt|;
specifier|public
name|ProgressBar
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|mMessage
operator|=
name|message
expr_stmt|;
block|}
specifier|public
name|ProgressBar
parameter_list|(
name|String
name|message
parameter_list|,
name|double
name|max
parameter_list|)
block|{
name|mMessage
operator|=
name|message
expr_stmt|;
name|mMax
operator|=
name|max
expr_stmt|;
block|}
specifier|public
name|void
name|set
parameter_list|(
name|double
name|value
parameter_list|,
name|double
name|max
parameter_list|)
block|{
name|mMax
operator|=
name|max
expr_stmt|;
name|this
operator|.
name|set
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|set
parameter_list|(
name|double
name|value
parameter_list|)
block|{
specifier|final
name|int
name|percent
init|=
operator|(
name|int
operator|)
operator|(
operator|(
name|value
operator|/
name|mMax
operator|)
operator|*
literal|100
operator|)
decl_stmt|;
if|if
condition|(
name|percent
operator|%
literal|2
operator|>
literal|0
condition|)
block|{
return|return;
block|}
name|int
name|pos
init|=
name|percent
operator|/
literal|2
decl_stmt|;
if|if
condition|(
name|pos
operator|==
name|mPosition
condition|)
block|{
return|return;
block|}
specifier|final
name|StringBuilder
name|buf
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|buf
operator|.
name|append
argument_list|(
name|mMessage
argument_list|)
expr_stmt|;
name|buf
operator|.
name|append
argument_list|(
literal|" ["
argument_list|)
expr_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
for|for
control|(
init|;
name|i
operator|<
name|pos
condition|;
name|i
operator|++
control|)
name|buf
operator|.
name|append
argument_list|(
literal|"="
argument_list|)
expr_stmt|;
for|for
control|(
init|;
name|i
operator|<
literal|50
condition|;
name|i
operator|++
control|)
name|buf
operator|.
name|append
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
name|buf
operator|.
name|append
argument_list|(
literal|"] ("
argument_list|)
expr_stmt|;
name|buf
operator|.
name|append
argument_list|(
name|percent
argument_list|)
expr_stmt|;
name|buf
operator|.
name|append
argument_list|(
literal|" %)\r"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|print
argument_list|(
name|buf
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|mPosition
operator|=
name|pos
expr_stmt|;
block|}
block|}
end_class

end_unit

